// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: eventtypes.proto

/*
Package eventtypes is a generated protocol buffer package.

It is generated from these files:
	eventtypes.proto

It has these top-level messages:
*/
package eventtypes

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import gogoproto "github.com/gogo/protobuf/gogoproto"
import google_protobuf "github.com/gogo/protobuf/protoc-gen-gogo/descriptor"
import eventattrs "github.com/pensando/sw/events/generated/eventattrs"

import strconv "strconv"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// goproto_enum_prefix from public import gogo.proto
var E_GoprotoEnumPrefix = gogoproto.E_GoprotoEnumPrefix

// goproto_enum_stringer from public import gogo.proto
var E_GoprotoEnumStringer = gogoproto.E_GoprotoEnumStringer

// enum_stringer from public import gogo.proto
var E_EnumStringer = gogoproto.E_EnumStringer

// enum_customname from public import gogo.proto
var E_EnumCustomname = gogoproto.E_EnumCustomname

// enumdecl from public import gogo.proto
var E_Enumdecl = gogoproto.E_Enumdecl

// enumvalue_customname from public import gogo.proto
var E_EnumvalueCustomname = gogoproto.E_EnumvalueCustomname

// goproto_getters_all from public import gogo.proto
var E_GoprotoGettersAll = gogoproto.E_GoprotoGettersAll

// goproto_enum_prefix_all from public import gogo.proto
var E_GoprotoEnumPrefixAll = gogoproto.E_GoprotoEnumPrefixAll

// goproto_stringer_all from public import gogo.proto
var E_GoprotoStringerAll = gogoproto.E_GoprotoStringerAll

// verbose_equal_all from public import gogo.proto
var E_VerboseEqualAll = gogoproto.E_VerboseEqualAll

// face_all from public import gogo.proto
var E_FaceAll = gogoproto.E_FaceAll

// gostring_all from public import gogo.proto
var E_GostringAll = gogoproto.E_GostringAll

// populate_all from public import gogo.proto
var E_PopulateAll = gogoproto.E_PopulateAll

// stringer_all from public import gogo.proto
var E_StringerAll = gogoproto.E_StringerAll

// onlyone_all from public import gogo.proto
var E_OnlyoneAll = gogoproto.E_OnlyoneAll

// equal_all from public import gogo.proto
var E_EqualAll = gogoproto.E_EqualAll

// description_all from public import gogo.proto
var E_DescriptionAll = gogoproto.E_DescriptionAll

// testgen_all from public import gogo.proto
var E_TestgenAll = gogoproto.E_TestgenAll

// benchgen_all from public import gogo.proto
var E_BenchgenAll = gogoproto.E_BenchgenAll

// marshaler_all from public import gogo.proto
var E_MarshalerAll = gogoproto.E_MarshalerAll

// unmarshaler_all from public import gogo.proto
var E_UnmarshalerAll = gogoproto.E_UnmarshalerAll

// stable_marshaler_all from public import gogo.proto
var E_StableMarshalerAll = gogoproto.E_StableMarshalerAll

// sizer_all from public import gogo.proto
var E_SizerAll = gogoproto.E_SizerAll

// goproto_enum_stringer_all from public import gogo.proto
var E_GoprotoEnumStringerAll = gogoproto.E_GoprotoEnumStringerAll

// enum_stringer_all from public import gogo.proto
var E_EnumStringerAll = gogoproto.E_EnumStringerAll

// unsafe_marshaler_all from public import gogo.proto
var E_UnsafeMarshalerAll = gogoproto.E_UnsafeMarshalerAll

// unsafe_unmarshaler_all from public import gogo.proto
var E_UnsafeUnmarshalerAll = gogoproto.E_UnsafeUnmarshalerAll

// goproto_extensions_map_all from public import gogo.proto
var E_GoprotoExtensionsMapAll = gogoproto.E_GoprotoExtensionsMapAll

// goproto_unrecognized_all from public import gogo.proto
var E_GoprotoUnrecognizedAll = gogoproto.E_GoprotoUnrecognizedAll

// gogoproto_import from public import gogo.proto
var E_GogoprotoImport = gogoproto.E_GogoprotoImport

// protosizer_all from public import gogo.proto
var E_ProtosizerAll = gogoproto.E_ProtosizerAll

// compare_all from public import gogo.proto
var E_CompareAll = gogoproto.E_CompareAll

// typedecl_all from public import gogo.proto
var E_TypedeclAll = gogoproto.E_TypedeclAll

// enumdecl_all from public import gogo.proto
var E_EnumdeclAll = gogoproto.E_EnumdeclAll

// goproto_registration from public import gogo.proto
var E_GoprotoRegistration = gogoproto.E_GoprotoRegistration

// goproto_getters from public import gogo.proto
var E_GoprotoGetters = gogoproto.E_GoprotoGetters

// goproto_stringer from public import gogo.proto
var E_GoprotoStringer = gogoproto.E_GoprotoStringer

// verbose_equal from public import gogo.proto
var E_VerboseEqual = gogoproto.E_VerboseEqual

// face from public import gogo.proto
var E_Face = gogoproto.E_Face

// gostring from public import gogo.proto
var E_Gostring = gogoproto.E_Gostring

// populate from public import gogo.proto
var E_Populate = gogoproto.E_Populate

// stringer from public import gogo.proto
var E_Stringer = gogoproto.E_Stringer

// onlyone from public import gogo.proto
var E_Onlyone = gogoproto.E_Onlyone

// equal from public import gogo.proto
var E_Equal = gogoproto.E_Equal

// description from public import gogo.proto
var E_Description = gogoproto.E_Description

// testgen from public import gogo.proto
var E_Testgen = gogoproto.E_Testgen

// benchgen from public import gogo.proto
var E_Benchgen = gogoproto.E_Benchgen

// marshaler from public import gogo.proto
var E_Marshaler = gogoproto.E_Marshaler

// unmarshaler from public import gogo.proto
var E_Unmarshaler = gogoproto.E_Unmarshaler

// stable_marshaler from public import gogo.proto
var E_StableMarshaler = gogoproto.E_StableMarshaler

// sizer from public import gogo.proto
var E_Sizer = gogoproto.E_Sizer

// unsafe_marshaler from public import gogo.proto
var E_UnsafeMarshaler = gogoproto.E_UnsafeMarshaler

// unsafe_unmarshaler from public import gogo.proto
var E_UnsafeUnmarshaler = gogoproto.E_UnsafeUnmarshaler

// goproto_extensions_map from public import gogo.proto
var E_GoprotoExtensionsMap = gogoproto.E_GoprotoExtensionsMap

// goproto_unrecognized from public import gogo.proto
var E_GoprotoUnrecognized = gogoproto.E_GoprotoUnrecognized

// protosizer from public import gogo.proto
var E_Protosizer = gogoproto.E_Protosizer

// compare from public import gogo.proto
var E_Compare = gogoproto.E_Compare

// typedecl from public import gogo.proto
var E_Typedecl = gogoproto.E_Typedecl

// nullable from public import gogo.proto
var E_Nullable = gogoproto.E_Nullable

// embed from public import gogo.proto
var E_Embed = gogoproto.E_Embed

// customtype from public import gogo.proto
var E_Customtype = gogoproto.E_Customtype

// customname from public import gogo.proto
var E_Customname = gogoproto.E_Customname

// jsontag from public import gogo.proto
var E_Jsontag = gogoproto.E_Jsontag

// moretags from public import gogo.proto
var E_Moretags = gogoproto.E_Moretags

// casttype from public import gogo.proto
var E_Casttype = gogoproto.E_Casttype

// castkey from public import gogo.proto
var E_Castkey = gogoproto.E_Castkey

// castvalue from public import gogo.proto
var E_Castvalue = gogoproto.E_Castvalue

// stdtime from public import gogo.proto
var E_Stdtime = gogoproto.E_Stdtime

// stdduration from public import gogo.proto
var E_Stdduration = gogoproto.E_Stdduration

//
type EventType int32

const (
	// ----------------------------- Cluster events -------------------------- //
	ELECTION_STARTED EventType = 0
	//
	ELECTION_CANCELLED EventType = 1
	//
	ELECTION_NOTIFICATION_FAILED EventType = 2
	//
	ELECTION_STOPPED EventType = 3
	//
	LEADER_ELECTED EventType = 4
	//
	LEADER_LOST EventType = 5
	//
	LEADER_CHANGED EventType = 6
	// ------------------------------- Node events ----------------------------- //
	NODE_JOINED EventType = 7
	//
	NODE_DISJOINED EventType = 8
	//
	NODE_HEALTHY EventType = 9
	//
	NODE_UNREACHABLE EventType = 10
	// ------------------------------- Quorum events ----------------------------- //
	QUORUM_MEMBER_ADD EventType = 15
	//
	QUORUM_MEMBER_REMOVE EventType = 16
	//
	QUORUM_MEMBER_HEALTHY EventType = 17
	//
	QUORUM_MEMBER_UNHEALTHY EventType = 18
	//
	UNSUPPORTED_QUORUM_SIZE EventType = 19
	//
	QUORUM_UNHEALTHY EventType = 20
	// ------------------------------- Diagnostic events ----------------------------- //
	MODULE_CREATION_FAILED EventType = 24
	// ------------------------ Config Snapshot/Restore events ------------------------ //
	CONFIG_RESTORED EventType = 30
	//
	CONFIG_RESTORE_ABORTED EventType = 31
	//
	CONFIG_RESTORE_FAILED EventType = 32
	// -------------------------------- Host/DSC events -------------------------- //
	DSC_ADMITTED EventType = 100
	//
	DSC_REJECTED EventType = 101
	//
	DSC_UNREACHABLE EventType = 102
	//
	DSC_HEALTHY EventType = 103
	//
	DSC_UNHEALTHY EventType = 104
	//
	HOST_DSC_SPEC_CONFLICT EventType = 105
	//
	DSC_DEADMITTED EventType = 106
	//
	DSC_DECOMMISSIONED EventType = 107
	// ----------------------------- API Gateway events ---------------------- //
	AUTO_GENERATED_TLS_CERT EventType = 200
	// --------------------------- Auth/Audit events ------------------------- //
	LOGIN_FAILED EventType = 300
	//
	AUDITING_FAILED EventType = 301
	//
	PASSWORD_CHANGED EventType = 302
	//
	PASSWORD_RESET EventType = 303
	// --------------------------- HAL/Link events --------------------------- //
	LINK_UP EventType = 400
	//
	LINK_DOWN EventType = 401
	// ------------------------------ System events -------------------------- //
	SERVICE_STARTED EventType = 500
	//
	SERVICE_STOPPED EventType = 501
	//
	NAPLES_SERVICE_STOPPED EventType = 502
	//
	SERVICE_PENDING EventType = 503
	//
	SERVICE_RUNNING EventType = 504
	//
	SERVICE_UNRESPONSIVE EventType = 505
	//
	SYSTEM_COLDBOOT EventType = 506
	//
	SYSTEM_RESOURCE_USAGE EventType = 507
	//
	NAPLES_FATAL_INTERRUPT EventType = 508
	//
	NAPLES_CATTRIP_INTERRUPT EventType = 509
	//
	NAPLES_OVER_TEMP EventType = 510
	//
	NAPLES_OVER_TEMP_EXIT EventType = 511
	//
	NAPLES_PANIC_EVENT EventType = 512
	// ------------------------------ Rollout events -------------------------- //
	ROLLOUT_STARTED EventType = 701
	//
	ROLLOUT_SUCCESS EventType = 702
	//
	ROLLOUT_FAILED EventType = 703
	//
	ROLLOUT_SUSPENDED EventType = 704
	// ------------------------------ Config events -------------------------- //
	CONFIG_FAIL EventType = 801
)

var EventType_name = map[int32]string{
	0:   "ELECTION_STARTED",
	1:   "ELECTION_CANCELLED",
	2:   "ELECTION_NOTIFICATION_FAILED",
	3:   "ELECTION_STOPPED",
	4:   "LEADER_ELECTED",
	5:   "LEADER_LOST",
	6:   "LEADER_CHANGED",
	7:   "NODE_JOINED",
	8:   "NODE_DISJOINED",
	9:   "NODE_HEALTHY",
	10:  "NODE_UNREACHABLE",
	15:  "QUORUM_MEMBER_ADD",
	16:  "QUORUM_MEMBER_REMOVE",
	17:  "QUORUM_MEMBER_HEALTHY",
	18:  "QUORUM_MEMBER_UNHEALTHY",
	19:  "UNSUPPORTED_QUORUM_SIZE",
	20:  "QUORUM_UNHEALTHY",
	24:  "MODULE_CREATION_FAILED",
	30:  "CONFIG_RESTORED",
	31:  "CONFIG_RESTORE_ABORTED",
	32:  "CONFIG_RESTORE_FAILED",
	100: "DSC_ADMITTED",
	101: "DSC_REJECTED",
	102: "DSC_UNREACHABLE",
	103: "DSC_HEALTHY",
	104: "DSC_UNHEALTHY",
	105: "HOST_DSC_SPEC_CONFLICT",
	106: "DSC_DEADMITTED",
	107: "DSC_DECOMMISSIONED",
	200: "AUTO_GENERATED_TLS_CERT",
	300: "LOGIN_FAILED",
	301: "AUDITING_FAILED",
	302: "PASSWORD_CHANGED",
	303: "PASSWORD_RESET",
	400: "LINK_UP",
	401: "LINK_DOWN",
	500: "SERVICE_STARTED",
	501: "SERVICE_STOPPED",
	502: "NAPLES_SERVICE_STOPPED",
	503: "SERVICE_PENDING",
	504: "SERVICE_RUNNING",
	505: "SERVICE_UNRESPONSIVE",
	506: "SYSTEM_COLDBOOT",
	507: "SYSTEM_RESOURCE_USAGE",
	508: "NAPLES_FATAL_INTERRUPT",
	509: "NAPLES_CATTRIP_INTERRUPT",
	510: "NAPLES_OVER_TEMP",
	511: "NAPLES_OVER_TEMP_EXIT",
	512: "NAPLES_PANIC_EVENT",
	701: "ROLLOUT_STARTED",
	702: "ROLLOUT_SUCCESS",
	703: "ROLLOUT_FAILED",
	704: "ROLLOUT_SUSPENDED",
	801: "CONFIG_FAIL",
}
var EventType_value = map[string]int32{
	"ELECTION_STARTED":             0,
	"ELECTION_CANCELLED":           1,
	"ELECTION_NOTIFICATION_FAILED": 2,
	"ELECTION_STOPPED":             3,
	"LEADER_ELECTED":               4,
	"LEADER_LOST":                  5,
	"LEADER_CHANGED":               6,
	"NODE_JOINED":                  7,
	"NODE_DISJOINED":               8,
	"NODE_HEALTHY":                 9,
	"NODE_UNREACHABLE":             10,
	"QUORUM_MEMBER_ADD":            15,
	"QUORUM_MEMBER_REMOVE":         16,
	"QUORUM_MEMBER_HEALTHY":        17,
	"QUORUM_MEMBER_UNHEALTHY":      18,
	"UNSUPPORTED_QUORUM_SIZE":      19,
	"QUORUM_UNHEALTHY":             20,
	"MODULE_CREATION_FAILED":       24,
	"CONFIG_RESTORED":              30,
	"CONFIG_RESTORE_ABORTED":       31,
	"CONFIG_RESTORE_FAILED":        32,
	"DSC_ADMITTED":                 100,
	"DSC_REJECTED":                 101,
	"DSC_UNREACHABLE":              102,
	"DSC_HEALTHY":                  103,
	"DSC_UNHEALTHY":                104,
	"HOST_DSC_SPEC_CONFLICT":       105,
	"DSC_DEADMITTED":               106,
	"DSC_DECOMMISSIONED":           107,
	"AUTO_GENERATED_TLS_CERT":      200,
	"LOGIN_FAILED":                 300,
	"AUDITING_FAILED":              301,
	"PASSWORD_CHANGED":             302,
	"PASSWORD_RESET":               303,
	"LINK_UP":                      400,
	"LINK_DOWN":                    401,
	"SERVICE_STARTED":              500,
	"SERVICE_STOPPED":              501,
	"NAPLES_SERVICE_STOPPED":       502,
	"SERVICE_PENDING":              503,
	"SERVICE_RUNNING":              504,
	"SERVICE_UNRESPONSIVE":         505,
	"SYSTEM_COLDBOOT":              506,
	"SYSTEM_RESOURCE_USAGE":        507,
	"NAPLES_FATAL_INTERRUPT":       508,
	"NAPLES_CATTRIP_INTERRUPT":     509,
	"NAPLES_OVER_TEMP":             510,
	"NAPLES_OVER_TEMP_EXIT":        511,
	"NAPLES_PANIC_EVENT":           512,
	"ROLLOUT_STARTED":              701,
	"ROLLOUT_SUCCESS":              702,
	"ROLLOUT_FAILED":               703,
	"ROLLOUT_SUSPENDED":            704,
	"CONFIG_FAIL":                  801,
}

func (EventType) EnumDescriptor() ([]byte, []int) { return fileDescriptorEventtypes, []int{0} }

var E_Severity = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*eventattrs.Severity)(nil),
	Field:         10005,
	Name:          "eventtypes.severity",
	Tag:           "varint,10005,opt,name=severity,enum=eventattrs.Severity",
	Filename:      "eventtypes.proto",
}

var E_Category = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*eventattrs.Category)(nil),
	Field:         10006,
	Name:          "eventtypes.category",
	Tag:           "varint,10006,opt,name=category,enum=eventattrs.Category",
	Filename:      "eventtypes.proto",
}

var E_Desc = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         10007,
	Name:          "eventtypes.desc",
	Tag:           "bytes,10007,opt,name=desc",
	Filename:      "eventtypes.proto",
}

var E_SuppressMm = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         10008,
	Name:          "eventtypes.suppress_mm",
	Tag:           "varint,10008,opt,name=suppress_mm,json=suppressMm",
	Filename:      "eventtypes.proto",
}

func init() {
	proto.RegisterEnum("eventtypes.EventType", EventType_name, EventType_value)
	proto.RegisterExtension(E_Severity)
	proto.RegisterExtension(E_Category)
	proto.RegisterExtension(E_Desc)
	proto.RegisterExtension(E_SuppressMm)
}
func (x EventType) String() string {
	s, ok := EventType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

func init() { proto.RegisterFile("eventtypes.proto", fileDescriptorEventtypes) }

var fileDescriptorEventtypes = []byte{
	// 1996 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x97, 0xcb, 0x6f, 0xdc, 0xc6,
	0x1d, 0xc7, 0xb5, 0xda, 0xb5, 0x63, 0x8f, 0x5d, 0x89, 0x66, 0x6c, 0xd9, 0x61, 0xec, 0xf5, 0x38,
	0x01, 0x5c, 0x37, 0x6e, 0xa4, 0xc6, 0x6e, 0x12, 0xd7, 0x6d, 0x50, 0x53, 0xe4, 0x48, 0x62, 0xb2,
	0x4b, 0xae, 0x49, 0xae, 0xdc, 0x34, 0x28, 0x08, 0x2e, 0x39, 0xbb, 0x4b, 0x9b, 0xcb, 0xd9, 0x70,
	0x86, 0x12, 0xd4, 0x53, 0x81, 0x5e, 0x8a, 0x9e, 0xda, 0x43, 0x1f, 0xd7, 0xa2, 0x3e, 0xf8, 0xd0,
	0x87, 0xcf, 0x06, 0xda, 0xe6, 0x98, 0x63, 0xff, 0x84, 0xc2, 0xa7, 0x5e, 0x05, 0xf4, 0xfd, 0xc6,
	0x0c, 0x87, 0x2b, 0xae, 0xa4, 0xa0, 0x3e, 0x4a, 0xd8, 0xef, 0xe7, 0xf7, 0x98, 0xf9, 0x7d, 0x7f,
	0x43, 0xa0, 0xe0, 0x1d, 0x9c, 0x31, 0xb6, 0x37, 0xc5, 0x74, 0x75, 0x9a, 0x13, 0x46, 0x54, 0x70,
	0xf0, 0x1f, 0x0d, 0x8c, 0xc8, 0x88, 0x94, 0xff, 0xd7, 0xe0, 0x88, 0x90, 0x51, 0x8a, 0xd7, 0xc4,
	0x5f, 0x83, 0x62, 0xb8, 0x16, 0x63, 0x1a, 0xe5, 0xc9, 0x94, 0x91, 0x5c, 0xfe, 0x42, 0x09, 0x19,
	0xcb, 0x93, 0x41, 0xc1, 0x2a, 0xd6, 0x1b, 0xdf, 0xbf, 0x02, 0x00, 0xe2, 0x38, 0x9f, 0xe3, 0xd4,
	0x0e, 0x50, 0x50, 0x07, 0x19, 0xbe, 0xe5, 0xd8, 0x81, 0xe7, 0xeb, 0xae, 0x8f, 0x4c, 0x65, 0x41,
	0x7b, 0xe7, 0xc9, 0x7e, 0x6b, 0xe1, 0xe9, 0x7e, 0x6b, 0xe1, 0xd9, 0x7e, 0xeb, 0x7a, 0x07, 0x87,
	0x31, 0xce, 0x21, 0x4e, 0x71, 0xc4, 0x12, 0x92, 0x41, 0xca, 0xc2, 0x9c, 0xe1, 0x18, 0x26, 0x19,
	0x64, 0x63, 0x0c, 0xa3, 0xb4, 0xa0, 0x0c, 0xe7, 0x9f, 0xec, 0xb7, 0x1a, 0xaa, 0x0e, 0xd4, 0x19,
	0xcd, 0xd0, 0x6d, 0x03, 0x75, 0x3a, 0xc8, 0x54, 0x1a, 0xda, 0x17, 0x9e, 0xec, 0xb7, 0x1a, 0x92,
	0xf7, 0xca, 0x61, 0x5e, 0x14, 0x66, 0x11, 0x4e, 0x53, 0x1c, 0x0b, 0xc4, 0xb7, 0xc0, 0xe5, 0x19,
	0xc2, 0x76, 0x7c, 0x6b, 0xc3, 0x32, 0x74, 0xf1, 0xc7, 0x86, 0x6e, 0x71, 0xd8, 0xa2, 0xf6, 0xd5,
	0x1a, 0xec, 0xe6, 0x46, 0x98, 0xa4, 0x38, 0x86, 0x8c, 0x40, 0x8a, 0xb3, 0x18, 0xa6, 0x87, 0xd8,
	0x19, 0x61, 0xc9, 0x30, 0x89, 0x42, 0xfe, 0x87, 0xc0, 0xbf, 0x37, 0x57, 0xaf, 0xd3, 0xeb, 0x21,
	0x53, 0x69, 0x6a, 0x9f, 0xaf, 0x21, 0x2f, 0x1e, 0xad, 0x97, 0x4c, 0xa7, 0x32, 0xbb, 0x75, 0xb0,
	0xd4, 0x41, 0xba, 0x89, 0xdc, 0x40, 0x50, 0x90, 0xa9, 0xb4, 0xb4, 0xd5, 0x5a, 0xb3, 0xda, 0x75,
	0x31, 0x8e, 0xe1, 0x90, 0xe4, 0x47, 0x9a, 0x64, 0x81, 0x33, 0x92, 0xd1, 0x71, 0x3c, 0x5f, 0x39,
	0xa1, 0xdd, 0xa9, 0x01, 0x6e, 0xd8, 0x24, 0xc6, 0x30, 0x25, 0x94, 0xc9, 0x5a, 0xe8, 0x38, 0x99,
	0xc2, 0xb8, 0xc8, 0x93, 0x6c, 0x24, 0x48, 0x55, 0x5a, 0x87, 0xd2, 0x31, 0xb6, 0x74, 0x7b, 0x13,
	0x99, 0xca, 0xc9, 0x63, 0xd3, 0x89, 0xc6, 0x61, 0x36, 0x3a, 0x38, 0xb2, 0x39, 0xc6, 0x1d, 0x70,
	0xc6, 0x76, 0x4c, 0x14, 0xbc, 0xef, 0x58, 0x36, 0x32, 0x95, 0x97, 0x44, 0x33, 0x2a, 0xc0, 0x45,
	0x91, 0xce, 0x43, 0x92, 0x64, 0xbc, 0xc9, 0x87, 0x0a, 0xf9, 0x3a, 0x58, 0x12, 0x4a, 0xd3, 0xf2,
	0xa4, 0xf8, 0x94, 0x76, 0xb3, 0xd6, 0xc9, 0xab, 0x42, 0x1c, 0x27, 0x54, 0xea, 0x87, 0x39, 0x99,
	0xd4, 0x21, 0xea, 0x5b, 0xe0, 0xac, 0x00, 0x6c, 0x21, 0xbd, 0xe3, 0x6f, 0x7d, 0xa8, 0x9c, 0xd6,
	0xae, 0xd6, 0x62, 0x2f, 0x0b, 0x79, 0x42, 0xe1, 0x18, 0x87, 0x29, 0x1b, 0xef, 0x89, 0x98, 0x5f,
	0x01, 0x8a, 0x90, 0xf4, 0x6d, 0x17, 0xe9, 0xc6, 0x96, 0xbe, 0xde, 0x41, 0x0a, 0xd0, 0x5e, 0x7f,
	0xb2, 0xdf, 0x5a, 0x94, 0xb2, 0x97, 0x2b, 0x59, 0x91, 0xe5, 0x38, 0x8c, 0xc6, 0xe1, 0x20, 0xc5,
	0xf2, 0xe8, 0xcf, 0xdd, 0xef, 0x3b, 0x6e, 0xbf, 0x1b, 0x74, 0x51, 0x77, 0x1d, 0xb9, 0x81, 0x6e,
	0x9a, 0xca, 0xb2, 0x76, 0xbd, 0x16, 0x72, 0x45, 0x8f, 0x63, 0x1c, 0xc3, 0x09, 0x9e, 0x0c, 0x70,
	0xce, 0x2f, 0xd5, 0xc7, 0x05, 0xc9, 0x8b, 0x89, 0x90, 0x9b, 0xe0, 0xfc, 0xbc, 0xdc, 0x45, 0x5d,
	0x67, 0x1b, 0x29, 0x8a, 0xf6, 0x46, 0x8d, 0xa0, 0xb9, 0x78, 0x42, 0x76, 0x0e, 0x18, 0xa2, 0xe6,
	0x1a, 0x65, 0x13, 0x5c, 0x98, 0xa7, 0x54, 0xb5, 0x9f, 0xd3, 0xbe, 0x58, 0xc3, 0x5c, 0xbe, 0x2f,
	0x24, 0x15, 0x25, 0xa1, 0x30, 0x23, 0xbb, 0x73, 0x8d, 0xf8, 0x00, 0x5c, 0x9c, 0x07, 0xf5, 0xed,
	0x0a, 0xa5, 0x8a, 0x3b, 0x50, 0xf5, 0xa3, 0x7d, 0x2c, 0xaa, 0xc8, 0xea, 0x30, 0x0f, 0x5c, 0xec,
	0xdb, 0x5e, 0xbf, 0xd7, 0x73, 0xb8, 0x01, 0x04, 0x12, 0xec, 0x59, 0xdf, 0x44, 0xca, 0xcb, 0xc2,
	0x0c, 0x2a, 0xd8, 0x75, 0x09, 0xa3, 0xc9, 0xb7, 0x45, 0x8f, 0x07, 0x38, 0x25, 0xbb, 0x90, 0x16,
	0xd3, 0x29, 0x11, 0x9e, 0x30, 0x49, 0xb2, 0x64, 0x22, 0x4b, 0xbd, 0x0f, 0x14, 0x09, 0x3a, 0x48,
	0xed, 0xbc, 0x98, 0xde, 0x8a, 0x76, 0x53, 0xd2, 0x62, 0x82, 0x79, 0x56, 0x0c, 0x8e, 0xc3, 0x1d,
	0x0c, 0x71, 0x46, 0x8a, 0xd1, 0xb8, 0x2a, 0x56, 0xe6, 0x4d, 0x05, 0xd2, 0x05, 0x2b, 0x5d, 0xc7,
	0xec, 0x77, 0x50, 0x60, 0xb8, 0x68, 0xce, 0x16, 0x2e, 0x89, 0x34, 0xab, 0x9b, 0x77, 0xbd, 0x4b,
	0xe2, 0x22, 0xc5, 0x30, 0xca, 0xb1, 0x18, 0x7d, 0x31, 0x87, 0x71, 0x12, 0x8e, 0x32, 0x42, 0x59,
	0x12, 0x51, 0x38, 0x14, 0xb6, 0x21, 0x6f, 0xf1, 0xb2, 0xe1, 0xd8, 0x1b, 0xd6, 0x66, 0xe0, 0x22,
	0xcf, 0x77, 0x5c, 0x64, 0x2a, 0xed, 0xf9, 0x23, 0x35, 0x48, 0x36, 0x4c, 0x46, 0x45, 0x5e, 0xa2,
	0x76, 0x43, 0x0a, 0x73, 0x4c, 0x19, 0xc9, 0x25, 0xe0, 0x01, 0x58, 0x99, 0x07, 0x04, 0xfa, 0xba,
	0xe8, 0xa3, 0x72, 0x75, 0xde, 0xab, 0xe6, 0x39, 0x92, 0x01, 0xc9, 0x14, 0xd7, 0xc8, 0xe1, 0x40,
	0x34, 0x52, 0x36, 0xf0, 0xc2, 0x21, 0xb0, 0x2c, 0x16, 0xce, 0x9f, 0xc9, 0xff, 0xe3, 0xd6, 0x8a,
	0x7d, 0x0f, 0x9c, 0x35, 0x3d, 0x23, 0xd0, 0xcd, 0xae, 0xe5, 0xf3, 0x0c, 0x63, 0x31, 0xb0, 0x55,
	0xa5, 0xaf, 0x9a, 0x9e, 0x01, 0xc3, 0x78, 0x92, 0x30, 0x56, 0x7a, 0xea, 0xe1, 0x89, 0xbf, 0x57,
	0xca, 0x5d, 0xf4, 0x7e, 0x69, 0x7e, 0x58, 0xdc, 0xb4, 0xaa, 0xc0, 0xd7, 0x2a, 0x39, 0xa5, 0x65,
	0x22, 0x1f, 0x17, 0x98, 0x32, 0xd9, 0xb0, 0x87, 0xc2, 0x10, 0xd5, 0x77, 0xc1, 0x32, 0x27, 0xd4,
	0xc7, 0x77, 0xa8, 0xbd, 0x56, 0xab, 0x46, 0xe5, 0x90, 0x63, 0xa6, 0x77, 0x0d, 0x9c, 0xe1, 0xc2,
	0xea, 0x22, 0x8d, 0xb4, 0x76, 0x2d, 0xf1, 0x25, 0x29, 0xaa, 0xdf, 0xe9, 0xdb, 0xe0, 0x73, 0x65,
	0xa4, 0x4a, 0x32, 0xd6, 0x60, 0x2d, 0x8e, 0x32, 0x8b, 0x53, 0x17, 0x7d, 0xb7, 0x01, 0x56, 0xb6,
	0x1c, 0xcf, 0x0f, 0xb8, 0xd4, 0xeb, 0x21, 0x23, 0xe0, 0x27, 0xd0, 0xb1, 0x0c, 0x5f, 0x49, 0xb4,
	0x51, 0xad, 0xd6, 0x8f, 0xfc, 0x31, 0x86, 0x74, 0x8f, 0x32, 0x3c, 0x81, 0xe3, 0x90, 0xc2, 0x18,
	0xb3, 0xd2, 0xf1, 0x43, 0x18, 0x91, 0x6c, 0x98, 0x26, 0x11, 0x83, 0x03, 0xcc, 0x76, 0x31, 0x2e,
	0x2d, 0x97, 0x47, 0xa3, 0x53, 0x1c, 0xcd, 0xb6, 0x11, 0x85, 0x64, 0x08, 0xe3, 0x64, 0x38, 0xc4,
	0x39, 0xce, 0x18, 0xdc, 0xe2, 0x8e, 0x4f, 0x06, 0xbc, 0x4b, 0x54, 0xbd, 0x07, 0x78, 0x41, 0x81,
	0x89, 0x66, 0xe7, 0xf4, 0x70, 0xce, 0x1d, 0x04, 0x2d, 0xc6, 0x6f, 0xce, 0x8e, 0xea, 0x88, 0xb3,
	0x6e, 0x02, 0xb5, 0x24, 0x18, 0x4e, 0xb7, 0x6b, 0x79, 0x9e, 0xe5, 0x70, 0x7b, 0x7e, 0xa4, 0xad,
	0xd5, 0x28, 0xaf, 0x97, 0x94, 0x88, 0x4c, 0xe4, 0x89, 0x1d, 0x07, 0x7a, 0x08, 0x2e, 0xea, 0x7d,
	0xdf, 0x09, 0x36, 0x91, 0x8d, 0x5c, 0x9d, 0x9b, 0x83, 0xdf, 0xf1, 0x02, 0x03, 0xb9, 0xbe, 0xf2,
	0x69, 0x43, 0xeb, 0xd4, 0x3a, 0xf2, 0x35, 0xbd, 0x60, 0x04, 0x8e, 0x70, 0xc6, 0xaf, 0x1d, 0x8e,
	0x61, 0x84, 0x73, 0xb9, 0x7b, 0xa5, 0x53, 0xf0, 0x0d, 0x56, 0x50, 0xb9, 0x14, 0xf5, 0x9e, 0x05,
	0x37, 0x43, 0x86, 0x77, 0xc3, 0x3d, 0xe8, 0x77, 0x3c, 0xd1, 0xfc, 0x2f, 0x81, 0xb3, 0x1d, 0x67,
	0xd3, 0x9a, 0xcd, 0xf4, 0x2f, 0x16, 0xb5, 0x2b, 0xb5, 0x7c, 0xcf, 0xf5, 0x29, 0xce, 0x61, 0x4a,
	0x46, 0x49, 0x75, 0xa5, 0xd5, 0x75, 0xb0, 0xac, 0xf7, 0x4d, 0xcb, 0xb7, 0xec, 0xcd, 0x4a, 0xf4,
	0xcb, 0x45, 0xd1, 0xaa, 0xea, 0x98, 0x2f, 0x3f, 0xc8, 0x13, 0xc6, 0x23, 0x93, 0x21, 0xd4, 0x8b,
	0x38, 0x61, 0xe2, 0xed, 0x53, 0x1f, 0x89, 0xdb, 0x40, 0xe9, 0xe9, 0x9e, 0xf7, 0xc0, 0x71, 0xcd,
	0xd9, 0x16, 0xfd, 0xd5, 0xa2, 0x76, 0xb9, 0x56, 0x9a, 0xd2, 0x0b, 0x29, 0xdd, 0x25, 0x79, 0x5c,
	0x2d, 0x52, 0x75, 0x0d, 0x2c, 0xcd, 0x44, 0x2e, 0xf2, 0x90, 0xaf, 0xfc, 0x7a, 0x51, 0xd3, 0x6a,
	0x92, 0xa5, 0x99, 0x24, 0xc7, 0x14, 0x33, 0x75, 0x0d, 0xbc, 0xd4, 0xb1, 0xec, 0x0f, 0x82, 0x7e,
	0x4f, 0xf9, 0x41, 0x53, 0xbb, 0x26, 0xcb, 0x6a, 0xf0, 0xb2, 0x7a, 0x24, 0x67, 0xbc, 0x43, 0x69,
	0x92, 0x3d, 0xc2, 0x31, 0x2c, 0xa6, 0x72, 0x2d, 0x9f, 0x16, 0x02, 0xd3, 0x79, 0x60, 0x2b, 0x3f,
	0x6c, 0x6a, 0x37, 0x24, 0x9c, 0x4b, 0x2e, 0x09, 0x09, 0xff, 0x3d, 0x7f, 0x8c, 0xb1, 0x82, 0x72,
	0x79, 0x4c, 0x76, 0xcb, 0x85, 0xfe, 0x36, 0x58, 0xf6, 0x90, 0xbb, 0x6d, 0x19, 0x68, 0xf6, 0xa2,
	0xfb, 0x53, 0x53, 0x6c, 0xd6, 0xe6, 0xd3, 0xfd, 0xd6, 0x22, 0xdf, 0xac, 0x1e, 0xce, 0x77, 0x92,
	0x08, 0x57, 0x4f, 0xb9, 0xa3, 0xb2, 0xf2, 0x61, 0xf4, 0xe7, 0x52, 0xd6, 0x38, 0x2a, 0x3b, 0x78,
	0x11, 0x19, 0x60, 0xc5, 0xd6, 0x7b, 0x1d, 0xe4, 0x05, 0x87, 0xd5, 0x7f, 0x69, 0x8a, 0xdd, 0xba,
	0x28, 0xd5, 0x2b, 0x76, 0x38, 0x4d, 0x31, 0x85, 0xf4, 0x18, 0xc8, 0x5b, 0x07, 0xb1, 0x7b, 0xc8,
	0x36, 0x2d, 0x7b, 0x53, 0xf9, 0x6b, 0x53, 0x7b, 0xf5, 0xb8, 0x94, 0xa7, 0x38, 0x8b, 0x93, 0x6c,
	0x54, 0x4f, 0xd7, 0xed, 0xdb, 0x36, 0x97, 0xfc, 0xed, 0x33, 0xaa, 0xcc, 0x8b, 0x2c, 0x4b, 0xb2,
	0x91, 0x88, 0xf4, 0x11, 0x38, 0x5f, 0xc9, 0xb8, 0x07, 0x79, 0x3d, 0xc7, 0xf6, 0xac, 0x6d, 0xa4,
	0xfc, 0xbd, 0xa9, 0xdd, 0xab, 0x25, 0xfb, 0xe5, 0x4a, 0xcb, 0x6d, 0x88, 0x4e, 0x49, 0x46, 0x93,
	0x1d, 0x0c, 0xe3, 0x02, 0x73, 0x57, 0x4c, 0xc3, 0xe8, 0x11, 0xbf, 0x4f, 0x72, 0xfc, 0x73, 0x4c,
	0x49, 0x91, 0x47, 0x98, 0xaa, 0x77, 0xc0, 0xb2, 0xf7, 0xa1, 0xe7, 0xa3, 0x6e, 0x60, 0x38, 0x1d,
	0x73, 0xdd, 0x71, 0x7c, 0xe5, 0x1f, 0x4d, 0xe1, 0x6e, 0x55, 0x0b, 0x55, 0xaf, 0xd4, 0x44, 0x24,
	0x8d, 0xe1, 0x80, 0x90, 0xaa, 0xf9, 0x08, 0x5c, 0x90, 0x4a, 0x17, 0x79, 0x4e, 0xdf, 0xe5, 0xe9,
	0x79, 0xfa, 0x26, 0x52, 0xfe, 0xd9, 0x9c, 0x3d, 0x9e, 0xb9, 0xfe, 0x8a, 0x37, 0x1f, 0x13, 0x16,
	0x34, 0x1c, 0x95, 0x8f, 0xa4, 0x64, 0x34, 0x56, 0xd1, 0xec, 0x30, 0x36, 0x74, 0x5f, 0xef, 0x04,
	0x96, 0xed, 0x23, 0xd7, 0xed, 0xf7, 0x7c, 0xe5, 0x5f, 0xe5, 0x0d, 0xaa, 0xea, 0xbb, 0x2c, 0x0f,
	0x83, 0x5b, 0x57, 0x08, 0x87, 0x21, 0x0b, 0x53, 0x98, 0x64, 0x0c, 0xe7, 0x79, 0x31, 0x65, 0xea,
	0x36, 0xb8, 0x24, 0x31, 0x86, 0xee, 0xfb, 0xae, 0xd5, 0xab, 0x81, 0xfe, 0xdd, 0xd4, 0xde, 0xad,
	0x81, 0x6e, 0xca, 0x84, 0x70, 0x16, 0x91, 0x82, 0x03, 0xf8, 0xe4, 0x8b, 0x8f, 0x8e, 0x69, 0x79,
	0xf3, 0xc5, 0xf0, 0x95, 0x9d, 0x52, 0x2d, 0xa0, 0x48, 0xae, 0xb3, 0x8d, 0xdc, 0xc0, 0x47, 0xdd,
	0x9e, 0xf2, 0x9f, 0xa6, 0x76, 0xab, 0x56, 0xe0, 0x75, 0xc9, 0x63, 0x78, 0x22, 0xf6, 0x57, 0x91,
	0x8b, 0xea, 0xc2, 0x01, 0xd9, 0xc1, 0x90, 0x8d, 0x73, 0x4c, 0xc7, 0x24, 0x8d, 0x57, 0x55, 0x1b,
	0x5c, 0x38, 0x8c, 0x0a, 0xd0, 0x37, 0x2c, 0x5f, 0xf9, 0xef, 0x0b, 0xf1, 0xca, 0x77, 0x4b, 0x8d,
	0xb7, 0x01, 0x54, 0xc9, 0xeb, 0xe9, 0xb6, 0x65, 0x04, 0x68, 0x1b, 0xd9, 0xbe, 0xf2, 0x9d, 0x96,
	0xf6, 0x66, 0x0d, 0x76, 0x4d, 0xc2, 0xa6, 0x61, 0x96, 0x44, 0x90, 0x94, 0xce, 0x3e, 0xcd, 0xf1,
	0x4e, 0x42, 0x0a, 0x2a, 0x8e, 0x53, 0xbd, 0x0d, 0x96, 0x5d, 0xa7, 0xd3, 0x71, 0xfa, 0xfe, 0x6c,
	0xf8, 0x7e, 0x73, 0x62, 0x66, 0x63, 0x4d, 0x3e, 0xef, 0x2e, 0x49, 0x53, 0x52, 0x30, 0x98, 0x64,
	0x09, 0x4b, 0xb8, 0x55, 0xaa, 0xf7, 0x6a, 0xa2, 0xbe, 0x61, 0x20, 0xcf, 0x53, 0x7e, 0x7b, 0x62,
	0xf6, 0x06, 0xe1, 0xa2, 0x76, 0x25, 0xa2, 0x45, 0x14, 0x61, 0x4a, 0x87, 0x45, 0x9a, 0xee, 0xc1,
	0x88, 0x4c, 0xa6, 0x29, 0x66, 0xa5, 0x1f, 0x55, 0x04, 0xe9, 0x83, 0xbf, 0x3b, 0x21, 0xfc, 0x68,
	0x51, 0x02, 0x96, 0x2a, 0x80, 0x74, 0xce, 0xb7, 0xc1, 0xb9, 0x83, 0x90, 0x1e, 0x1f, 0x3a, 0x64,
	0x2a, 0x9f, 0x7c, 0x46, 0xa6, 0xb4, 0xa0, 0x7c, 0xec, 0x70, 0xac, 0xde, 0x02, 0x67, 0xe4, 0x93,
	0x84, 0x87, 0x51, 0x7e, 0x76, 0x52, 0xec, 0x54, 0xde, 0x9f, 0xd6, 0xb3, 0xfd, 0xd6, 0xf9, 0xf9,
	0x97, 0x48, 0x19, 0x4a, 0x7b, 0xe5, 0x7b, 0x3f, 0x6f, 0x2f, 0x3c, 0x79, 0xdc, 0x5e, 0x78, 0xfa,
	0xb8, 0xdd, 0x78, 0xf6, 0xb8, 0x7d, 0x7a, 0xf6, 0xf9, 0x79, 0xd7, 0x07, 0xa7, 0x28, 0xde, 0xc1,
	0x79, 0xc2, 0xf6, 0xd4, 0x6b, 0xab, 0xe5, 0xd7, 0xec, 0x6a, 0xf5, 0x35, 0xbb, 0x8a, 0xb2, 0x62,
	0xb2, 0x1d, 0xa6, 0x05, 0x76, 0xa6, 0x62, 0x63, 0x5e, 0xfa, 0x91, 0x0d, 0x1b, 0x37, 0x96, 0x6e,
	0x9d, 0x5f, 0x15, 0xdf, 0xc3, 0xfc, 0x96, 0xd1, 0x55, 0x4f, 0xea, 0xdd, 0x19, 0x89, 0x53, 0xf9,
	0xd6, 0x19, 0x91, 0xfc, 0x85, 0xa8, 0x3f, 0x3e, 0x86, 0x6a, 0x48, 0xbd, 0x3b, 0x23, 0xdd, 0x7d,
	0x07, 0xb4, 0xf8, 0xe7, 0xf5, 0x8b, 0x10, 0x7f, 0xc2, 0x89, 0xa7, 0x5d, 0xf1, 0xfb, 0xbb, 0x06,
	0x38, 0xc3, 0xdf, 0xc7, 0x39, 0xa6, 0x34, 0x98, 0x4c, 0x5e, 0x44, 0xfe, 0x53, 0x2e, 0x3f, 0xe5,
	0x82, 0x4a, 0xd6, 0x9d, 0xac, 0x2b, 0x9f, 0x3e, 0x6f, 0x37, 0x7e, 0xff, 0xbc, 0xdd, 0xf8, 0xc3,
	0xf3, 0x76, 0xe3, 0x8f, 0xcf, 0xdb, 0x0b, 0xbd, 0x85, 0xc1, 0x49, 0x41, 0xb8, 0xfd, 0xbf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x1d, 0xce, 0xce, 0x9a, 0x30, 0x10, 0x00, 0x00,
}
