// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

package {{.GoPkg.Name}}
{{$pkgname := .GoPkg.Name}}
import (
    "context"

    "github.com/pensando/sw/utils/kvstore"
	api "github.com/pensando/sw/api"
	apiserver "github.com/pensando/sw/apiserver"
)

// Dummy vars to suppress unused imports message
var _ context.Context
var _ api.ObjectMeta
var _ kvstore.Interface

{{$crudobjs := getPackageCrudObjects .}}{{range $crudobjs}}
// {{.}}Interface exposes the CRUD methods for {{.}}
type {{.}}Interface interface {
	Create(ctx context.Context, in *{{.}}) (*{{.}}, error)
	Update(ctx context.Context, in *{{.}}) (*{{.}}, error)
	Get(ctx context.Context, objMeta *api.ObjectMeta) (*{{.}}, error)
	Delete(ctx context.Context, objMeta *api.ObjectMeta) (*{{.}}, error)
	List(ctx context.Context, options *api.ListWatchOptions) ([]*{{.}}, error)
	Watch(ctx context.Context, options *api.ListWatchOptions) (kvstore.Watcher, error)
	Allowed(oper apiserver.APIOperType) bool
}
{{end}}

{{range .Services}}{{$srvname := .Name}}{{if (hasExtension "venice.apiGrpcCrudService" .)}}{{$cruds := (getExtension "venice.apiGrpcCrudService" .)}}
// {{$srvname}}Interface exposes objects with CRUD operations allowed by the service
type {{$srvname}}Interface interface { {{range $cruds}}
    {{.}}() {{.}}Interface {{end}}
}
{{end}}{{end}}