package bookstoreGwService

import (
	"github.com/GeertJohan/go.rice/embedded"
	"time"
)

func init() {

	// define files
	file2 := &embedded.EmbeddedFile{
		Filename:    "example.swagger.json",
		FileModTime: time.Unix(1495160992, 0),
		Content:     string("{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Service name\",\n    \"version\": \"version not set\"\n  },\n  \"schemes\": [\n    \"http\",\n    \"https\"\n  ],\n  \"consumes\": [\n    \"application/json\"\n  ],\n  \"produces\": [\n    \"application/json\"\n  ],\n  \"paths\": {\n    \"/books/{Spec.ISBNId}\": {\n      \"get\": {\n        \"summary\": \"--- Book resource -- //\\nThis resource is partially exposed on the API gateway (Get) and some actions are\\nonly internal (Create Update Delete)\",\n        \"operationId\": \"GetBook\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/bookstoreBook\"\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"Spec.ISBNId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"format\": \"string\"\n          }\n        ],\n        \"tags\": [\n          \"BookstoreV1\"\n        ]\n      }\n    },\n    \"/orders\": {\n      \"post\": {\n        \"summary\": \"--- Order Resource--- //\\nThis resource is exposed to the user for all CRUD operations\",\n        \"operationId\": \"OrderOper\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/bookstoreOrder\"\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/definitions/bookstoreOrder\"\n            }\n          }\n        ],\n        \"tags\": [\n          \"BookstoreV1\"\n        ]\n      }\n    },\n    \"/orders/{O.Name}\": {\n      \"get\": {\n        \"summary\": \"--- Order Resource--- //\\nThis resource is exposed to the user for all CRUD operations\",\n        \"operationId\": \"OrderOper\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/bookstoreOrder\"\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"O.Name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"format\": \"string\"\n          }\n        ],\n        \"tags\": [\n          \"BookstoreV1\"\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"--- Order Resource--- //\\nThis resource is exposed to the user for all CRUD operations\",\n        \"operationId\": \"OrderOper\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/bookstoreOrder\"\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"O.Name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"format\": \"string\"\n          }\n        ],\n        \"tags\": [\n          \"BookstoreV1\"\n        ]\n      },\n      \"put\": {\n        \"summary\": \"--- Order Resource--- //\\nThis resource is exposed to the user for all CRUD operations\",\n        \"operationId\": \"OrderOper\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/bookstoreOrder\"\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"O.Name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"format\": \"string\"\n          },\n          {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/definitions/bookstoreOrder\"\n            }\n          }\n        ],\n        \"tags\": [\n          \"BookstoreV1\"\n        ]\n      }\n    }\n  },\n  \"definitions\": {\n    \"apiObjectMeta\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Name\": {\n          \"type\": \"string\",\n          \"format\": \"string\",\n          \"description\": \"Name of the object, unique within a Namespace for scoped objects.\"\n        },\n        \"Namespace\": {\n          \"type\": \"string\",\n          \"format\": \"string\",\n          \"description\": \"Namespace of the object, for scoped objects.\"\n        },\n        \"ResourceVersion\": {\n          \"type\": \"string\",\n          \"format\": \"string\",\n          \"description\": \"Resource version in the object store. This can only be set by the server.\"\n        },\n        \"UUID\": {\n          \"type\": \"string\",\n          \"format\": \"string\",\n          \"description\": \"UUID is the unique identifier for the object. This can only be set by the server.\"\n        }\n      },\n      \"description\": \"ObjectMeta contains metadata that all objects stored in kvstore must have.\"\n    },\n    \"apiTypeMeta\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Kind\": {\n          \"type\": \"string\",\n          \"format\": \"string\",\n          \"description\": \"Kind represents the type of the API object.\"\n        },\n        \"APIVersion\": {\n          \"type\": \"string\",\n          \"format\": \"string\",\n          \"description\": \"APIVersion defines the version of the API object.\"\n        }\n      },\n      \"description\": \"TypeMeta contains the metadata about kind and version for all API objects.\"\n    },\n    \"bookstoreBook\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"T\": {\n          \"$ref\": \"#/definitions/apiTypeMeta\"\n        },\n        \"O\": {\n          \"$ref\": \"#/definitions/apiObjectMeta\"\n        },\n        \"Spec\": {\n          \"$ref\": \"#/definitions/bookstoreBookSpec\"\n        },\n        \"Status\": {\n          \"$ref\": \"#/definitions/bookstoreBookStatus\"\n        }\n      }\n    },\n    \"bookstoreBookSpec\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"ISBNId\": {\n          \"type\": \"string\",\n          \"format\": \"string\"\n        },\n        \"Author\": {\n          \"type\": \"string\",\n          \"format\": \"string\"\n        },\n        \"IdProvider\": {\n          \"type\": \"string\",\n          \"format\": \"string\",\n          \"description\": \"Added in  version 2 of the API.\"\n        }\n      }\n    },\n    \"bookstoreBookStatus\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Inventory\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\"\n        }\n      }\n    },\n    \"bookstoreOrder\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"T\": {\n          \"$ref\": \"#/definitions/apiTypeMeta\"\n        },\n        \"O\": {\n          \"$ref\": \"#/definitions/apiObjectMeta\"\n        },\n        \"Spec\": {\n          \"$ref\": \"#/definitions/bookstoreOrderSpec\",\n          \"description\": \"Spec is not allowed to be Null hence disabling nullable.\"\n        },\n        \"Status\": {\n          \"$ref\": \"#/definitions/bookstoreOrderStatus\"\n        }\n      }\n    },\n    \"bookstoreOrderItem\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"ISBNId\": {\n          \"type\": \"string\",\n          \"format\": \"string\"\n        },\n        \"Quantity\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\"\n        }\n      }\n    },\n    \"bookstoreOrderSpec\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Id\": {\n          \"type\": \"string\",\n          \"format\": \"string\"\n        },\n        \"Order\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/bookstoreOrderItem\"\n          }\n        }\n      }\n    },\n    \"bookstoreOrderStatus\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"T\": {\n          \"$ref\": \"#/definitions/apiTypeMeta\"\n        },\n        \"O\": {\n          \"$ref\": \"#/definitions/apiObjectMeta\"\n        },\n        \"Status\": {\n          \"type\": \"string\",\n          \"format\": \"string\"\n        },\n        \"Filled\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/bookstoreOrderSpec\"\n          }\n        }\n      }\n    },\n    \"bookstorePublisher\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"T\": {\n          \"$ref\": \"#/definitions/apiTypeMeta\"\n        },\n        \"O\": {\n          \"$ref\": \"#/definitions/apiObjectMeta\"\n        },\n        \"Spec\": {\n          \"$ref\": \"#/definitions/bookstorePublisherSpec\"\n        }\n      }\n    },\n    \"bookstorePublisherSpec\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Id\": {\n          \"type\": \"string\",\n          \"format\": \"string\"\n        },\n        \"Address\": {\n          \"type\": \"string\",\n          \"format\": \"string\"\n        }\n      }\n    }\n  }\n}\n"),
	}

	// define dirs
	dir1 := &embedded.EmbeddedDir{
		Filename:   "",
		DirModTime: time.Unix(1495160992, 0),
		ChildFiles: []*embedded.EmbeddedFile{
			file2, // "example.swagger.json"

		},
	}

	// link ChildDirs
	dir1.ChildDirs = []*embedded.EmbeddedDir{}

	// register embeddedBox
	embedded.RegisterEmbeddedBox(`../../../../apigen/example/generated/swagger`, &embedded.EmbeddedBox{
		Name: `../../../../apigen/example/generated/swagger`,
		Time: time.Unix(1495160992, 0),
		Dirs: map[string]*embedded.EmbeddedDir{
			"": dir1,
		},
		Files: map[string]*embedded.EmbeddedFile{
			"example.swagger.json": file2,
		},
	})
}
