// Code generated by protoc-gen-go.
// source: example.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	example.proto

It has these top-level messages:
	ExampleReq
	ExampleResp
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

// RPC request
type ExampleReq struct {
	ReqMsg string `protobuf:"bytes,1,opt,name=reqMsg" json:"reqMsg,omitempty"`
}

func (m *ExampleReq) Reset()                    { *m = ExampleReq{} }
func (m *ExampleReq) String() string            { return proto1.CompactTextString(m) }
func (*ExampleReq) ProtoMessage()               {}
func (*ExampleReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ExampleReq) GetReqMsg() string {
	if m != nil {
		return m.ReqMsg
	}
	return ""
}

// RPC response
type ExampleResp struct {
	RespMsg string `protobuf:"bytes,1,opt,name=respMsg" json:"respMsg,omitempty"`
}

func (m *ExampleResp) Reset()                    { *m = ExampleResp{} }
func (m *ExampleResp) String() string            { return proto1.CompactTextString(m) }
func (*ExampleResp) ProtoMessage()               {}
func (*ExampleResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ExampleResp) GetRespMsg() string {
	if m != nil {
		return m.RespMsg
	}
	return ""
}

func init() {
	proto1.RegisterType((*ExampleReq)(nil), "proto.ExampleReq")
	proto1.RegisterType((*ExampleResp)(nil), "proto.ExampleResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Example service

type ExampleClient interface {
	// example rpc call
	ExampleRPC(ctx context.Context, in *ExampleReq, opts ...grpc.CallOption) (*ExampleResp, error)
}

type exampleClient struct {
	cc *grpc.ClientConn
}

func NewExampleClient(cc *grpc.ClientConn) ExampleClient {
	return &exampleClient{cc}
}

func (c *exampleClient) ExampleRPC(ctx context.Context, in *ExampleReq, opts ...grpc.CallOption) (*ExampleResp, error) {
	out := new(ExampleResp)
	err := grpc.Invoke(ctx, "/proto.Example/ExampleRPC", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Example service

type ExampleServer interface {
	// example rpc call
	ExampleRPC(context.Context, *ExampleReq) (*ExampleResp, error)
}

func RegisterExampleServer(s *grpc.Server, srv ExampleServer) {
	s.RegisterService(&_Example_serviceDesc, srv)
}

func _Example_ExampleRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExampleServer).ExampleRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Example/ExampleRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExampleServer).ExampleRPC(ctx, req.(*ExampleReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Example_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Example",
	HandlerType: (*ExampleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExampleRPC",
			Handler:    _Example_ExampleRPC_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example.proto",
}

func init() { proto1.RegisterFile("example.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 123 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xad, 0x48, 0xcc,
	0x2d, 0xc8, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x2a, 0x5c,
	0x5c, 0xae, 0x10, 0xf1, 0xa0, 0xd4, 0x42, 0x21, 0x31, 0x2e, 0xb6, 0xa2, 0xd4, 0x42, 0xdf, 0xe2,
	0x74, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x28, 0x4f, 0x49, 0x9d, 0x8b, 0x1b, 0xae, 0xaa,
	0xb8, 0x40, 0x48, 0x82, 0x8b, 0xbd, 0x28, 0xb5, 0xb8, 0x00, 0xa1, 0x0e, 0xc6, 0x35, 0x72, 0xe0,
	0x62, 0x87, 0x2a, 0x14, 0x32, 0x45, 0x98, 0x1c, 0xe0, 0x2c, 0x24, 0x08, 0xb1, 0x56, 0x0f, 0x61,
	0x99, 0x94, 0x10, 0xba, 0x50, 0x71, 0x81, 0x12, 0x43, 0x12, 0x1b, 0x58, 0xd0, 0x18, 0x10, 0x00,
	0x00, 0xff, 0xff, 0x93, 0x19, 0x72, 0x52, 0xaf, 0x00, 0x00, 0x00,
}
