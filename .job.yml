---
version: 2.0
builds:
  build-iris-x86:
    commands: ["sh", "-c", "cd /usr/src/github.com/pensando/sw; make ws-tools && go install ./asset-build/... && make pull-assets && cd nic && V=1 make package && find ./build -name '*.o'  | xargs rm && tar -zvcf /sw/build_iris_x86.tar.gz /usr/src/github.com/pensando/sw/nic/build && cd .. && ./tools/scripts/check-local-files.sh"]
    owners: ["email:sw-team@pensando.io"]
    artifacts:
      - /sw/build_iris_x86.tar.gz
  build-iris-x86-sim:
    commands: ["sh", "-c", "cd /usr/src/github.com/pensando/sw; make ws-tools && go install ./asset-build/... && make pull-assets && cd nic && IGNORE_BUILD_PIPELINE=1 make jobd/e2e/naples-sim-image && tar -zvcf /sw/build_iris_sim.tar.gz /usr/src/github.com/pensando/sw/nic/obj/images"]
    owners: ["email:sw-team@pensando.io"]
    artifacts:
      - /sw/build_iris_sim.tar.gz
  build-iris-arm:
    commands: ["sh", "-c", "cd /usr/src/github.com/pensando/sw && ls -al && make ws-tools && go install ./asset-build/... && make pull-assets && V=1 make naples-firmware && make PIPELINE=iris naples-firmware-tarball-iris"]
    owners: ["email:sw-team@pensando.io"]
    artifacts:
      - /sw/naples_fw_all.tgz
  build-iota:
    commands: ["sh", "-c", "cd /usr/src/github.com/pensando/sw && ls -al && make ws-tools && go install ./asset-build/... && make pull-assets && cd iota && make iota-tarball"]
    owners: ["email:sw-team@pensando.io"]
    artifacts:
      - /sw/iota.tgz
  build-apollo-x86:
    commands: ["sh", "-c", "cd /usr/src/github.com/pensando/sw; make ws-tools && go install ./asset-build/... && make pull-assets && cd nic && make PIPELINE=apollo package && find ./build -name '*.o'  | xargs rm && tar -zvcf /sw/build_apollo_x86.tar.gz /usr/src/github.com/pensando/sw/nic/build /usr/src/github.com/pensando/sw/nic/third-party/metaswitch/output/x86_64/debug/lib*"]
    owners: ["email:sw-team@pensando.io"]
    artifacts:
      - /sw/build_apollo_x86.tar.gz
  build-gft-x86:
    commands: ["sh", "-c", "cd /usr/src/github.com/pensando/sw; make ws-tools && go install ./asset-build/... && make pull-assets && cd nic && make PIPELINE=gft package && find ./build -name '*.o'  | xargs rm && tar -zvcf /sw/build_gft_x86.tar.gz /usr/src/github.com/pensando/sw/nic/build"]
    owners: ["email:sw-team@pensando.io"]
    artifacts:
      - /sw/build_gft_x86.tar.gz
  build-artemis-x86:
    commands: ["sh", "-c", "cd /usr/src/github.com/pensando/sw; make ws-tools && go install ./asset-build/... && make pull-assets && cd nic && make PIPELINE=artemis package && find ./build -name '*.o'  | xargs rm && tar -zvcf /sw/build_artemis_x86.tar.gz /usr/src/github.com/pensando/sw/nic/build /usr/src/github.com/pensando/sw/nic/third-party/metaswitch/output/x86_64/debug/lib*"]
    owners: ["email:sw-team@pensando.io"]
    artifacts:
      - /sw/build_artemis_x86.tar.gz
  build-apulu-x86:
    commands: ["sh", "-c", "cd /usr/src/github.com/pensando/sw; make ws-tools && go install ./asset-build/... && make pull-assets && cd nic && make PIPELINE=apulu package && find ./build -name '*.o'  | xargs rm && tar -zvcf /sw/build_apulu_x86.tar.gz /usr/src/github.com/pensando/sw/nic/build /usr/src/github.com/pensando/sw/nic/third-party/metaswitch/output/x86_64/debug/lib*"]
    owners: ["email:sw-team@pensando.io"]
    artifacts:
      - /sw/build_apulu_x86.tar.gz
  build-apulu-arm:
    commands: ["sh", "-c", "cd /usr/src/github.com/pensando/sw && ls -al && make ws-tools && go install ./asset-build/... && make pull-assets && make PIPELINE=apulu naples-firmware && make PIPELINE=apulu naples-firmware-tarball-apulu && make PIPELINE=apulu naples-protos-apulu"]
    owners: ["email:sw-team@pensando.io"]
    artifacts:
      - /sw/naples_fw_all_apulu.tgz
      - /sw/naples-protos-apulu.tgz
  build-athena-x86:
    commands: ["sh", "-c", "cd /usr/src/github.com/pensando/sw; make ws-tools && go install ./asset-build/... && make pull-assets && cd nic && make PIPELINE=athena package && find ./build -name '*.o'  | xargs rm && tar -zvcf /sw/build_athena_x86.tar.gz /usr/src/github.com/pensando/sw/nic/build"]
    owners: ["email:sw-team@pensando.io"]
    artifacts:
      - /sw/build_athena_x86.tar.gz
  build-athena-arm:
    commands: ["sh", "-c", "cd /usr/src/github.com/pensando/sw && ls -al && make ws-tools && go install ./asset-build/... && make pull-assets && make PIPELINE=athena naples-firmware && make PIPELINE=athena naples-firmware-tarball-athena"]
    owners: ["email:sw-team@pensando.io"]
    artifacts:
      - /sw/naples_fw_all_athena.tgz
  build-venice-image:
    commands: ["bash", "-c", "mkdir -p /sw/bin; cd /usr/src/github.com/pensando/sw/test/ci_targets/e2e-venice-image; GIT_VERSION=$(git describe --tags --dirty --always) GIT_COMMIT=$(git rev-list -1 HEAD --abbrev-commit) go run make-venice-image.go"]
    owners: ["email:sw-team@pensando.io"]
    artifacts:
      - /sw/bin/venice.tgz
    repo_dir: "/import/src/github.com/pensando/sw"
    create:
      image: build-150
      count: 1
      resources:
        cpus: 16
        memory: 32
    provision:
      username: vm
      password: vm
      # additional vars to pass to ansible.
      vars:
  build-venice-upgrade-image:
    commands: ["bash", "-c", "mkdir -p /sw/bin/venice-install; cd /usr/src/github.com/pensando/sw/test/ci_targets/e2e-venice-upgrade-image; GIT_UPGRADE_VERSION=iota-upgrade GIT_COMMIT=$(git rev-list -1 HEAD --abbrev-commit) go run make-venice-upgrade-image.go"]
    owners: ["email:sw-team@pensando.io"]
    artifacts:
      - /sw/bin/venice.upg.tgz
      - /sw/bin/venice-install/venice_appl_os.tgz
    repo_dir: "/import/src/github.com/pensando/sw"
    create:
      image: build-150
      count: 1
      resources:
        cpus: 16
        memory: 32
    provision:
      username: vm
      password: vm
      # additional vars to pass to ansible.
      vars:

targets:
  submodules:
    commands: ["sh", "-c", "TOP=/sw ./scripts/check-submodules.sh"]
    owners: ["email:stavros@pensando.io"]
    area:
    sub-area:
    feature:
  yaml-checker:
    commands: ["sh", "-c", "./scripts/check-yaml.py iota"]
    owners: ["email:salvoc@pensando.io"]
    area:
    sub-area:
    feature:
image:
  bind_dir: "/sw"
  work_dir: "/sw"
queue_name: builder
jobs:
  api:
    labels: ["precommit", "2xhourly"]
  asset-build:
    labels: ["2xhourly"]
  docs:
    labels: ["hourly"]
  dol:
    labels: ["precommit", "hourly"]
  iota:
    labels: ["precommit", "hourly"]
  iota/test/venice:
    labels: ["precommit", "2xhourly"]
  iota/test/standalone/sanity/freebsd:
    labels: ["precommit", "2xhourly"]
  iota/test/standalone/sanity/esx:
    labels: ["precommit", "2xhourly"]
  iota/test/standalone/sanity/linux:
    labels: ["precommit", "2xhourly"]
  iota/test/standalone/sanity/apulu-networking:
    labels: ["precommit", "2xhourly"]
#  iota/test/standalone/regression/esx:
#    labels: ["daily"]
  iota/test/standalone/regression/freebsd:
    labels: ["daily"]
  iota/test/standalone/regression/linux:
    labels: ["daily"]
  iota/test/standalone/regression/linkmgr:
    labels: ["daily"]
#  iota/test/venice/regression:
#    labels: ["daily"]
  iota/test/venice/sim:
    labels: ["precommit", "hourly"]
  nic:
    labels: ["precommit", "hourly", "2xhourly"]
  nic/agent:
    labels: ["precommit", "hourly"]
  nic/apollo:
    labels: ["precommit", "hourly"]
  nic/apollo/tools/apulu/customer-docker: 
    labels: ["precommit", "hourly"]
  nic/sdk:
    labels: ["precommit", "hourly", "2xhourly"]
  nic/utils/ftlite:
    labels: ["precommit", "hourly"]
  penctl:
    labels: ["precommit", "hourly"]
  platform:
    labels: ["precommit", "hourly"]
  platform/drivers/linux:
    labels: ["precommit", "hourly"]
  platform/src/app/pciemgrd:
    labels: ["precommit", "hourly"]
  storage/offload:
    labels: ["precommit", "hourly"]
  storage/offload/linux-build-test:
    labels: ["precommit", "hourly"]
  test/ci_targets/e2e:
    labels: ["precommit", "2xhourly"]
  test/verify-build:
    labels: ["precommit"]
  venice:
    labels: ["precommit", "hourly"]
  venice/ui:
    labels: ["hourly"]

dependencies:
  api:
    - reference: test/ci_targets/e2e
    - reference: venice/ui
  dol/apollo:
    - reference: nic/apollo
  dol/apulu:
    - reference: nic/apollo
  dol/artemis:
    - reference: nic/apollo
  dol/test/networking:
    - reference: nic
  events:
    - reference: venice/ui
  iota:
    - reference: iota/test/venice
      exclude_dirs: ["harness", "test/iris", "test/apollo"]
    - reference: iota/test/standalone/sanity/freebsd
      exclude_dirs: ["test/venice", "test/apollo"]
    - reference: iota/test/standalone/sanity/esx
      exclude_dirs: ["test/venice", "test/apollo"]
    - reference: iota/test/standalone/sanity/linux
      exclude_dirs: ["test/venice", "test/apollo"]
    - reference: iota/test/standalone/sanity/apulu-networking
      exclude_dirs: ["test/venice", "test/iris"]
  metrics:
    - reference: venice/ui
  minio:
    - reference: test/verify-build
  nic/apollo:
  #  - reference: iota/test/venice
  #  - reference: iota/test/standalone/sanity/esx
  #  - reference: iota/test/standalone/sanity/freebsd
  #  - reference: iota/test/standalone/sanity/linux
     - reference: iota/test/standalone/sanity/apulu-networking
  nic/agent:
    - reference: iota/test/venice
    - reference: iota/test/standalone/sanity/esx
    - reference: api
    - reference: test/ci_targets/e2e
  nic/asm:
    - reference: iota/test/venice
    - reference: iota/test/standalone/sanity/esx
    - reference: iota/test/standalone/sanity/freebsd
    - reference: iota/test/standalone/sanity/linux
  nic/buildroot:
    - reference: iota/test/venice
    - reference: iota/test/standalone/sanity/esx
    - reference: iota/test/standalone/sanity/freebsd
    - reference: iota/test/standalone/sanity/linux
    - reference: iota/test/standalone/sanity/apulu-networking
  nic/conf:
    - reference: iota/test/standalone/sanity/linux
  nic/conf/apulu:
    - reference: iota/test/standalone/sanity/apulu-networking
  nic/debug_cli:
    - reference: iota/test/standalone/sanity/linux
  nic/delphi:
    - reference: iota/test/standalone/sanity/linux
  nic/fte:
    - reference: iota/test/standalone/sanity/linux
  nic/hal:
    - reference: iota/test/venice
    - reference: iota/test/standalone/sanity/esx
    - reference: iota/test/standalone/sanity/freebsd
    - reference: iota/test/standalone/sanity/linux
  nic/include:
    - reference: iota/test/venice
    - reference: iota/test/standalone/sanity/esx
    - reference: iota/test/standalone/sanity/freebsd
    - reference: iota/test/standalone/sanity/linux
    - reference: iota/test/standalone/sanity/apulu-networking
  nic/linkmgr:
    - reference: iota/test/venice
    - reference: iota/test/standalone/sanity/esx
    - reference: iota/test/standalone/sanity/freebsd
    - reference: iota/test/standalone/sanity/linux
  nic/metaswitch:
    - reference: nic/apollo
    - reference: iota/test/standalone/sanity/apulu-networking
  nic/p4-hlir:
    - reference: iota/test/venice
    - reference: iota/test/standalone/sanity/esx
    - reference: iota/test/standalone/sanity/freebsd
    - reference: iota/test/standalone/sanity/linux
  nic/p4:
    - reference: iota/test/venice
    - reference: iota/test/standalone/sanity/esx
    - reference: iota/test/standalone/sanity/freebsd
    - reference: iota/test/standalone/sanity/linux
  nic/proto:
    - reference: iota/test/standalone/sanity/esx
  nic/sdk:
    - reference: iota/test/standalone/sanity/linux
    - reference: nic/apollo
  nic/sysmgr:
    - reference: iota/test/standalone/sanity/linux
    - reference: iota/test/standalone/sanity/esx    # for testing upgrade support in sysmgr
  nic/third-party:
    - reference: iota/test/venice
    - reference: iota/test/standalone/sanity/esx
    - reference: iota/test/standalone/sanity/freebsd
    - reference: iota/test/standalone/sanity/linux
  nic/tools:
    - reference: iota/test/standalone/sanity/linux
    - reference: iota/test/venice
      exclude_dirs: ["arm_compiler","asic_sw_combined_sanity","client","gcov","hal","jenkins","ncc","package","server", "valgrind"]
  nic/tools/ncc:
    - reference: nic/apollo
  nic/upgrade_manager:
    - reference: iota/test/standalone/sanity/esx
  nic/utils:
    - reference: iota/test/standalone/sanity/linux
  nic/utils/ftl:
    - reference: iota/test/standalone/sanity/esx
  nic/vpp:
    - reference: nic/apollo
    - reference: iota/test/standalone/sanity/apulu-networking
  nic/conf/apollo:
    - reference: nic/apollo
  nic/conf/artemis:
    - reference: nic/apollo
  nic/debug_cli/apollo:
    - reference: nic/apollo
  nic/sdk/platform/cfgspace:
    - reference: platform/src/app/pciemgrd
  nic/sdk/platform/pciehdevices:
    - reference: platform/src/app/pciemgrd
  nic/sdk/platform/pciemgr:
    - reference: platform/src/app/pciemgrd
  nic/sdk/platform/pciemgrd:
    - reference: platform/src/app/pciemgrd
  platform/drivers:
    - reference: iota/test/standalone/sanity/esx
      exclude_dirs: ["freebsd","linux"]
    - reference: iota/test/standalone/sanity/freebsd
      exclude_dirs: ["linux","esxi"]
    - reference: iota/test/standalone/sanity/linux
      exclude_dirs: ["freebsd","esxi"]
    - reference: iota/test/standalone/sanity/apulu-networking
      exclude_dirs: ["freebsd","esxi"]
  platform/src/app/asicerrord:
    - reference: iota/test/standalone/sanity/linux
  platform/src/app/captrace:
    - reference: iota/test/standalone/sanity/linux
  platform/src/app/cpld:
    - reference: iota/test/standalone/sanity/linux
  platform/src/app/diag:
    - reference: iota/test/standalone/sanity/linux
  platform/src/app/fructl:
    - reference: iota/test/standalone/sanity/linux
  platform/src/app/nicmgrd:
    - reference: nic/apollo
    - reference: iota/test/venice
    - reference: iota/test/standalone/sanity/esx
    - reference: iota/test/standalone/sanity/freebsd
    - reference: iota/test/standalone/sanity/linux
  platform/src/lib/nicmgr:
    - reference: nic/apollo
    - reference: iota/test/venice
    - reference: iota/test/standalone/sanity/esx
    - reference: iota/test/standalone/sanity/freebsd
    - reference: iota/test/standalone/sanity/linux
  platform/src/lib/devapi_iris:
    - reference: iota/test/standalone/sanity/linux
  platform/src/app/pciemgrd:
    - reference: iota/test/standalone/sanity/linux
    - reference: nic/apollo
  platform/src/app/pcieutil/src:
    - reference: iota/test/standalone/sanity/linux
  platform/src/app/sysmond:
    - reference: iota/test/standalone/sanity/linux
 # platform:
 #   - reference: nic/apollo
 #     exclude_dirs: ["doc", "drivers"]
 #   - reference: iota/test/venice
 #     exclude_dirs: ["doc", "drivers/linux", "drivers/freebsd"]
 #   - reference: iota/test/standalone/sanity/esx
 #     exclude_dirs: ["doc", "drivers/linux", "drivers/freebsd"]
 #   - reference: iota/test/standalone/sanity/freebsd
 #     exclude_dirs: ["doc", "drivers/linux", "drivers/esxi"]
 #   - reference: iota/test/standalone/sanity/linux
 #     exclude_dirs: ["doc", "drivers/freebsd", "drivers/esxi"]
  platform/src/third-party/app/pciutils:
    - reference: platform/src/app/pciemgrd
  scripts:
    - reference: test/verify-build
  storage/offload:
    - reference: storage/offload/linux-build-test
  venice:
    - reference: api
    - reference: test/ci_targets/e2e
    - reference: iota/test/venice
      exclude_dirs: ["ui"]
  test:
    - reference: api
    - reference: test/ci_targets/e2e
    - reference: platform
  vendor:
    - reference: api
    - reference: venice
    - reference: test/ci_targets/e2e
  penctl:
    - reference: iota/test/standalone/sanity/esx
    - reference: iota/test/standalone/sanity/linux
