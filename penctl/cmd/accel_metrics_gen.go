// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.
/*
 * Package cmd is a auto generated package.
 * Input file: github.com/pensando/sw/nic/proto/nicmgr/accel_metrics.proto
 */

package cmd

import (
	"github.com/spf13/cobra"
)

var accelhwringmetricsVar string

var accelhwringmetricsShowCmd = &cobra.Command{
	Use:   "accelhwringmetrics",
	Short: "Show AccelHwRingMetrics from Naples",
	Long:  "\n---------------------------------\n Show AccelHwRingMetrics From Naples \n---------------------------------\n",
	Run:   accelhwringmetricsShowCmdHandler,
}

func accelhwringmetricsShowCmdHandler(cmd *cobra.Command, args []string) {
	tabularFormat = false
	jsonFormat = true
	if cmd.Flags().Changed("accelhwringmetrics") {
		restGet(revProxyPort, "telemetry/v1/metrics/accelhwringmetrics/default/"+accelhwringmetricsVar+"/")
	} else {
		restGet(revProxyPort, "telemetry/v1/metrics/accelhwringmetrics/")
	}
}

var accelseqqueuemetricsVar string

var accelseqqueuemetricsShowCmd = &cobra.Command{
	Use:   "accelseqqueuemetrics",
	Short: "Show AccelSeqQueueMetrics from Naples",
	Long:  "\n---------------------------------\n Show AccelSeqQueueMetrics From Naples \n---------------------------------\n",
	Run:   accelseqqueuemetricsShowCmdHandler,
}

func accelseqqueuemetricsShowCmdHandler(cmd *cobra.Command, args []string) {
	tabularFormat = false
	jsonFormat = true
	if cmd.Flags().Changed("accelseqqueuemetrics") {
		restGet(revProxyPort, "telemetry/v1/metrics/accelseqqueuemetrics/default/"+accelseqqueuemetricsVar+"/")
	} else {
		restGet(revProxyPort, "telemetry/v1/metrics/accelseqqueuemetrics/")
	}
}

func init() {

	metricsShowCmd.AddCommand(accelhwringmetricsShowCmd)
	accelhwringmetricsShowCmd.Flags().StringVarP(&accelhwringmetricsVar, "name", "n", "", "Name/Key for metrics object")

	metricsShowCmd.AddCommand(accelseqqueuemetricsShowCmd)
	accelseqqueuemetricsShowCmd.Flags().StringVarP(&accelseqqueuemetricsVar, "name", "n", "", "Name/Key for metrics object")

}
