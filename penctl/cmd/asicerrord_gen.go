// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.
/*
 * Package cmd is a auto generated package.
 * Input file: asicerrord.proto
 */

package cmd

import (
	"fmt"

	"github.com/spf13/cobra"
)

var intrintrintintreccmetricsShowCmd = &cobra.Command{

	Use:   "intrintrintintrecc",
	Short: "Show IntrintrintintreccMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show IntrintrintintreccMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  intrintrintintreccmetricsShowCmdHandler,
}

func intrintrintintreccmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/intrintrintintreccmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No intrintrintintrecc object(s) found")
	}
	return nil
}

var ppappa0intbndl0metricsShowCmd = &cobra.Command{

	Use:   "ppappa0intbndl0",
	Short: "Show Ppappa0intbndl0Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa0intbndl0Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa0intbndl0metricsShowCmdHandler,
}

func ppappa0intbndl0metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa0intbndl0metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa0intbndl0 object(s) found")
	}
	return nil
}

var ppappa0intbndl1metricsShowCmd = &cobra.Command{

	Use:   "ppappa0intbndl1",
	Short: "Show Ppappa0intbndl1Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa0intbndl1Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa0intbndl1metricsShowCmdHandler,
}

func ppappa0intbndl1metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa0intbndl1metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa0intbndl1 object(s) found")
	}
	return nil
}

var ppappa0inteccmetricsShowCmd = &cobra.Command{

	Use:   "ppappa0intecc",
	Short: "Show Ppappa0inteccMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa0inteccMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa0inteccmetricsShowCmdHandler,
}

func ppappa0inteccmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa0inteccmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa0intecc object(s) found")
	}
	return nil
}

var ppappa0intfifo1metricsShowCmd = &cobra.Command{

	Use:   "ppappa0intfifo1",
	Short: "Show Ppappa0intfifo1Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa0intfifo1Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa0intfifo1metricsShowCmdHandler,
}

func ppappa0intfifo1metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa0intfifo1metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa0intfifo1 object(s) found")
	}
	return nil
}

var ppappa0intfifo2metricsShowCmd = &cobra.Command{

	Use:   "ppappa0intfifo2",
	Short: "Show Ppappa0intfifo2Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa0intfifo2Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa0intfifo2metricsShowCmdHandler,
}

func ppappa0intfifo2metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa0intfifo2metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa0intfifo2 object(s) found")
	}
	return nil
}

var ppappa0intintfmetricsShowCmd = &cobra.Command{

	Use:   "ppappa0intintf",
	Short: "Show Ppappa0intintfMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa0intintfMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa0intintfmetricsShowCmdHandler,
}

func ppappa0intintfmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa0intintfmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa0intintf object(s) found")
	}
	return nil
}

var ppappa0intpametricsShowCmd = &cobra.Command{

	Use:   "ppappa0intpa",
	Short: "Show Ppappa0intpaMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa0intpaMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa0intpametricsShowCmdHandler,
}

func ppappa0intpametricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa0intpametrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa0intpa object(s) found")
	}
	return nil
}

var ppappa0intpe0metricsShowCmd = &cobra.Command{

	Use:   "ppappa0intpe0",
	Short: "Show Ppappa0intpe0Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa0intpe0Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa0intpe0metricsShowCmdHandler,
}

func ppappa0intpe0metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa0intpe0metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa0intpe0 object(s) found")
	}
	return nil
}

var ppappa0intpe1metricsShowCmd = &cobra.Command{

	Use:   "ppappa0intpe1",
	Short: "Show Ppappa0intpe1Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa0intpe1Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa0intpe1metricsShowCmdHandler,
}

func ppappa0intpe1metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa0intpe1metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa0intpe1 object(s) found")
	}
	return nil
}

var ppappa0intpe2metricsShowCmd = &cobra.Command{

	Use:   "ppappa0intpe2",
	Short: "Show Ppappa0intpe2Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa0intpe2Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa0intpe2metricsShowCmdHandler,
}

func ppappa0intpe2metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa0intpe2metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa0intpe2 object(s) found")
	}
	return nil
}

var ppappa0intpe3metricsShowCmd = &cobra.Command{

	Use:   "ppappa0intpe3",
	Short: "Show Ppappa0intpe3Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa0intpe3Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa0intpe3metricsShowCmdHandler,
}

func ppappa0intpe3metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa0intpe3metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa0intpe3 object(s) found")
	}
	return nil
}

var ppappa0intpe4metricsShowCmd = &cobra.Command{

	Use:   "ppappa0intpe4",
	Short: "Show Ppappa0intpe4Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa0intpe4Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa0intpe4metricsShowCmdHandler,
}

func ppappa0intpe4metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa0intpe4metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa0intpe4 object(s) found")
	}
	return nil
}

var ppappa0intpe5metricsShowCmd = &cobra.Command{

	Use:   "ppappa0intpe5",
	Short: "Show Ppappa0intpe5Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa0intpe5Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa0intpe5metricsShowCmdHandler,
}

func ppappa0intpe5metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa0intpe5metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa0intpe5 object(s) found")
	}
	return nil
}

var ppappa0intpe6metricsShowCmd = &cobra.Command{

	Use:   "ppappa0intpe6",
	Short: "Show Ppappa0intpe6Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa0intpe6Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa0intpe6metricsShowCmdHandler,
}

func ppappa0intpe6metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa0intpe6metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa0intpe6 object(s) found")
	}
	return nil
}

var ppappa0intpe7metricsShowCmd = &cobra.Command{

	Use:   "ppappa0intpe7",
	Short: "Show Ppappa0intpe7Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa0intpe7Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa0intpe7metricsShowCmdHandler,
}

func ppappa0intpe7metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa0intpe7metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa0intpe7 object(s) found")
	}
	return nil
}

var ppappa0intpe8metricsShowCmd = &cobra.Command{

	Use:   "ppappa0intpe8",
	Short: "Show Ppappa0intpe8Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa0intpe8Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa0intpe8metricsShowCmdHandler,
}

func ppappa0intpe8metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa0intpe8metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa0intpe8 object(s) found")
	}
	return nil
}

var ppappa0intpe9metricsShowCmd = &cobra.Command{

	Use:   "ppappa0intpe9",
	Short: "Show Ppappa0intpe9Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa0intpe9Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa0intpe9metricsShowCmdHandler,
}

func ppappa0intpe9metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa0intpe9metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa0intpe9 object(s) found")
	}
	return nil
}

var ppappa0intswphvmemmetricsShowCmd = &cobra.Command{

	Use:   "ppappa0intswphvmem",
	Short: "Show Ppappa0intswphvmemMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa0intswphvmemMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa0intswphvmemmetricsShowCmdHandler,
}

func ppappa0intswphvmemmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa0intswphvmemmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa0intswphvmem object(s) found")
	}
	return nil
}

var ppappa1intbndl0metricsShowCmd = &cobra.Command{

	Use:   "ppappa1intbndl0",
	Short: "Show Ppappa1intbndl0Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa1intbndl0Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa1intbndl0metricsShowCmdHandler,
}

func ppappa1intbndl0metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa1intbndl0metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa1intbndl0 object(s) found")
	}
	return nil
}

var ppappa1intbndl1metricsShowCmd = &cobra.Command{

	Use:   "ppappa1intbndl1",
	Short: "Show Ppappa1intbndl1Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa1intbndl1Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa1intbndl1metricsShowCmdHandler,
}

func ppappa1intbndl1metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa1intbndl1metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa1intbndl1 object(s) found")
	}
	return nil
}

var ppappa1inteccmetricsShowCmd = &cobra.Command{

	Use:   "ppappa1intecc",
	Short: "Show Ppappa1inteccMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa1inteccMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa1inteccmetricsShowCmdHandler,
}

func ppappa1inteccmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa1inteccmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa1intecc object(s) found")
	}
	return nil
}

var ppappa1intfifo1metricsShowCmd = &cobra.Command{

	Use:   "ppappa1intfifo1",
	Short: "Show Ppappa1intfifo1Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa1intfifo1Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa1intfifo1metricsShowCmdHandler,
}

func ppappa1intfifo1metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa1intfifo1metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa1intfifo1 object(s) found")
	}
	return nil
}

var ppappa1intfifo2metricsShowCmd = &cobra.Command{

	Use:   "ppappa1intfifo2",
	Short: "Show Ppappa1intfifo2Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa1intfifo2Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa1intfifo2metricsShowCmdHandler,
}

func ppappa1intfifo2metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa1intfifo2metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa1intfifo2 object(s) found")
	}
	return nil
}

var ppappa1intintfmetricsShowCmd = &cobra.Command{

	Use:   "ppappa1intintf",
	Short: "Show Ppappa1intintfMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa1intintfMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa1intintfmetricsShowCmdHandler,
}

func ppappa1intintfmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa1intintfmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa1intintf object(s) found")
	}
	return nil
}

var ppappa1intpametricsShowCmd = &cobra.Command{

	Use:   "ppappa1intpa",
	Short: "Show Ppappa1intpaMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa1intpaMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa1intpametricsShowCmdHandler,
}

func ppappa1intpametricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa1intpametrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa1intpa object(s) found")
	}
	return nil
}

var ppappa1intpe0metricsShowCmd = &cobra.Command{

	Use:   "ppappa1intpe0",
	Short: "Show Ppappa1intpe0Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa1intpe0Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa1intpe0metricsShowCmdHandler,
}

func ppappa1intpe0metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa1intpe0metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa1intpe0 object(s) found")
	}
	return nil
}

var ppappa1intpe1metricsShowCmd = &cobra.Command{

	Use:   "ppappa1intpe1",
	Short: "Show Ppappa1intpe1Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa1intpe1Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa1intpe1metricsShowCmdHandler,
}

func ppappa1intpe1metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa1intpe1metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa1intpe1 object(s) found")
	}
	return nil
}

var ppappa1intpe2metricsShowCmd = &cobra.Command{

	Use:   "ppappa1intpe2",
	Short: "Show Ppappa1intpe2Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa1intpe2Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa1intpe2metricsShowCmdHandler,
}

func ppappa1intpe2metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa1intpe2metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa1intpe2 object(s) found")
	}
	return nil
}

var ppappa1intpe3metricsShowCmd = &cobra.Command{

	Use:   "ppappa1intpe3",
	Short: "Show Ppappa1intpe3Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa1intpe3Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa1intpe3metricsShowCmdHandler,
}

func ppappa1intpe3metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa1intpe3metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa1intpe3 object(s) found")
	}
	return nil
}

var ppappa1intpe4metricsShowCmd = &cobra.Command{

	Use:   "ppappa1intpe4",
	Short: "Show Ppappa1intpe4Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa1intpe4Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa1intpe4metricsShowCmdHandler,
}

func ppappa1intpe4metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa1intpe4metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa1intpe4 object(s) found")
	}
	return nil
}

var ppappa1intpe5metricsShowCmd = &cobra.Command{

	Use:   "ppappa1intpe5",
	Short: "Show Ppappa1intpe5Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa1intpe5Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa1intpe5metricsShowCmdHandler,
}

func ppappa1intpe5metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa1intpe5metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa1intpe5 object(s) found")
	}
	return nil
}

var ppappa1intpe6metricsShowCmd = &cobra.Command{

	Use:   "ppappa1intpe6",
	Short: "Show Ppappa1intpe6Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa1intpe6Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa1intpe6metricsShowCmdHandler,
}

func ppappa1intpe6metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa1intpe6metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa1intpe6 object(s) found")
	}
	return nil
}

var ppappa1intpe7metricsShowCmd = &cobra.Command{

	Use:   "ppappa1intpe7",
	Short: "Show Ppappa1intpe7Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa1intpe7Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa1intpe7metricsShowCmdHandler,
}

func ppappa1intpe7metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa1intpe7metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa1intpe7 object(s) found")
	}
	return nil
}

var ppappa1intpe8metricsShowCmd = &cobra.Command{

	Use:   "ppappa1intpe8",
	Short: "Show Ppappa1intpe8Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa1intpe8Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa1intpe8metricsShowCmdHandler,
}

func ppappa1intpe8metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa1intpe8metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa1intpe8 object(s) found")
	}
	return nil
}

var ppappa1intpe9metricsShowCmd = &cobra.Command{

	Use:   "ppappa1intpe9",
	Short: "Show Ppappa1intpe9Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa1intpe9Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa1intpe9metricsShowCmdHandler,
}

func ppappa1intpe9metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa1intpe9metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa1intpe9 object(s) found")
	}
	return nil
}

var ppappa1intswphvmemmetricsShowCmd = &cobra.Command{

	Use:   "ppappa1intswphvmem",
	Short: "Show Ppappa1intswphvmemMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppappa1intswphvmemMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppappa1intswphvmemmetricsShowCmdHandler,
}

func ppappa1intswphvmemmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppappa1intswphvmemmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppappa1intswphvmem object(s) found")
	}
	return nil
}

var ppppintppmetricsShowCmd = &cobra.Command{

	Use:   "ppppintpp",
	Short: "Show PpppintppMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show PpppintppMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppppintppmetricsShowCmdHandler,
}

func ppppintppmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppppintppmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppppintpp object(s) found")
	}
	return nil
}

var ppppportc0intceccmetricsShowCmd = &cobra.Command{

	Use:   "ppppportc0intcecc",
	Short: "Show Ppppportc0intceccMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppppportc0intceccMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppppportc0intceccmetricsShowCmdHandler,
}

func ppppportc0intceccmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppppportc0intceccmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppppportc0intcecc object(s) found")
	}
	return nil
}

var ppppportc0intcmacmetricsShowCmd = &cobra.Command{

	Use:   "ppppportc0intcmac",
	Short: "Show Ppppportc0intcmacMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppppportc0intcmacMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppppportc0intcmacmetricsShowCmdHandler,
}

func ppppportc0intcmacmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppppportc0intcmacmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppppportc0intcmac object(s) found")
	}
	return nil
}

var ppppportc1intceccmetricsShowCmd = &cobra.Command{

	Use:   "ppppportc1intcecc",
	Short: "Show Ppppportc1intceccMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppppportc1intceccMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppppportc1intceccmetricsShowCmdHandler,
}

func ppppportc1intceccmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppppportc1intceccmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppppportc1intcecc object(s) found")
	}
	return nil
}

var ppppportc1intcmacmetricsShowCmd = &cobra.Command{

	Use:   "ppppportc1intcmac",
	Short: "Show Ppppportc1intcmacMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppppportc1intcmacMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppppportc1intcmacmetricsShowCmdHandler,
}

func ppppportc1intcmacmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppppportc1intcmacmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppppportc1intcmac object(s) found")
	}
	return nil
}

var ppppportc2intceccmetricsShowCmd = &cobra.Command{

	Use:   "ppppportc2intcecc",
	Short: "Show Ppppportc2intceccMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppppportc2intceccMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppppportc2intceccmetricsShowCmdHandler,
}

func ppppportc2intceccmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppppportc2intceccmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppppportc2intcecc object(s) found")
	}
	return nil
}

var ppppportc2intcmacmetricsShowCmd = &cobra.Command{

	Use:   "ppppportc2intcmac",
	Short: "Show Ppppportc2intcmacMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppppportc2intcmacMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppppportc2intcmacmetricsShowCmdHandler,
}

func ppppportc2intcmacmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppppportc2intcmacmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppppportc2intcmac object(s) found")
	}
	return nil
}

var ppppportc3intceccmetricsShowCmd = &cobra.Command{

	Use:   "ppppportc3intcecc",
	Short: "Show Ppppportc3intceccMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppppportc3intceccMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppppportc3intceccmetricsShowCmdHandler,
}

func ppppportc3intceccmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppppportc3intceccmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppppportc3intcecc object(s) found")
	}
	return nil
}

var ppppportc3intcmacmetricsShowCmd = &cobra.Command{

	Use:   "ppppportc3intcmac",
	Short: "Show Ppppportc3intcmacMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppppportc3intcmacMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppppportc3intcmacmetricsShowCmdHandler,
}

func ppppportc3intcmacmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppppportc3intcmacmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppppportc3intcmac object(s) found")
	}
	return nil
}

var ppppportp0intpeccmetricsShowCmd = &cobra.Command{

	Use:   "ppppportp0intpecc",
	Short: "Show Ppppportp0intpeccMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppppportp0intpeccMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppppportp0intpeccmetricsShowCmdHandler,
}

func ppppportp0intpeccmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppppportp0intpeccmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppppportp0intpecc object(s) found")
	}
	return nil
}

var ppppportp1intpeccmetricsShowCmd = &cobra.Command{

	Use:   "ppppportp1intpecc",
	Short: "Show Ppppportp1intpeccMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppppportp1intpeccMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppppportp1intpeccmetricsShowCmdHandler,
}

func ppppportp1intpeccmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppppportp1intpeccmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppppportp1intpecc object(s) found")
	}
	return nil
}

var ppppportp2intpeccmetricsShowCmd = &cobra.Command{

	Use:   "ppppportp2intpecc",
	Short: "Show Ppppportp2intpeccMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppppportp2intpeccMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppppportp2intpeccmetricsShowCmdHandler,
}

func ppppportp2intpeccmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppppportp2intpeccmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppppportp2intpecc object(s) found")
	}
	return nil
}

var ppppportp3intpeccmetricsShowCmd = &cobra.Command{

	Use:   "ppppportp3intpecc",
	Short: "Show Ppppportp3intpeccMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppppportp3intpeccMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppppportp3intpeccmetricsShowCmdHandler,
}

func ppppportp3intpeccmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppppportp3intpeccmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppppportp3intpecc object(s) found")
	}
	return nil
}

var ppppportp4intpeccmetricsShowCmd = &cobra.Command{

	Use:   "ppppportp4intpecc",
	Short: "Show Ppppportp4intpeccMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppppportp4intpeccMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppppportp4intpeccmetricsShowCmdHandler,
}

func ppppportp4intpeccmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppppportp4intpeccmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppppportp4intpecc object(s) found")
	}
	return nil
}

var ppppportp5intpeccmetricsShowCmd = &cobra.Command{

	Use:   "ppppportp5intpecc",
	Short: "Show Ppppportp5intpeccMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppppportp5intpeccMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppppportp5intpeccmetricsShowCmdHandler,
}

func ppppportp5intpeccmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppppportp5intpeccmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppppportp5intpecc object(s) found")
	}
	return nil
}

var ppppportp6intpeccmetricsShowCmd = &cobra.Command{

	Use:   "ppppportp6intpecc",
	Short: "Show Ppppportp6intpeccMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppppportp6intpeccMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppppportp6intpeccmetricsShowCmdHandler,
}

func ppppportp6intpeccmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppppportp6intpeccmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppppportp6intpecc object(s) found")
	}
	return nil
}

var ppppportp7intpeccmetricsShowCmd = &cobra.Command{

	Use:   "ppppportp7intpecc",
	Short: "Show Ppppportp7intpeccMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Ppppportp7intpeccMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  ppppportp7intpeccmetricsShowCmdHandler,
}

func ppppportp7intpeccmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/ppppportp7intpeccmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No ppppportp7intpecc object(s) found")
	}
	return nil
}

var prprintreg1metricsShowCmd = &cobra.Command{

	Use:   "prprintreg1",
	Short: "Show Prprintreg1Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Prprintreg1Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  prprintreg1metricsShowCmdHandler,
}

func prprintreg1metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/prprintreg1metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No prprintreg1 object(s) found")
	}
	return nil
}

var prprprdinteccmetricsShowCmd = &cobra.Command{

	Use:   "prprprdintecc",
	Short: "Show PrprprdinteccMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show PrprprdinteccMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  prprprdinteccmetricsShowCmdHandler,
}

func prprprdinteccmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/prprprdinteccmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No prprprdintecc object(s) found")
	}
	return nil
}

var prprprdintfifometricsShowCmd = &cobra.Command{

	Use:   "prprprdintfifo",
	Short: "Show PrprprdintfifoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show PrprprdintfifoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  prprprdintfifometricsShowCmdHandler,
}

func prprprdintfifometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/prprprdintfifometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No prprprdintfifo object(s) found")
	}
	return nil
}

var prprprdintgrp1metricsShowCmd = &cobra.Command{

	Use:   "prprprdintgrp1",
	Short: "Show Prprprdintgrp1Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Prprprdintgrp1Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  prprprdintgrp1metricsShowCmdHandler,
}

func prprprdintgrp1metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/prprprdintgrp1metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No prprprdintgrp1 object(s) found")
	}
	return nil
}

var prprprdintgrp2metricsShowCmd = &cobra.Command{

	Use:   "prprprdintgrp2",
	Short: "Show Prprprdintgrp2Metrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Prprprdintgrp2Metrics From Distributed Service Card \n---------------------------------\n",
	RunE:  prprprdintgrp2metricsShowCmdHandler,
}

func prprprdintgrp2metricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/prprprdintgrp2metrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No prprprdintgrp2 object(s) found")
	}
	return nil
}

var prprprdintintfmetricsShowCmd = &cobra.Command{

	Use:   "prprprdintintf",
	Short: "Show PrprprdintintfMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show PrprprdintintfMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  prprprdintintfmetricsShowCmdHandler,
}

func prprprdintintfmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/prprprdintintfmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No prprprdintintf object(s) found")
	}
	return nil
}

var prprpspinterrmetricsShowCmd = &cobra.Command{

	Use:   "prprpspinterr",
	Short: "Show PrprpspinterrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show PrprpspinterrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  prprpspinterrmetricsShowCmdHandler,
}

func prprpspinterrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/prprpspinterrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No prprpspinterr object(s) found")
	}
	return nil
}

var prprpspintfatalmetricsShowCmd = &cobra.Command{

	Use:   "prprpspintfatal",
	Short: "Show PrprpspintfatalMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show PrprpspintfatalMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  prprpspintfatalmetricsShowCmdHandler,
}

func prprpspintfatalmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/prprpspintfatalmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No prprpspintfatal object(s) found")
	}
	return nil
}

var prprpspintinfometricsShowCmd = &cobra.Command{

	Use:   "prprpspintinfo",
	Short: "Show PrprpspintinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show PrprpspintinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  prprpspintinfometricsShowCmdHandler,
}

func prprpspintinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/prprpspintinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No prprpspintinfo object(s) found")
	}
	return nil
}

var prprpspintlifqstatemapmetricsShowCmd = &cobra.Command{

	Use:   "prprpspintlifqstatemap",
	Short: "Show PrprpspintlifqstatemapMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show PrprpspintlifqstatemapMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  prprpspintlifqstatemapmetricsShowCmdHandler,
}

func prprpspintlifqstatemapmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/prprpspintlifqstatemapmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No prprpspintlifqstatemap object(s) found")
	}
	return nil
}

var prprpspintswphvmemmetricsShowCmd = &cobra.Command{

	Use:   "prprpspintswphvmem",
	Short: "Show PrprpspintswphvmemMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show PrprpspintswphvmemMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  prprpspintswphvmemmetricsShowCmdHandler,
}

func prprpspintswphvmemmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/prprpspintswphvmemmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No prprpspintswphvmem object(s) found")
	}
	return nil
}

var pxbpxbinterrmetricsShowCmd = &cobra.Command{

	Use:   "pxbpxbinterr",
	Short: "Show PxbpxbinterrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show PxbpxbinterrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  pxbpxbinterrmetricsShowCmdHandler,
}

func pxbpxbinterrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/pxbpxbinterrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No pxbpxbinterr object(s) found")
	}
	return nil
}

var pxbpxbintitreccmetricsShowCmd = &cobra.Command{

	Use:   "pxbpxbintitrecc",
	Short: "Show PxbpxbintitreccMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show PxbpxbintitreccMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  pxbpxbintitreccmetricsShowCmdHandler,
}

func pxbpxbintitreccmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/pxbpxbintitreccmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No pxbpxbintitrecc object(s) found")
	}
	return nil
}

var pxbpxbinttgteccmetricsShowCmd = &cobra.Command{

	Use:   "pxbpxbinttgtecc",
	Short: "Show PxbpxbinttgteccMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show PxbpxbinttgteccMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  pxbpxbinttgteccmetricsShowCmdHandler,
}

func pxbpxbinttgteccmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/pxbpxbinttgteccmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No pxbpxbinttgtecc object(s) found")
	}
	return nil
}

var rpcpicsintbadaddrmetricsShowCmd = &cobra.Command{

	Use:   "rpcpicsintbadaddr",
	Short: "Show RpcpicsintbadaddrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show RpcpicsintbadaddrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  rpcpicsintbadaddrmetricsShowCmdHandler,
}

func rpcpicsintbadaddrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/rpcpicsintbadaddrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No rpcpicsintbadaddr object(s) found")
	}
	return nil
}

var rpcpicsintbgmetricsShowCmd = &cobra.Command{

	Use:   "rpcpicsintbg",
	Short: "Show RpcpicsintbgMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show RpcpicsintbgMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  rpcpicsintbgmetricsShowCmdHandler,
}

func rpcpicsintbgmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/rpcpicsintbgmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No rpcpicsintbg object(s) found")
	}
	return nil
}

var rpcpicsintpicsmetricsShowCmd = &cobra.Command{

	Use:   "rpcpicsintpics",
	Short: "Show RpcpicsintpicsMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show RpcpicsintpicsMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  rpcpicsintpicsmetricsShowCmdHandler,
}

func rpcpicsintpicsmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/rpcpicsintpicsmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No rpcpicsintpics object(s) found")
	}
	return nil
}

var rpcpicspiccintpiccmetricsShowCmd = &cobra.Command{

	Use:   "rpcpicspiccintpicc",
	Short: "Show RpcpicspiccintpiccMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show RpcpicspiccintpiccMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  rpcpicspiccintpiccmetricsShowCmdHandler,
}

func rpcpicspiccintpiccmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/rpcpicspiccintpiccmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No rpcpicspiccintpicc object(s) found")
	}
	return nil
}

var sgempu0interrmetricsShowCmd = &cobra.Command{

	Use:   "sgempu0interr",
	Short: "Show Sgempu0interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgempu0interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgempu0interrmetricsShowCmdHandler,
}

func sgempu0interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgempu0interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgempu0interr object(s) found")
	}
	return nil
}

var sgempu0intinfometricsShowCmd = &cobra.Command{

	Use:   "sgempu0intinfo",
	Short: "Show Sgempu0intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgempu0intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgempu0intinfometricsShowCmdHandler,
}

func sgempu0intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgempu0intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgempu0intinfo object(s) found")
	}
	return nil
}

var sgempu1interrmetricsShowCmd = &cobra.Command{

	Use:   "sgempu1interr",
	Short: "Show Sgempu1interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgempu1interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgempu1interrmetricsShowCmdHandler,
}

func sgempu1interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgempu1interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgempu1interr object(s) found")
	}
	return nil
}

var sgempu1intinfometricsShowCmd = &cobra.Command{

	Use:   "sgempu1intinfo",
	Short: "Show Sgempu1intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgempu1intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgempu1intinfometricsShowCmdHandler,
}

func sgempu1intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgempu1intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgempu1intinfo object(s) found")
	}
	return nil
}

var sgempu2interrmetricsShowCmd = &cobra.Command{

	Use:   "sgempu2interr",
	Short: "Show Sgempu2interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgempu2interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgempu2interrmetricsShowCmdHandler,
}

func sgempu2interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgempu2interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgempu2interr object(s) found")
	}
	return nil
}

var sgempu2intinfometricsShowCmd = &cobra.Command{

	Use:   "sgempu2intinfo",
	Short: "Show Sgempu2intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgempu2intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgempu2intinfometricsShowCmdHandler,
}

func sgempu2intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgempu2intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgempu2intinfo object(s) found")
	}
	return nil
}

var sgempu3interrmetricsShowCmd = &cobra.Command{

	Use:   "sgempu3interr",
	Short: "Show Sgempu3interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgempu3interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgempu3interrmetricsShowCmdHandler,
}

func sgempu3interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgempu3interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgempu3interr object(s) found")
	}
	return nil
}

var sgempu3intinfometricsShowCmd = &cobra.Command{

	Use:   "sgempu3intinfo",
	Short: "Show Sgempu3intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgempu3intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgempu3intinfometricsShowCmdHandler,
}

func sgempu3intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgempu3intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgempu3intinfo object(s) found")
	}
	return nil
}

var sgempu4interrmetricsShowCmd = &cobra.Command{

	Use:   "sgempu4interr",
	Short: "Show Sgempu4interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgempu4interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgempu4interrmetricsShowCmdHandler,
}

func sgempu4interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgempu4interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgempu4interr object(s) found")
	}
	return nil
}

var sgempu4intinfometricsShowCmd = &cobra.Command{

	Use:   "sgempu4intinfo",
	Short: "Show Sgempu4intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgempu4intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgempu4intinfometricsShowCmdHandler,
}

func sgempu4intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgempu4intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgempu4intinfo object(s) found")
	}
	return nil
}

var sgempu5interrmetricsShowCmd = &cobra.Command{

	Use:   "sgempu5interr",
	Short: "Show Sgempu5interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgempu5interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgempu5interrmetricsShowCmdHandler,
}

func sgempu5interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgempu5interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgempu5interr object(s) found")
	}
	return nil
}

var sgempu5intinfometricsShowCmd = &cobra.Command{

	Use:   "sgempu5intinfo",
	Short: "Show Sgempu5intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgempu5intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgempu5intinfometricsShowCmdHandler,
}

func sgempu5intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgempu5intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgempu5intinfo object(s) found")
	}
	return nil
}

var sgete0interrmetricsShowCmd = &cobra.Command{

	Use:   "sgete0interr",
	Short: "Show Sgete0interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgete0interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgete0interrmetricsShowCmdHandler,
}

func sgete0interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgete0interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgete0interr object(s) found")
	}
	return nil
}

var sgete0intinfometricsShowCmd = &cobra.Command{

	Use:   "sgete0intinfo",
	Short: "Show Sgete0intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgete0intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgete0intinfometricsShowCmdHandler,
}

func sgete0intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgete0intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgete0intinfo object(s) found")
	}
	return nil
}

var sgete1interrmetricsShowCmd = &cobra.Command{

	Use:   "sgete1interr",
	Short: "Show Sgete1interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgete1interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgete1interrmetricsShowCmdHandler,
}

func sgete1interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgete1interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgete1interr object(s) found")
	}
	return nil
}

var sgete1intinfometricsShowCmd = &cobra.Command{

	Use:   "sgete1intinfo",
	Short: "Show Sgete1intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgete1intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgete1intinfometricsShowCmdHandler,
}

func sgete1intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgete1intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgete1intinfo object(s) found")
	}
	return nil
}

var sgete2interrmetricsShowCmd = &cobra.Command{

	Use:   "sgete2interr",
	Short: "Show Sgete2interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgete2interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgete2interrmetricsShowCmdHandler,
}

func sgete2interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgete2interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgete2interr object(s) found")
	}
	return nil
}

var sgete2intinfometricsShowCmd = &cobra.Command{

	Use:   "sgete2intinfo",
	Short: "Show Sgete2intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgete2intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgete2intinfometricsShowCmdHandler,
}

func sgete2intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgete2intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgete2intinfo object(s) found")
	}
	return nil
}

var sgete3interrmetricsShowCmd = &cobra.Command{

	Use:   "sgete3interr",
	Short: "Show Sgete3interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgete3interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgete3interrmetricsShowCmdHandler,
}

func sgete3interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgete3interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgete3interr object(s) found")
	}
	return nil
}

var sgete3intinfometricsShowCmd = &cobra.Command{

	Use:   "sgete3intinfo",
	Short: "Show Sgete3intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgete3intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgete3intinfometricsShowCmdHandler,
}

func sgete3intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgete3intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgete3intinfo object(s) found")
	}
	return nil
}

var sgete4interrmetricsShowCmd = &cobra.Command{

	Use:   "sgete4interr",
	Short: "Show Sgete4interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgete4interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgete4interrmetricsShowCmdHandler,
}

func sgete4interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgete4interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgete4interr object(s) found")
	}
	return nil
}

var sgete4intinfometricsShowCmd = &cobra.Command{

	Use:   "sgete4intinfo",
	Short: "Show Sgete4intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgete4intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgete4intinfometricsShowCmdHandler,
}

func sgete4intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgete4intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgete4intinfo object(s) found")
	}
	return nil
}

var sgete5interrmetricsShowCmd = &cobra.Command{

	Use:   "sgete5interr",
	Short: "Show Sgete5interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgete5interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgete5interrmetricsShowCmdHandler,
}

func sgete5interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgete5interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgete5interr object(s) found")
	}
	return nil
}

var sgete5intinfometricsShowCmd = &cobra.Command{

	Use:   "sgete5intinfo",
	Short: "Show Sgete5intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgete5intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgete5intinfometricsShowCmdHandler,
}

func sgete5intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgete5intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgete5intinfo object(s) found")
	}
	return nil
}

var sgimpu0interrmetricsShowCmd = &cobra.Command{

	Use:   "sgimpu0interr",
	Short: "Show Sgimpu0interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgimpu0interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgimpu0interrmetricsShowCmdHandler,
}

func sgimpu0interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgimpu0interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgimpu0interr object(s) found")
	}
	return nil
}

var sgimpu0intinfometricsShowCmd = &cobra.Command{

	Use:   "sgimpu0intinfo",
	Short: "Show Sgimpu0intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgimpu0intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgimpu0intinfometricsShowCmdHandler,
}

func sgimpu0intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgimpu0intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgimpu0intinfo object(s) found")
	}
	return nil
}

var sgimpu1interrmetricsShowCmd = &cobra.Command{

	Use:   "sgimpu1interr",
	Short: "Show Sgimpu1interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgimpu1interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgimpu1interrmetricsShowCmdHandler,
}

func sgimpu1interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgimpu1interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgimpu1interr object(s) found")
	}
	return nil
}

var sgimpu1intinfometricsShowCmd = &cobra.Command{

	Use:   "sgimpu1intinfo",
	Short: "Show Sgimpu1intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgimpu1intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgimpu1intinfometricsShowCmdHandler,
}

func sgimpu1intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgimpu1intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgimpu1intinfo object(s) found")
	}
	return nil
}

var sgimpu2interrmetricsShowCmd = &cobra.Command{

	Use:   "sgimpu2interr",
	Short: "Show Sgimpu2interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgimpu2interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgimpu2interrmetricsShowCmdHandler,
}

func sgimpu2interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgimpu2interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgimpu2interr object(s) found")
	}
	return nil
}

var sgimpu2intinfometricsShowCmd = &cobra.Command{

	Use:   "sgimpu2intinfo",
	Short: "Show Sgimpu2intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgimpu2intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgimpu2intinfometricsShowCmdHandler,
}

func sgimpu2intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgimpu2intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgimpu2intinfo object(s) found")
	}
	return nil
}

var sgimpu3interrmetricsShowCmd = &cobra.Command{

	Use:   "sgimpu3interr",
	Short: "Show Sgimpu3interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgimpu3interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgimpu3interrmetricsShowCmdHandler,
}

func sgimpu3interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgimpu3interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgimpu3interr object(s) found")
	}
	return nil
}

var sgimpu3intinfometricsShowCmd = &cobra.Command{

	Use:   "sgimpu3intinfo",
	Short: "Show Sgimpu3intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgimpu3intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgimpu3intinfometricsShowCmdHandler,
}

func sgimpu3intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgimpu3intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgimpu3intinfo object(s) found")
	}
	return nil
}

var sgimpu4interrmetricsShowCmd = &cobra.Command{

	Use:   "sgimpu4interr",
	Short: "Show Sgimpu4interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgimpu4interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgimpu4interrmetricsShowCmdHandler,
}

func sgimpu4interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgimpu4interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgimpu4interr object(s) found")
	}
	return nil
}

var sgimpu4intinfometricsShowCmd = &cobra.Command{

	Use:   "sgimpu4intinfo",
	Short: "Show Sgimpu4intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgimpu4intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgimpu4intinfometricsShowCmdHandler,
}

func sgimpu4intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgimpu4intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgimpu4intinfo object(s) found")
	}
	return nil
}

var sgimpu5interrmetricsShowCmd = &cobra.Command{

	Use:   "sgimpu5interr",
	Short: "Show Sgimpu5interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgimpu5interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgimpu5interrmetricsShowCmdHandler,
}

func sgimpu5interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgimpu5interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgimpu5interr object(s) found")
	}
	return nil
}

var sgimpu5intinfometricsShowCmd = &cobra.Command{

	Use:   "sgimpu5intinfo",
	Short: "Show Sgimpu5intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgimpu5intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgimpu5intinfometricsShowCmdHandler,
}

func sgimpu5intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgimpu5intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgimpu5intinfo object(s) found")
	}
	return nil
}

var sgite0interrmetricsShowCmd = &cobra.Command{

	Use:   "sgite0interr",
	Short: "Show Sgite0interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgite0interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgite0interrmetricsShowCmdHandler,
}

func sgite0interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgite0interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgite0interr object(s) found")
	}
	return nil
}

var sgite0intinfometricsShowCmd = &cobra.Command{

	Use:   "sgite0intinfo",
	Short: "Show Sgite0intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgite0intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgite0intinfometricsShowCmdHandler,
}

func sgite0intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgite0intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgite0intinfo object(s) found")
	}
	return nil
}

var sgite1interrmetricsShowCmd = &cobra.Command{

	Use:   "sgite1interr",
	Short: "Show Sgite1interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgite1interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgite1interrmetricsShowCmdHandler,
}

func sgite1interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgite1interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgite1interr object(s) found")
	}
	return nil
}

var sgite1intinfometricsShowCmd = &cobra.Command{

	Use:   "sgite1intinfo",
	Short: "Show Sgite1intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgite1intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgite1intinfometricsShowCmdHandler,
}

func sgite1intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgite1intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgite1intinfo object(s) found")
	}
	return nil
}

var sgite2interrmetricsShowCmd = &cobra.Command{

	Use:   "sgite2interr",
	Short: "Show Sgite2interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgite2interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgite2interrmetricsShowCmdHandler,
}

func sgite2interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgite2interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgite2interr object(s) found")
	}
	return nil
}

var sgite2intinfometricsShowCmd = &cobra.Command{

	Use:   "sgite2intinfo",
	Short: "Show Sgite2intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgite2intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgite2intinfometricsShowCmdHandler,
}

func sgite2intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgite2intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgite2intinfo object(s) found")
	}
	return nil
}

var sgite3interrmetricsShowCmd = &cobra.Command{

	Use:   "sgite3interr",
	Short: "Show Sgite3interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgite3interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgite3interrmetricsShowCmdHandler,
}

func sgite3interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgite3interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgite3interr object(s) found")
	}
	return nil
}

var sgite3intinfometricsShowCmd = &cobra.Command{

	Use:   "sgite3intinfo",
	Short: "Show Sgite3intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgite3intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgite3intinfometricsShowCmdHandler,
}

func sgite3intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgite3intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgite3intinfo object(s) found")
	}
	return nil
}

var sgite4interrmetricsShowCmd = &cobra.Command{

	Use:   "sgite4interr",
	Short: "Show Sgite4interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgite4interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgite4interrmetricsShowCmdHandler,
}

func sgite4interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgite4interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgite4interr object(s) found")
	}
	return nil
}

var sgite4intinfometricsShowCmd = &cobra.Command{

	Use:   "sgite4intinfo",
	Short: "Show Sgite4intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgite4intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgite4intinfometricsShowCmdHandler,
}

func sgite4intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgite4intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgite4intinfo object(s) found")
	}
	return nil
}

var sgite5interrmetricsShowCmd = &cobra.Command{

	Use:   "sgite5interr",
	Short: "Show Sgite5interrMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgite5interrMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgite5interrmetricsShowCmdHandler,
}

func sgite5interrmetricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgite5interrmetrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgite5interr object(s) found")
	}
	return nil
}

var sgite5intinfometricsShowCmd = &cobra.Command{

	Use:   "sgite5intinfo",
	Short: "Show Sgite5intinfoMetrics from Distributed Service Card",
	Long:  "\n---------------------------------\n Show Sgite5intinfoMetrics From Distributed Service Card \n---------------------------------\n",
	RunE:  sgite5intinfometricsShowCmdHandler,
}

func sgite5intinfometricsShowCmdHandler(cmd *cobra.Command, args []string) error {
	jsonFormat = true
	bodyBytes, err := restGet("telemetry/v1/metrics/sgite5intinfometrics/")
	if err != nil {
		fmt.Println(err)
		return err
	}
	if bodyBytes == nil {
		fmt.Println("No sgite5intinfo object(s) found")
	}
	return nil
}

func init() {

	metricsShowCmd.AddCommand(intrintrintintreccmetricsShowCmd)

	metricsShowCmd.AddCommand(ppappa0intbndl0metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa0intbndl1metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa0inteccmetricsShowCmd)

	metricsShowCmd.AddCommand(ppappa0intfifo1metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa0intfifo2metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa0intintfmetricsShowCmd)

	metricsShowCmd.AddCommand(ppappa0intpametricsShowCmd)

	metricsShowCmd.AddCommand(ppappa0intpe0metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa0intpe1metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa0intpe2metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa0intpe3metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa0intpe4metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa0intpe5metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa0intpe6metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa0intpe7metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa0intpe8metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa0intpe9metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa0intswphvmemmetricsShowCmd)

	metricsShowCmd.AddCommand(ppappa1intbndl0metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa1intbndl1metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa1inteccmetricsShowCmd)

	metricsShowCmd.AddCommand(ppappa1intfifo1metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa1intfifo2metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa1intintfmetricsShowCmd)

	metricsShowCmd.AddCommand(ppappa1intpametricsShowCmd)

	metricsShowCmd.AddCommand(ppappa1intpe0metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa1intpe1metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa1intpe2metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa1intpe3metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa1intpe4metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa1intpe5metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa1intpe6metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa1intpe7metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa1intpe8metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa1intpe9metricsShowCmd)

	metricsShowCmd.AddCommand(ppappa1intswphvmemmetricsShowCmd)

	metricsShowCmd.AddCommand(ppppintppmetricsShowCmd)

	metricsShowCmd.AddCommand(ppppportc0intceccmetricsShowCmd)

	metricsShowCmd.AddCommand(ppppportc0intcmacmetricsShowCmd)

	metricsShowCmd.AddCommand(ppppportc1intceccmetricsShowCmd)

	metricsShowCmd.AddCommand(ppppportc1intcmacmetricsShowCmd)

	metricsShowCmd.AddCommand(ppppportc2intceccmetricsShowCmd)

	metricsShowCmd.AddCommand(ppppportc2intcmacmetricsShowCmd)

	metricsShowCmd.AddCommand(ppppportc3intceccmetricsShowCmd)

	metricsShowCmd.AddCommand(ppppportc3intcmacmetricsShowCmd)

	metricsShowCmd.AddCommand(ppppportp0intpeccmetricsShowCmd)

	metricsShowCmd.AddCommand(ppppportp1intpeccmetricsShowCmd)

	metricsShowCmd.AddCommand(ppppportp2intpeccmetricsShowCmd)

	metricsShowCmd.AddCommand(ppppportp3intpeccmetricsShowCmd)

	metricsShowCmd.AddCommand(ppppportp4intpeccmetricsShowCmd)

	metricsShowCmd.AddCommand(ppppportp5intpeccmetricsShowCmd)

	metricsShowCmd.AddCommand(ppppportp6intpeccmetricsShowCmd)

	metricsShowCmd.AddCommand(ppppportp7intpeccmetricsShowCmd)

	metricsShowCmd.AddCommand(prprintreg1metricsShowCmd)

	metricsShowCmd.AddCommand(prprprdinteccmetricsShowCmd)

	metricsShowCmd.AddCommand(prprprdintfifometricsShowCmd)

	metricsShowCmd.AddCommand(prprprdintgrp1metricsShowCmd)

	metricsShowCmd.AddCommand(prprprdintgrp2metricsShowCmd)

	metricsShowCmd.AddCommand(prprprdintintfmetricsShowCmd)

	metricsShowCmd.AddCommand(prprpspinterrmetricsShowCmd)

	metricsShowCmd.AddCommand(prprpspintfatalmetricsShowCmd)

	metricsShowCmd.AddCommand(prprpspintinfometricsShowCmd)

	metricsShowCmd.AddCommand(prprpspintlifqstatemapmetricsShowCmd)

	metricsShowCmd.AddCommand(prprpspintswphvmemmetricsShowCmd)

	metricsShowCmd.AddCommand(pxbpxbinterrmetricsShowCmd)

	metricsShowCmd.AddCommand(pxbpxbintitreccmetricsShowCmd)

	metricsShowCmd.AddCommand(pxbpxbinttgteccmetricsShowCmd)

	metricsShowCmd.AddCommand(rpcpicsintbadaddrmetricsShowCmd)

	metricsShowCmd.AddCommand(rpcpicsintbgmetricsShowCmd)

	metricsShowCmd.AddCommand(rpcpicsintpicsmetricsShowCmd)

	metricsShowCmd.AddCommand(rpcpicspiccintpiccmetricsShowCmd)

	metricsShowCmd.AddCommand(sgempu0interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgempu0intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgempu1interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgempu1intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgempu2interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgempu2intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgempu3interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgempu3intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgempu4interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgempu4intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgempu5interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgempu5intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgete0interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgete0intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgete1interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgete1intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgete2interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgete2intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgete3interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgete3intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgete4interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgete4intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgete5interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgete5intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgimpu0interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgimpu0intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgimpu1interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgimpu1intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgimpu2interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgimpu2intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgimpu3interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgimpu3intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgimpu4interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgimpu4intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgimpu5interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgimpu5intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgite0interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgite0intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgite1interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgite1intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgite2interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgite2intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgite3interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgite3intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgite4interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgite4intinfometricsShowCmd)

	metricsShowCmd.AddCommand(sgite5interrmetricsShowCmd)

	metricsShowCmd.AddCommand(sgite5intinfometricsShowCmd)

}
