
lang en_US.UTF-8
keyboard us
timezone America/Los_Angeles --isUtc
auth --useshadow --enablemd5
selinux --disabled
#firewall --enabled --service=cockpit
firewall --disabled
#xconfig --startxonboot
part / --size 8192 --fstype ext4
services --enabled=NetworkManager --disabled=network --disabled=kdump --disabled=crond --disabled=atd --disabled=mdmonitor --disabled=mdmonitor-takeover


# Root password
rootpw --plaintext centos

repo --name=base --baseurl=http://mirror.centos.org/centos/7/os/x86_64/
repo --name=updates --baseurl=http://mirror.centos.org/centos/7/updates/x86_64/
repo --name=extras --baseurl=http://mirror.centos.org/centos/7/extras/x86_64/

#repo --name=base --baseurl=http://package-mirror.test.pensando.io/centos/7.5.1804/os/x86_64/
#repo --name=updates --baseurl=http://package-mirror.test.pensando.io/centos/7.5.1804/updates/x86_64/
#repo --name=extras --baseurl=http://package-mirror.test.pensando.io/centos/7.5.1804/extras/x86_64/

%packages
@core

kernel
dracut

-plymouth*
-ivtv*
-iwl*firmware
-btrfs-progs*
-alsa-*
-plymouth-scripts
-ModemManager-glib
-postfix
-wpa_supplicant

bash
NetworkManager
e2fsprogs
docker
rsync
dosfstools

# For UEFI/Secureboot support of livecd
grub2
grub2-efi
grub2-efi-x64-cdboot
efibootmgr
shim-x64

%end

%post

#systemctl enable docker

# FIXME: it'd be better to get this installed from a package
cat > /etc/rc.d/init.d/livesys << EOF
#!/bin/bash
#
# live: Init script for live image
#
# chkconfig: 345 00 99
# description: Init script for live image.
### BEGIN INIT INFO
# X-Start-Before: display-manager
### END INIT INFO

. /etc/init.d/functions

if ! strstr "\`cat /proc/cmdline\`" rd.live.image || [ "\$1" != "start" ]; then
    exit 0
fi

if [ -e /.liveimg-configured ] ; then
    configdone=1
fi

exists() {
    which \$1 >/dev/null 2>&1 || return
    \$*
}

if [ ! -z "\`grep pen.live.install /proc/cmdline \`" ]
then
# Make sure we don't mangle the hardware clock on shutdown on livecd
ln -sf /dev/null /etc/systemd/system/hwclock-save.service
fi

livedir="LiveOS"
for arg in \`cat /proc/cmdline\` ; do
  if [ "\${arg##rd.live.dir=}" != "\${arg}" ]; then
    livedir=\${arg##rd.live.dir=}
  fi
  if [ "\${arg##live_dir=}" != "\${arg}" ]; then
    livedir=\${arg##live_dir=}
  fi
done

if [ -z "\`grep pen.live.install /proc/cmdline \`" -a ! -z "\`grep pen.venice /proc/cmdline \`" ]
then
    systemctl stop docker.service || :
    mkdir -p /config
    mkdir -p /data
    mount -L PENDATA /data || :
    mount -L PENCFG /config || :
    mkdir -p /data/docker
    mkdir -p /data/lib
    mkdir -p /config/etc
    mkdir -p /config/etcd
    mount --bind /run/initramfs/live/boot/ /boot
    mount --bind /data/docker /var/lib/docker
    mount --bind /data/lib /var/lib/pensando
    mount --bind /config/etc /etc/pensando
    mount --bind /config/etcd /var/lib/pensando/etcd # make sure this is after /var/lib/pensando above
    [ -x /sbin/restorecon ] && /sbin/restorecon /var/lib/docker
fi

# make it so that we don't do writing to the overlay for things which
# are just tmpdirs/caches
mount -t tmpfs -o mode=0755 varcacheyum /var/cache/yum
mount -t tmpfs vartmp /var/tmp
[ -x /sbin/restorecon ] && /sbin/restorecon /var/cache/yum /var/tmp >/dev/null 2>&1

if [ -n "\$configdone" ]; then
  exit 0
fi

# Remove root password lock
passwd -d root > /dev/null
(echo centos ; echo centos)|passwd root --stdin

# turn off firstboot for livecd boots
systemctl --no-reload disable firstboot-text.service 2> /dev/null || :
systemctl --no-reload disable firstboot-graphical.service 2> /dev/null || :
systemctl stop firstboot-text.service 2> /dev/null || :
systemctl stop firstboot-graphical.service 2> /dev/null || :

# don't use prelink on a running live image
sed -i 's/PRELINKING=yes/PRELINKING=no/' /etc/sysconfig/prelink &>/dev/null || :

# don't enable the gnome-settings-daemon packagekit plugin
gsettings set org.gnome.settings-daemon.plugins.updates active 'false' || :

# Mark things as configured
touch /.liveimg-configured

# add static hostname to work around xauth bug
# https://bugzilla.redhat.com/show_bug.cgi?id=679486
echo "localhost" > /etc/hostname

EOF

# bah, hal starts way too late
cat > /etc/rc.d/init.d/livesys-late << EOF
#!/bin/bash
#
# live: Late init script for live image
#
# chkconfig: 345 99 01
# description: Late init script for live image.

. /etc/init.d/functions

if ! strstr "\`cat /proc/cmdline\`" rd.live.image || [ "\$1" != "start" ] || [ -e /.liveimg-late-configured ] ; then
    exit 0
fi

exists() {
    which \$1 >/dev/null 2>&1 || return
    \$*
}

touch /.liveimg-late-configured

# read some variables out of /proc/cmdline
for o in \`cat /proc/cmdline\` ; do
    case \$o in
    pen.venice=*)
        pen_venice="\${o#pen.venice=}"
        ;;
    esac
done

# mount and start venice on a real system
if [ -z "\`grep pen.live.install /proc/cmdline \`" -a ! -z "\`grep pen.venice /proc/cmdline \`" ]
then
    systemctl start docker.service # enable docker now
    mkdir -p /tmp/venice
    cd /tmp/venice
    tar zxvf  /run/initramfs/live/\${pen_venice}
    if [ -f INSTALL.sh ]
    then
        ./INSTALL.sh || :
    fi
    cd /
    rm -fr /tmp/venice
fi

if [ ! -z "\`grep pen.live.install /proc/cmdline \`" -a ! -z "\`grep pen.live.forceinstall /proc/cmdline \`" ]
then
    echo "Installing ..." | tee -a /dev/console
    cat /run/initramfs/live/LiveOS/PEN-VERSION | tee -a /dev/console
    /run/initramfs/live/LiveOS/venice-cleaninstall.sh 2>&1 | tee -a /dev/console
fi

EOF

chmod 755 /etc/rc.d/init.d/livesys
/sbin/restorecon /etc/rc.d/init.d/livesys
/sbin/chkconfig --add livesys

chmod 755 /etc/rc.d/init.d/livesys-late
/sbin/restorecon /etc/rc.d/init.d/livesys-late
/sbin/chkconfig --add livesys-late

# enable tmpfs for /tmp
systemctl enable tmp.mount


# work around for poor key import UI in PackageKit
rm -f /var/lib/rpm/__db*
releasever=$(rpm -q --qf '%{version}\n' --whatprovides system-release)
basearch=$(uname -i)
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$releasever-$basearch
echo "Packages within this LiveCD"
rpm -qa
# Note that running rpm recreates the rpm db files which aren't needed or wanted
rm -f /var/lib/rpm/__db*

# go ahead and pre-make the man -k cache (#455968)
/usr/bin/mandb

# save a little bit of space at least...
rm -f /boot/initramfs*
# make sure there aren't core files lying around
rm -f /core*

cat >> /etc/rc.d/init.d/livesys << EOF


# disable updates plugin
cat >> /usr/share/glib-2.0/schemas/org.gnome.settings-daemon.plugins.updates.gschema.override << FOE
[org.gnome.settings-daemon.plugins.updates]
active=false
FOE

# make the installer show up
if [ -f /usr/share/applications/liveinst.desktop ]; then
  # Show harddisk install in shell dash
  sed -i -e 's/NoDisplay=true/NoDisplay=false/' /usr/share/applications/liveinst.desktop 
  # need to move it to anaconda.desktop to make shell happy
  #cp /usr/share/applications/liveinst.desktop /usr/share/applications/anaconda.desktop
fi

cat >> /usr/share/glib-2.0/schemas/org.gnome.shell.gschema.override << FOE
[org.gnome.shell]
favorite-apps=['liveinst.desktop','firefox.desktop', 'evolution.desktop', 'empathy.desktop', 'rhythmbox.desktop', 'shotwell.desktop', 'libreoffice-writer.desktop', 'nautilus.desktop', 'gnome-documents.desktop', 'anaconda.desktop']
FOE

# Turn off PackageKit-command-not-found while uninstalled
if [ -f /etc/PackageKit/CommandNotFound.conf ]; then
  sed -i -e 's/^SoftwareSourceSearch=true/SoftwareSourceSearch=false/' /etc/PackageKit/CommandNotFound.conf
fi

# Fixing default locale to us
localectl set-keymap us
localectl set-x11-keymap us
EOF

# rebuild schema cache with any overrides we installed
glib-compile-schemas /usr/share/glib-2.0/schemas

%end
