# vim: ft=ruby
#
def build_etc_hosts(nodeprops, node)
  # populate /etc/hosts entries
  nodeprops[:num_nodes].times do |node_id|
    node.vm.provision "shell" do |s|
      s.inline = "echo '#{nodeprops[:node_ips][node_id]} #{nodeprops[:node_names][node_id]}' >> /etc/hosts"
    end
  end
end

def build_nodes(num_nodes, num_quorum_nodes, base_ip)
  if ENV['PENS_NODES'] && ENV['PENS_NODES'] != "" then
      num_nodes = ENV['PENS_NODES'].to_i
      #limit quorum nodes to num_nodes
      if num_quorum_nodes > num_nodes then
          num_quorum_nodes = num_nodes
      end
  end
  if ENV['PENS_QUORUM_NODES'] && ENV['PENS_QUORUM_NODES'] != "" then
      num_quorum_nodes = ENV['PENS_QUORUM_NODES'].to_i
  end
  if num_quorum_nodes > num_nodes then
    abort("num_quorum_nodes:#{num_quorum_nodes} is > num_nodes:#{num_nodes}\n")
  end

  if ENV['PENS_IP_PREFIX'] && ENV['PENS_IP_PREFIX'] != "" then
      base_ip = ENV['PENS_IP_PREFIX']
  end

  node_ips = num_nodes.times.collect { |n| base_ip + "#{n+11}" }
  quorum_nodenames = num_quorum_nodes.times.collect { |n| "node#{n+1}" }

  return {
    num_nodes:        num_nodes,
    node_names:       num_nodes.times.collect { |n| "node#{n+1}" },
    quorum_nodenames: quorum_nodenames.join(","),
    cluster_ip_nodes: node_ips.join(","),
    base_ip:          base_ip,
    node_ips:         node_ips,
    cluster_vip:      base_ip + "10",
  }
end

def preamble_script(postamble)
  return <<-BASIC_SCRIPT
    set -e

    ## setup basic environment for the VM
    echo -n "$1" > /etc/hostname
    hostname -F /etc/hostname
    chown -R vagrant /import

    rm -f /etc/machine-id
    systemd-machine-id-setup

    ## Populate environment vars
    echo 'export PATH=$PATH:/usr/local/go/bin:/opt/bin:/import/bin' >> /etc/profile.d/env.sh
    echo 'export GOPATH=/import/' >> /etc/profile.d/env.sh
    echo "export PENS_NODES=$3" >> /etc/profile.d/env.sh
    echo "export PENS_QUORUM_NODENAMES=$4" >> /etc/profile.d/env.sh
    echo "export PENS_CLUSTER_VIP=$5" >> /etc/profile.d/env.sh
    echo 'export KUBECONFIG=$HOME/admin.conf' >> /etc/profile.d/env.sh
    source /etc/profile.d/env.sh

    # Increase mmap count to support elasticsearch
    sysctl -w vm.max_map_count=262144

    # stop firewall service and disable selinux
    systemctl stop firewalld && systemctl disable firewalld
    systemctl stop chronyd && systemctl disable chronyd
    systemctl stop kubelet && systemctl disable kubelet
    setenforce 0
    gpasswd -a vagrant root
    gpasswd -a vagrant docker
    # curl -sSL box-builder.sh | bash

    #start OVS
    systemctl start openvswitch
    
    # Add pensando internal docker registry
    mkdir -p /etc/docker
    echo '{ "insecure-registries" : ["registry.test.pensando.io:5000"] }' > /etc/docker/daemon.json

    # set timezone
    timedatectl set-timezone PST8PDT
    # populate the master virtual ip - seems to be used by nic/agent/netagent/scripts/runVms.py and nic/agent/cmd/vsimctl/vsimctl.go
    echo "$5 pen-master" >> /etc/hosts
    # add a friendly alias
    echo 'alias pensw="cd /import/src/github.com/pensando/sw/"' >> /home/vagrant/.bashrc
    #{postamble}
  BASIC_SCRIPT
end
