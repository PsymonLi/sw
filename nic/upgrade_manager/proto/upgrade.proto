syntax = "proto3";
package upgrade;

import "nic/delphi/proto/delphi/delphi.proto";

enum UpgReqCmdType {
    InvalidCmd = 0;
    UpgStart   = 1;
    UpgAbort   = 2;
}

// Upgrade Request Status
enum UpgReqStateType {
    InvalidUpgState          = 0;
    UpgReqRcvd               = 1;
    PreUpgState              = 2;
    ProcessesQuiesced        = 3;
    PostBinRestart           = 4;
    DataplaneDowntimeStart   = 5;
    Cleanup                  = 6;
    UpgSuccess               = 7;
    UpgFailed                = 8;
}

// Upgrade Request Status
enum UpgRespStateType {
    InvalidUpgStatePass          = 0;
    InvalidUpgStateFail          = 1;
    UpgReqRcvdPass               = 2;
    UpgReqRcvdFail               = 3;
    PreUpgStatePass              = 4;
    PreUpgStateFail              = 5;
    ProcessesQuiescedPass        = 6;
    ProcessesQuiescedFail        = 7;
    PostBinRestartPass           = 8;
    PostBinRestartFail           = 9;
    DataplaneDowntimeStartPass   = 10;
    DataplaneDowntimeStartFail   = 11;
    CleanupPass                  = 12;
    CleanupFail                  = 13;
    UpgSuccessPass               = 14;
    UpgSuccessFail               = 15;
    UpgFailedPass                = 16;
    UpgFailedFail                = 17;
}

// spec part of the object
message UpgReq {
    option (delphi.update_event) = true;
    delphi.ObjectMeta          Meta            = 1;
    uint32                     Key             = 2;
    UpgReqCmdType              UpgReqCmd       = 3 [(delphi.event) = true];
}

// status part of the object
message UpgReqStatus {
    option (delphi.update_event) = true; 
    delphi.ObjectMeta      Meta              = 1;
    uint32                 Key               = 2;
    UpgReqStateType        UpgReqState       = 3 [(delphi.event) = true];
}

message UpgAppResp {
    option (delphi.update_event) = true;
    delphi.ObjectMeta      Meta              = 1;
    string                 Key               = 2;
    UpgRespStateType       UpgAppRespVal     = 3 [(delphi.event) = true];
}

