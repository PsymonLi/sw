//--------------------------------------------------------------------
// {C} Copyright 2020 Pensando Systems Inc. All rights reserved
//
// protobuf specification for session information that's synched from 
// one version of vpp to another
//--------------------------------------------------------------------

syntax = "proto3";
package vppinternal;

// Corresponds to pds_flow_state
enum FlowState {
  INIT            = 0;
  SETUP           = 1;
  EST             = 2;
  KEEPALIVE       = 3;
  HALFCLOSE_IFLOW = 4;
  HALFCLOSE_RFLOW = 5;
  CLOSE           = 6;
}

// Corresponds to pds_flow_pkt_sub_type
enum FlowSubType {
  L2L_INTRA_SUBNET                = 0;
  L2L_INTER_SUBNET                = 1;
  L2R_INTRA_SUBNET                = 2;
  L2R_INTER_SUBNET                = 3;
  L2N_ASYMMETRIC_ROUTE            = 4;
  L2N_ASYMMETRIC_ROUTE_NAPT       = 5;
  L2N_ASYMMETRIC_ROUTE_NAT        = 6;
  L2N_SYMMETRIC_ROUTE             = 7;
  L2N_SYMMETRIC_ROUTE_NAPT        = 8;
  L2N_SYMMETRIC_ROUTE_NAT         = 9;
  L2N_SYMMETRIC_ROUTE_TWICE_NAT   = 10;
  L2N_INTRA_VCN_ROUTE             = 11;
  R2L_INTRA_SUBNET                = 12;
  R2L_INTER_SUBNET                = 13;
  N2L_ASYMMETRIC_ROUTE            = 14;
  N2L_ASYMMETRIC_ROUTE_NAT        = 15;
  N2L_SYMMETRIC_ROUTE             = 16;
  N2L_SYMMETRIC_ROUTE_NAT         = 17;
  N2L_ASYMMETRIC_ROUTE_SVC_NAT    = 18;
  N2L_SYMMETRIC_ROUTE_SVC_NAT     = 19;
  N2L_INTRA_VCN_ROUTE             = 20;
}

// NAT or other Services
// TBD: How do we create tx_xlate_id, tx_xlate_id2,
//      rx_xlate_id and rx_xlate_id2 in Domain 'B'
enum FlowSvc {
  NONE        = 0;
  NAPT_SVC    = 1;
  STATIC_NAT  = 2;
  NAT44       = 3;
  NAT_SVC_MAP = 4;
}

message SessV4Info {
  uint32      SessId         = 1;
  uint32      Proto          = 2;
  FlowState   State          = 3;
  FlowSubType Subtype        = 4;
  FlowSvc     SvcType        = 5;
  uint32      VnicId         = 6;
  bool        TwiceNAT       = 7;
  bool        IsLocalToLocal = 8;
  bool        IsMissHit      = 9;
  bool        IsFlowDrop     = 10;
  uint32      IngressBD      = 11;
  uint32      ISrcIp         = 12;
  uint32      IDstIp         = 13;
  uint32      ISrcPort       = 14;
  uint32      IDstPort       = 15;
  uint32      INhId          = 16;
  uint32      INhType        = 17;
  uint32      INhValid       = 18;
  uint32      IPriority      = 19;
  uint32      EgressBD       = 20;
  uint32      RSrcIp         = 21;
  uint32      RDstIp         = 22;
  uint32      RSrcPort       = 23;
  uint32      RDstPort       = 24;
  uint32      RNhId          = 25;
  uint32      RNhType        = 26;
  uint32      RNhValid       = 27;
  uint32      RPriority      = 28;
  bool        IsIFlowRx      = 29;
}

