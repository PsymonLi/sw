
The pre-requiste to this document is that the end user is well aware of what VPP
is and its architecture.

1.0 Adding a new custom vpp plugin
++++++++++++++++++++++++++++++++++

Custom plugins are added where we want to use vector processing capabilities of
vpp for our software slow path features that interact with p4 hardware or other
pensando internal modules.

If the feature is a purely pensando independent slow path feature, the base vpp
code should be used or extended to support the feature.

1.1 Implementation taxanomy
+++++++++++++++++++++++++++

The vpp custom plugin consists of three distinct layers:

  * A infrastructure layer comprising of common code which is required by all
    custom plugins. See nic/vpp/infra/
  * Custom plugin layer where each slow path feature is implemented.
    See nic/vpp/{arp_proxy, dhcp_snoop, learn, ...}
  * Pipeline dependent layer for each custom plugin layer.
    See nic/vpp/<feature>/{apollo, aplulu, ...}

1.1.1 Infrastructure Layer
++++++++++++++++++++++++++

The infrastructure layer consists of common vpp nodes and other general purpose
utilities that are used across all custom plugins.

<Need more info>

1.1.2 Pipeline independent Plugin layer
+++++++++++++++++++++++++++++++++++++++

The pipeline independent layer consists of software slow path features which are
independent of the asic or pipeline.

<Need more info>

1.1.3 Pipeline dependent Plugin Layer
+++++++++++++++++++++++++++++++++++++

For each pipeline independent layer, there are multiple pipeline dependent
layers implementing asic/pipeline specific accesses.

<Need more info>

1.2 Sample directory layout
+++++++++++++++++++++++++++

 |-- nic
     |-- vpp
         |-- infra
             |-- node.c
             |-- pkt.h
         |-- arp_proxy
             |-- node.c
             |-- pkt.c
             |-- learn.c
             |-- apollo
                 |-- impl.c
             |-- apulu
                 |-- impl.c
             |-- stub
                 |- impl.c
         |-- dhcp_snoop
             |-- node.c
             |-- pkt.c
             |-- learn.c
             |-- apollo
                 |-- impl.c
             |-- apulu
                 |-- impl.c
             |-- stub
                 |- impl.c
         |-- <so on...>
  
