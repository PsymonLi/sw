//
// {C} Copyright 2020 Pensando Systems Inc. All rights reserved
//
//------------------------------------------------------------------------------
///
/// \file
/// protobuf specification for operational info
///
//------------------------------------------------------------------------------

syntax = "proto3";
package operd;

import "types.proto";
import "alerts.proto";

service OperSvc {
  rpc OperInfoSubscribe (stream OperInfoRequest) returns (stream OperInfoResponse) {}
}

// Operational Info exported by operd plugin through push / subscription model
enum OperInfoType {
  OPER_INFO_TYPE_NONE   = 0;
  OPER_INFO_TYPE_ALERT  = 1;
}

// OperInfoOp indicates whether client is subscribing or unsubscribing
enum OperInfoOp {
  OPER_INFO_OP_NONE        = 0;
  OPER_INFO_OP_SUBSCRIBE   = 1;
  OPER_INFO_OP_UNSUBSCRIBE = 2;
}

message OperInfoSpec {
  // oper info of interest
  OperInfoType InfoType  = 1;
  // action is either subscribe or unsubscribe
  OperInfoOp   Action    = 2;
}

// OperInfoRequest captures the operational information for subscription/unsubscription
message OperInfoRequest {
  repeated OperInfoSpec Request = 1;
}

message OperInfoResponse {
  types.ApiStatus Status    = 1;
  OperInfoType    InfoType  = 2;
  // operational information specific to InfoId
  oneof oper_info {
      // information specific for alerts
      Alert       AlertInfo = 3;
  }
}
