
syntax = "proto3";
package asicerrord;

import "delphi.proto";
import "metrics_annotations.proto";

message Ppappa0intbndl0Metrics {
  fixed64 Key = 1;
  delphi.Counter state_lkp_srch_hit_addr_range_err = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_bndl0_state_lkp_srch_hit_addr_range_err" Description: "software error. Parser TCAM entry programmed out of valid range." Units: Count } ];
  delphi.Counter state_lkp_srch_miss = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_bndl0_state_lkp_srch_miss" Description: "software error. Parser TCAM search miss" Units: Count } ];
  delphi.Counter state_lkp_srch_req_not_rdy = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_bndl0_state_lkp_srch_req_not_rdy" Description: "hardware error" Units: Count } ];
}

message Ppappa0intbndl1Metrics {
  fixed64 Key = 1;
  delphi.Counter state_lkp_srch_hit_addr_range_err = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_bndl1_state_lkp_srch_hit_addr_range_err" Description: "software error. Parser TCAM entry programmed out of valid range." Units: Count } ];
  delphi.Counter state_lkp_srch_miss = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_bndl1_state_lkp_srch_miss" Description: "software error. Parser TCAM search miss" Units: Count } ];
  delphi.Counter state_lkp_srch_req_not_rdy = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_bndl1_state_lkp_srch_req_not_rdy" Description: "hardware error" Units: Count } ];
}

message Ppappa0inteccMetrics {
  fixed64 Key = 1;
  delphi.Counter pkt_mem_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_ecc_pkt_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter pkt_mem_correctable = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_ecc_pkt_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter bndl0_state_lkp_sram_uncorrectable = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_ecc_bndl0_state_lkp_sram_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter bndl0_state_lkp_sram_correctable = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_ecc_bndl0_state_lkp_sram_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter bndl1_state_lkp_sram_uncorrectable = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_ecc_bndl1_state_lkp_sram_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter bndl1_state_lkp_sram_correctable = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_ecc_bndl1_state_lkp_sram_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Ppappa0intfifo1Metrics {
  fixed64 Key = 1;
  delphi.Counter pe0_qctl_ff_ovflow = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe0_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe1_qctl_ff_ovflow = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe1_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe2_qctl_ff_ovflow = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe2_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe3_qctl_ff_ovflow = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe3_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe4_qctl_ff_ovflow = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe4_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe5_qctl_ff_ovflow = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe5_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe6_qctl_ff_ovflow = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe6_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe7_qctl_ff_ovflow = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe7_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe8_qctl_ff_ovflow = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe8_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe9_qctl_ff_ovflow = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe9_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe0_phv_ff_ovflow = 12 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe0_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe1_phv_ff_ovflow = 13 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe1_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe2_phv_ff_ovflow = 14 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe2_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe3_phv_ff_ovflow = 15 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe3_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe4_phv_ff_ovflow = 16 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe4_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe5_phv_ff_ovflow = 17 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe5_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe6_phv_ff_ovflow = 18 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe6_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe7_phv_ff_ovflow = 19 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe7_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe8_phv_ff_ovflow = 20 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe8_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe9_phv_ff_ovflow = 21 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe9_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe0_ohi_ff_ovflow = 22 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe0_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe1_ohi_ff_ovflow = 23 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe1_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe2_ohi_ff_ovflow = 24 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe2_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe3_ohi_ff_ovflow = 25 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe3_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe4_ohi_ff_ovflow = 26 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe4_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe5_ohi_ff_ovflow = 27 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe5_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe6_ohi_ff_ovflow = 28 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe6_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe7_ohi_ff_ovflow = 29 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe7_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe8_ohi_ff_ovflow = 30 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe8_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe9_ohi_ff_ovflow = 31 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo1_pe9_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
}

message Ppappa0intfifo2Metrics {
  fixed64 Key = 1;
  delphi.Counter dp_if_ff_ovflow = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo2_dp_if_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter ohi_if_ff_ovflow = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo2_ohi_if_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter ma_if_ff_ovflow = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo2_ma_if_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pb_if_ff_ovflow = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo2_pb_if_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pkt_mtu_ff_ovflow = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo2_pkt_mtu_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter outphv_ff_ovflow = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo2_outphv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter outohi_ff_ovflow = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo2_outohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter chk_ff_ovflow = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_fifo2_chk_ff_ovflow" Description: "hardware error" Units: Count } ];
}

message Ppappa0intpe0Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe0_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe0_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe0_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe0_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe0_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe0_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe0_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe0_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe0_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe0_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa0intpe1Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe1_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe1_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe1_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe1_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe1_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe1_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe1_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe1_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe1_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe1_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa0intpe2Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe2_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe2_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe2_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe2_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe2_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe2_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe2_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe2_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe2_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe2_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa0intpe3Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe3_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe3_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe3_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe3_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe3_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe3_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe3_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe3_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe3_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe3_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa0intpe4Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe4_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe4_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe4_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe4_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe4_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe4_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe4_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe4_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe4_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe4_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa0intpe5Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe5_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe5_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe5_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe5_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe5_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe5_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe5_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe5_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe5_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe5_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa0intpe6Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe6_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe6_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe6_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe6_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe6_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe6_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe6_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe6_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe6_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe6_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa0intpe7Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe7_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe7_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe7_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe7_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe7_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe7_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe7_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe7_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe7_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe7_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa0intpe8Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe8_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe8_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe8_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe8_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe8_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe8_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe8_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe8_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe8_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe8_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa0intpe9Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe9_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe9_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe9_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe9_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe9_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe9_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe9_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe9_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe9_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pe9_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa0intpaMetrics {
  fixed64 Key = 1;
  delphi.Counter reorder_phv_not_sop = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_reorder_phv_not_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter csum0_not_enuf_bytes = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_csum0_not_enuf_bytes" Description: "software error. CSUM checking logic has programmable start and end offset. The packet ended before end offset. It's possible the packet is malformed as well. Check for other interrupts in PB." Units: Count } ];
  delphi.Counter csum0_start_more_than_end_offset = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_csum0_start_more_than_end_offset" Description: "Software error. CSUM checking logic programmable start offset is more than end offset" Units: Count } ];
  delphi.Counter csum1_not_enuf_bytes = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_csum1_not_enuf_bytes" Description: "software error. CSUM checking logic has programmable start and end offset. The packet ended before end offset. It's possible the packet is malformed as well. Check for other interrupts in PB." Units: Count } ];
  delphi.Counter csum1_start_more_than_end_offset = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_csum1_start_more_than_end_offset" Description: "Software error. CSUM checking logic programmable start offset is more than end offset" Units: Count } ];
  delphi.Counter csum2_not_enuf_bytes = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_csum2_not_enuf_bytes" Description: "software error. CSUM checking logic has programmable start and end offset. The packet ended before end offset. It's possible the packet is malformed as well. Check for other interrupts in PB." Units: Count } ];
  delphi.Counter csum2_start_more_than_end_offset = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_csum2_start_more_than_end_offset" Description: "Software error. CSUM checking logic programmable start offset is more than end offset" Units: Count } ];
  delphi.Counter csum3_not_enuf_bytes = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_csum3_not_enuf_bytes" Description: "software error. CSUM checking logic has programmable start and end offset. The packet ended before end offset. It's possible the packet is malformed as well. Check for other interrupts in PB." Units: Count } ];
  delphi.Counter csum3_start_more_than_end_offset = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_csum3_start_more_than_end_offset" Description: "Software error. CSUM checking logic programmable start offset is more than end offset" Units: Count } ];
  delphi.Counter csum4_not_enuf_bytes = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_csum4_not_enuf_bytes" Description: "software error. CSUM checking logic has programmable start and end offset. The packet ended before end offset. It's possible the packet is malformed as well. Check for other interrupts in PB." Units: Count } ];
  delphi.Counter csum4_start_more_than_end_offset = 12 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_csum4_start_more_than_end_offset" Description: "Software error. CSUM checking logic programmable start offset is more than end offset" Units: Count } ];
  delphi.Counter crc_not_enuf_bytes = 13 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_crc_not_enuf_bytes" Description: "software error. CRC checking logic has programmable start and end offset. The packet ended before end offset. It's possible the packet is malformed as well. Check for other interrupts in PB." Units: Count } ];
  delphi.Counter crc_start_more_than_end_offset = 14 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_crc_start_more_than_end_offset" Description: "Software error. CRC checking logic programmable start offset is more than end offset" Units: Count } ];
  delphi.Counter chkr_phv_single_flit = 15 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_chkr_phv_single_flit" Description: "hardware error" Units: Count } ];
  delphi.Counter chkr_phv_not_sop = 16 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_chkr_phv_not_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter chkr_pkt_not_sop = 17 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_chkr_pkt_not_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter chkr_seq_id = 18 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_chkr_seq_id" Description: "hardware error" Units: Count } ];
  delphi.Counter preparse_line0_not_sop = 19 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_preparse_line0_not_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter preparse_dff_not_sop = 20 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_preparse_dff_not_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter preparse_dff_ovflow = 21 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_preparse_dff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter preparse_eff_ovflow = 22 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_pa_preparse_eff_ovflow" Description: "hardware error" Units: Count } ];
}

message Ppappa0intswphvmemMetrics {
  fixed64 Key = 1;
  delphi.Counter ecc_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_sw_phv_mem_ecc_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter ecc_correctable = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_sw_phv_mem_ecc_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter phv_invalid_sram = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_sw_phv_mem_phv_invalid_sram" Description: "Info only, no action" Units: Count } ];
  delphi.Counter phv_invalid_data = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_sw_phv_mem_phv_invalid_data" Description: "Info only, no action" Units: Count } ];
  delphi.Counter phv_done0 = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_sw_phv_mem_phv_done0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter phv_done1 = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_sw_phv_mem_phv_done1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter phv_done2 = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_sw_phv_mem_phv_done2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter phv_done3 = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_sw_phv_mem_phv_done3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter phv_done4 = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_sw_phv_mem_phv_done4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter phv_done5 = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_sw_phv_mem_phv_done5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter phv_done6 = 12 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_sw_phv_mem_phv_done6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter phv_done7 = 13 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_sw_phv_mem_phv_done7" Description: "Info only, no action" Units: Count } ];
}

message Ppappa0intintfMetrics {
  fixed64 Key = 1;
  delphi.Counter pb_err = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_intf_pb_err" Description: "Packet err bit set along with EOP in packet bus from buffer to Parser. Error bit probably is from memory ecc error. Check other interrupts in PB." Units: Count } ];
  delphi.Counter pb_sop_err = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_intf_pb_sop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter pb_eop_err = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_intf_pb_eop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter dp_err = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_intf_dp_err" Description: "Packet err bit set along with EOP in packet bus from Parser to Deparser. Error bit probably is from buffer or from memory ecc error. Check other interrupts." Units: Count } ];
  delphi.Counter dp_sop_err = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_intf_dp_sop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter dp_eop_err = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_intf_dp_eop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter ohi_err = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_intf_ohi_err" Description: "Packet err bit set along with EOP in OHI bus from Parser to Deparser. Error bit probably is from buffer or from memory ecc error. Check other interrupts." Units: Count } ];
  delphi.Counter ohi_sop_err = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_intf_ohi_sop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter ohi_eop_err = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_intf_ohi_eop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter sw_phv_err = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_intf_sw_phv_err" Description: "SW phv gen logic set error along with PHV. Error bit probably is from memory ecc error. Check other interrupts." Units: Count } ];
  delphi.Counter sw_phv_sop_err = 12 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_intf_sw_phv_sop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter sw_phv_eop_err = 13 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_intf_sw_phv_eop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter ma_err = 14 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_intf_ma_err" Description: "Packet err bit set along with EOP in PHV bus from Parser to STG. Error bit probably is from memory ecc error. Check other interrupts." Units: Count } ];
  delphi.Counter ma_sop_err = 15 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_intf_ma_sop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter ma_eop_err = 16 [ (venice.metricsField) = { DisplayName: "ppa_ppa_0_int_intf_ma_eop_err" Description: "hardware error" Units: Count } ];
}

message Ppappa1intbndl0Metrics {
  fixed64 Key = 1;
  delphi.Counter state_lkp_srch_hit_addr_range_err = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_bndl0_state_lkp_srch_hit_addr_range_err" Description: "software error. Parser TCAM entry programmed out of valid range." Units: Count } ];
  delphi.Counter state_lkp_srch_miss = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_bndl0_state_lkp_srch_miss" Description: "software error. Parser TCAM search miss" Units: Count } ];
  delphi.Counter state_lkp_srch_req_not_rdy = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_bndl0_state_lkp_srch_req_not_rdy" Description: "hardware error" Units: Count } ];
}

message Ppappa1intbndl1Metrics {
  fixed64 Key = 1;
  delphi.Counter state_lkp_srch_hit_addr_range_err = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_bndl1_state_lkp_srch_hit_addr_range_err" Description: "software error. Parser TCAM entry programmed out of valid range." Units: Count } ];
  delphi.Counter state_lkp_srch_miss = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_bndl1_state_lkp_srch_miss" Description: "software error. Parser TCAM search miss" Units: Count } ];
  delphi.Counter state_lkp_srch_req_not_rdy = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_bndl1_state_lkp_srch_req_not_rdy" Description: "hardware error" Units: Count } ];
}

message Ppappa1inteccMetrics {
  fixed64 Key = 1;
  delphi.Counter pkt_mem_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_ecc_pkt_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter pkt_mem_correctable = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_ecc_pkt_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter bndl0_state_lkp_sram_uncorrectable = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_ecc_bndl0_state_lkp_sram_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter bndl0_state_lkp_sram_correctable = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_ecc_bndl0_state_lkp_sram_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter bndl1_state_lkp_sram_uncorrectable = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_ecc_bndl1_state_lkp_sram_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter bndl1_state_lkp_sram_correctable = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_ecc_bndl1_state_lkp_sram_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Ppappa1intfifo1Metrics {
  fixed64 Key = 1;
  delphi.Counter pe0_qctl_ff_ovflow = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe0_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe1_qctl_ff_ovflow = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe1_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe2_qctl_ff_ovflow = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe2_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe3_qctl_ff_ovflow = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe3_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe4_qctl_ff_ovflow = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe4_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe5_qctl_ff_ovflow = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe5_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe6_qctl_ff_ovflow = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe6_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe7_qctl_ff_ovflow = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe7_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe8_qctl_ff_ovflow = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe8_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe9_qctl_ff_ovflow = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe9_qctl_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe0_phv_ff_ovflow = 12 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe0_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe1_phv_ff_ovflow = 13 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe1_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe2_phv_ff_ovflow = 14 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe2_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe3_phv_ff_ovflow = 15 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe3_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe4_phv_ff_ovflow = 16 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe4_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe5_phv_ff_ovflow = 17 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe5_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe6_phv_ff_ovflow = 18 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe6_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe7_phv_ff_ovflow = 19 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe7_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe8_phv_ff_ovflow = 20 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe8_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe9_phv_ff_ovflow = 21 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe9_phv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe0_ohi_ff_ovflow = 22 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe0_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe1_ohi_ff_ovflow = 23 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe1_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe2_ohi_ff_ovflow = 24 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe2_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe3_ohi_ff_ovflow = 25 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe3_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe4_ohi_ff_ovflow = 26 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe4_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe5_ohi_ff_ovflow = 27 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe5_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe6_ohi_ff_ovflow = 28 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe6_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe7_ohi_ff_ovflow = 29 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe7_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe8_ohi_ff_ovflow = 30 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe8_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pe9_ohi_ff_ovflow = 31 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo1_pe9_ohi_ff_ovflow" Description: "hardware error" Units: Count } ];
}

message Ppappa1intfifo2Metrics {
  fixed64 Key = 1;
  delphi.Counter dp_if_ff_ovflow = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo2_dp_if_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter ohi_if_ff_ovflow = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo2_ohi_if_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter ma_if_ff_ovflow = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo2_ma_if_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pb_if_ff_ovflow = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo2_pb_if_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pkt_mtu_ff_ovflow = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo2_pkt_mtu_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter outphv_ff_ovflow = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo2_outphv_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter outohi_ff_ovflow = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo2_outohi_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter chk_ff_ovflow = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_fifo2_chk_ff_ovflow" Description: "hardware error" Units: Count } ];
}

message Ppappa1intpe0Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe0_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe0_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe0_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe0_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe0_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe0_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe0_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe0_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe0_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe0_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa1intpe1Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe1_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe1_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe1_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe1_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe1_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe1_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe1_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe1_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe1_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe1_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa1intpe2Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe2_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe2_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe2_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe2_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe2_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe2_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe2_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe2_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe2_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe2_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa1intpe3Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe3_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe3_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe3_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe3_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe3_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe3_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe3_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe3_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe3_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe3_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa1intpe4Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe4_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe4_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe4_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe4_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe4_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe4_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe4_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe4_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe4_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe4_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa1intpe5Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe5_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe5_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe5_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe5_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe5_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe5_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe5_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe5_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe5_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe5_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa1intpe6Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe6_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe6_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe6_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe6_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe6_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe6_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe6_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe6_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe6_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe6_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa1intpe7Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe7_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe7_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe7_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe7_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe7_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe7_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe7_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe7_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe7_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe7_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa1intpe8Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe8_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe8_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe8_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe8_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe8_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe8_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe8_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe8_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe8_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe8_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa1intpe9Metrics {
  fixed64 Key = 1;
  delphi.Counter qctl_skid_depth_not_zero = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe9_qctl_skid_depth_not_zero" Description: "hardware error" Units: Count } ];
  delphi.Counter qctl_not_sop_after_pkt_release = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe9_qctl_not_sop_after_pkt_release" Description: "hardware error" Units: Count } ];
  delphi.Counter unexpected_non_sop = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe9_unexpected_non_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter exceed_phv_flit_cnt = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe9_exceed_phv_flit_cnt" Description: "software error: Number of phv flits generated exceeded the limit." Units: Count } ];
  delphi.Counter exceed_parse_loop_cnt = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe9_exceed_parse_loop_cnt" Description: "software error: Number of parse states jump for a packet exceeded the limit. " Units: Count } ];
  delphi.Counter offset_out_of_range = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe9_offset_out_of_range" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter pkt_size_chk = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe9_pkt_size_chk" Description: "software error. Not enough bytes in packet. Parser state programming error." Units: Count } ];
  delphi.Counter offset_jump_chk = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe9_offset_jump_chk" Description: "software error. Parser state programming error." Units: Count } ];
  delphi.Counter d1_not_valid = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe9_d1_not_valid" Description: "hardware error" Units: Count } ];
  delphi.Counter phv_upr_idx_less = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pe9_phv_upr_idx_less" Description: "software error. Parser state programming error." Units: Count } ];
}

message Ppappa1intpaMetrics {
  fixed64 Key = 1;
  delphi.Counter reorder_phv_not_sop = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_reorder_phv_not_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter csum0_not_enuf_bytes = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_csum0_not_enuf_bytes" Description: "software error. CSUM checking logic has programmable start and end offset. The packet ended before end offset. It's possible the packet is malformed as well. Check for other interrupts in PB." Units: Count } ];
  delphi.Counter csum0_start_more_than_end_offset = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_csum0_start_more_than_end_offset" Description: "Software error. CSUM checking logic programmable start offset is more than end offset" Units: Count } ];
  delphi.Counter csum1_not_enuf_bytes = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_csum1_not_enuf_bytes" Description: "software error. CSUM checking logic has programmable start and end offset. The packet ended before end offset. It's possible the packet is malformed as well. Check for other interrupts in PB." Units: Count } ];
  delphi.Counter csum1_start_more_than_end_offset = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_csum1_start_more_than_end_offset" Description: "Software error. CSUM checking logic programmable start offset is more than end offset" Units: Count } ];
  delphi.Counter csum2_not_enuf_bytes = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_csum2_not_enuf_bytes" Description: "software error. CSUM checking logic has programmable start and end offset. The packet ended before end offset. It's possible the packet is malformed as well. Check for other interrupts in PB." Units: Count } ];
  delphi.Counter csum2_start_more_than_end_offset = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_csum2_start_more_than_end_offset" Description: "Software error. CSUM checking logic programmable start offset is more than end offset" Units: Count } ];
  delphi.Counter csum3_not_enuf_bytes = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_csum3_not_enuf_bytes" Description: "software error. CSUM checking logic has programmable start and end offset. The packet ended before end offset. It's possible the packet is malformed as well. Check for other interrupts in PB." Units: Count } ];
  delphi.Counter csum3_start_more_than_end_offset = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_csum3_start_more_than_end_offset" Description: "Software error. CSUM checking logic programmable start offset is more than end offset" Units: Count } ];
  delphi.Counter csum4_not_enuf_bytes = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_csum4_not_enuf_bytes" Description: "software error. CSUM checking logic has programmable start and end offset. The packet ended before end offset. It's possible the packet is malformed as well. Check for other interrupts in PB." Units: Count } ];
  delphi.Counter csum4_start_more_than_end_offset = 12 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_csum4_start_more_than_end_offset" Description: "Software error. CSUM checking logic programmable start offset is more than end offset" Units: Count } ];
  delphi.Counter crc_not_enuf_bytes = 13 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_crc_not_enuf_bytes" Description: "software error. CRC checking logic has programmable start and end offset. The packet ended before end offset. It's possible the packet is malformed as well. Check for other interrupts in PB." Units: Count } ];
  delphi.Counter crc_start_more_than_end_offset = 14 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_crc_start_more_than_end_offset" Description: "Software error. CRC checking logic programmable start offset is more than end offset" Units: Count } ];
  delphi.Counter chkr_phv_single_flit = 15 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_chkr_phv_single_flit" Description: "hardware error" Units: Count } ];
  delphi.Counter chkr_phv_not_sop = 16 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_chkr_phv_not_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter chkr_pkt_not_sop = 17 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_chkr_pkt_not_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter chkr_seq_id = 18 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_chkr_seq_id" Description: "hardware error" Units: Count } ];
  delphi.Counter preparse_line0_not_sop = 19 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_preparse_line0_not_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter preparse_dff_not_sop = 20 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_preparse_dff_not_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter preparse_dff_ovflow = 21 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_preparse_dff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter preparse_eff_ovflow = 22 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_pa_preparse_eff_ovflow" Description: "hardware error" Units: Count } ];
}

message Ppappa1intswphvmemMetrics {
  fixed64 Key = 1;
  delphi.Counter ecc_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_sw_phv_mem_ecc_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter ecc_correctable = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_sw_phv_mem_ecc_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter phv_invalid_sram = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_sw_phv_mem_phv_invalid_sram" Description: "Info only, no action" Units: Count } ];
  delphi.Counter phv_invalid_data = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_sw_phv_mem_phv_invalid_data" Description: "Info only, no action" Units: Count } ];
  delphi.Counter phv_done0 = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_sw_phv_mem_phv_done0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter phv_done1 = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_sw_phv_mem_phv_done1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter phv_done2 = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_sw_phv_mem_phv_done2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter phv_done3 = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_sw_phv_mem_phv_done3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter phv_done4 = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_sw_phv_mem_phv_done4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter phv_done5 = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_sw_phv_mem_phv_done5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter phv_done6 = 12 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_sw_phv_mem_phv_done6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter phv_done7 = 13 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_sw_phv_mem_phv_done7" Description: "Info only, no action" Units: Count } ];
}

message Ppappa1intintfMetrics {
  fixed64 Key = 1;
  delphi.Counter pb_err = 2 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_intf_pb_err" Description: "Packet err bit set along with EOP in packet bus from buffer to Parser. Error bit probably is from memory ecc error. Check other interrupts in PB." Units: Count } ];
  delphi.Counter pb_sop_err = 3 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_intf_pb_sop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter pb_eop_err = 4 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_intf_pb_eop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter dp_err = 5 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_intf_dp_err" Description: "Packet err bit set along with EOP in packet bus from Parser to Deparser. Error bit probably is from buffer or from memory ecc error. Check other interrupts." Units: Count } ];
  delphi.Counter dp_sop_err = 6 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_intf_dp_sop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter dp_eop_err = 7 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_intf_dp_eop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter ohi_err = 8 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_intf_ohi_err" Description: "Packet err bit set along with EOP in OHI bus from Parser to Deparser. Error bit probably is from buffer or from memory ecc error. Check other interrupts." Units: Count } ];
  delphi.Counter ohi_sop_err = 9 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_intf_ohi_sop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter ohi_eop_err = 10 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_intf_ohi_eop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter sw_phv_err = 11 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_intf_sw_phv_err" Description: "SW phv gen logic set error along with PHV. Error bit probably is from memory ecc error. Check other interrupts." Units: Count } ];
  delphi.Counter sw_phv_sop_err = 12 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_intf_sw_phv_sop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter sw_phv_eop_err = 13 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_intf_sw_phv_eop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter ma_err = 14 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_intf_ma_err" Description: "Packet err bit set along with EOP in PHV bus from Parser to STG. Error bit probably is from memory ecc error. Check other interrupts." Units: Count } ];
  delphi.Counter ma_sop_err = 15 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_intf_ma_sop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter ma_eop_err = 16 [ (venice.metricsField) = { DisplayName: "ppa_ppa_1_int_intf_ma_eop_err" Description: "hardware error" Units: Count } ];
}

message Sgite0interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter te2mpu_timeout = 7 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_te2mpu_timeout" Description: "impossible, should be disabled" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Sgite0intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter profile_cam_hit0 = 2 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_info_profile_cam_hit0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit1 = 3 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_info_profile_cam_hit1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit2 = 4 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_info_profile_cam_hit2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit3 = 5 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_info_profile_cam_hit3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit4 = 6 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_info_profile_cam_hit4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit5 = 7 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_info_profile_cam_hit5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit6 = 8 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_info_profile_cam_hit6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit7 = 9 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_info_profile_cam_hit7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit8 = 10 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_info_profile_cam_hit8" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit9 = 11 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_info_profile_cam_hit9" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit10 = 12 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_info_profile_cam_hit10" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit11 = 13 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_info_profile_cam_hit11" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit12 = 14 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_info_profile_cam_hit12" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit13 = 15 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_info_profile_cam_hit13" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit14 = 16 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_info_profile_cam_hit14" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit15 = 17 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_info_profile_cam_hit15" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_miss = 18 [ (venice.metricsField) = { DisplayName: "sgi_te_0_int_info_profile_cam_miss" Description: "Info only, no action" Units: Count } ];
}

message Sgite1interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter te2mpu_timeout = 7 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_te2mpu_timeout" Description: "impossible, should be disabled" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Sgite1intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter profile_cam_hit0 = 2 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_info_profile_cam_hit0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit1 = 3 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_info_profile_cam_hit1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit2 = 4 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_info_profile_cam_hit2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit3 = 5 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_info_profile_cam_hit3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit4 = 6 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_info_profile_cam_hit4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit5 = 7 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_info_profile_cam_hit5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit6 = 8 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_info_profile_cam_hit6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit7 = 9 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_info_profile_cam_hit7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit8 = 10 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_info_profile_cam_hit8" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit9 = 11 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_info_profile_cam_hit9" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit10 = 12 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_info_profile_cam_hit10" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit11 = 13 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_info_profile_cam_hit11" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit12 = 14 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_info_profile_cam_hit12" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit13 = 15 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_info_profile_cam_hit13" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit14 = 16 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_info_profile_cam_hit14" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit15 = 17 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_info_profile_cam_hit15" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_miss = 18 [ (venice.metricsField) = { DisplayName: "sgi_te_1_int_info_profile_cam_miss" Description: "Info only, no action" Units: Count } ];
}

message Sgite2interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter te2mpu_timeout = 7 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_te2mpu_timeout" Description: "impossible, should be disabled" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Sgite2intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter profile_cam_hit0 = 2 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_info_profile_cam_hit0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit1 = 3 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_info_profile_cam_hit1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit2 = 4 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_info_profile_cam_hit2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit3 = 5 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_info_profile_cam_hit3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit4 = 6 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_info_profile_cam_hit4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit5 = 7 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_info_profile_cam_hit5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit6 = 8 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_info_profile_cam_hit6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit7 = 9 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_info_profile_cam_hit7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit8 = 10 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_info_profile_cam_hit8" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit9 = 11 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_info_profile_cam_hit9" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit10 = 12 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_info_profile_cam_hit10" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit11 = 13 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_info_profile_cam_hit11" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit12 = 14 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_info_profile_cam_hit12" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit13 = 15 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_info_profile_cam_hit13" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit14 = 16 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_info_profile_cam_hit14" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit15 = 17 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_info_profile_cam_hit15" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_miss = 18 [ (venice.metricsField) = { DisplayName: "sgi_te_2_int_info_profile_cam_miss" Description: "Info only, no action" Units: Count } ];
}

message Sgite3interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter te2mpu_timeout = 7 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_te2mpu_timeout" Description: "impossible, should be disabled" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Sgite3intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter profile_cam_hit0 = 2 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_info_profile_cam_hit0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit1 = 3 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_info_profile_cam_hit1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit2 = 4 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_info_profile_cam_hit2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit3 = 5 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_info_profile_cam_hit3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit4 = 6 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_info_profile_cam_hit4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit5 = 7 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_info_profile_cam_hit5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit6 = 8 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_info_profile_cam_hit6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit7 = 9 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_info_profile_cam_hit7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit8 = 10 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_info_profile_cam_hit8" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit9 = 11 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_info_profile_cam_hit9" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit10 = 12 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_info_profile_cam_hit10" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit11 = 13 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_info_profile_cam_hit11" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit12 = 14 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_info_profile_cam_hit12" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit13 = 15 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_info_profile_cam_hit13" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit14 = 16 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_info_profile_cam_hit14" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit15 = 17 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_info_profile_cam_hit15" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_miss = 18 [ (venice.metricsField) = { DisplayName: "sgi_te_3_int_info_profile_cam_miss" Description: "Info only, no action" Units: Count } ];
}

message Sgite4interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter te2mpu_timeout = 7 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_te2mpu_timeout" Description: "impossible, should be disabled" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Sgite4intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter profile_cam_hit0 = 2 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_info_profile_cam_hit0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit1 = 3 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_info_profile_cam_hit1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit2 = 4 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_info_profile_cam_hit2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit3 = 5 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_info_profile_cam_hit3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit4 = 6 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_info_profile_cam_hit4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit5 = 7 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_info_profile_cam_hit5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit6 = 8 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_info_profile_cam_hit6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit7 = 9 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_info_profile_cam_hit7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit8 = 10 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_info_profile_cam_hit8" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit9 = 11 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_info_profile_cam_hit9" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit10 = 12 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_info_profile_cam_hit10" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit11 = 13 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_info_profile_cam_hit11" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit12 = 14 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_info_profile_cam_hit12" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit13 = 15 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_info_profile_cam_hit13" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit14 = 16 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_info_profile_cam_hit14" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit15 = 17 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_info_profile_cam_hit15" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_miss = 18 [ (venice.metricsField) = { DisplayName: "sgi_te_4_int_info_profile_cam_miss" Description: "Info only, no action" Units: Count } ];
}

message Sgite5interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter te2mpu_timeout = 7 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_te2mpu_timeout" Description: "impossible, should be disabled" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Sgite5intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter profile_cam_hit0 = 2 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_info_profile_cam_hit0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit1 = 3 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_info_profile_cam_hit1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit2 = 4 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_info_profile_cam_hit2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit3 = 5 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_info_profile_cam_hit3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit4 = 6 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_info_profile_cam_hit4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit5 = 7 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_info_profile_cam_hit5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit6 = 8 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_info_profile_cam_hit6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit7 = 9 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_info_profile_cam_hit7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit8 = 10 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_info_profile_cam_hit8" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit9 = 11 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_info_profile_cam_hit9" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit10 = 12 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_info_profile_cam_hit10" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit11 = 13 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_info_profile_cam_hit11" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit12 = 14 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_info_profile_cam_hit12" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit13 = 15 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_info_profile_cam_hit13" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit14 = 16 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_info_profile_cam_hit14" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit15 = 17 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_info_profile_cam_hit15" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_miss = 18 [ (venice.metricsField) = { DisplayName: "sgi_te_5_int_info_profile_cam_miss" Description: "Info only, no action" Units: Count } ];
}

message Sgimpu0interrMetrics {
  fixed64 Key = 1;
  delphi.Counter results_mismatch = 2 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_results_mismatch" Description: "mask this interrupt, not fully implemented" Units: Count } ];
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Sgimpu0intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter trace_full_0 = 2 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_info_trace_full_0" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_1 = 3 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_info_trace_full_1" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_2 = 4 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_info_trace_full_2" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_3 = 5 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_info_trace_full_3" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "sgi_mpu_0_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Sgimpu1interrMetrics {
  fixed64 Key = 1;
  delphi.Counter results_mismatch = 2 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_results_mismatch" Description: "mask this interrupt, not fully implemented" Units: Count } ];
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Sgimpu1intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter trace_full_0 = 2 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_info_trace_full_0" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_1 = 3 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_info_trace_full_1" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_2 = 4 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_info_trace_full_2" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_3 = 5 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_info_trace_full_3" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "sgi_mpu_1_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Sgimpu2interrMetrics {
  fixed64 Key = 1;
  delphi.Counter results_mismatch = 2 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_results_mismatch" Description: "mask this interrupt, not fully implemented" Units: Count } ];
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Sgimpu2intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter trace_full_0 = 2 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_info_trace_full_0" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_1 = 3 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_info_trace_full_1" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_2 = 4 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_info_trace_full_2" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_3 = 5 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_info_trace_full_3" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "sgi_mpu_2_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Sgimpu3interrMetrics {
  fixed64 Key = 1;
  delphi.Counter results_mismatch = 2 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_results_mismatch" Description: "mask this interrupt, not fully implemented" Units: Count } ];
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Sgimpu3intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter trace_full_0 = 2 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_info_trace_full_0" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_1 = 3 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_info_trace_full_1" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_2 = 4 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_info_trace_full_2" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_3 = 5 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_info_trace_full_3" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "sgi_mpu_3_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Sgimpu4interrMetrics {
  fixed64 Key = 1;
  delphi.Counter results_mismatch = 2 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_results_mismatch" Description: "mask this interrupt, not fully implemented" Units: Count } ];
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Sgimpu4intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter trace_full_0 = 2 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_info_trace_full_0" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_1 = 3 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_info_trace_full_1" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_2 = 4 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_info_trace_full_2" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_3 = 5 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_info_trace_full_3" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "sgi_mpu_4_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Sgimpu5interrMetrics {
  fixed64 Key = 1;
  delphi.Counter results_mismatch = 2 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_results_mismatch" Description: "mask this interrupt, not fully implemented" Units: Count } ];
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Sgimpu5intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter trace_full_0 = 2 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_info_trace_full_0" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_1 = 3 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_info_trace_full_1" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_2 = 4 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_info_trace_full_2" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_3 = 5 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_info_trace_full_3" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "sgi_mpu_5_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message RpcpicsintpicsMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable_ecc = 2 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_pics_uncorrectable_ecc" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter correctable_ecc = 3 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_pics_correctable_ecc" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter too_many_rl_sch_error = 4 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_pics_too_many_rl_sch_error" Description: "SW programming error" Units: Count } ];
  delphi.Counter picc = 5 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_pics_picc" Description: "Info only, no action" Units: Count } ];
}

message RpcpicsintbadaddrMetrics {
  fixed64 Key = 1;
  delphi.Counter rdreq0_bad_addr = 2 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_badaddr_rdreq0_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq0_bad_addr = 3 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_badaddr_wrreq0_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq1_bad_addr = 4 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_badaddr_rdreq1_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq1_bad_addr = 5 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_badaddr_wrreq1_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq2_bad_addr = 6 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_badaddr_rdreq2_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq2_bad_addr = 7 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_badaddr_wrreq2_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq3_bad_addr = 8 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_badaddr_rdreq3_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq3_bad_addr = 9 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_badaddr_wrreq3_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq4_bad_addr = 10 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_badaddr_rdreq4_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq4_bad_addr = 11 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_badaddr_wrreq4_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq5_bad_addr = 12 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_badaddr_rdreq5_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq5_bad_addr = 13 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_badaddr_wrreq5_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq6_bad_addr = 14 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_badaddr_rdreq6_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq6_bad_addr = 15 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_badaddr_wrreq6_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq7_bad_addr = 16 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_badaddr_rdreq7_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq7_bad_addr = 17 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_badaddr_wrreq7_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter cpu_bad_addr = 18 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_badaddr_cpu_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter bg_bad_addr = 19 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_badaddr_bg_bad_addr" Description: "SW programming error" Units: Count } ];
}

message RpcpicsintbgMetrics {
  fixed64 Key = 1;
  delphi.Counter unfinished_bg0 = 2 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_bg_unfinished_bg0" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg1 = 3 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_bg_unfinished_bg1" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg2 = 4 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_bg_unfinished_bg2" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg3 = 5 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_bg_unfinished_bg3" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg4 = 6 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_bg_unfinished_bg4" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg5 = 7 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_bg_unfinished_bg5" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg6 = 8 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_bg_unfinished_bg6" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg7 = 9 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_bg_unfinished_bg7" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg8 = 10 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_bg_unfinished_bg8" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg9 = 11 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_bg_unfinished_bg9" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg10 = 12 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_bg_unfinished_bg10" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg11 = 13 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_bg_unfinished_bg11" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg12 = 14 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_bg_unfinished_bg12" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg13 = 15 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_bg_unfinished_bg13" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg14 = 16 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_bg_unfinished_bg14" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg15 = 17 [ (venice.metricsField) = { DisplayName: "rpc_pics_int_bg_unfinished_bg15" Description: "SW programming error" Units: Count } ];
}

message RpcpicspiccintpiccMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable_ecc = 2 [ (venice.metricsField) = { DisplayName: "rpc_pics_picc_int_picc_uncorrectable_ecc" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter correctable_ecc = 3 [ (venice.metricsField) = { DisplayName: "rpc_pics_picc_int_picc_correctable_ecc" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter cache_stg_awlen_err = 4 [ (venice.metricsField) = { DisplayName: "rpc_pics_picc_int_picc_cache_stg_awlen_err" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_rresp_slverr = 5 [ (venice.metricsField) = { DisplayName: "rpc_pics_picc_int_picc_cache_hbm_rresp_slverr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_rresp_decerr = 6 [ (venice.metricsField) = { DisplayName: "rpc_pics_picc_int_picc_cache_hbm_rresp_decerr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_bresp_slverr = 7 [ (venice.metricsField) = { DisplayName: "rpc_pics_picc_int_picc_cache_hbm_bresp_slverr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_bresp_decerr = 8 [ (venice.metricsField) = { DisplayName: "rpc_pics_picc_int_picc_cache_hbm_bresp_decerr" Description: "HBM access fatal error" Units: Count } ];
}

message IntrintrintintreccMetrics {
  fixed64 Key = 1;
  delphi.Counter intr_state_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "intr_intr_int_intr_ecc_intr_state_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter intr_state_correctable = 3 [ (venice.metricsField) = { DisplayName: "intr_intr_int_intr_ecc_intr_state_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter intr_pba_cfg_uncorrectable = 4 [ (venice.metricsField) = { DisplayName: "intr_intr_int_intr_ecc_intr_pba_cfg_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter intr_pba_cfg_correctable = 5 [ (venice.metricsField) = { DisplayName: "intr_intr_int_intr_ecc_intr_pba_cfg_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter intr_coalesce_uncorrectable = 6 [ (venice.metricsField) = { DisplayName: "intr_intr_int_intr_ecc_intr_coalesce_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter intr_coalesce_correctable = 7 [ (venice.metricsField) = { DisplayName: "intr_intr_int_intr_ecc_intr_coalesce_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter intr_legacy_fifo_overrun = 8 [ (venice.metricsField) = { DisplayName: "intr_intr_int_intr_ecc_intr_legacy_fifo_overrun" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter int_credit_positive_after_return_interrupt = 9 [ (venice.metricsField) = { DisplayName: "intr_intr_int_intr_ecc_int_credit_positive_after_return_interrupt" Description: "" Units: Count } ];
  delphi.Counter int_credits_max_debug_threshold_interrupt = 10 [ (venice.metricsField) = { DisplayName: "intr_intr_int_intr_ecc_int_credits_max_debug_threshold_interrupt" Description: "Info only, no action" Units: Count } ];
  delphi.Counter intr_bresp_err = 11 [ (venice.metricsField) = { DisplayName: "intr_intr_int_intr_ecc_intr_bresp_err" Description: "" Units: Count } ];
}

message PxbpxbinttgteccMetrics {
  fixed64 Key = 1;
  delphi.Counter aximst_0_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_aximst_0_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter aximst_0_correctable = 3 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_aximst_0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter aximst_1_uncorrectable = 4 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_aximst_1_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter aximst_1_correctable = 5 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_aximst_1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter aximst_2_uncorrectable = 6 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_aximst_2_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter aximst_2_correctable = 7 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_aximst_2_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter aximst_3_uncorrectable = 8 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_aximst_3_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter aximst_3_correctable = 9 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_aximst_3_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter aximst_4_uncorrectable = 10 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_aximst_4_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter aximst_4_correctable = 11 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_aximst_4_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rxcrbfr_0_uncorrectable = 12 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_rxcrbfr_0_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxcrbfr_0_correctable = 13 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_rxcrbfr_0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rxcrbfr_1_uncorrectable = 14 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_rxcrbfr_1_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxcrbfr_1_correctable = 15 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_rxcrbfr_1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rxcrbfr_2_uncorrectable = 16 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_rxcrbfr_2_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxcrbfr_2_correctable = 17 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_rxcrbfr_2_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rxcrbfr_3_uncorrectable = 18 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_rxcrbfr_3_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxcrbfr_3_correctable = 19 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_rxcrbfr_3_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rxinfo_uncorrectable = 20 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_rxinfo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxinfo_correctable = 21 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_rxinfo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter cplst_uncorrectable = 22 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_cplst_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter cplst_correctable = 23 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_cplst_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter romask_uncorrectable = 24 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_romask_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter romask_correctable = 25 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_romask_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter pmr_uncorrectable = 26 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_pmr_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter pmr_correctable = 27 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_pmr_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter prt_uncorrectable = 28 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_prt_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter prt_correctable = 29 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_tgt_ecc_prt_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message PxbpxbintitreccMetrics {
  fixed64 Key = 1;
  delphi.Counter pcihdrt_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_itr_ecc_pcihdrt_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter pcihdrt_correctable = 3 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_itr_ecc_pcihdrt_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter portmap_uncorrectable = 4 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_itr_ecc_portmap_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter portmap_correctable = 5 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_itr_ecc_portmap_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter wrhdr_uncorrectable = 6 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_itr_ecc_wrhdr_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter wrhdr_correctable = 7 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_itr_ecc_wrhdr_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rdhdr_uncorrectable = 8 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_itr_ecc_rdhdr_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rdhdr_correctable = 9 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_itr_ecc_rdhdr_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter wrbfr_0_uncorrectable = 10 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_itr_ecc_wrbfr_0_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter wrbfr_0_correctable = 11 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_itr_ecc_wrbfr_0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter wrbfr_1_uncorrectable = 12 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_itr_ecc_wrbfr_1_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter wrbfr_1_correctable = 13 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_itr_ecc_wrbfr_1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter wrbfr_2_uncorrectable = 14 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_itr_ecc_wrbfr_2_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter wrbfr_2_correctable = 15 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_itr_ecc_wrbfr_2_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter wrbfr_3_uncorrectable = 16 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_itr_ecc_wrbfr_3_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter wrbfr_3_correctable = 17 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_itr_ecc_wrbfr_3_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter cplbfr_uncorrectable = 18 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_itr_ecc_cplbfr_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter cplbfr_correctable = 19 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_itr_ecc_cplbfr_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message PxbpxbinterrMetrics {
  fixed64 Key = 1;
  delphi.Counter cpl_ecrc = 2 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_cpl_ecrc" Description: "" Units: Count } ];
  delphi.Counter cpl_rxbuf_err = 3 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_cpl_rxbuf_err" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter cpl_stat = 4 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_cpl_stat" Description: "" Units: Count } ];
  delphi.Counter cpl_unexp = 5 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_cpl_unexp" Description: "" Units: Count } ];
  delphi.Counter cpl_timeout = 6 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_cpl_timeout" Description: "Completion timeout for initiator requests, maybe link issue or host is hung or something fatal across pcie link" Units: Count } ];
  delphi.Counter cpl_len = 7 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_cpl_len" Description: "" Units: Count } ];
  delphi.Counter cpl_poison = 8 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_cpl_poison" Description: "" Units: Count } ];
  delphi.Counter cpl_lowaddr = 9 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_cpl_lowaddr" Description: "" Units: Count } ];
  delphi.Counter tgt_ind_rsp_unexp = 10 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_tgt_ind_rsp_unexp" Description: "" Units: Count } ];
  delphi.Counter tgt_axi_rsp_unexp = 11 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_tgt_axi_rsp_unexp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tgt_axi_rsp_err = 12 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_tgt_axi_rsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tgt_req_4k_err = 13 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_tgt_req_4k_err" Description: "" Units: Count } ];
  delphi.Counter itr_req_bdfmiss = 14 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_itr_req_bdfmiss" Description: "" Units: Count } ];
  delphi.Counter itr_req_axi_unsupp = 15 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_itr_req_axi_unsupp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter itr_req_msg_align_err = 16 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_itr_req_msg_align_err" Description: "" Units: Count } ];
  delphi.Counter itr_bus_master_dis = 17 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_itr_bus_master_dis" Description: "" Units: Count } ];
  delphi.Counter itr_atomic_seq_err = 18 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_itr_atomic_seq_err" Description: "" Units: Count } ];
  delphi.Counter itr_atomic_resource_err = 19 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_itr_atomic_resource_err" Description: "" Units: Count } ];
  delphi.Counter tgt_rmw_axi_resperr = 20 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_tgt_rmw_axi_resperr" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tgt_ind_notify_axi_resperr = 21 [ (venice.metricsField) = { DisplayName: "pxb_pxb_int_err_tgt_ind_notify_axi_resperr" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
}

message Sgete0interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter te2mpu_timeout = 7 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_te2mpu_timeout" Description: "impossible, should be disabled" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Sgete0intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter profile_cam_hit0 = 2 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_info_profile_cam_hit0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit1 = 3 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_info_profile_cam_hit1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit2 = 4 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_info_profile_cam_hit2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit3 = 5 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_info_profile_cam_hit3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit4 = 6 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_info_profile_cam_hit4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit5 = 7 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_info_profile_cam_hit5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit6 = 8 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_info_profile_cam_hit6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit7 = 9 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_info_profile_cam_hit7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit8 = 10 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_info_profile_cam_hit8" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit9 = 11 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_info_profile_cam_hit9" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit10 = 12 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_info_profile_cam_hit10" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit11 = 13 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_info_profile_cam_hit11" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit12 = 14 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_info_profile_cam_hit12" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit13 = 15 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_info_profile_cam_hit13" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit14 = 16 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_info_profile_cam_hit14" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit15 = 17 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_info_profile_cam_hit15" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_miss = 18 [ (venice.metricsField) = { DisplayName: "sge_te_0_int_info_profile_cam_miss" Description: "Info only, no action" Units: Count } ];
}

message Sgete1interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter te2mpu_timeout = 7 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_te2mpu_timeout" Description: "impossible, should be disabled" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Sgete1intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter profile_cam_hit0 = 2 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_info_profile_cam_hit0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit1 = 3 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_info_profile_cam_hit1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit2 = 4 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_info_profile_cam_hit2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit3 = 5 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_info_profile_cam_hit3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit4 = 6 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_info_profile_cam_hit4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit5 = 7 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_info_profile_cam_hit5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit6 = 8 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_info_profile_cam_hit6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit7 = 9 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_info_profile_cam_hit7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit8 = 10 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_info_profile_cam_hit8" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit9 = 11 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_info_profile_cam_hit9" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit10 = 12 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_info_profile_cam_hit10" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit11 = 13 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_info_profile_cam_hit11" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit12 = 14 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_info_profile_cam_hit12" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit13 = 15 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_info_profile_cam_hit13" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit14 = 16 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_info_profile_cam_hit14" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit15 = 17 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_info_profile_cam_hit15" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_miss = 18 [ (venice.metricsField) = { DisplayName: "sge_te_1_int_info_profile_cam_miss" Description: "Info only, no action" Units: Count } ];
}

message Sgete2interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter te2mpu_timeout = 7 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_te2mpu_timeout" Description: "impossible, should be disabled" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Sgete2intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter profile_cam_hit0 = 2 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_info_profile_cam_hit0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit1 = 3 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_info_profile_cam_hit1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit2 = 4 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_info_profile_cam_hit2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit3 = 5 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_info_profile_cam_hit3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit4 = 6 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_info_profile_cam_hit4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit5 = 7 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_info_profile_cam_hit5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit6 = 8 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_info_profile_cam_hit6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit7 = 9 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_info_profile_cam_hit7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit8 = 10 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_info_profile_cam_hit8" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit9 = 11 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_info_profile_cam_hit9" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit10 = 12 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_info_profile_cam_hit10" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit11 = 13 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_info_profile_cam_hit11" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit12 = 14 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_info_profile_cam_hit12" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit13 = 15 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_info_profile_cam_hit13" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit14 = 16 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_info_profile_cam_hit14" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit15 = 17 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_info_profile_cam_hit15" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_miss = 18 [ (venice.metricsField) = { DisplayName: "sge_te_2_int_info_profile_cam_miss" Description: "Info only, no action" Units: Count } ];
}

message Sgete3interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter te2mpu_timeout = 7 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_te2mpu_timeout" Description: "impossible, should be disabled" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Sgete3intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter profile_cam_hit0 = 2 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_info_profile_cam_hit0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit1 = 3 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_info_profile_cam_hit1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit2 = 4 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_info_profile_cam_hit2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit3 = 5 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_info_profile_cam_hit3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit4 = 6 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_info_profile_cam_hit4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit5 = 7 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_info_profile_cam_hit5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit6 = 8 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_info_profile_cam_hit6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit7 = 9 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_info_profile_cam_hit7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit8 = 10 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_info_profile_cam_hit8" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit9 = 11 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_info_profile_cam_hit9" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit10 = 12 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_info_profile_cam_hit10" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit11 = 13 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_info_profile_cam_hit11" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit12 = 14 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_info_profile_cam_hit12" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit13 = 15 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_info_profile_cam_hit13" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit14 = 16 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_info_profile_cam_hit14" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit15 = 17 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_info_profile_cam_hit15" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_miss = 18 [ (venice.metricsField) = { DisplayName: "sge_te_3_int_info_profile_cam_miss" Description: "Info only, no action" Units: Count } ];
}

message Sgete4interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter te2mpu_timeout = 7 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_te2mpu_timeout" Description: "impossible, should be disabled" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Sgete4intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter profile_cam_hit0 = 2 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_info_profile_cam_hit0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit1 = 3 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_info_profile_cam_hit1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit2 = 4 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_info_profile_cam_hit2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit3 = 5 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_info_profile_cam_hit3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit4 = 6 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_info_profile_cam_hit4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit5 = 7 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_info_profile_cam_hit5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit6 = 8 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_info_profile_cam_hit6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit7 = 9 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_info_profile_cam_hit7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit8 = 10 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_info_profile_cam_hit8" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit9 = 11 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_info_profile_cam_hit9" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit10 = 12 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_info_profile_cam_hit10" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit11 = 13 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_info_profile_cam_hit11" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit12 = 14 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_info_profile_cam_hit12" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit13 = 15 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_info_profile_cam_hit13" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit14 = 16 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_info_profile_cam_hit14" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit15 = 17 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_info_profile_cam_hit15" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_miss = 18 [ (venice.metricsField) = { DisplayName: "sge_te_4_int_info_profile_cam_miss" Description: "Info only, no action" Units: Count } ];
}

message Sgete5interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter te2mpu_timeout = 7 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_te2mpu_timeout" Description: "impossible, should be disabled" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Sgete5intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter profile_cam_hit0 = 2 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_info_profile_cam_hit0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit1 = 3 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_info_profile_cam_hit1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit2 = 4 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_info_profile_cam_hit2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit3 = 5 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_info_profile_cam_hit3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit4 = 6 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_info_profile_cam_hit4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit5 = 7 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_info_profile_cam_hit5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit6 = 8 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_info_profile_cam_hit6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit7 = 9 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_info_profile_cam_hit7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit8 = 10 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_info_profile_cam_hit8" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit9 = 11 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_info_profile_cam_hit9" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit10 = 12 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_info_profile_cam_hit10" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit11 = 13 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_info_profile_cam_hit11" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit12 = 14 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_info_profile_cam_hit12" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit13 = 15 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_info_profile_cam_hit13" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit14 = 16 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_info_profile_cam_hit14" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_hit15 = 17 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_info_profile_cam_hit15" Description: "Info only, no action" Units: Count } ];
  delphi.Counter profile_cam_miss = 18 [ (venice.metricsField) = { DisplayName: "sge_te_5_int_info_profile_cam_miss" Description: "Info only, no action" Units: Count } ];
}

message Sgempu0interrMetrics {
  fixed64 Key = 1;
  delphi.Counter results_mismatch = 2 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_results_mismatch" Description: "mask this interrupt, not fully implemented" Units: Count } ];
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Sgempu0intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter trace_full_0 = 2 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_info_trace_full_0" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_1 = 3 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_info_trace_full_1" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_2 = 4 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_info_trace_full_2" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_3 = 5 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_info_trace_full_3" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "sge_mpu_0_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Sgempu1interrMetrics {
  fixed64 Key = 1;
  delphi.Counter results_mismatch = 2 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_results_mismatch" Description: "mask this interrupt, not fully implemented" Units: Count } ];
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Sgempu1intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter trace_full_0 = 2 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_info_trace_full_0" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_1 = 3 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_info_trace_full_1" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_2 = 4 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_info_trace_full_2" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_3 = 5 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_info_trace_full_3" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "sge_mpu_1_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Sgempu2interrMetrics {
  fixed64 Key = 1;
  delphi.Counter results_mismatch = 2 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_results_mismatch" Description: "mask this interrupt, not fully implemented" Units: Count } ];
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Sgempu2intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter trace_full_0 = 2 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_info_trace_full_0" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_1 = 3 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_info_trace_full_1" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_2 = 4 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_info_trace_full_2" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_3 = 5 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_info_trace_full_3" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "sge_mpu_2_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Sgempu3interrMetrics {
  fixed64 Key = 1;
  delphi.Counter results_mismatch = 2 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_results_mismatch" Description: "mask this interrupt, not fully implemented" Units: Count } ];
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Sgempu3intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter trace_full_0 = 2 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_info_trace_full_0" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_1 = 3 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_info_trace_full_1" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_2 = 4 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_info_trace_full_2" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_3 = 5 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_info_trace_full_3" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "sge_mpu_3_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Sgempu4interrMetrics {
  fixed64 Key = 1;
  delphi.Counter results_mismatch = 2 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_results_mismatch" Description: "mask this interrupt, not fully implemented" Units: Count } ];
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Sgempu4intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter trace_full_0 = 2 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_info_trace_full_0" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_1 = 3 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_info_trace_full_1" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_2 = 4 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_info_trace_full_2" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_3 = 5 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_info_trace_full_3" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "sge_mpu_4_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Sgempu5interrMetrics {
  fixed64 Key = 1;
  delphi.Counter results_mismatch = 2 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_results_mismatch" Description: "mask this interrupt, not fully implemented" Units: Count } ];
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Sgempu5intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter trace_full_0 = 2 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_info_trace_full_0" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_1 = 3 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_info_trace_full_1" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_2 = 4 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_info_trace_full_2" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter trace_full_3 = 5 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_info_trace_full_3" Description: "MPU debug trace buffer has filled" Units: Count } ];
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "sge_mpu_5_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Prprintreg1Metrics {
  fixed64 Key = 1;
  delphi.Counter slave_prd = 2 [ (venice.metricsField) = { DisplayName: "pr_pr_int_reg1_slave_prd" Description: "" Units: Count } ];
  delphi.Counter slave_psp = 3 [ (venice.metricsField) = { DisplayName: "pr_pr_int_reg1_slave_psp" Description: "" Units: Count } ];
}

message PrprpspintinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter pr_pkt_ff_almost_full = 2 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_info_pr_pkt_ff_almost_full" Description: "almost full flow control was asserted" Units: Count } ];
  delphi.Counter ptd_npv_phv_full = 3 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_info_ptd_npv_phv_full" Description: "almost full flow control was asserted" Units: Count } ];
  delphi.Counter phv_srdy_collapsed = 4 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_info_phv_srdy_collapsed" Description: "collapsed multiple idential PHVs" Units: Count } ];
  delphi.Counter pr_resub_pkt_before_phv = 5 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_info_pr_resub_pkt_before_phv" Description: "received the PKT before the PHV on the resub busses" Units: Count } ];
  delphi.Counter pb_pbus_fsm0_no_data = 6 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_info_pb_pbus_fsm0_no_data" Description: "received PHV with no data" Units: Count } ];
  delphi.Counter pb_pbus_fsm1_no_data = 7 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_info_pb_pbus_fsm1_no_data" Description: "received PHV with no data" Units: Count } ];
  delphi.Counter pb_pbus_fsm2_no_data = 8 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_info_pb_pbus_fsm2_no_data" Description: "received PHV with no data" Units: Count } ];
  delphi.Counter pb_pbus_fsm3_no_data = 9 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_info_pb_pbus_fsm3_no_data" Description: "received PHV with no data" Units: Count } ];
  delphi.Counter pb_pbus_fsm4_no_data = 10 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_info_pb_pbus_fsm4_no_data" Description: "received PHV with no data" Units: Count } ];
}

message PrprpspinterrMetrics {
  fixed64 Key = 1;
  delphi.Counter pb_pbus_err = 2 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_err_pb_pbus_err" Description: "error bit received ont the input PKT bus" Units: Count } ];
  delphi.Counter pr_pbus_err = 3 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_err_pr_pbus_err" Description: "error bit sent on the output PKT bus" Units: Count } ];
  delphi.Counter pr_resub_pbus_err = 4 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_err_pr_resub_pbus_err" Description: "error bit received ont the input PKT bus" Units: Count } ];
  delphi.Counter psp_csr_read_access_err = 5 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_err_psp_csr_read_access_err" Description: "psp_csr_read_access && psp_csr_ready && psp_csr_error" Units: Count } ];
  delphi.Counter psp_csr_write_access_err = 6 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_err_psp_csr_write_access_err" Description: "psp_csr_write_access && psp_csr_ready && psp_csr_error" Units: Count } ];
  delphi.Counter psp_phv_larger_than_twelve_flits_err = 7 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_err_psp_phv_larger_than_twelve_flits_err" Description: "PHV over the max 12 flits received and truncated" Units: Count } ];
  delphi.Counter psp_phv_sop_offset_err = 8 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_err_psp_phv_sop_offset_err" Description: "EOP seen before reaching PHV offset in SOP flit" Units: Count } ];
  delphi.Counter psp_phv_eop_offset_err = 9 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_err_psp_phv_eop_offset_err" Description: "EOP seen before reaching PHV offset" Units: Count } ];
  delphi.Counter max_recir_count_err = 10 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_err_max_recir_count_err" Description: "a packet was recirculated through P4+ more than the cfg_profile_recirc_max" Units: Count } ];
  delphi.Counter pb_pbus_dummy_err = 11 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_err_pb_pbus_dummy_err" Description: "there was a missing PKT after the PHV, so the HW generated a dummy PKT" Units: Count } ];
  delphi.Counter pb_pbus_nopkt_err = 12 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_err_pb_pbus_nopkt_err" Description: "PKT smaller than 12 flits received from the input PKT bus, PKT data was dropped" Units: Count } ];
  delphi.Counter pb_pbus_min_err = 13 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_err_pb_pbus_min_err" Description: "PKT smaller than cfg_profile_phv_min received from the input PKT bus" Units: Count } ];
  delphi.Counter lb_phv_almost_full_timeout_err = 14 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_err_lb_phv_almost_full_timeout_err" Description: "the PHV state machine waited for longer than cfg_profile_almost_full_timer_max" Units: Count } ];
  delphi.Counter lb_pkt_almost_full_timeout_err = 15 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_err_lb_pkt_almost_full_timeout_err" Description: "the PKT state machine waited for longer than cfg_profile_almost_full_timer_max" Units: Count } ];
}

message PrprpspintfatalMetrics {
  fixed64 Key = 1;
  delphi.Counter pb_pbus_sop_err = 2 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_pb_pbus_sop_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter pb_pbus_eop_err = 3 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_pb_pbus_eop_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter ma_sop_err = 4 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_ma_sop_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter ma_eop_err = 5 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_ma_eop_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter pr_pbus_sop_err = 6 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_pr_pbus_sop_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter pr_pbus_eop_err = 7 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_pr_pbus_eop_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter pr_resub_pbus_sop_err = 8 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_pr_resub_pbus_sop_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter pr_resub_pbus_eop_err = 9 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_pr_resub_pbus_eop_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter pr_resub_sop_err = 10 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_pr_resub_sop_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter pr_resub_eop_err = 11 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_pr_resub_eop_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter pb_pbus_fsm0_no_data_err = 12 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_pb_pbus_fsm0_no_data_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter pb_pbus_fsm1_no_data_err = 13 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_pb_pbus_fsm1_no_data_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter pb_pbus_fsm2_no_data_err = 14 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_pb_pbus_fsm2_no_data_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter pb_pbus_fsm3_no_data_err = 15 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_pb_pbus_fsm3_no_data_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter pb_pbus_fsm4_no_data_err = 16 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_pb_pbus_fsm4_no_data_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter pb_pbus_fsm5_pkt_too_small_err = 17 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_pb_pbus_fsm5_pkt_too_small_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter lif_ind_table_rsp_err = 18 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_lif_ind_table_rsp_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter flit_cnt_oflow_err = 19 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_flit_cnt_oflow_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter lb_phv_sop_err = 20 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_lb_phv_sop_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter dc_phv_sop_err = 21 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_dc_phv_sop_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter lb_pkt_sop_err = 22 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_lb_pkt_sop_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter dc_pkt_sop_err = 23 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_dc_pkt_sop_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
  delphi.Counter sw_phv_jabber_err = 24 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_fatal_sw_phv_jabber_err" Description: "fatal HW fsm error, no HW handling" Units: Count } ];
}

message PrprpspintlifqstatemapMetrics {
  fixed64 Key = 1;
  delphi.Counter ecc_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_lif_qstate_map_ecc_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter ecc_correctable = 3 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_lif_qstate_map_ecc_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter qid_invalid = 4 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_lif_qstate_map_qid_invalid" Description: "lookup in lif table missed" Units: Count } ];
}

message PrprpspintswphvmemMetrics {
  fixed64 Key = 1;
  delphi.Counter ecc_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_sw_phv_mem_ecc_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter ecc_correctable = 3 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_sw_phv_mem_ecc_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter phv_invalid_sram = 4 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_sw_phv_mem_phv_invalid_sram" Description: "bad SW PHV sram programming" Units: Count } ];
  delphi.Counter phv_invalid_data = 5 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_sw_phv_mem_phv_invalid_data" Description: "bad SW PHV sram programming" Units: Count } ];
  delphi.Counter phv_done0 = 6 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_sw_phv_mem_phv_done0" Description: "SW PHV done info" Units: Count } ];
  delphi.Counter phv_done1 = 7 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_sw_phv_mem_phv_done1" Description: "SW PHV done info" Units: Count } ];
  delphi.Counter phv_done2 = 8 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_sw_phv_mem_phv_done2" Description: "SW PHV done info" Units: Count } ];
  delphi.Counter phv_done3 = 9 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_sw_phv_mem_phv_done3" Description: "SW PHV done info" Units: Count } ];
  delphi.Counter phv_done4 = 10 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_sw_phv_mem_phv_done4" Description: "SW PHV done info" Units: Count } ];
  delphi.Counter phv_done5 = 11 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_sw_phv_mem_phv_done5" Description: "SW PHV done info" Units: Count } ];
  delphi.Counter phv_done6 = 12 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_sw_phv_mem_phv_done6" Description: "SW PHV done info" Units: Count } ];
  delphi.Counter phv_done7 = 13 [ (venice.metricsField) = { DisplayName: "pr_pr_psp_int_sw_phv_mem_phv_done7" Description: "SW PHV done info" Units: Count } ];
}

message PrprprdinteccMetrics {
  fixed64 Key = 1;
  delphi.Counter rdata_mem_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_ecc_rdata_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rdata_mem_correctable = 3 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_ecc_rdata_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter pkt_mem_uncorrectable = 4 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_ecc_pkt_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter pkt_mem_correctable = 5 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_ecc_pkt_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message PrprprdintfifoMetrics {
  fixed64 Key = 1;
  delphi.Counter wr_lat_ff_ovflow = 2 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_fifo_wr_lat_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter rd_lat_ff_ovflow = 3 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_fifo_rd_lat_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter wdata_ff_ovflow = 4 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_fifo_wdata_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter rcv_stg_ff_ovflow = 5 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_fifo_rcv_stg_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter cmdflit_ff_ovflow = 6 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_fifo_cmdflit_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter cmd_ff_ovflow = 7 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_fifo_cmd_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pkt_ff_ovflow = 8 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_fifo_pkt_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pkt_order_ff_ovflow = 9 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_fifo_pkt_order_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter pkt_stg_ff_ovflow = 10 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_fifo_pkt_stg_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter wr_mem_ff_ovflow = 11 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_fifo_wr_mem_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter dfence_ff_ovflow = 12 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_fifo_dfence_ff_ovflow" Description: "hardware error" Units: Count } ];
  delphi.Counter ffence_ff_ovflow = 13 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_fifo_ffence_ff_ovflow" Description: "hardware error" Units: Count } ];
}

message Prprprdintgrp1Metrics {
  fixed64 Key = 1;
  delphi.Counter rcv_phv_dma_ptr = 2 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rcv_phv_dma_ptr" Description: "software error. dma pointer points to a non-existing flit in PHV" Units: Count } ];
  delphi.Counter rcv_phv_addr = 3 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rcv_phv_addr" Description: "software error. phv2mem or phv2pkt start/end address is not programmed correctly." Units: Count } ];
  delphi.Counter rcv_exceed_16byte = 4 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rcv_exceed_16byte" Description: "software error. mem2mem_phv2mem or phv2mem with fence exceeded 16 bytes" Units: Count } ];
  delphi.Counter rcv_phv_not_sop = 5 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rcv_phv_not_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter rcv_pkt_order_ff_full = 6 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rcv_pkt_order_ff_full" Description: "hardware error" Units: Count } ];
  delphi.Counter rcv_pend_phv_more_than_2 = 7 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rcv_pend_phv_more_than_2" Description: "hardware error" Units: Count } ];
  delphi.Counter rcv_pend_phv_less = 8 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rcv_pend_phv_less" Description: "hardware error" Units: Count } ];
  delphi.Counter rcv_cmd_nop_eop = 9 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rcv_cmd_nop_eop" Description: "software error" Units: Count } ];
  delphi.Counter rcv_cmd_out_not_sop = 10 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rcv_cmd_out_not_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter rcv_no_data_but_pkt2mem_cmd = 11 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rcv_no_data_but_pkt2mem_cmd" Description: "software error. no_data bit is set in PHV, but it has pkt2mem command. " Units: Count } ];
  delphi.Counter rcv_no_data_but_skip_cmd = 12 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rcv_no_data_but_skip_cmd" Description: "software error. no_data bit is set in PHV, but it has skip command. " Units: Count } ];
  delphi.Counter rcv_mem2pkt_seen = 13 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rcv_mem2pkt_seen" Description: "software error. mem2pkt command not expected in PRD" Units: Count } ];
  delphi.Counter rcv_phv2pkt_seen = 14 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rcv_phv2pkt_seen" Description: "software error. phv2pkt command not expected in PRD" Units: Count } ];
  delphi.Counter rcv_phv_eop_no_cmd_eop = 15 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rcv_phv_eop_no_cmd_eop" Description: "software error. End of PHV reached, but cmdeop is not seen in any command" Units: Count } ];
  delphi.Counter rcv_m2m_dst_not_seen = 16 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rcv_m2m_dst_not_seen" Description: "software error. mem2mem_dst command is expected right after mem2mem_src." Units: Count } ];
  delphi.Counter rcv_m2m_src_not_seen = 17 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rcv_m2m_src_not_seen" Description: "software error. mem2mem_dst command is seen without mem2mem_src before it." Units: Count } ];
  delphi.Counter rdreq_invalid_cmd_seen = 18 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rdreq_invalid_cmd_seen" Description: "software error. invalid cmdtype seen in dma command" Units: Count } ];
  delphi.Counter rdreq_mem2mem_psize_zero = 19 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rdreq_mem2mem_psize_zero" Description: "software error. mem2mem psize field is zero" Units: Count } ];
  delphi.Counter rdreq_m2m_phv2mem_exceed_16byte = 20 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rdreq_m2m_phv2mem_exceed_16byte" Description: "software error. mem2mem_phv2mem exceeds 16 bytes" Units: Count } ];
  delphi.Counter rdreq_phv2mem_fence_exceed_16byte = 21 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rdreq_phv2mem_fence_exceed_16byte" Description: "software error. phv2mem fence exceeds 16 bytes" Units: Count } ];
  delphi.Counter rdreq_pkt2mem_psize_zero = 22 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rdreq_pkt2mem_psize_zero" Description: "software error. pkt2mem psize is zero" Units: Count } ];
  delphi.Counter rdreq_skip_psize_zero = 23 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp1_rdreq_skip_psize_zero" Description: "software error. skip command psize field iz zero" Units: Count } ];
}

message Prprprdintgrp2Metrics {
  fixed64 Key = 1;
  delphi.Counter wr_axi_rd_err_recovery = 2 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp2_wr_axi_rd_err_recovery" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter wr_axi_rd_resp = 3 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp2_wr_axi_rd_resp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter wr_not_enuf_pkt_bytes = 4 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp2_wr_not_enuf_pkt_bytes" Description: "software error. dma command trying to access more packet bytes than what's available in packet" Units: Count } ];
  delphi.Counter wr_invalid_cmd = 5 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp2_wr_invalid_cmd" Description: "software error. Unexpected dma commands seen" Units: Count } ];
  delphi.Counter wr_seq_id = 6 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp2_wr_seq_id" Description: "software error. dma command and packet size out of sync causing seq_id error" Units: Count } ];
  delphi.Counter wr_no_data_pkt_cmd = 7 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp2_wr_no_data_pkt_cmd" Description: "software error. no_data set in phv, but pkt command seen" Units: Count } ];
  delphi.Counter rdrsp_axi = 8 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp2_rdrsp_axi" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter wrrsp_axi = 9 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp2_wrrsp_axi" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter pkt_not_sop = 10 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp2_pkt_not_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter pkt_len_calc_len_mismatch = 11 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp2_pkt_len_calc_len_mismatch" Description: "Info only, no action" Units: Count } ];
  delphi.Counter spurious_rd_resp = 12 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp2_spurious_rd_resp" Description: "unexpected read response received. Check interrupts in other blocks." Units: Count } ];
  delphi.Counter rdrsp_axi_id_out_of_range = 13 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp2_rdrsp_axi_id_out_of_range" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_wr_resp = 14 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp2_spurious_wr_resp" Description: "unexpected read response received. Check interrupts in other blocks." Units: Count } ];
  delphi.Counter wrreq_info_first_missing = 15 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp2_wrreq_info_first_missing" Description: "software error can trigger this interrupt. Can happen with other interrupts. If no other interrupt, then this may be a hw error." Units: Count } ];
  delphi.Counter wrreq_num_bytes_zero = 16 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp2_wrreq_num_bytes_zero" Description: "software error can trigger this interrupt. Can happen with other interrupts. If no other interrupt, then this may be a hw error." Units: Count } ];
  delphi.Counter wrreq_num_bytes_more_than_64 = 17 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_grp2_wrreq_num_bytes_more_than_64" Description: "software error can trigger this interrupt. Can happen with other interrupts. If no other interrupt, then this may be a hw error." Units: Count } ];
}

message PrprprdintintfMetrics {
  fixed64 Key = 1;
  delphi.Counter ps_pkt_err = 2 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_intf_ps_pkt_err" Description: "Packet from PSP received with error bit. The error bit may be from buffer (PB). check interrupts in other blocks." Units: Count } ];
  delphi.Counter ps_pkt_sop_err = 3 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_intf_ps_pkt_sop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter ps_pkt_eop_err = 4 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_intf_ps_pkt_eop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter ps_resub_pkt_err = 5 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_intf_ps_resub_pkt_err" Description: "Packet from PRD to PSP sent with error bit. The error might be from PSP originally or from buffer. Possible ecc error. Check interrupts in other blocks." Units: Count } ];
  delphi.Counter ps_resub_pkt_sop_err = 6 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_intf_ps_resub_pkt_sop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter ps_resub_pkt_eop_err = 7 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_intf_ps_resub_pkt_eop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter ps_resub_phv_err = 8 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_intf_ps_resub_phv_err" Description: "PHV from PRD to PSP sent with error bit. The error might be from STG originally. Possible ecc error. Check interrupts in other blocks." Units: Count } ];
  delphi.Counter ps_resub_phv_sop_err = 9 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_intf_ps_resub_phv_sop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter ps_resub_phv_eop_err = 10 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_intf_ps_resub_phv_eop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter ma_err = 11 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_intf_ma_err" Description: "PHV from STG received with error bit. Possible ecc error. Check interrupts in other blocks." Units: Count } ];
  delphi.Counter ma_sop_err = 12 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_intf_ma_sop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter ma_eop_err = 13 [ (venice.metricsField) = { DisplayName: "pr_pr_prd_int_intf_ma_eop_err" Description: "hardware error" Units: Count } ];
}

message PpppintppMetrics {
  fixed64 Key = 1;
  delphi.Counter ppsd_sbe = 2 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_ppsd_sbe" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter ppsd_dbe = 3 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_ppsd_dbe" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sbus_err = 4 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_sbus_err" Description: "" Units: Count } ];
  delphi.Counter port7_c_int = 5 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_port7_c_int" Description: "Info only, no action" Units: Count } ];
  delphi.Counter port7_p_int = 6 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_port7_p_int" Description: "Info only, no action" Units: Count } ];
  delphi.Counter port6_c_int = 7 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_port6_c_int" Description: "Info only, no action" Units: Count } ];
  delphi.Counter port6_p_int = 8 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_port6_p_int" Description: "Info only, no action" Units: Count } ];
  delphi.Counter port5_c_int = 9 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_port5_c_int" Description: "Info only, no action" Units: Count } ];
  delphi.Counter port5_p_int = 10 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_port5_p_int" Description: "Info only, no action" Units: Count } ];
  delphi.Counter port4_c_int = 11 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_port4_c_int" Description: "Info only, no action" Units: Count } ];
  delphi.Counter port4_p_int = 12 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_port4_p_int" Description: "Info only, no action" Units: Count } ];
  delphi.Counter port3_c_int = 13 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_port3_c_int" Description: "Info only, no action" Units: Count } ];
  delphi.Counter port3_p_int = 14 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_port3_p_int" Description: "Info only, no action" Units: Count } ];
  delphi.Counter port2_c_int = 15 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_port2_c_int" Description: "Info only, no action" Units: Count } ];
  delphi.Counter port2_p_int = 16 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_port2_p_int" Description: "Info only, no action" Units: Count } ];
  delphi.Counter port1_c_int = 17 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_port1_c_int" Description: "Info only, no action" Units: Count } ];
  delphi.Counter port1_p_int = 18 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_port1_p_int" Description: "Info only, no action" Units: Count } ];
  delphi.Counter port0_c_int = 19 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_port0_c_int" Description: "Info only, no action" Units: Count } ];
  delphi.Counter port0_p_int = 20 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_port0_p_int" Description: "Info only, no action" Units: Count } ];
  delphi.Counter perst7n_dn2up = 21 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_perst7n_dn2up" Description: "Info only, no action" Units: Count } ];
  delphi.Counter perst6n_dn2up = 22 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_perst6n_dn2up" Description: "Info only, no action" Units: Count } ];
  delphi.Counter perst5n_dn2up = 23 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_perst5n_dn2up" Description: "Info only, no action" Units: Count } ];
  delphi.Counter perst4n_dn2up = 24 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_perst4n_dn2up" Description: "Info only, no action" Units: Count } ];
  delphi.Counter perst3n_dn2up = 25 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_perst3n_dn2up" Description: "Info only, no action" Units: Count } ];
  delphi.Counter perst2n_dn2up = 26 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_perst2n_dn2up" Description: "Info only, no action" Units: Count } ];
  delphi.Counter perst1n_dn2up = 27 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_perst1n_dn2up" Description: "Info only, no action" Units: Count } ];
  delphi.Counter perst0n_dn2up = 28 [ (venice.metricsField) = { DisplayName: "pp_pp_int_pp_perst0n_dn2up" Description: "Info only, no action" Units: Count } ];
}

message Ppppportp0intpeccMetrics {
  fixed64 Key = 1;
  delphi.Counter rxbfr_overflow = 2 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_0_int_p_ecc_rxbfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter replay_bfr_overflow = 3 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_0_int_p_ecc_replay_bfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter rxtlp_err = 4 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_0_int_p_ecc_rxtlp_err" Description: "Info only, no action" Units: Count } ];
  delphi.Counter txbuf_0_uncorrectable = 5 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_0_int_p_ecc_txbuf_0_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_1_uncorrectable = 6 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_0_int_p_ecc_txbuf_1_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_2_uncorrectable = 7 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_0_int_p_ecc_txbuf_2_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_3_uncorrectable = 8 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_0_int_p_ecc_txbuf_3_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_0_correctable = 9 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_0_int_p_ecc_txbuf_0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_1_correctable = 10 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_0_int_p_ecc_txbuf_1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_2_correctable = 11 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_0_int_p_ecc_txbuf_2_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_3_correctable = 12 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_0_int_p_ecc_txbuf_3_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Ppppportp1intpeccMetrics {
  fixed64 Key = 1;
  delphi.Counter rxbfr_overflow = 2 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_1_int_p_ecc_rxbfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter replay_bfr_overflow = 3 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_1_int_p_ecc_replay_bfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter rxtlp_err = 4 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_1_int_p_ecc_rxtlp_err" Description: "Info only, no action" Units: Count } ];
  delphi.Counter txbuf_0_uncorrectable = 5 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_1_int_p_ecc_txbuf_0_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_1_uncorrectable = 6 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_1_int_p_ecc_txbuf_1_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_2_uncorrectable = 7 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_1_int_p_ecc_txbuf_2_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_3_uncorrectable = 8 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_1_int_p_ecc_txbuf_3_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_0_correctable = 9 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_1_int_p_ecc_txbuf_0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_1_correctable = 10 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_1_int_p_ecc_txbuf_1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_2_correctable = 11 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_1_int_p_ecc_txbuf_2_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_3_correctable = 12 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_1_int_p_ecc_txbuf_3_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Ppppportp2intpeccMetrics {
  fixed64 Key = 1;
  delphi.Counter rxbfr_overflow = 2 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_2_int_p_ecc_rxbfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter replay_bfr_overflow = 3 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_2_int_p_ecc_replay_bfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter rxtlp_err = 4 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_2_int_p_ecc_rxtlp_err" Description: "Info only, no action" Units: Count } ];
  delphi.Counter txbuf_0_uncorrectable = 5 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_2_int_p_ecc_txbuf_0_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_1_uncorrectable = 6 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_2_int_p_ecc_txbuf_1_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_2_uncorrectable = 7 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_2_int_p_ecc_txbuf_2_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_3_uncorrectable = 8 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_2_int_p_ecc_txbuf_3_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_0_correctable = 9 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_2_int_p_ecc_txbuf_0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_1_correctable = 10 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_2_int_p_ecc_txbuf_1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_2_correctable = 11 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_2_int_p_ecc_txbuf_2_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_3_correctable = 12 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_2_int_p_ecc_txbuf_3_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Ppppportp3intpeccMetrics {
  fixed64 Key = 1;
  delphi.Counter rxbfr_overflow = 2 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_3_int_p_ecc_rxbfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter replay_bfr_overflow = 3 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_3_int_p_ecc_replay_bfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter rxtlp_err = 4 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_3_int_p_ecc_rxtlp_err" Description: "Info only, no action" Units: Count } ];
  delphi.Counter txbuf_0_uncorrectable = 5 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_3_int_p_ecc_txbuf_0_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_1_uncorrectable = 6 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_3_int_p_ecc_txbuf_1_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_2_uncorrectable = 7 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_3_int_p_ecc_txbuf_2_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_3_uncorrectable = 8 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_3_int_p_ecc_txbuf_3_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_0_correctable = 9 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_3_int_p_ecc_txbuf_0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_1_correctable = 10 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_3_int_p_ecc_txbuf_1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_2_correctable = 11 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_3_int_p_ecc_txbuf_2_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_3_correctable = 12 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_3_int_p_ecc_txbuf_3_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Ppppportp4intpeccMetrics {
  fixed64 Key = 1;
  delphi.Counter rxbfr_overflow = 2 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_4_int_p_ecc_rxbfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter replay_bfr_overflow = 3 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_4_int_p_ecc_replay_bfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter rxtlp_err = 4 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_4_int_p_ecc_rxtlp_err" Description: "Info only, no action" Units: Count } ];
  delphi.Counter txbuf_0_uncorrectable = 5 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_4_int_p_ecc_txbuf_0_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_1_uncorrectable = 6 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_4_int_p_ecc_txbuf_1_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_2_uncorrectable = 7 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_4_int_p_ecc_txbuf_2_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_3_uncorrectable = 8 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_4_int_p_ecc_txbuf_3_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_0_correctable = 9 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_4_int_p_ecc_txbuf_0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_1_correctable = 10 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_4_int_p_ecc_txbuf_1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_2_correctable = 11 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_4_int_p_ecc_txbuf_2_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_3_correctable = 12 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_4_int_p_ecc_txbuf_3_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Ppppportp5intpeccMetrics {
  fixed64 Key = 1;
  delphi.Counter rxbfr_overflow = 2 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_5_int_p_ecc_rxbfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter replay_bfr_overflow = 3 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_5_int_p_ecc_replay_bfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter rxtlp_err = 4 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_5_int_p_ecc_rxtlp_err" Description: "Info only, no action" Units: Count } ];
  delphi.Counter txbuf_0_uncorrectable = 5 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_5_int_p_ecc_txbuf_0_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_1_uncorrectable = 6 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_5_int_p_ecc_txbuf_1_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_2_uncorrectable = 7 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_5_int_p_ecc_txbuf_2_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_3_uncorrectable = 8 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_5_int_p_ecc_txbuf_3_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_0_correctable = 9 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_5_int_p_ecc_txbuf_0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_1_correctable = 10 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_5_int_p_ecc_txbuf_1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_2_correctable = 11 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_5_int_p_ecc_txbuf_2_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_3_correctable = 12 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_5_int_p_ecc_txbuf_3_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Ppppportp6intpeccMetrics {
  fixed64 Key = 1;
  delphi.Counter rxbfr_overflow = 2 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_6_int_p_ecc_rxbfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter replay_bfr_overflow = 3 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_6_int_p_ecc_replay_bfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter rxtlp_err = 4 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_6_int_p_ecc_rxtlp_err" Description: "Info only, no action" Units: Count } ];
  delphi.Counter txbuf_0_uncorrectable = 5 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_6_int_p_ecc_txbuf_0_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_1_uncorrectable = 6 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_6_int_p_ecc_txbuf_1_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_2_uncorrectable = 7 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_6_int_p_ecc_txbuf_2_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_3_uncorrectable = 8 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_6_int_p_ecc_txbuf_3_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_0_correctable = 9 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_6_int_p_ecc_txbuf_0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_1_correctable = 10 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_6_int_p_ecc_txbuf_1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_2_correctable = 11 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_6_int_p_ecc_txbuf_2_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_3_correctable = 12 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_6_int_p_ecc_txbuf_3_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Ppppportp7intpeccMetrics {
  fixed64 Key = 1;
  delphi.Counter rxbfr_overflow = 2 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_7_int_p_ecc_rxbfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter replay_bfr_overflow = 3 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_7_int_p_ecc_replay_bfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter rxtlp_err = 4 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_7_int_p_ecc_rxtlp_err" Description: "Info only, no action" Units: Count } ];
  delphi.Counter txbuf_0_uncorrectable = 5 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_7_int_p_ecc_txbuf_0_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_1_uncorrectable = 6 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_7_int_p_ecc_txbuf_1_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_2_uncorrectable = 7 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_7_int_p_ecc_txbuf_2_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_3_uncorrectable = 8 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_7_int_p_ecc_txbuf_3_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter txbuf_0_correctable = 9 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_7_int_p_ecc_txbuf_0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_1_correctable = 10 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_7_int_p_ecc_txbuf_1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_2_correctable = 11 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_7_int_p_ecc_txbuf_2_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter txbuf_3_correctable = 12 [ (venice.metricsField) = { DisplayName: "pp_pp_port_p_7_int_p_ecc_txbuf_3_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Ppppportc0intcmacMetrics {
  fixed64 Key = 1;
  delphi.Counter link_dn2up = 2 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_mac_link_dn2up" Description: "Info only, no action" Units: Count } ];
  delphi.Counter link_up2dn = 3 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_mac_link_up2dn" Description: "Info only, no action" Units: Count } ];
  delphi.Counter sec_bus_rst = 4 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_mac_sec_bus_rst" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rst_up2dn = 5 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_mac_rst_up2dn" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rst_dn2up = 6 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_mac_rst_dn2up" Description: "Info only, no action" Units: Count } ];
  delphi.Counter portgate_open2close = 7 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_mac_portgate_open2close" Description: "Info only, no action" Units: Count } ];
  delphi.Counter ltssm_st_changed = 8 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_mac_ltssm_st_changed" Description: "Info only, no action" Units: Count } ];
  delphi.Counter sec_busnum_changed = 9 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_mac_sec_busnum_changed" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_pme = 10 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_mac_rc_pme" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_aerr = 11 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_mac_rc_aerr" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_serr = 12 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_mac_rc_serr" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_hpe = 13 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_mac_rc_hpe" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_eq_req = 14 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_mac_rc_eq_req" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_dpc = 15 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_mac_rc_dpc" Description: "Info only, no action" Units: Count } ];
  delphi.Counter pm_turnoff = 16 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_mac_pm_turnoff" Description: "Info only, no action" Units: Count } ];
  delphi.Counter txbfr_overflow = 17 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_mac_txbfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter rxtlp_err = 18 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_mac_rxtlp_err" Description: "" Units: Count } ];
  delphi.Counter tl_flr_req = 19 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_mac_tl_flr_req" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_legacy_intpin_changed = 20 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_mac_rc_legacy_intpin_changed" Description: "Info only, no action" Units: Count } ];
}

message Ppppportc0intceccMetrics {
  fixed64 Key = 1;
  delphi.Counter rxbuf_0_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_ecc_rxbuf_0_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxbuf_1_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_ecc_rxbuf_1_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxbuf_2_uncorrectable = 4 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_ecc_rxbuf_2_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxbuf_3_uncorrectable = 5 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_ecc_rxbuf_3_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxbuf_0_correctable = 6 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_ecc_rxbuf_0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rxbuf_1_correctable = 7 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_ecc_rxbuf_1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rxbuf_2_correctable = 8 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_ecc_rxbuf_2_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rxbuf_3_correctable = 9 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_0_int_c_ecc_rxbuf_3_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Ppppportc1intcmacMetrics {
  fixed64 Key = 1;
  delphi.Counter link_dn2up = 2 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_mac_link_dn2up" Description: "Info only, no action" Units: Count } ];
  delphi.Counter link_up2dn = 3 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_mac_link_up2dn" Description: "Info only, no action" Units: Count } ];
  delphi.Counter sec_bus_rst = 4 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_mac_sec_bus_rst" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rst_up2dn = 5 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_mac_rst_up2dn" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rst_dn2up = 6 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_mac_rst_dn2up" Description: "Info only, no action" Units: Count } ];
  delphi.Counter portgate_open2close = 7 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_mac_portgate_open2close" Description: "Info only, no action" Units: Count } ];
  delphi.Counter ltssm_st_changed = 8 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_mac_ltssm_st_changed" Description: "Info only, no action" Units: Count } ];
  delphi.Counter sec_busnum_changed = 9 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_mac_sec_busnum_changed" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_pme = 10 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_mac_rc_pme" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_aerr = 11 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_mac_rc_aerr" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_serr = 12 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_mac_rc_serr" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_hpe = 13 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_mac_rc_hpe" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_eq_req = 14 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_mac_rc_eq_req" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_dpc = 15 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_mac_rc_dpc" Description: "Info only, no action" Units: Count } ];
  delphi.Counter pm_turnoff = 16 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_mac_pm_turnoff" Description: "Info only, no action" Units: Count } ];
  delphi.Counter txbfr_overflow = 17 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_mac_txbfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter rxtlp_err = 18 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_mac_rxtlp_err" Description: "" Units: Count } ];
  delphi.Counter tl_flr_req = 19 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_mac_tl_flr_req" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_legacy_intpin_changed = 20 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_mac_rc_legacy_intpin_changed" Description: "Info only, no action" Units: Count } ];
}

message Ppppportc1intceccMetrics {
  fixed64 Key = 1;
  delphi.Counter rxbuf_0_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_ecc_rxbuf_0_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxbuf_1_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_ecc_rxbuf_1_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxbuf_2_uncorrectable = 4 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_ecc_rxbuf_2_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxbuf_3_uncorrectable = 5 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_ecc_rxbuf_3_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxbuf_0_correctable = 6 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_ecc_rxbuf_0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rxbuf_1_correctable = 7 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_ecc_rxbuf_1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rxbuf_2_correctable = 8 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_ecc_rxbuf_2_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rxbuf_3_correctable = 9 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_1_int_c_ecc_rxbuf_3_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Ppppportc2intcmacMetrics {
  fixed64 Key = 1;
  delphi.Counter link_dn2up = 2 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_mac_link_dn2up" Description: "Info only, no action" Units: Count } ];
  delphi.Counter link_up2dn = 3 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_mac_link_up2dn" Description: "Info only, no action" Units: Count } ];
  delphi.Counter sec_bus_rst = 4 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_mac_sec_bus_rst" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rst_up2dn = 5 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_mac_rst_up2dn" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rst_dn2up = 6 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_mac_rst_dn2up" Description: "Info only, no action" Units: Count } ];
  delphi.Counter portgate_open2close = 7 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_mac_portgate_open2close" Description: "Info only, no action" Units: Count } ];
  delphi.Counter ltssm_st_changed = 8 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_mac_ltssm_st_changed" Description: "Info only, no action" Units: Count } ];
  delphi.Counter sec_busnum_changed = 9 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_mac_sec_busnum_changed" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_pme = 10 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_mac_rc_pme" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_aerr = 11 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_mac_rc_aerr" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_serr = 12 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_mac_rc_serr" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_hpe = 13 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_mac_rc_hpe" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_eq_req = 14 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_mac_rc_eq_req" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_dpc = 15 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_mac_rc_dpc" Description: "Info only, no action" Units: Count } ];
  delphi.Counter pm_turnoff = 16 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_mac_pm_turnoff" Description: "Info only, no action" Units: Count } ];
  delphi.Counter txbfr_overflow = 17 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_mac_txbfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter rxtlp_err = 18 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_mac_rxtlp_err" Description: "" Units: Count } ];
  delphi.Counter tl_flr_req = 19 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_mac_tl_flr_req" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_legacy_intpin_changed = 20 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_mac_rc_legacy_intpin_changed" Description: "Info only, no action" Units: Count } ];
}

message Ppppportc2intceccMetrics {
  fixed64 Key = 1;
  delphi.Counter rxbuf_0_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_ecc_rxbuf_0_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxbuf_1_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_ecc_rxbuf_1_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxbuf_2_uncorrectable = 4 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_ecc_rxbuf_2_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxbuf_3_uncorrectable = 5 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_ecc_rxbuf_3_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxbuf_0_correctable = 6 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_ecc_rxbuf_0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rxbuf_1_correctable = 7 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_ecc_rxbuf_1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rxbuf_2_correctable = 8 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_ecc_rxbuf_2_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rxbuf_3_correctable = 9 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_2_int_c_ecc_rxbuf_3_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Ppppportc3intcmacMetrics {
  fixed64 Key = 1;
  delphi.Counter link_dn2up = 2 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_mac_link_dn2up" Description: "Info only, no action" Units: Count } ];
  delphi.Counter link_up2dn = 3 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_mac_link_up2dn" Description: "Info only, no action" Units: Count } ];
  delphi.Counter sec_bus_rst = 4 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_mac_sec_bus_rst" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rst_up2dn = 5 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_mac_rst_up2dn" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rst_dn2up = 6 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_mac_rst_dn2up" Description: "Info only, no action" Units: Count } ];
  delphi.Counter portgate_open2close = 7 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_mac_portgate_open2close" Description: "Info only, no action" Units: Count } ];
  delphi.Counter ltssm_st_changed = 8 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_mac_ltssm_st_changed" Description: "Info only, no action" Units: Count } ];
  delphi.Counter sec_busnum_changed = 9 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_mac_sec_busnum_changed" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_pme = 10 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_mac_rc_pme" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_aerr = 11 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_mac_rc_aerr" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_serr = 12 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_mac_rc_serr" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_hpe = 13 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_mac_rc_hpe" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_eq_req = 14 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_mac_rc_eq_req" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_dpc = 15 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_mac_rc_dpc" Description: "Info only, no action" Units: Count } ];
  delphi.Counter pm_turnoff = 16 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_mac_pm_turnoff" Description: "Info only, no action" Units: Count } ];
  delphi.Counter txbfr_overflow = 17 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_mac_txbfr_overflow" Description: "Fatal error, try to reproduce in lab and debug the configuration settings using PCIE Analyzer" Units: Count } ];
  delphi.Counter rxtlp_err = 18 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_mac_rxtlp_err" Description: "" Units: Count } ];
  delphi.Counter tl_flr_req = 19 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_mac_tl_flr_req" Description: "Info only, no action" Units: Count } ];
  delphi.Counter rc_legacy_intpin_changed = 20 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_mac_rc_legacy_intpin_changed" Description: "Info only, no action" Units: Count } ];
}

message Ppppportc3intceccMetrics {
  fixed64 Key = 1;
  delphi.Counter rxbuf_0_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_ecc_rxbuf_0_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxbuf_1_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_ecc_rxbuf_1_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxbuf_2_uncorrectable = 4 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_ecc_rxbuf_2_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxbuf_3_uncorrectable = 5 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_ecc_rxbuf_3_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter rxbuf_0_correctable = 6 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_ecc_rxbuf_0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rxbuf_1_correctable = 7 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_ecc_rxbuf_1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rxbuf_2_correctable = 8 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_ecc_rxbuf_2_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rxbuf_3_correctable = 9 [ (venice.metricsField) = { DisplayName: "pp_pp_port_c_3_int_c_ecc_rxbuf_3_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

