
syntax = "proto3";
package asicerrord;

import "delphi.proto";
import "metrics_annotations.proto";

message PbpbchbmintecchbmhtMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_ecc_hbm_ht_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_ecc_hbm_ht_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message PbpbchbminthbmxoffMetrics {
  fixed64 Key = 1;
  delphi.Counter timeout_0 = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_1 = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_2 = 4 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_3 = 5 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_4 = 6 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_5 = 7 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_6 = 8 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_7 = 9 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_8 = 10 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_8" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_9 = 11 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_9" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_10 = 12 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_10" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_11 = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_11" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_12 = 14 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_12" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_13 = 15 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_13" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_14 = 16 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_14" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_15 = 17 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_15" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_16 = 18 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_16" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_17 = 19 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_17" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_18 = 20 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_18" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_19 = 21 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_19" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_20 = 22 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_20" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_21 = 23 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_21" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_22 = 24 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_22" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_23 = 25 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_23" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_24 = 26 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_24" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_25 = 27 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_25" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_26 = 28 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_26" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_27 = 29 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_27" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_28 = 30 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_28" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_29 = 31 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_29" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_30 = 32 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_30" Description: "Info only, no action" Units: Count } ];
  delphi.Counter timeout_31 = 33 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_xoff_timeout_31" Description: "Info only, no action" Units: Count } ];
}

message PbpbchbminthbmpbusviolationinMetrics {
  fixed64 Key = 1;
  delphi.Counter sop_sop_in_0 = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_0" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_1 = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_1" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_2 = 4 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_2" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_3 = 5 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_3" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_4 = 6 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_4" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_5 = 7 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_5" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_6 = 8 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_6" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_7 = 9 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_7" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_8 = 10 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_8" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_9 = 11 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_9" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_0 = 12 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_0" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_1 = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_1" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_2 = 14 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_2" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_3 = 15 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_3" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_4 = 16 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_4" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_5 = 17 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_5" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_6 = 18 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_6" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_7 = 19 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_7" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_8 = 20 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_8" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_9 = 21 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_9" Description: "Hardware Error" Units: Count } ];
}

message PbpbchbminthbmpbusviolationoutMetrics {
  fixed64 Key = 1;
  delphi.Counter sop_sop_out_0 = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_0" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_1 = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_1" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_2 = 4 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_2" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_3 = 5 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_3" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_4 = 6 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_4" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_5 = 7 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_5" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_6 = 8 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_6" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_7 = 9 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_7" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_8 = 10 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_8" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_9 = 11 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_9" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_0 = 12 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_0" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_1 = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_1" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_2 = 14 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_2" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_3 = 15 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_3" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_4 = 16 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_4" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_5 = 17 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_5" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_6 = 18 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_6" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_7 = 19 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_7" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_8 = 20 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_8" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_9 = 21 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_9" Description: "Hardware Error" Units: Count } ];
}

message PbpbchbminthbmdropMetrics {
  fixed64 Key = 1;
  delphi.Counter occupancy_0 = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_occupancy_0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter occupancy_1 = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_occupancy_1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter occupancy_2 = 4 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_occupancy_2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter occupancy_3 = 5 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_occupancy_3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter occupancy_4 = 6 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_occupancy_4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter occupancy_5 = 7 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_occupancy_5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter occupancy_6 = 8 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_occupancy_6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter occupancy_7 = 9 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_occupancy_7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter occupancy_8 = 10 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_occupancy_8" Description: "Info only, no action" Units: Count } ];
}

message PbpbchbminthbmstopMetrics {
  fixed64 Key = 1;
  delphi.Counter occupancy_9 = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_stop_occupancy_9" Description: "Info only, no action" Units: Count } ];
}

message PbpbchbminthbmaxierrrspMetrics {
  fixed64 Key = 1;
  delphi.Counter ctrl = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_axi_err_rsp_ctrl" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter pyld = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_axi_err_rsp_pyld" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter r2a = 4 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_axi_err_rsp_r2a" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
}

message PbpbchbminthbmdropemergencyMetrics {
  fixed64 Key = 1;
  delphi.Counter stop_0 = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_emergency_stop_0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter stop_1 = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_emergency_stop_1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter stop_2 = 4 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_emergency_stop_2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter stop_3 = 5 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_emergency_stop_3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter stop_4 = 6 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_emergency_stop_4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter stop_5 = 7 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_emergency_stop_5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter stop_6 = 8 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_emergency_stop_6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter stop_7 = 9 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_emergency_stop_7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter stop_8 = 10 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_emergency_stop_8" Description: "Info only, no action" Units: Count } ];
}

message PbpbchbminthbmdropwriteackMetrics {
  fixed64 Key = 1;
  delphi.Counter filling_up_0 = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_write_ack_filling_up_0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter filling_up_1 = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_write_ack_filling_up_1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter filling_up_2 = 4 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_write_ack_filling_up_2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter filling_up_3 = 5 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_write_ack_filling_up_3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter filling_up_4 = 6 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_write_ack_filling_up_4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter filling_up_5 = 7 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_write_ack_filling_up_5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter filling_up_6 = 8 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_write_ack_filling_up_6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter filling_up_7 = 9 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_write_ack_filling_up_7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter filling_up_8 = 10 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_write_ack_filling_up_8" Description: "Info only, no action" Units: Count } ];
  delphi.Counter full_0 = 11 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_write_ack_full_0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter full_1 = 12 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_write_ack_full_1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter full_2 = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_write_ack_full_2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter full_3 = 14 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_write_ack_full_3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter full_4 = 15 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_write_ack_full_4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter full_5 = 16 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_write_ack_full_5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter full_6 = 17 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_write_ack_full_6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter full_7 = 18 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_write_ack_full_7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter full_8 = 19 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_write_ack_full_8" Description: "Info only, no action" Units: Count } ];
}

message PbpbchbminthbmdropctrlMetrics {
  fixed64 Key = 1;
  delphi.Counter full_0 = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_ctrl_full_0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter full_1 = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_ctrl_full_1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter full_2 = 4 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_ctrl_full_2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter full_3 = 5 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_ctrl_full_3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter full_4 = 6 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_ctrl_full_4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter full_5 = 7 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_ctrl_full_5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter full_6 = 8 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_ctrl_full_6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter full_7 = 9 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_ctrl_full_7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter full_8 = 10 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_ctrl_full_8" Description: "Info only, no action" Units: Count } ];
}

message PbpbchbminthbmdropthresholdMetrics {
  fixed64 Key = 1;
  delphi.Counter crossed_0 = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_threshold_crossed_0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter crossed_1 = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_threshold_crossed_1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter crossed_2 = 4 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_threshold_crossed_2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter crossed_3 = 5 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_threshold_crossed_3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter crossed_4 = 6 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_threshold_crossed_4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter crossed_5 = 7 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_threshold_crossed_5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter crossed_6 = 8 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_threshold_crossed_6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter crossed_7 = 9 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_threshold_crossed_7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter crossed_8 = 10 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_drop_threshold_crossed_8" Description: "Info only, no action" Units: Count } ];
}

message PbpbchbminthbmtruncatenoMetrics {
  fixed64 Key = 1;
  delphi.Counter drop_0 = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_truncate_no_drop_0" Description: "Info only, no action" Units: Count } ];
  delphi.Counter drop_1 = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_truncate_no_drop_1" Description: "Info only, no action" Units: Count } ];
  delphi.Counter drop_2 = 4 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_truncate_no_drop_2" Description: "Info only, no action" Units: Count } ];
  delphi.Counter drop_3 = 5 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_truncate_no_drop_3" Description: "Info only, no action" Units: Count } ];
  delphi.Counter drop_4 = 6 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_truncate_no_drop_4" Description: "Info only, no action" Units: Count } ];
  delphi.Counter drop_5 = 7 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_truncate_no_drop_5" Description: "Info only, no action" Units: Count } ];
  delphi.Counter drop_6 = 8 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_truncate_no_drop_6" Description: "Info only, no action" Units: Count } ];
  delphi.Counter drop_7 = 9 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_truncate_no_drop_7" Description: "Info only, no action" Units: Count } ];
  delphi.Counter drop_8 = 10 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_truncate_no_drop_8" Description: "Info only, no action" Units: Count } ];
}

message Pmpbmintecccol0Metrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col0_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Pmpbmintecccol1Metrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col1_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Pmpbmintecccol2Metrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col2_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col2_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Pmpbmintecccol3Metrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col3_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col3_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Pmpbmintecccol4Metrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col4_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col4_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message DbwaintlifqstatemapMetrics {
  fixed64 Key = 1;
  delphi.Counter ecc_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "db_wa_int_lif_qstate_map_ecc_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter ecc_correctable = 3 [ (venice.metricsField) = { DisplayName: "db_wa_int_lif_qstate_map_ecc_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter qid_invalid = 4 [ (venice.metricsField) = { DisplayName: "db_wa_int_lif_qstate_map_qid_invalid" Description: "" Units: Count } ];
}

message DbwaintdbMetrics {
  fixed64 Key = 1;
  delphi.Counter db_cam_conflict = 2 [ (venice.metricsField) = { DisplayName: "db_wa_int_db_db_cam_conflict" Description: "Info only, no action" Units: Count } ];
  delphi.Counter db_pid_chk_fail = 3 [ (venice.metricsField) = { DisplayName: "db_wa_int_db_db_pid_chk_fail" Description: "" Units: Count } ];
  delphi.Counter db_qid_overflow = 4 [ (venice.metricsField) = { DisplayName: "db_wa_int_db_db_qid_overflow" Description: "" Units: Count } ];
  delphi.Counter host_ring_access_err = 5 [ (venice.metricsField) = { DisplayName: "db_wa_int_db_host_ring_access_err" Description: "" Units: Count } ];
  delphi.Counter total_ring_access_err = 6 [ (venice.metricsField) = { DisplayName: "db_wa_int_db_total_ring_access_err" Description: "" Units: Count } ];
  delphi.Counter rresp_err = 7 [ (venice.metricsField) = { DisplayName: "db_wa_int_db_rresp_err" Description: "" Units: Count } ];
  delphi.Counter bresp_err = 8 [ (venice.metricsField) = { DisplayName: "db_wa_int_db_bresp_err" Description: "" Units: Count } ];
}

message SsipicsintpicsMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable_ecc = 2 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_pics_uncorrectable_ecc" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter correctable_ecc = 3 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_pics_correctable_ecc" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter too_many_rl_sch_error = 4 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_pics_too_many_rl_sch_error" Description: "SW programming error" Units: Count } ];
  delphi.Counter picc = 5 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_pics_picc" Description: "Info only, no action" Units: Count } ];
}

message SsipicsintbadaddrMetrics {
  fixed64 Key = 1;
  delphi.Counter rdreq0_bad_addr = 2 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_rdreq0_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq0_bad_addr = 3 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_wrreq0_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq1_bad_addr = 4 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_rdreq1_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq1_bad_addr = 5 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_wrreq1_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq2_bad_addr = 6 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_rdreq2_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq2_bad_addr = 7 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_wrreq2_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq3_bad_addr = 8 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_rdreq3_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq3_bad_addr = 9 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_wrreq3_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq4_bad_addr = 10 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_rdreq4_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq4_bad_addr = 11 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_wrreq4_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq5_bad_addr = 12 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_rdreq5_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq5_bad_addr = 13 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_wrreq5_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq6_bad_addr = 14 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_rdreq6_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq6_bad_addr = 15 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_wrreq6_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq7_bad_addr = 16 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_rdreq7_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq7_bad_addr = 17 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_wrreq7_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter cpu_bad_addr = 18 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_cpu_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter bg_bad_addr = 19 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_bg_bad_addr" Description: "SW programming error" Units: Count } ];
}

message SsipicsintbgMetrics {
  fixed64 Key = 1;
  delphi.Counter unfinished_bg0 = 2 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg0" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg1 = 3 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg1" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg2 = 4 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg2" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg3 = 5 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg3" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg4 = 6 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg4" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg5 = 7 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg5" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg6 = 8 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg6" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg7 = 9 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg7" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg8 = 10 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg8" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg9 = 11 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg9" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg10 = 12 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg10" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg11 = 13 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg11" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg12 = 14 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg12" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg13 = 15 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg13" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg14 = 16 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg14" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg15 = 17 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg15" Description: "SW programming error" Units: Count } ];
}

message SsipicspiccintpiccMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable_ecc = 2 [ (venice.metricsField) = { DisplayName: "ssi_pics_picc_int_picc_uncorrectable_ecc" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter correctable_ecc = 3 [ (venice.metricsField) = { DisplayName: "ssi_pics_picc_int_picc_correctable_ecc" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter cache_stg_awlen_err = 4 [ (venice.metricsField) = { DisplayName: "ssi_pics_picc_int_picc_cache_stg_awlen_err" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_rresp_slverr = 5 [ (venice.metricsField) = { DisplayName: "ssi_pics_picc_int_picc_cache_hbm_rresp_slverr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_rresp_decerr = 6 [ (venice.metricsField) = { DisplayName: "ssi_pics_picc_int_picc_cache_hbm_rresp_decerr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_bresp_slverr = 7 [ (venice.metricsField) = { DisplayName: "ssi_pics_picc_int_picc_cache_hbm_bresp_slverr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_bresp_decerr = 8 [ (venice.metricsField) = { DisplayName: "ssi_pics_picc_int_picc_cache_hbm_bresp_decerr" Description: "HBM access fatal error" Units: Count } ];
}

message SsepicsintpicsMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable_ecc = 2 [ (venice.metricsField) = { DisplayName: "sse_pics_int_pics_uncorrectable_ecc" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter correctable_ecc = 3 [ (venice.metricsField) = { DisplayName: "sse_pics_int_pics_correctable_ecc" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter too_many_rl_sch_error = 4 [ (venice.metricsField) = { DisplayName: "sse_pics_int_pics_too_many_rl_sch_error" Description: "SW programming error" Units: Count } ];
  delphi.Counter picc = 5 [ (venice.metricsField) = { DisplayName: "sse_pics_int_pics_picc" Description: "Info only, no action" Units: Count } ];
}

message SsepicsintbadaddrMetrics {
  fixed64 Key = 1;
  delphi.Counter rdreq0_bad_addr = 2 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_rdreq0_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq0_bad_addr = 3 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_wrreq0_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq1_bad_addr = 4 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_rdreq1_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq1_bad_addr = 5 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_wrreq1_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq2_bad_addr = 6 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_rdreq2_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq2_bad_addr = 7 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_wrreq2_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq3_bad_addr = 8 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_rdreq3_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq3_bad_addr = 9 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_wrreq3_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq4_bad_addr = 10 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_rdreq4_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq4_bad_addr = 11 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_wrreq4_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq5_bad_addr = 12 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_rdreq5_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq5_bad_addr = 13 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_wrreq5_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq6_bad_addr = 14 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_rdreq6_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq6_bad_addr = 15 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_wrreq6_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq7_bad_addr = 16 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_rdreq7_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq7_bad_addr = 17 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_wrreq7_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter cpu_bad_addr = 18 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_cpu_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter bg_bad_addr = 19 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_bg_bad_addr" Description: "SW programming error" Units: Count } ];
}

message SsepicsintbgMetrics {
  fixed64 Key = 1;
  delphi.Counter unfinished_bg0 = 2 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg0" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg1 = 3 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg1" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg2 = 4 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg2" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg3 = 5 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg3" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg4 = 6 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg4" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg5 = 7 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg5" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg6 = 8 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg6" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg7 = 9 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg7" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg8 = 10 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg8" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg9 = 11 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg9" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg10 = 12 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg10" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg11 = 13 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg11" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg12 = 14 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg12" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg13 = 15 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg13" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg14 = 16 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg14" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg15 = 17 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg15" Description: "SW programming error" Units: Count } ];
}

message SsepicspiccintpiccMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable_ecc = 2 [ (venice.metricsField) = { DisplayName: "sse_pics_picc_int_picc_uncorrectable_ecc" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter correctable_ecc = 3 [ (venice.metricsField) = { DisplayName: "sse_pics_picc_int_picc_correctable_ecc" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter cache_stg_awlen_err = 4 [ (venice.metricsField) = { DisplayName: "sse_pics_picc_int_picc_cache_stg_awlen_err" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_rresp_slverr = 5 [ (venice.metricsField) = { DisplayName: "sse_pics_picc_int_picc_cache_hbm_rresp_slverr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_rresp_decerr = 6 [ (venice.metricsField) = { DisplayName: "sse_pics_picc_int_picc_cache_hbm_rresp_decerr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_bresp_slverr = 7 [ (venice.metricsField) = { DisplayName: "sse_pics_picc_int_picc_cache_hbm_bresp_slverr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_bresp_decerr = 8 [ (venice.metricsField) = { DisplayName: "sse_pics_picc_int_picc_cache_hbm_bresp_decerr" Description: "HBM access fatal error" Units: Count } ];
}

message BxbxintmacMetrics {
  fixed64 Key = 1;
  delphi.Counter lane_sbe = 2 [ (venice.metricsField) = { DisplayName: "bx_bx_int_mac_lane_sbe" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter lane_dbe = 3 [ (venice.metricsField) = { DisplayName: "bx_bx_int_mac_lane_dbe" Description: "Double bit error in SerDes. Lane may go down" Units: Count } ];
  delphi.Counter xdmac10_intr = 4 [ (venice.metricsField) = { DisplayName: "bx_bx_int_mac_xdmac10_intr" Description: "Info only, no action" Units: Count } ];
  delphi.Counter xdmac10_pslverr = 5 [ (venice.metricsField) = { DisplayName: "bx_bx_int_mac_xdmac10_pslverr" Description: "Invalid need to be masked" Units: Count } ];
  delphi.Counter bxpb_pbus_drdy = 6 [ (venice.metricsField) = { DisplayName: "bx_bx_int_mac_bxpb_pbus_drdy" Description: "Debug PB config. Never happen; otherwise, it's hardware bug" Units: Count } ];
  delphi.Counter rx_missing_sof = 7 [ (venice.metricsField) = { DisplayName: "bx_bx_int_mac_rx_missing_sof" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx_missing_eof = 8 [ (venice.metricsField) = { DisplayName: "bx_bx_int_mac_rx_missing_eof" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx_timeout_err = 9 [ (venice.metricsField) = { DisplayName: "bx_bx_int_mac_rx_timeout_err" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx_min_size_err = 10 [ (venice.metricsField) = { DisplayName: "bx_bx_int_mac_rx_min_size_err" Description: "HW self recover" Units: Count } ];
}

message MdhensintipcoreMetrics {
  fixed64 Key = 1;
  delphi.Counter xts_enc = 2 [ (venice.metricsField) = { DisplayName: "md_hens_int_ipcore_xts_enc" Description: "https://docs.google.com/document/d/1o7e-6AhV5ET_WoOvVRvMOXqFLDGzunZIx1R1BwUpzek/view#heading=h.e62qntm4xe7q" Units: Count } ];
  delphi.Counter xts = 3 [ (venice.metricsField) = { DisplayName: "md_hens_int_ipcore_xts" Description: "https://docs.google.com/document/d/1o7e-6AhV5ET_WoOvVRvMOXqFLDGzunZIx1R1BwUpzek/view#heading=h.e62qntm4xe7q" Units: Count } ];
  delphi.Counter gcm0 = 4 [ (venice.metricsField) = { DisplayName: "md_hens_int_ipcore_gcm0" Description: "https://docs.google.com/document/d/1o7e-6AhV5ET_WoOvVRvMOXqFLDGzunZIx1R1BwUpzek/view#heading=h.e62qntm4xe7q" Units: Count } ];
  delphi.Counter gcm1 = 5 [ (venice.metricsField) = { DisplayName: "md_hens_int_ipcore_gcm1" Description: "https://docs.google.com/document/d/1o7e-6AhV5ET_WoOvVRvMOXqFLDGzunZIx1R1BwUpzek/view#heading=h.e62qntm4xe7q" Units: Count } ];
  delphi.Counter drbg = 6 [ (venice.metricsField) = { DisplayName: "md_hens_int_ipcore_drbg" Description: "https://docs.google.com/document/d/1o7e-6AhV5ET_WoOvVRvMOXqFLDGzunZIx1R1BwUpzek/view#heading=h.e62qntm4xe7q" Units: Count } ];
  delphi.Counter pk = 7 [ (venice.metricsField) = { DisplayName: "md_hens_int_ipcore_pk" Description: "https://docs.google.com/document/d/1o7e-6AhV5ET_WoOvVRvMOXqFLDGzunZIx1R1BwUpzek/view#heading=h.e62qntm4xe7q" Units: Count } ];
  delphi.Counter cp = 8 [ (venice.metricsField) = { DisplayName: "md_hens_int_ipcore_cp" Description: "https://docs.google.com/document/d/1w9UJ8ce9JcBOu_8ZdLXAdDs56Y-UO7QqCLZx7YBtQpU/edit?ts=5b7f3c37#heading=h.e62qntm4xe7q" Units: Count } ];
  delphi.Counter dc = 9 [ (venice.metricsField) = { DisplayName: "md_hens_int_ipcore_dc" Description: "https://docs.google.com/document/d/1w9UJ8ce9JcBOu_8ZdLXAdDs56Y-UO7QqCLZx7YBtQpU/edit?ts=5b7f3c37#heading=h.e62qntm4xe7q" Units: Count } ];
}

message MdhensintpkeccMetrics {
  fixed64 Key = 1;
  delphi.Counter correctable_err = 2 [ (venice.metricsField) = { DisplayName: "md_hens_int_pk_ecc_correctable_err" Description: "Hardware Error" Units: Count } ];
  delphi.Counter uncorrectable_err = 3 [ (venice.metricsField) = { DisplayName: "md_hens_int_pk_ecc_uncorrectable_err" Description: "Hardware Error" Units: Count } ];
}

message MdhensintdrbgintrameccMetrics {
  fixed64 Key = 1;
  delphi.Counter correctable_err = 2 [ (venice.metricsField) = { DisplayName: "md_hens_int_drbg_intram_ecc_correctable_err" Description: "Hardware Error" Units: Count } ];
  delphi.Counter uncorrectable_err = 3 [ (venice.metricsField) = { DisplayName: "md_hens_int_drbg_intram_ecc_uncorrectable_err" Description: "Hardware Error" Units: Count } ];
}

message MdhensintdrbgcryptorameccMetrics {
  fixed64 Key = 1;
  delphi.Counter correctable_err = 2 [ (venice.metricsField) = { DisplayName: "md_hens_int_drbg_cryptoram_ecc_correctable_err" Description: "Hardware Error" Units: Count } ];
  delphi.Counter uncorrectable_err = 3 [ (venice.metricsField) = { DisplayName: "md_hens_int_drbg_cryptoram_ecc_uncorrectable_err" Description: "Hardware Error" Units: Count } ];
}

message MdhensintaxierrMetrics {
  fixed64 Key = 1;
  delphi.Counter wrsp_err = 2 [ (venice.metricsField) = { DisplayName: "md_hens_int_axi_err_wrsp_err" Description: "Software Error" Units: Count } ];
  delphi.Counter rrsp_err = 3 [ (venice.metricsField) = { DisplayName: "md_hens_int_axi_err_rrsp_err" Description: "Software Error" Units: Count } ];
}

message TpcpicsintpicsMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable_ecc = 2 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_pics_uncorrectable_ecc" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter correctable_ecc = 3 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_pics_correctable_ecc" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter too_many_rl_sch_error = 4 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_pics_too_many_rl_sch_error" Description: "SW programming error" Units: Count } ];
  delphi.Counter picc = 5 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_pics_picc" Description: "Info only, no action" Units: Count } ];
}

message TpcpicsintbadaddrMetrics {
  fixed64 Key = 1;
  delphi.Counter rdreq0_bad_addr = 2 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_rdreq0_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq0_bad_addr = 3 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_wrreq0_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq1_bad_addr = 4 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_rdreq1_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq1_bad_addr = 5 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_wrreq1_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq2_bad_addr = 6 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_rdreq2_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq2_bad_addr = 7 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_wrreq2_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq3_bad_addr = 8 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_rdreq3_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq3_bad_addr = 9 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_wrreq3_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq4_bad_addr = 10 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_rdreq4_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq4_bad_addr = 11 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_wrreq4_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq5_bad_addr = 12 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_rdreq5_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq5_bad_addr = 13 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_wrreq5_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq6_bad_addr = 14 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_rdreq6_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq6_bad_addr = 15 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_wrreq6_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq7_bad_addr = 16 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_rdreq7_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq7_bad_addr = 17 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_wrreq7_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter cpu_bad_addr = 18 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_cpu_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter bg_bad_addr = 19 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_bg_bad_addr" Description: "SW programming error" Units: Count } ];
}

message TpcpicsintbgMetrics {
  fixed64 Key = 1;
  delphi.Counter unfinished_bg0 = 2 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg0" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg1 = 3 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg1" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg2 = 4 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg2" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg3 = 5 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg3" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg4 = 6 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg4" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg5 = 7 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg5" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg6 = 8 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg6" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg7 = 9 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg7" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg8 = 10 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg8" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg9 = 11 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg9" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg10 = 12 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg10" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg11 = 13 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg11" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg12 = 14 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg12" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg13 = 15 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg13" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg14 = 16 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg14" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg15 = 17 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg15" Description: "SW programming error" Units: Count } ];
}

message TpcpicspiccintpiccMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable_ecc = 2 [ (venice.metricsField) = { DisplayName: "tpc_pics_picc_int_picc_uncorrectable_ecc" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter correctable_ecc = 3 [ (venice.metricsField) = { DisplayName: "tpc_pics_picc_int_picc_correctable_ecc" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter cache_stg_awlen_err = 4 [ (venice.metricsField) = { DisplayName: "tpc_pics_picc_int_picc_cache_stg_awlen_err" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_rresp_slverr = 5 [ (venice.metricsField) = { DisplayName: "tpc_pics_picc_int_picc_cache_hbm_rresp_slverr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_rresp_decerr = 6 [ (venice.metricsField) = { DisplayName: "tpc_pics_picc_int_picc_cache_hbm_rresp_decerr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_bresp_slverr = 7 [ (venice.metricsField) = { DisplayName: "tpc_pics_picc_int_picc_cache_hbm_bresp_slverr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_bresp_decerr = 8 [ (venice.metricsField) = { DisplayName: "tpc_pics_picc_int_picc_cache_hbm_bresp_decerr" Description: "HBM access fatal error" Units: Count } ];
}

message Dprdpr0intreg1Metrics {
  fixed64 Key = 1;
  delphi.Counter err_phv_sop_no_eop = 2 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_phv_sop_no_eop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_phv_eop_no_sop = 3 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_phv_eop_no_sop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_ohi_sop_no_eop = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_ohi_sop_no_eop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_ohi_eop_no_sop = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_ohi_eop_no_sop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_pktin_sop_no_eop = 6 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_pktin_sop_no_eop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_pktin_eop_no_sop = 7 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_pktin_eop_no_sop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_csum_offset_gt_pkt_size_4 = 8 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_offset_gt_pkt_size_4" Description: "P4 program/compiler error. Checksum covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_offset_gt_pkt_size_3 = 9 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_offset_gt_pkt_size_3" Description: "P4 program/compiler error. Checksum covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_offset_gt_pkt_size_2 = 10 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_offset_gt_pkt_size_2" Description: "P4 program/compiler error. Checksum covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_offset_gt_pkt_size_1 = 11 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_offset_gt_pkt_size_1" Description: "P4 program/compiler error. Checksum covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_offset_gt_pkt_size_0 = 12 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_offset_gt_pkt_size_0" Description: "P4 program/compiler error. Checksum covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_phdr_offset_gt_pkt_size_4 = 13 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_phdr_offset_gt_pkt_size_4" Description: "P4 program/compiler error. Checksum pseudoheaders covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_phdr_offset_gt_pkt_size_3 = 14 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_phdr_offset_gt_pkt_size_3" Description: "P4 program/compiler error. Checksum pseudoheaders covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_phdr_offset_gt_pkt_size_2 = 15 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_phdr_offset_gt_pkt_size_2" Description: "P4 program/compiler error. Checksum pseudoheaders covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_phdr_offset_gt_pkt_size_1 = 16 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_phdr_offset_gt_pkt_size_1" Description: "P4 program/compiler error. Checksum pseudoheaders covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_phdr_offset_gt_pkt_size_0 = 17 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_phdr_offset_gt_pkt_size_0" Description: "P4 program/compiler error. Checksum pseudoheaders covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_loc_gt_pkt_size_4 = 18 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_loc_gt_pkt_size_4" Description: "P4 program/compiler error. Checksum location greater then packet size" Units: Count } ];
  delphi.Counter err_csum_loc_gt_pkt_size_3 = 19 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_loc_gt_pkt_size_3" Description: "P4 program/compiler error. Checksum location greater then packet size" Units: Count } ];
  delphi.Counter err_csum_loc_gt_pkt_size_2 = 20 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_loc_gt_pkt_size_2" Description: "P4 program/compiler error. Checksum location greater then packet size" Units: Count } ];
  delphi.Counter err_csum_loc_gt_pkt_size_1 = 21 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_loc_gt_pkt_size_1" Description: "P4 program/compiler error. Checksum location greater then packet size" Units: Count } ];
  delphi.Counter err_csum_loc_gt_pkt_size_0 = 22 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_loc_gt_pkt_size_0" Description: "P4 program/compiler error. Checksum location greater then packet size" Units: Count } ];
  delphi.Counter err_crc_offset_gt_pkt_size = 23 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_crc_offset_gt_pkt_size" Description: "P4 program/compiler error. ICRC covers more than packet size" Units: Count } ];
  delphi.Counter err_crc_loc_gt_pkt_size = 24 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_crc_loc_gt_pkt_size" Description: "P4 program/compiler error. ICRC location greater then packet size" Units: Count } ];
  delphi.Counter err_crc_mask_offset_gt_pkt_size = 25 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_crc_mask_offset_gt_pkt_size" Description: "Invalid need to be masked" Units: Count } ];
  delphi.Counter err_pkt_eop_early = 26 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_pkt_eop_early" Description: "spare" Units: Count } ];
  delphi.Counter err_ptr_ff_overflow = 27 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_ptr_ff_overflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_csum_ff_overflow = 28 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_ff_overflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_pktout_ff_overflow = 29 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_pktout_ff_overflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_ptr_from_cfg_overflow = 30 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_ptr_from_cfg_overflow" Description: "Hardware Error" Units: Count } ];
}

message Dprdpr0intreg2Metrics {
  fixed64 Key = 1;
  delphi.Counter fieldC = 2 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg2_fieldC" Description: "spare" Units: Count } ];
  delphi.Counter fieldD = 3 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg2_fieldD" Description: "spare" Units: Count } ];
  delphi.Counter err_csum_start_gt_end_4 = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg2_err_csum_start_gt_end_4" Description: "P4 program/compiler error. Checksum start is greater then end" Units: Count } ];
  delphi.Counter err_csum_start_gt_end_3 = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg2_err_csum_start_gt_end_3" Description: "P4 program/compiler error. Checksum start is greater then end" Units: Count } ];
  delphi.Counter err_csum_start_gt_end_2 = 6 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg2_err_csum_start_gt_end_2" Description: "P4 program/compiler error. Checksum start is greater then end" Units: Count } ];
  delphi.Counter err_csum_start_gt_end_1 = 7 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg2_err_csum_start_gt_end_1" Description: "P4 program/compiler error. Checksum start is greater then end" Units: Count } ];
  delphi.Counter err_csum_start_gt_end_0 = 8 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg2_err_csum_start_gt_end_0" Description: "P4 program/compiler error. Checksum start is greater then end" Units: Count } ];
  delphi.Counter err_crc_start_gt_end = 9 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg2_err_crc_start_gt_end" Description: "P4 program/compiler error. ICRC start is greater then end" Units: Count } ];
}

message Dprdpr0intsramseccMetrics {
  fixed64 Key = 1;
  delphi.Counter dpr_pktin_fifo_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_pktin_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpr_pktin_fifo_correctable = 3 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_pktin_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter dpr_csum_fifo_uncorrectable = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_csum_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpr_csum_fifo_correctable = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_csum_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter dpr_phv_fifo_uncorrectable = 6 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_phv_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpr_phv_fifo_correctable = 7 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_phv_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter dpr_ohi_fifo_uncorrectable = 8 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_ohi_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpr_ohi_fifo_correctable = 9 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_ohi_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter dpr_ptr_fifo_uncorrectable = 10 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_ptr_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpr_ptr_fifo_correctable = 11 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_ptr_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter dpr_pktout_fifo_uncorrectable = 12 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_pktout_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpr_pktout_fifo_correctable = 13 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_pktout_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Dprdpr0intfifoMetrics {
  fixed64 Key = 1;
  delphi.Counter phv_ff_ovflow = 2 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_fifo_phv_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ohi_ff_ovflow = 3 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_fifo_ohi_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktin_ff_ovflow = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_fifo_pktin_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktout_ff_undflow = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_fifo_pktout_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter csum_ff_ovflow = 6 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_fifo_csum_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ptr_ff_ovflow = 7 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_fifo_ptr_ff_ovflow" Description: "Hardware Error" Units: Count } ];
}

message Dprdpr0intflopfifo0Metrics {
  fixed64 Key = 1;
  delphi.Counter data_mux_force_bypass_crc_flop_ff_ovflow = 2 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_data_mux_force_bypass_crc_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter dpr_crc_info_flop_ff_ovflow = 3 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_dpr_crc_info_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter dpr_crc_update_info_flop_ff_ovflow = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_dpr_crc_update_info_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter dpr_csum_info_flop_ff_ovflow = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_dpr_csum_info_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter data_mux_force_bypass_csum_flop_ff_ovflow = 6 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_data_mux_force_bypass_csum_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter dpr_csum_update_info_flop_ff_ovflow = 7 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_dpr_csum_update_info_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ptr_early_pkt_eop_info_flop_ff_ovflow = 8 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_ptr_early_pkt_eop_info_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter data_mux_eop_err_flop_ff_ovflow = 9 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_data_mux_eop_err_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktin_eop_err_flop_ff_ovflow = 10 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_pktin_eop_err_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter csum_err_flop_ff_ovflow = 11 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_csum_err_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter crc_err_flop_ff_ovflow = 12 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_crc_err_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter data_mux_drop_flop_ff_ovflow = 13 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_data_mux_drop_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter phv_pkt_data_flop_ff_ovflow = 14 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_phv_pkt_data_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktout_len_cell_flop_ff_ovflow = 15 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_pktout_len_cell_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter padding_size_flop_ff_ovflow = 16 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_padding_size_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktin_err_flop_ff_ovflow = 17 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_pktin_err_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter phv_no_data_flop_ff_ovflow = 18 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_phv_no_data_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ptr_lookahaed_flop_ff_ovflow = 19 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_ptr_lookahaed_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_vld_flop_ff_ovflow = 20 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_eop_vld_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter csum_cal_vld_flop_ff_ovflow = 21 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_0_csum_cal_vld_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
}

message Dprdpr0intflopfifo1Metrics {
  fixed64 Key = 1;
  delphi.Counter data_mux_force_bypass_crc_flop_ff_undflow = 2 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_data_mux_force_bypass_crc_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter dpr_crc_info_flop_ff_undflow = 3 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_dpr_crc_info_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter dpr_crc_update_info_flop_ff_undflow = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_dpr_crc_update_info_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter dpr_csum_info_flop_ff_undflow = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_dpr_csum_info_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter data_mux_force_bypass_csum_flop_ff_undflow = 6 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_data_mux_force_bypass_csum_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter dpr_csum_update_info_flop_ff_undflow = 7 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_dpr_csum_update_info_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ptr_early_pkt_eop_info_flop_ff_undflow = 8 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_ptr_early_pkt_eop_info_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter data_mux_eop_err_flop_ff_undflow = 9 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_data_mux_eop_err_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktin_eop_err_flop_ff_undflow = 10 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_pktin_eop_err_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter csum_err_flop_ff_undflow = 11 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_csum_err_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter crc_err_flop_ff_undflow = 12 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_crc_err_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter data_mux_drop_flop_ff_undflow = 13 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_data_mux_drop_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter phv_pkt_data_flop_ff_undflow = 14 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_phv_pkt_data_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktout_len_cell_flop_ff_undflow = 15 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_pktout_len_cell_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter padding_size_flop_ff_undflow = 16 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_padding_size_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktin_err_flop_ff_undflow = 17 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_pktin_err_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter phv_no_data_flop_ff_undflow = 18 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_phv_no_data_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ptr_lookahaed_flop_ff_undflow = 19 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_ptr_lookahaed_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_vld_flop_ff_undflow = 20 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_eop_vld_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter csum_cal_vld_flop_ff_undflow = 21 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_flop_fifo_1_csum_cal_vld_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
}

message Dprdpr0intspareMetrics {
  fixed64 Key = 1;
  delphi.Counter spare_0 = 2 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_0" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_1 = 3 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_1" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_2 = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_2" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_3 = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_3" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_4 = 6 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_4" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_5 = 7 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_5" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_6 = 8 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_6" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_7 = 9 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_7" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_8 = 10 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_8" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_9 = 11 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_9" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_10 = 12 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_10" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_11 = 13 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_11" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_12 = 14 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_12" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_13 = 15 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_13" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_14 = 16 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_14" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_15 = 17 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_15" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_16 = 18 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_16" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_17 = 19 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_17" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_18 = 20 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_18" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_19 = 21 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_19" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_20 = 22 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_20" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_21 = 23 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_21" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_22 = 24 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_22" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_23 = 25 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_23" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_24 = 26 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_24" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_25 = 27 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_25" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_26 = 28 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_26" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_27 = 29 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_27" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_28 = 30 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_28" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_29 = 31 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_29" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_30 = 32 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_30" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_31 = 33 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_spare_spare_31" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
}

message Dprdpr0intcreditMetrics {
  fixed64 Key = 1;
  delphi.Counter egress_credit_ovflow = 2 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_credit_egress_credit_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter egress_credit_undflow = 3 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_credit_egress_credit_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktout_credit_ovflow = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_credit_pktout_credit_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktout_credit_undflow = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_credit_pktout_credit_undflow" Description: "Hardware Error" Units: Count } ];
}

message Dprdpr1intreg1Metrics {
  fixed64 Key = 1;
  delphi.Counter err_phv_sop_no_eop = 2 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_phv_sop_no_eop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_phv_eop_no_sop = 3 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_phv_eop_no_sop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_ohi_sop_no_eop = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_ohi_sop_no_eop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_ohi_eop_no_sop = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_ohi_eop_no_sop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_pktin_sop_no_eop = 6 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_pktin_sop_no_eop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_pktin_eop_no_sop = 7 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_pktin_eop_no_sop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_csum_offset_gt_pkt_size_4 = 8 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_csum_offset_gt_pkt_size_4" Description: "P4 program/compiler error. Checksum covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_offset_gt_pkt_size_3 = 9 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_csum_offset_gt_pkt_size_3" Description: "P4 program/compiler error. Checksum covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_offset_gt_pkt_size_2 = 10 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_csum_offset_gt_pkt_size_2" Description: "P4 program/compiler error. Checksum covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_offset_gt_pkt_size_1 = 11 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_csum_offset_gt_pkt_size_1" Description: "P4 program/compiler error. Checksum covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_offset_gt_pkt_size_0 = 12 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_csum_offset_gt_pkt_size_0" Description: "P4 program/compiler error. Checksum covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_phdr_offset_gt_pkt_size_4 = 13 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_csum_phdr_offset_gt_pkt_size_4" Description: "P4 program/compiler error. Checksum pseudoheaders covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_phdr_offset_gt_pkt_size_3 = 14 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_csum_phdr_offset_gt_pkt_size_3" Description: "P4 program/compiler error. Checksum pseudoheaders covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_phdr_offset_gt_pkt_size_2 = 15 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_csum_phdr_offset_gt_pkt_size_2" Description: "P4 program/compiler error. Checksum pseudoheaders covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_phdr_offset_gt_pkt_size_1 = 16 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_csum_phdr_offset_gt_pkt_size_1" Description: "P4 program/compiler error. Checksum pseudoheaders covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_phdr_offset_gt_pkt_size_0 = 17 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_csum_phdr_offset_gt_pkt_size_0" Description: "P4 program/compiler error. Checksum pseudoheaders covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_loc_gt_pkt_size_4 = 18 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_csum_loc_gt_pkt_size_4" Description: "P4 program/compiler error. Checksum location greater then packet size" Units: Count } ];
  delphi.Counter err_csum_loc_gt_pkt_size_3 = 19 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_csum_loc_gt_pkt_size_3" Description: "P4 program/compiler error. Checksum location greater then packet size" Units: Count } ];
  delphi.Counter err_csum_loc_gt_pkt_size_2 = 20 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_csum_loc_gt_pkt_size_2" Description: "P4 program/compiler error. Checksum location greater then packet size" Units: Count } ];
  delphi.Counter err_csum_loc_gt_pkt_size_1 = 21 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_csum_loc_gt_pkt_size_1" Description: "P4 program/compiler error. Checksum location greater then packet size" Units: Count } ];
  delphi.Counter err_csum_loc_gt_pkt_size_0 = 22 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_csum_loc_gt_pkt_size_0" Description: "P4 program/compiler error. Checksum location greater then packet size" Units: Count } ];
  delphi.Counter err_crc_offset_gt_pkt_size = 23 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_crc_offset_gt_pkt_size" Description: "P4 program/compiler error. ICRC covers more than packet size" Units: Count } ];
  delphi.Counter err_crc_loc_gt_pkt_size = 24 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_crc_loc_gt_pkt_size" Description: "P4 program/compiler error. ICRC location greater then packet size" Units: Count } ];
  delphi.Counter err_crc_mask_offset_gt_pkt_size = 25 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_crc_mask_offset_gt_pkt_size" Description: "Invalid need to be masked" Units: Count } ];
  delphi.Counter err_pkt_eop_early = 26 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_pkt_eop_early" Description: "spare" Units: Count } ];
  delphi.Counter err_ptr_ff_overflow = 27 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_ptr_ff_overflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_csum_ff_overflow = 28 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_csum_ff_overflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_pktout_ff_overflow = 29 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_pktout_ff_overflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_ptr_from_cfg_overflow = 30 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg1_err_ptr_from_cfg_overflow" Description: "Hardware Error" Units: Count } ];
}

message Dprdpr1intreg2Metrics {
  fixed64 Key = 1;
  delphi.Counter fieldC = 2 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg2_fieldC" Description: "spare" Units: Count } ];
  delphi.Counter fieldD = 3 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg2_fieldD" Description: "spare" Units: Count } ];
  delphi.Counter err_csum_start_gt_end_4 = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg2_err_csum_start_gt_end_4" Description: "P4 program/compiler error. Checksum start is greater then end" Units: Count } ];
  delphi.Counter err_csum_start_gt_end_3 = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg2_err_csum_start_gt_end_3" Description: "P4 program/compiler error. Checksum start is greater then end" Units: Count } ];
  delphi.Counter err_csum_start_gt_end_2 = 6 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg2_err_csum_start_gt_end_2" Description: "P4 program/compiler error. Checksum start is greater then end" Units: Count } ];
  delphi.Counter err_csum_start_gt_end_1 = 7 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg2_err_csum_start_gt_end_1" Description: "P4 program/compiler error. Checksum start is greater then end" Units: Count } ];
  delphi.Counter err_csum_start_gt_end_0 = 8 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg2_err_csum_start_gt_end_0" Description: "P4 program/compiler error. Checksum start is greater then end" Units: Count } ];
  delphi.Counter err_crc_start_gt_end = 9 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_reg2_err_crc_start_gt_end" Description: "P4 program/compiler error. ICRC start is greater then end" Units: Count } ];
}

message Dprdpr1intsramseccMetrics {
  fixed64 Key = 1;
  delphi.Counter dpr_pktin_fifo_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_srams_ecc_dpr_pktin_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpr_pktin_fifo_correctable = 3 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_srams_ecc_dpr_pktin_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter dpr_csum_fifo_uncorrectable = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_srams_ecc_dpr_csum_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpr_csum_fifo_correctable = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_srams_ecc_dpr_csum_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter dpr_phv_fifo_uncorrectable = 6 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_srams_ecc_dpr_phv_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpr_phv_fifo_correctable = 7 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_srams_ecc_dpr_phv_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter dpr_ohi_fifo_uncorrectable = 8 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_srams_ecc_dpr_ohi_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpr_ohi_fifo_correctable = 9 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_srams_ecc_dpr_ohi_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter dpr_ptr_fifo_uncorrectable = 10 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_srams_ecc_dpr_ptr_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpr_ptr_fifo_correctable = 11 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_srams_ecc_dpr_ptr_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter dpr_pktout_fifo_uncorrectable = 12 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_srams_ecc_dpr_pktout_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpr_pktout_fifo_correctable = 13 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_srams_ecc_dpr_pktout_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Dprdpr1intfifoMetrics {
  fixed64 Key = 1;
  delphi.Counter phv_ff_ovflow = 2 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_fifo_phv_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ohi_ff_ovflow = 3 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_fifo_ohi_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktin_ff_ovflow = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_fifo_pktin_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktout_ff_undflow = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_fifo_pktout_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter csum_ff_ovflow = 6 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_fifo_csum_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ptr_ff_ovflow = 7 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_fifo_ptr_ff_ovflow" Description: "Hardware Error" Units: Count } ];
}

message Dprdpr1intflopfifo0Metrics {
  fixed64 Key = 1;
  delphi.Counter data_mux_force_bypass_crc_flop_ff_ovflow = 2 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_data_mux_force_bypass_crc_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter dpr_crc_info_flop_ff_ovflow = 3 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_dpr_crc_info_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter dpr_crc_update_info_flop_ff_ovflow = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_dpr_crc_update_info_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter dpr_csum_info_flop_ff_ovflow = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_dpr_csum_info_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter data_mux_force_bypass_csum_flop_ff_ovflow = 6 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_data_mux_force_bypass_csum_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter dpr_csum_update_info_flop_ff_ovflow = 7 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_dpr_csum_update_info_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ptr_early_pkt_eop_info_flop_ff_ovflow = 8 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_ptr_early_pkt_eop_info_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter data_mux_eop_err_flop_ff_ovflow = 9 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_data_mux_eop_err_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktin_eop_err_flop_ff_ovflow = 10 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_pktin_eop_err_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter csum_err_flop_ff_ovflow = 11 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_csum_err_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter crc_err_flop_ff_ovflow = 12 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_crc_err_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter data_mux_drop_flop_ff_ovflow = 13 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_data_mux_drop_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter phv_pkt_data_flop_ff_ovflow = 14 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_phv_pkt_data_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktout_len_cell_flop_ff_ovflow = 15 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_pktout_len_cell_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter padding_size_flop_ff_ovflow = 16 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_padding_size_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktin_err_flop_ff_ovflow = 17 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_pktin_err_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter phv_no_data_flop_ff_ovflow = 18 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_phv_no_data_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ptr_lookahaed_flop_ff_ovflow = 19 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_ptr_lookahaed_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_vld_flop_ff_ovflow = 20 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_eop_vld_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter csum_cal_vld_flop_ff_ovflow = 21 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_0_csum_cal_vld_flop_ff_ovflow" Description: "Hardware Error" Units: Count } ];
}

message Dprdpr1intflopfifo1Metrics {
  fixed64 Key = 1;
  delphi.Counter data_mux_force_bypass_crc_flop_ff_undflow = 2 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_data_mux_force_bypass_crc_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter dpr_crc_info_flop_ff_undflow = 3 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_dpr_crc_info_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter dpr_crc_update_info_flop_ff_undflow = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_dpr_crc_update_info_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter dpr_csum_info_flop_ff_undflow = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_dpr_csum_info_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter data_mux_force_bypass_csum_flop_ff_undflow = 6 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_data_mux_force_bypass_csum_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter dpr_csum_update_info_flop_ff_undflow = 7 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_dpr_csum_update_info_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ptr_early_pkt_eop_info_flop_ff_undflow = 8 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_ptr_early_pkt_eop_info_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter data_mux_eop_err_flop_ff_undflow = 9 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_data_mux_eop_err_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktin_eop_err_flop_ff_undflow = 10 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_pktin_eop_err_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter csum_err_flop_ff_undflow = 11 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_csum_err_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter crc_err_flop_ff_undflow = 12 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_crc_err_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter data_mux_drop_flop_ff_undflow = 13 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_data_mux_drop_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter phv_pkt_data_flop_ff_undflow = 14 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_phv_pkt_data_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktout_len_cell_flop_ff_undflow = 15 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_pktout_len_cell_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter padding_size_flop_ff_undflow = 16 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_padding_size_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktin_err_flop_ff_undflow = 17 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_pktin_err_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter phv_no_data_flop_ff_undflow = 18 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_phv_no_data_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ptr_lookahaed_flop_ff_undflow = 19 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_ptr_lookahaed_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_vld_flop_ff_undflow = 20 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_eop_vld_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter csum_cal_vld_flop_ff_undflow = 21 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_flop_fifo_1_csum_cal_vld_flop_ff_undflow" Description: "Hardware Error" Units: Count } ];
}

message Dprdpr1intspareMetrics {
  fixed64 Key = 1;
  delphi.Counter spare_0 = 2 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_0" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_1 = 3 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_1" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_2 = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_2" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_3 = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_3" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_4 = 6 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_4" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_5 = 7 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_5" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_6 = 8 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_6" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_7 = 9 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_7" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_8 = 10 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_8" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_9 = 11 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_9" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_10 = 12 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_10" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_11 = 13 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_11" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_12 = 14 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_12" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_13 = 15 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_13" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_14 = 16 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_14" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_15 = 17 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_15" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_16 = 18 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_16" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_17 = 19 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_17" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_18 = 20 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_18" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_19 = 21 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_19" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_20 = 22 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_20" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_21 = 23 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_21" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_22 = 24 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_22" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_23 = 25 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_23" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_24 = 26 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_24" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_25 = 27 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_25" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_26 = 28 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_26" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_27 = 29 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_27" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_28 = 30 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_28" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_29 = 31 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_29" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_30 = 32 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_30" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_31 = 33 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_spare_spare_31" Description: "spare_0 .. spare_7: Hardware Error; spare_8: err_phv_above_max: P4 program/compiler error. Packet need to get information form a PHV that is beyond the maximum supported; spare_9: capture engaged used for debug;" Units: Count } ];
}

message Dprdpr1intcreditMetrics {
  fixed64 Key = 1;
  delphi.Counter egress_credit_ovflow = 2 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_credit_egress_credit_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter egress_credit_undflow = 3 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_credit_egress_credit_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktout_credit_ovflow = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_credit_pktout_credit_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktout_credit_undflow = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_1_int_credit_pktout_credit_undflow" Description: "Hardware Error" Units: Count } ];
}

message Mcmc0intmcMetrics {
  fixed64 Key = 1;
  delphi.Counter mch_int = 2 [ (venice.metricsField) = { DisplayName: "mc_mc_0_int_mc_mch_int" Description: "" Units: Count } ];
}

message Mcmc0mchintmcMetrics {
  fixed64 Key = 1;
  delphi.Counter ecc_1bit_thresh_ps1 = 2 [ (venice.metricsField) = { DisplayName: "mc_mc_0_mch_int_mc_ecc_1bit_thresh_ps1" Description: "" Units: Count } ];
  delphi.Counter ecc_1bit_thresh_ps0 = 3 [ (venice.metricsField) = { DisplayName: "mc_mc_0_mch_int_mc_ecc_1bit_thresh_ps0" Description: "" Units: Count } ];
}

message Mcmc1intmcMetrics {
  fixed64 Key = 1;
  delphi.Counter mch_int = 2 [ (venice.metricsField) = { DisplayName: "mc_mc_1_int_mc_mch_int" Description: "" Units: Count } ];
}

message Mcmc1mchintmcMetrics {
  fixed64 Key = 1;
  delphi.Counter ecc_1bit_thresh_ps1 = 2 [ (venice.metricsField) = { DisplayName: "mc_mc_1_mch_int_mc_ecc_1bit_thresh_ps1" Description: "" Units: Count } ];
  delphi.Counter ecc_1bit_thresh_ps0 = 3 [ (venice.metricsField) = { DisplayName: "mc_mc_1_mch_int_mc_ecc_1bit_thresh_ps0" Description: "" Units: Count } ];
}

message Mcmc2intmcMetrics {
  fixed64 Key = 1;
  delphi.Counter mch_int = 2 [ (venice.metricsField) = { DisplayName: "mc_mc_2_int_mc_mch_int" Description: "" Units: Count } ];
}

message Mcmc2mchintmcMetrics {
  fixed64 Key = 1;
  delphi.Counter ecc_1bit_thresh_ps1 = 2 [ (venice.metricsField) = { DisplayName: "mc_mc_2_mch_int_mc_ecc_1bit_thresh_ps1" Description: "" Units: Count } ];
  delphi.Counter ecc_1bit_thresh_ps0 = 3 [ (venice.metricsField) = { DisplayName: "mc_mc_2_mch_int_mc_ecc_1bit_thresh_ps0" Description: "" Units: Count } ];
}

message Mcmc3intmcMetrics {
  fixed64 Key = 1;
  delphi.Counter mch_int = 2 [ (venice.metricsField) = { DisplayName: "mc_mc_3_int_mc_mch_int" Description: "" Units: Count } ];
}

message Mcmc3mchintmcMetrics {
  fixed64 Key = 1;
  delphi.Counter ecc_1bit_thresh_ps1 = 2 [ (venice.metricsField) = { DisplayName: "mc_mc_3_mch_int_mc_ecc_1bit_thresh_ps1" Description: "" Units: Count } ];
  delphi.Counter ecc_1bit_thresh_ps0 = 3 [ (venice.metricsField) = { DisplayName: "mc_mc_3_mch_int_mc_ecc_1bit_thresh_ps0" Description: "" Units: Count } ];
}

message Mcmc4intmcMetrics {
  fixed64 Key = 1;
  delphi.Counter mch_int = 2 [ (venice.metricsField) = { DisplayName: "mc_mc_4_int_mc_mch_int" Description: "" Units: Count } ];
}

message Mcmc4mchintmcMetrics {
  fixed64 Key = 1;
  delphi.Counter ecc_1bit_thresh_ps1 = 2 [ (venice.metricsField) = { DisplayName: "mc_mc_4_mch_int_mc_ecc_1bit_thresh_ps1" Description: "" Units: Count } ];
  delphi.Counter ecc_1bit_thresh_ps0 = 3 [ (venice.metricsField) = { DisplayName: "mc_mc_4_mch_int_mc_ecc_1bit_thresh_ps0" Description: "" Units: Count } ];
}

message Mcmc5intmcMetrics {
  fixed64 Key = 1;
  delphi.Counter mch_int = 2 [ (venice.metricsField) = { DisplayName: "mc_mc_5_int_mc_mch_int" Description: "" Units: Count } ];
}

message Mcmc5mchintmcMetrics {
  fixed64 Key = 1;
  delphi.Counter ecc_1bit_thresh_ps1 = 2 [ (venice.metricsField) = { DisplayName: "mc_mc_5_mch_int_mc_ecc_1bit_thresh_ps1" Description: "" Units: Count } ];
  delphi.Counter ecc_1bit_thresh_ps0 = 3 [ (venice.metricsField) = { DisplayName: "mc_mc_5_mch_int_mc_ecc_1bit_thresh_ps0" Description: "" Units: Count } ];
}

message Mcmc6intmcMetrics {
  fixed64 Key = 1;
  delphi.Counter mch_int = 2 [ (venice.metricsField) = { DisplayName: "mc_mc_6_int_mc_mch_int" Description: "" Units: Count } ];
}

message Mcmc6mchintmcMetrics {
  fixed64 Key = 1;
  delphi.Counter ecc_1bit_thresh_ps1 = 2 [ (venice.metricsField) = { DisplayName: "mc_mc_6_mch_int_mc_ecc_1bit_thresh_ps1" Description: "" Units: Count } ];
  delphi.Counter ecc_1bit_thresh_ps0 = 3 [ (venice.metricsField) = { DisplayName: "mc_mc_6_mch_int_mc_ecc_1bit_thresh_ps0" Description: "" Units: Count } ];
}

message Mcmc7intmcMetrics {
  fixed64 Key = 1;
  delphi.Counter mch_int = 2 [ (venice.metricsField) = { DisplayName: "mc_mc_7_int_mc_mch_int" Description: "" Units: Count } ];
}

message Mcmc7mchintmcMetrics {
  fixed64 Key = 1;
  delphi.Counter ecc_1bit_thresh_ps1 = 2 [ (venice.metricsField) = { DisplayName: "mc_mc_7_mch_int_mc_ecc_1bit_thresh_ps1" Description: "" Units: Count } ];
  delphi.Counter ecc_1bit_thresh_ps0 = 3 [ (venice.metricsField) = { DisplayName: "mc_mc_7_mch_int_mc_ecc_1bit_thresh_ps0" Description: "" Units: Count } ];
}

message Dppdpp0intreg1Metrics {
  fixed64 Key = 1;
  delphi.Counter err_phv_sop_no_eop = 2 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_reg1_err_phv_sop_no_eop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_phv_eop_no_sop = 3 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_reg1_err_phv_eop_no_sop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_ohi_sop_no_eop = 4 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_reg1_err_ohi_sop_no_eop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_ohi_eop_no_sop = 5 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_reg1_err_ohi_eop_no_sop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_framer_credit_overrun = 6 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_reg1_err_framer_credit_overrun" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_packets_in_flight_credit_overrun = 7 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_reg1_err_packets_in_flight_credit_overrun" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_null_hdr_vld = 8 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_reg1_err_null_hdr_vld" Description: "P4 program/compiler error. packet has no headers (0 size)" Units: Count } ];
  delphi.Counter err_null_hdrfld_vld = 9 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_reg1_err_null_hdrfld_vld" Description: "P4 program/compiler error. packet has no headers (0 size)" Units: Count } ];
  delphi.Counter err_max_pkt_size = 10 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_reg1_err_max_pkt_size" Description: "P4 program/compiler error. packet built size exceeding programmed threshold  " Units: Count } ];
  delphi.Counter err_max_active_hdrs = 11 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_reg1_err_max_active_hdrs" Description: "P4 program/compiler error. exceeding max number of available headers per 64 byte line" Units: Count } ];
  delphi.Counter err_phv_no_data_reference_ohi = 12 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_reg1_err_phv_no_data_reference_ohi" Description: "P4 program/compiler error. reference to a byte in the incoming packet on a software PHV originated frame with no associated packet" Units: Count } ];
  delphi.Counter err_csum_multiple_hdr = 13 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_reg1_err_csum_multiple_hdr" Description: "P4 program/compiler error. more than one header requesting same csum engine computation" Units: Count } ];
  delphi.Counter err_csum_multiple_hdr_copy = 14 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_reg1_err_csum_multiple_hdr_copy" Description: "P4 program/compiler error. more than one header requesting csum copy" Units: Count } ];
  delphi.Counter err_crc_multiple_hdr = 15 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_reg1_err_crc_multiple_hdr" Description: "P4 program/compiler error. more than one header requesting crc computation" Units: Count } ];
  delphi.Counter err_ptr_fifo_credit_overrun = 16 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_reg1_err_ptr_fifo_credit_overrun" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_clip_max_pkt_size = 17 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_reg1_err_clip_max_pkt_size" Description: "P4 program/compiler error. Packet constructed goes beyond programmed or hardwires  max byte threshold (whichever is less)" Units: Count } ];
  delphi.Counter err_min_pkt_size = 18 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_reg1_err_min_pkt_size" Description: "P4 program/compiler error. packet built size too small to carry vital intrinsic information" Units: Count } ];
}

message Dppdpp0intreg2Metrics {
  fixed64 Key = 1;
  delphi.Counter fieldC = 2 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_reg2_fieldC" Description: "spare" Units: Count } ];
  delphi.Counter fieldD = 3 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_reg2_fieldD" Description: "spare" Units: Count } ];
}

message Dppdpp0intsramseccMetrics {
  fixed64 Key = 1;
  delphi.Counter dpp_phv_fifo_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_srams_ecc_dpp_phv_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpp_phv_fifo_correctable = 3 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_srams_ecc_dpp_phv_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter dpp_ohi_fifo_uncorrectable = 4 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_srams_ecc_dpp_ohi_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpp_ohi_fifo_correctable = 5 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_srams_ecc_dpp_ohi_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Dppdpp0intfifoMetrics {
  fixed64 Key = 1;
  delphi.Counter phv_ff_overflow = 2 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_fifo_phv_ff_overflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ohi_ff_overflow = 3 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_fifo_ohi_ff_overflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pkt_size_ff_ovflow = 4 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_fifo_pkt_size_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pkt_size_ff_undflow = 5 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_fifo_pkt_size_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter csum_phv_ff_ovflow = 6 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_fifo_csum_phv_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter csum_phv_ff_undflow = 7 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_fifo_csum_phv_ff_undflow" Description: "Hardware Error" Units: Count } ];
}

message Dppdpp0intspareMetrics {
  fixed64 Key = 1;
  delphi.Counter spare_0 = 2 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_0" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_1 = 3 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_1" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_2 = 4 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_2" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_3 = 5 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_3" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_4 = 6 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_4" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_5 = 7 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_5" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_6 = 8 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_6" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_7 = 9 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_7" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_8 = 10 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_8" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_9 = 11 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_9" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_10 = 12 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_10" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_11 = 13 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_11" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_12 = 14 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_12" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_13 = 15 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_13" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_14 = 16 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_14" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_15 = 17 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_15" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_16 = 18 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_16" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_17 = 19 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_17" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_18 = 20 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_18" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_19 = 21 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_19" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_20 = 22 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_20" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_21 = 23 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_21" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_22 = 24 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_22" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_23 = 25 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_23" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_24 = 26 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_24" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_25 = 27 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_25" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_26 = 28 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_26" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_27 = 29 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_27" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_28 = 30 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_28" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_29 = 31 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_29" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_30 = 32 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_30" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_31 = 33 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_spare_spare_31" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
}

message Dppdpp0intcreditMetrics {
  fixed64 Key = 1;
  delphi.Counter ptr_credit_ovflow = 2 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_credit_ptr_credit_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ptr_credit_undflow = 3 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_credit_ptr_credit_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pkt_credit_ovflow = 4 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_credit_pkt_credit_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pkt_credit_undflow = 5 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_credit_pkt_credit_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter framer_credit_ovflow = 6 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_credit_framer_credit_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter framer_credit_undflow = 7 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_credit_framer_credit_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter framer_hdrfld_vld_ovfl = 8 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_credit_framer_hdrfld_vld_ovfl" Description: "Hardware Error" Units: Count } ];
  delphi.Counter framer_hdrfld_offset_ovfl = 9 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_credit_framer_hdrfld_offset_ovfl" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_framer_hdrsize_zero_ovfl = 10 [ (venice.metricsField) = { DisplayName: "dpp_dpp_0_int_credit_err_framer_hdrsize_zero_ovfl" Description: "Hardware Error" Units: Count } ];
}

message Dppdpp1intreg1Metrics {
  fixed64 Key = 1;
  delphi.Counter err_phv_sop_no_eop = 2 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_reg1_err_phv_sop_no_eop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_phv_eop_no_sop = 3 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_reg1_err_phv_eop_no_sop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_ohi_sop_no_eop = 4 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_reg1_err_ohi_sop_no_eop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_ohi_eop_no_sop = 5 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_reg1_err_ohi_eop_no_sop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_framer_credit_overrun = 6 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_reg1_err_framer_credit_overrun" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_packets_in_flight_credit_overrun = 7 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_reg1_err_packets_in_flight_credit_overrun" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_null_hdr_vld = 8 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_reg1_err_null_hdr_vld" Description: "P4 program/compiler error. packet has no headers (0 size)" Units: Count } ];
  delphi.Counter err_null_hdrfld_vld = 9 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_reg1_err_null_hdrfld_vld" Description: "P4 program/compiler error. packet has no headers (0 size)" Units: Count } ];
  delphi.Counter err_max_pkt_size = 10 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_reg1_err_max_pkt_size" Description: "P4 program/compiler error. packet built size exceeding programmed threshold  " Units: Count } ];
  delphi.Counter err_max_active_hdrs = 11 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_reg1_err_max_active_hdrs" Description: "P4 program/compiler error. exceeding max number of available headers per 64 byte line" Units: Count } ];
  delphi.Counter err_phv_no_data_reference_ohi = 12 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_reg1_err_phv_no_data_reference_ohi" Description: "P4 program/compiler error. reference to a byte in the incoming packet on a software PHV originated frame with no associated packet" Units: Count } ];
  delphi.Counter err_csum_multiple_hdr = 13 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_reg1_err_csum_multiple_hdr" Description: "P4 program/compiler error. more than one header requesting same csum engine computation" Units: Count } ];
  delphi.Counter err_csum_multiple_hdr_copy = 14 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_reg1_err_csum_multiple_hdr_copy" Description: "P4 program/compiler error. more than one header requesting csum copy" Units: Count } ];
  delphi.Counter err_crc_multiple_hdr = 15 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_reg1_err_crc_multiple_hdr" Description: "P4 program/compiler error. more than one header requesting crc computation" Units: Count } ];
  delphi.Counter err_ptr_fifo_credit_overrun = 16 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_reg1_err_ptr_fifo_credit_overrun" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_clip_max_pkt_size = 17 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_reg1_err_clip_max_pkt_size" Description: "P4 program/compiler error. Packet constructed goes beyond programmed or hardwires  max byte threshold (whichever is less)" Units: Count } ];
  delphi.Counter err_min_pkt_size = 18 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_reg1_err_min_pkt_size" Description: "P4 program/compiler error. packet built size too small to carry vital intrinsic information" Units: Count } ];
}

message Dppdpp1intreg2Metrics {
  fixed64 Key = 1;
  delphi.Counter fieldC = 2 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_reg2_fieldC" Description: "spare" Units: Count } ];
  delphi.Counter fieldD = 3 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_reg2_fieldD" Description: "spare" Units: Count } ];
}

message Dppdpp1intsramseccMetrics {
  fixed64 Key = 1;
  delphi.Counter dpp_phv_fifo_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_srams_ecc_dpp_phv_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpp_phv_fifo_correctable = 3 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_srams_ecc_dpp_phv_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter dpp_ohi_fifo_uncorrectable = 4 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_srams_ecc_dpp_ohi_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpp_ohi_fifo_correctable = 5 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_srams_ecc_dpp_ohi_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Dppdpp1intfifoMetrics {
  fixed64 Key = 1;
  delphi.Counter phv_ff_overflow = 2 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_fifo_phv_ff_overflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ohi_ff_overflow = 3 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_fifo_ohi_ff_overflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pkt_size_ff_ovflow = 4 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_fifo_pkt_size_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pkt_size_ff_undflow = 5 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_fifo_pkt_size_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter csum_phv_ff_ovflow = 6 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_fifo_csum_phv_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter csum_phv_ff_undflow = 7 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_fifo_csum_phv_ff_undflow" Description: "Hardware Error" Units: Count } ];
}

message Dppdpp1intspareMetrics {
  fixed64 Key = 1;
  delphi.Counter spare_0 = 2 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_0" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_1 = 3 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_1" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_2 = 4 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_2" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_3 = 5 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_3" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_4 = 6 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_4" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_5 = 7 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_5" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_6 = 8 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_6" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_7 = 9 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_7" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_8 = 10 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_8" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_9 = 11 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_9" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_10 = 12 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_10" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_11 = 13 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_11" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_12 = 14 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_12" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_13 = 15 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_13" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_14 = 16 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_14" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_15 = 17 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_15" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_16 = 18 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_16" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_17 = 19 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_17" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_18 = 20 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_18" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_19 = 21 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_19" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_20 = 22 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_20" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_21 = 23 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_21" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_22 = 24 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_22" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_23 = 25 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_23" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_24 = 26 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_24" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_25 = 27 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_25" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_26 = 28 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_26" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_27 = 29 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_27" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_28 = 30 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_28" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_29 = 31 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_29" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_30 = 32 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_30" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
  delphi.Counter spare_31 = 33 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_spare_spare_31" Description: "spare_0: err_headerfld_size. P4 program/compiler error. header size is grater than > 16Kbytes; spare_1: err_adder_overflow P4 program/compiler error acccumulated header size is grater than > 16Kbytes; spare_2: capture engaged used for debug;" Units: Count } ];
}

message Dppdpp1intcreditMetrics {
  fixed64 Key = 1;
  delphi.Counter ptr_credit_ovflow = 2 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_credit_ptr_credit_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ptr_credit_undflow = 3 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_credit_ptr_credit_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pkt_credit_ovflow = 4 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_credit_pkt_credit_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pkt_credit_undflow = 5 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_credit_pkt_credit_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter framer_credit_ovflow = 6 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_credit_framer_credit_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter framer_credit_undflow = 7 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_credit_framer_credit_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter framer_hdrfld_vld_ovfl = 8 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_credit_framer_hdrfld_vld_ovfl" Description: "Hardware Error" Units: Count } ];
  delphi.Counter framer_hdrfld_offset_ovfl = 9 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_credit_framer_hdrfld_offset_ovfl" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_framer_hdrsize_zero_ovfl = 10 [ (venice.metricsField) = { DisplayName: "dpp_dpp_1_int_credit_err_framer_hdrsize_zero_ovfl" Description: "Hardware Error" Units: Count } ];
}

message SemasemaintgroupsintregMetrics {
  fixed64 Key = 1;
  delphi.Counter sema_err = 2 [ (venice.metricsField) = { DisplayName: "sema_sema_int_groups_intreg_sema_err" Description: "" Units: Count } ];
}

message MpmpnsintcryptoMetrics {
  fixed64 Key = 1;
  delphi.Counter mpp0 = 2 [ (venice.metricsField) = { DisplayName: "mp_mpns_int_crypto_mpp0" Description: "https://docs.google.com/document/d/1o7e-6AhV5ET_WoOvVRvMOXqFLDGzunZIx1R1BwUpzek/view#heading=h.e62qntm4xe7q" Units: Count } ];
  delphi.Counter mpp1 = 3 [ (venice.metricsField) = { DisplayName: "mp_mpns_int_crypto_mpp1" Description: "https://docs.google.com/document/d/1o7e-6AhV5ET_WoOvVRvMOXqFLDGzunZIx1R1BwUpzek/view#heading=h.e62qntm4xe7q" Units: Count } ];
  delphi.Counter mpp2 = 4 [ (venice.metricsField) = { DisplayName: "mp_mpns_int_crypto_mpp2" Description: "https://docs.google.com/document/d/1o7e-6AhV5ET_WoOvVRvMOXqFLDGzunZIx1R1BwUpzek/view#heading=h.e62qntm4xe7q" Units: Count } ];
  delphi.Counter mpp3 = 5 [ (venice.metricsField) = { DisplayName: "mp_mpns_int_crypto_mpp3" Description: "https://docs.google.com/document/d/1o7e-6AhV5ET_WoOvVRvMOXqFLDGzunZIx1R1BwUpzek/view#heading=h.e62qntm4xe7q" Units: Count } ];
  delphi.Counter mpp4 = 6 [ (venice.metricsField) = { DisplayName: "mp_mpns_int_crypto_mpp4" Description: "https://docs.google.com/document/d/1o7e-6AhV5ET_WoOvVRvMOXqFLDGzunZIx1R1BwUpzek/view#heading=h.e62qntm4xe7q" Units: Count } ];
  delphi.Counter mpp5 = 7 [ (venice.metricsField) = { DisplayName: "mp_mpns_int_crypto_mpp5" Description: "https://docs.google.com/document/d/1o7e-6AhV5ET_WoOvVRvMOXqFLDGzunZIx1R1BwUpzek/view#heading=h.e62qntm4xe7q" Units: Count } ];
  delphi.Counter mpp6 = 8 [ (venice.metricsField) = { DisplayName: "mp_mpns_int_crypto_mpp6" Description: "https://docs.google.com/document/d/1o7e-6AhV5ET_WoOvVRvMOXqFLDGzunZIx1R1BwUpzek/view#heading=h.e62qntm4xe7q" Units: Count } ];
  delphi.Counter mpp7 = 9 [ (venice.metricsField) = { DisplayName: "mp_mpns_int_crypto_mpp7" Description: "https://docs.google.com/document/d/1o7e-6AhV5ET_WoOvVRvMOXqFLDGzunZIx1R1BwUpzek/view#heading=h.e62qntm4xe7q" Units: Count } ];
}

message MsmsintmsMetrics {
  fixed64 Key = 1;
  delphi.Counter sbus_err = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_sbus_err" Description: "Software Error" Units: Count } ];
  delphi.Counter rei_err = 3 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_rei_err" Description: "Hardware Error" Units: Count } ];
  delphi.Counter rei_pll_err = 4 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_rei_pll_err" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pk_efuse_init_read_timeout = 5 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_pk_efuse_init_read_timeout" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pk_efuse_cpu_read_timeout = 6 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_pk_efuse_cpu_read_timeout" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pk_efuse_cpu_burn_timeout = 7 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_pk_efuse_cpu_burn_timeout" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pk_efuse_burn_imm_timeout = 8 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_pk_efuse_burn_imm_timeout" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ds16_efuse_init_read_timeout = 9 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_ds16_efuse_init_read_timeout" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ds16_efuse_cpu_read_timeout = 10 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_ds16_efuse_cpu_read_timeout" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ahb_axi_err = 11 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_ahb_axi_err" Description: "Software Error" Units: Count } ];
  delphi.Counter emmc_pre_axi_err = 12 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_emmc_pre_axi_err" Description: "Software Error" Units: Count } ];
  delphi.Counter fl_axi_err = 13 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_fl_axi_err" Description: "Software Error" Units: Count } ];
  delphi.Counter ms_esec_mb_pre_axi_err = 14 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_ms_esec_mb_pre_axi_err" Description: "Software Error" Units: Count } ];
  delphi.Counter msap_pre_axi_err = 15 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_msap_pre_axi_err" Description: "Software Error" Units: Count } ];
  delphi.Counter nxms_a13_axi_err = 16 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_nxms_a13_axi_err" Description: "Software Error" Units: Count } ];
  delphi.Counter rbm_axi_err = 17 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_rbm_axi_err" Description: "Software Error" Units: Count } ];
  delphi.Counter ssram_axi_err = 18 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_ssram_axi_err" Description: "Software Error" Units: Count } ];
  delphi.Counter ahb_axi_werr = 19 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_ahb_axi_werr" Description: "Software Error" Units: Count } ];
  delphi.Counter emmc_pre_axi_werr = 20 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_emmc_pre_axi_werr" Description: "Software Error" Units: Count } ];
  delphi.Counter fl_axi_werr = 21 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_fl_axi_werr" Description: "Software Error" Units: Count } ];
  delphi.Counter ms_esec_mb_pre_axi_werr = 22 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_ms_esec_mb_pre_axi_werr" Description: "Software Error" Units: Count } ];
  delphi.Counter msap_pre_axi_werr = 23 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_msap_pre_axi_werr" Description: "Software Error" Units: Count } ];
  delphi.Counter nxms_a13_axi_werr = 24 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_nxms_a13_axi_werr" Description: "Software Error" Units: Count } ];
  delphi.Counter rbm_axi_werr = 25 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_rbm_axi_werr" Description: "Software Error" Units: Count } ];
  delphi.Counter ssram_axi_werr = 26 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_ssram_axi_werr" Description: "Software Error" Units: Count } ];
  delphi.Counter addr_filter_write = 27 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_addr_filter_write" Description: "Software Error" Units: Count } ];
  delphi.Counter addr_filter_read = 28 [ (venice.metricsField) = { DisplayName: "ms_ms_int_ms_addr_filter_read" Description: "Software Error" Units: Count } ];
}

message MsmsintmiscMetrics {
  fixed64 Key = 1;
  delphi.Counter qspi_ram_ecc_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_qspi_ram_ecc_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter qspi_ram_ecc_correctable = 3 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_qspi_ram_ecc_correctable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter elam_cap_ecc_uncorrectable = 4 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_elam_cap_ecc_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter elam_cap_ecc_correctable = 5 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_elam_cap_ecc_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter ahb_esec_data_ram_ecc_uncorrectable = 6 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_ahb_esec_data_ram_ecc_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ahb_esec_data_ram_ecc_correctable = 7 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_ahb_esec_data_ram_ecc_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter ahb_esec_esystem_ram_ecc_uncorrectable = 8 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_ahb_esec_esystem_ram_ecc_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ahb_esec_esystem_ram_ecc_correctable = 9 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_ahb_esec_esystem_ram_ecc_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter bl2_ram_ecc_uncorrectable = 10 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_bl2_ram_ecc_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter bl2_ram_ecc_correctable = 11 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_bl2_ram_ecc_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter int_wr_stall_hit0_interrupt = 12 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_int_wr_stall_hit0_interrupt" Description: "Info only, no action" Units: Count } ];
  delphi.Counter int_rd_stall_hit0_interrupt = 13 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_int_rd_stall_hit0_interrupt" Description: "Info only, no action" Units: Count } ];
  delphi.Counter int_wr_stall_hit1_interrupt = 14 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_int_wr_stall_hit1_interrupt" Description: "Info only, no action" Units: Count } ];
  delphi.Counter int_rd_stall_hit1_interrupt = 15 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_int_rd_stall_hit1_interrupt" Description: "Info only, no action" Units: Count } ];
  delphi.Counter int_wr_stall_hit2_interrupt = 16 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_int_wr_stall_hit2_interrupt" Description: "Info only, no action" Units: Count } ];
  delphi.Counter int_rd_stall_hit2_interrupt = 17 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_int_rd_stall_hit2_interrupt" Description: "Info only, no action" Units: Count } ];
  delphi.Counter int_wr_full0_interrupt = 18 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_int_wr_full0_interrupt" Description: "Hardware Error" Units: Count } ];
  delphi.Counter int_rd_full0_interrupt = 19 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_int_rd_full0_interrupt" Description: "Hardware Error" Units: Count } ];
  delphi.Counter int_wr_full1_interrupt = 20 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_int_wr_full1_interrupt" Description: "Hardware Error" Units: Count } ];
  delphi.Counter int_rd_full1_interrupt = 21 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_int_rd_full1_interrupt" Description: "Hardware Error" Units: Count } ];
  delphi.Counter int_wr_full2_interrupt = 22 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_int_wr_full2_interrupt" Description: "Hardware Error" Units: Count } ];
  delphi.Counter int_rd_full2_interrupt = 23 [ (venice.metricsField) = { DisplayName: "ms_ms_int_misc_int_rd_full2_interrupt" Description: "Hardware Error" Units: Count } ];
}

message MsmsintesecureMetrics {
  fixed64 Key = 1;
  delphi.Counter mb_rxint = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_esecure_mb_rxint" Description: "Info only, no action" Units: Count } ];
  delphi.Counter mb_txint = 3 [ (venice.metricsField) = { DisplayName: "ms_ms_int_esecure_mb_txint" Description: "Info only, no action" Units: Count } ];
}

message Msmsintprp1Metrics {
  fixed64 Key = 1;
  delphi.Counter read = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp1_read" Description: "Software Error" Units: Count } ];
  delphi.Counter security = 3 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp1_security" Description: "Software Error" Units: Count } ];
  delphi.Counter decode = 4 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp1_decode" Description: "Software Error" Units: Count } ];
  delphi.Counter ack_timeout = 5 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp1_ack_timeout" Description: "Info only, no action" Units: Count } ];
  delphi.Counter stall_timeout = 6 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp1_stall_timeout" Description: "Info only, no action" Units: Count } ];
  delphi.Counter byte_read = 7 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp1_byte_read" Description: "Info only, no action" Units: Count } ];
  delphi.Counter byte_write = 8 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp1_byte_write" Description: "Info only, no action" Units: Count } ];
}

message Msmsintprp2Metrics {
  fixed64 Key = 1;
  delphi.Counter read = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp2_read" Description: "Software Error" Units: Count } ];
  delphi.Counter security = 3 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp2_security" Description: "Software Error" Units: Count } ];
  delphi.Counter decode = 4 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp2_decode" Description: "Software Error" Units: Count } ];
  delphi.Counter ack_timeout = 5 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp2_ack_timeout" Description: "Info only, no action" Units: Count } ];
  delphi.Counter stall_timeout = 6 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp2_stall_timeout" Description: "Info only, no action" Units: Count } ];
  delphi.Counter byte_read = 7 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp2_byte_read" Description: "Info only, no action" Units: Count } ];
  delphi.Counter byte_write = 8 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp2_byte_write" Description: "Info only, no action" Units: Count } ];
}

message Msmsintprp3Metrics {
  fixed64 Key = 1;
  delphi.Counter read = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp3_read" Description: "Software Error" Units: Count } ];
  delphi.Counter security = 3 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp3_security" Description: "Software Error" Units: Count } ];
  delphi.Counter decode = 4 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp3_decode" Description: "Software Error" Units: Count } ];
  delphi.Counter ack_timeout = 5 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp3_ack_timeout" Description: "Info only, no action" Units: Count } ];
  delphi.Counter stall_timeout = 6 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp3_stall_timeout" Description: "Info only, no action" Units: Count } ];
  delphi.Counter byte_read = 7 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp3_byte_read" Description: "Info only, no action" Units: Count } ];
  delphi.Counter byte_write = 8 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp3_byte_write" Description: "Info only, no action" Units: Count } ];
}

message Msmsintprp4Metrics {
  fixed64 Key = 1;
  delphi.Counter read = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp4_read" Description: "Software Error" Units: Count } ];
  delphi.Counter security = 3 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp4_security" Description: "Software Error" Units: Count } ];
  delphi.Counter decode = 4 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp4_decode" Description: "Software Error" Units: Count } ];
  delphi.Counter ack_timeout = 5 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp4_ack_timeout" Description: "Info only, no action" Units: Count } ];
  delphi.Counter stall_timeout = 6 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp4_stall_timeout" Description: "Info only, no action" Units: Count } ];
  delphi.Counter byte_read = 7 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp4_byte_read" Description: "Info only, no action" Units: Count } ];
  delphi.Counter byte_write = 8 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp4_byte_write" Description: "Info only, no action" Units: Count } ];
}

message Msmsintprp5Metrics {
  fixed64 Key = 1;
  delphi.Counter read = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp5_read" Description: "Software Error" Units: Count } ];
  delphi.Counter security = 3 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp5_security" Description: "Software Error" Units: Count } ];
  delphi.Counter decode = 4 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp5_decode" Description: "Software Error" Units: Count } ];
  delphi.Counter ack_timeout = 5 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp5_ack_timeout" Description: "Info only, no action" Units: Count } ];
  delphi.Counter stall_timeout = 6 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp5_stall_timeout" Description: "Info only, no action" Units: Count } ];
  delphi.Counter byte_read = 7 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp5_byte_read" Description: "Info only, no action" Units: Count } ];
  delphi.Counter byte_write = 8 [ (venice.metricsField) = { DisplayName: "ms_ms_int_prp5_byte_write" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic0Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic0_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic1Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic1_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic2Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic2_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic3Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic3_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic4Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic4_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic5Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic5_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic6Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic6_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic7Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic7_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic8Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic8_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic9Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic9_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic10Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic10_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic11Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic11_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic12Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic12_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic13Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic13_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic14Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic14_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic15Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic15_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic16Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic16_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic17Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic17_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic18Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic18_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic19Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic19_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic20Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic20_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic21Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic21_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic22Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic22_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message Msmsintgic23Metrics {
  fixed64 Key = 1;
  delphi.Counter msar_int_lvl = 2 [ (venice.metricsField) = { DisplayName: "ms_ms_int_gic23_msar_int_lvl" Description: "Info only, no action" Units: Count } ];
}

message MsemintgroupsintregMetrics {
  fixed64 Key = 1;
  delphi.Counter axi = 2 [ (venice.metricsField) = { DisplayName: "ms_em_int_groups_intreg_axi" Description: "" Units: Count } ];
}

message Mxmx0intmacMetrics {
  fixed64 Key = 1;
  delphi.Counter lane0_sbe = 2 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_lane0_sbe" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter lane0_dbe = 3 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_lane0_dbe" Description: "Double bit error in SerDes. Lane may go down" Units: Count } ];
  delphi.Counter lane1_sbe = 4 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_lane1_sbe" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter lane1_dbe = 5 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_lane1_dbe" Description: "Double bit error in SerDes. Lane may go down" Units: Count } ];
  delphi.Counter lane2_sbe = 6 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_lane2_sbe" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter lane2_dbe = 7 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_lane2_dbe" Description: "Double bit error in SerDes. Lane may go down" Units: Count } ];
  delphi.Counter lane3_sbe = 8 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_lane3_sbe" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter lane3_dbe = 9 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_lane3_dbe" Description: "Double bit error in SerDes. Lane may go down" Units: Count } ];
  delphi.Counter umac_CFG3_intr = 10 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_umac_CFG3_intr" Description: "Info only, no action" Units: Count } ];
  delphi.Counter umac_CFG3_pslverr = 11 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_umac_CFG3_pslverr" Description: "Invalid need to be masked" Units: Count } ];
  delphi.Counter m0pb_pbus_drdy = 12 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_m0pb_pbus_drdy" Description: "Debug PB config. Never happen; otherwise, it's hardware bug" Units: Count } ];
  delphi.Counter m1pb_pbus_drdy = 13 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_m1pb_pbus_drdy" Description: "Debug PB config. Never happen; otherwise, it's hardware bug" Units: Count } ];
  delphi.Counter m2pb_pbus_drdy = 14 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_m2pb_pbus_drdy" Description: "Debug PB config. Never happen; otherwise, it's hardware bug" Units: Count } ];
  delphi.Counter m3pb_pbus_drdy = 15 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_m3pb_pbus_drdy" Description: "Debug PB config. Never happen; otherwise, it's hardware bug" Units: Count } ];
  delphi.Counter rx0_missing_sof = 16 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_rx0_missing_sof" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx0_missing_eof = 17 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_rx0_missing_eof" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx0_timeout_err = 18 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_rx0_timeout_err" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx0_min_size_err = 19 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_rx0_min_size_err" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx1_missing_sof = 20 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_rx1_missing_sof" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx1_missing_eof = 21 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_rx1_missing_eof" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx1_timeout_err = 22 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_rx1_timeout_err" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx1_min_size_err = 23 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_rx1_min_size_err" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx2_missing_sof = 24 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_rx2_missing_sof" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx2_missing_eof = 25 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_rx2_missing_eof" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx2_timeout_err = 26 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_rx2_timeout_err" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx2_min_size_err = 27 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_rx2_min_size_err" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx3_missing_sof = 28 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_rx3_missing_sof" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx3_missing_eof = 29 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_rx3_missing_eof" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx3_timeout_err = 30 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_rx3_timeout_err" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx3_min_size_err = 31 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_mac_rx3_min_size_err" Description: "HW self recover" Units: Count } ];
}

message Mxmx0inteccMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_ecc_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "mx_mx_0_int_ecc_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Mxmx1intmacMetrics {
  fixed64 Key = 1;
  delphi.Counter lane0_sbe = 2 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_lane0_sbe" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter lane0_dbe = 3 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_lane0_dbe" Description: "Double bit error in SerDes. Lane may go down" Units: Count } ];
  delphi.Counter lane1_sbe = 4 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_lane1_sbe" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter lane1_dbe = 5 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_lane1_dbe" Description: "Double bit error in SerDes. Lane may go down" Units: Count } ];
  delphi.Counter lane2_sbe = 6 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_lane2_sbe" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter lane2_dbe = 7 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_lane2_dbe" Description: "Double bit error in SerDes. Lane may go down" Units: Count } ];
  delphi.Counter lane3_sbe = 8 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_lane3_sbe" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter lane3_dbe = 9 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_lane3_dbe" Description: "Double bit error in SerDes. Lane may go down" Units: Count } ];
  delphi.Counter umac_CFG3_intr = 10 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_umac_CFG3_intr" Description: "Info only, no action" Units: Count } ];
  delphi.Counter umac_CFG3_pslverr = 11 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_umac_CFG3_pslverr" Description: "Invalid need to be masked" Units: Count } ];
  delphi.Counter m0pb_pbus_drdy = 12 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_m0pb_pbus_drdy" Description: "Debug PB config. Never happen; otherwise, it's hardware bug" Units: Count } ];
  delphi.Counter m1pb_pbus_drdy = 13 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_m1pb_pbus_drdy" Description: "Debug PB config. Never happen; otherwise, it's hardware bug" Units: Count } ];
  delphi.Counter m2pb_pbus_drdy = 14 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_m2pb_pbus_drdy" Description: "Debug PB config. Never happen; otherwise, it's hardware bug" Units: Count } ];
  delphi.Counter m3pb_pbus_drdy = 15 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_m3pb_pbus_drdy" Description: "Debug PB config. Never happen; otherwise, it's hardware bug" Units: Count } ];
  delphi.Counter rx0_missing_sof = 16 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_rx0_missing_sof" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx0_missing_eof = 17 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_rx0_missing_eof" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx0_timeout_err = 18 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_rx0_timeout_err" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx0_min_size_err = 19 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_rx0_min_size_err" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx1_missing_sof = 20 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_rx1_missing_sof" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx1_missing_eof = 21 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_rx1_missing_eof" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx1_timeout_err = 22 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_rx1_timeout_err" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx1_min_size_err = 23 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_rx1_min_size_err" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx2_missing_sof = 24 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_rx2_missing_sof" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx2_missing_eof = 25 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_rx2_missing_eof" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx2_timeout_err = 26 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_rx2_timeout_err" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx2_min_size_err = 27 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_rx2_min_size_err" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx3_missing_sof = 28 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_rx3_missing_sof" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx3_missing_eof = 29 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_rx3_missing_eof" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx3_timeout_err = 30 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_rx3_timeout_err" Description: "HW self recover" Units: Count } ];
  delphi.Counter rx3_min_size_err = 31 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_mac_rx3_min_size_err" Description: "HW self recover" Units: Count } ];
}

message Mxmx1inteccMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_ecc_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "mx_mx_1_int_ecc_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

