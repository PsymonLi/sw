
syntax = "proto3";
package asicerrord;

import "delphi.proto";
import "metrics_annotations.proto";

message Ptptptdintgrp1Metrics {
  fixed64 Key = 1;
  delphi.Counter rcv_phv_dma_ptr = 2 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp1_rcv_phv_dma_ptr" Description: "software error. dma pointer points to a non-existing flit in PHV" Units: Count } ];
  delphi.Counter rcv_phv_addr = 3 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp1_rcv_phv_addr" Description: "software error. phv2mem or phv2pkt start/end address is not programmed correctly." Units: Count } ];
  delphi.Counter rcv_exceed_16byte = 4 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp1_rcv_exceed_16byte" Description: "software error. mem2mem_phv2mem or phv2mem with fence exceeded 16 bytes" Units: Count } ];
  delphi.Counter rcv_phv_not_sop = 5 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp1_rcv_phv_not_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter rcv_pkt_order_ff_full = 6 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp1_rcv_pkt_order_ff_full" Description: "hardware error" Units: Count } ];
  delphi.Counter rcv_pend_phv_more_than_2 = 7 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp1_rcv_pend_phv_more_than_2" Description: "hardware error" Units: Count } ];
  delphi.Counter rcv_pend_phv_less = 8 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp1_rcv_pend_phv_less" Description: "hardware error" Units: Count } ];
  delphi.Counter rcv_cmd_nop_eop = 9 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp1_rcv_cmd_nop_eop" Description: "software error. NOP is seen at the end, but no cmd_eop" Units: Count } ];
  delphi.Counter rcv_cmd_out_not_sop = 10 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp1_rcv_cmd_out_not_sop" Description: "hardware error" Units: Count } ];
  delphi.Counter rcv_pkt2mem_seen = 11 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp1_rcv_pkt2mem_seen" Description: "software error. pkt2mem command not expected in PTD" Units: Count } ];
  delphi.Counter rcv_skip_seen = 12 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp1_rcv_skip_seen" Description: "software error. skip command not expected in PTD" Units: Count } ];
  delphi.Counter rcv_phv_eop_no_cmd_eop = 13 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp1_rcv_phv_eop_no_cmd_eop" Description: "software error. End of PHV reached, but cmdeop is not seen in any command" Units: Count } ];
  delphi.Counter rcv_m2m_dst_not_seen = 14 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp1_rcv_m2m_dst_not_seen" Description: "software error. mem2mem_dst command is expected right after mem2mem_src." Units: Count } ];
  delphi.Counter rcv_m2m_src_not_seen = 15 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp1_rcv_m2m_src_not_seen" Description: "software error. mem2mem_dst command is seen without mem2mem_src before it." Units: Count } ];
  delphi.Counter rdreq_invalid_cmd_seen = 16 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp1_rdreq_invalid_cmd_seen" Description: "software error. invalid cmdtype seen in dma command" Units: Count } ];
  delphi.Counter rdreq_mem2mem_psize_zero = 17 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp1_rdreq_mem2mem_psize_zero" Description: "software error. mem2mem psize field is zero" Units: Count } ];
  delphi.Counter rdreq_m2m_phv2mem_exceed_16byte = 18 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp1_rdreq_m2m_phv2mem_exceed_16byte" Description: "software error. mem2mem_phv2mem exceeds 16 bytes" Units: Count } ];
  delphi.Counter rdreq_phv2mem_fence_exceed_16byte = 19 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp1_rdreq_phv2mem_fence_exceed_16byte" Description: "software error. phv2mem fence exceeds 16 bytes" Units: Count } ];
  delphi.Counter rdreq_mem2pkt_psize_zero = 20 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp1_rdreq_mem2pkt_psize_zero" Description: "software error. mem2pkt psize field is zero" Units: Count } ];
}

message Ptptptdintgrp2Metrics {
  fixed64 Key = 1;
  delphi.Counter wr_invalid_cmd = 2 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp2_wr_invalid_cmd" Description: "software error. invalid cmdtype seen in dma command" Units: Count } ];
  delphi.Counter wr_pend_sz = 3 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp2_wr_pend_sz" Description: "hardware error" Units: Count } ];
  delphi.Counter wr_axi_rd_resp = 4 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp2_wr_axi_rd_resp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter pkt_err_eop_forced = 5 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp2_pkt_err_eop_forced" Description: "Eop is forced while creating a packet. Check for interrupts in ptd_wr. Possible software error or axi read resp error." Units: Count } ];
  delphi.Counter pkt_no_eop_err_seen = 6 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp2_pkt_no_eop_err_seen" Description: "Eop is forced while creating a packet. Check for interrupts in ptd_wr. Possible software error or axi read resp error." Units: Count } ];
  delphi.Counter pkt_cmd_eop_no_data = 7 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp2_pkt_cmd_eop_no_data" Description: "software error. Packet creation control signal error. This can happen with either axi read resp error or malformed dma commands. Check other interrupts in ptd_wr block." Units: Count } ];
  delphi.Counter rdrsp_axi = 8 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp2_rdrsp_axi" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter wrrsp_axi = 9 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp2_wrrsp_axi" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_rd_resp = 10 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp2_spurious_rd_resp" Description: "unexpected read response received. Check interrupts in other blocks." Units: Count } ];
  delphi.Counter spurious_wr_resp = 11 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp2_spurious_wr_resp" Description: "unexpected write response received. check interrupts in other blocks" Units: Count } ];
  delphi.Counter wrreq_info_first_missing = 12 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp2_wrreq_info_first_missing" Description: "software error can trigger this interrupt. Can happen with other interrupts. If no other interrupt, then this may be a hw error." Units: Count } ];
  delphi.Counter wrreq_num_bytes_zero = 13 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp2_wrreq_num_bytes_zero" Description: "software error can trigger this interrupt. Can happen with other interrupts. If no other interrupt, then this may be a hw error." Units: Count } ];
  delphi.Counter wrreq_num_bytes_more_than_64 = 14 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_grp2_wrreq_num_bytes_more_than_64" Description: "software error can trigger this interrupt. Can happen with other interrupts. If no other interrupt, then this may be a hw error." Units: Count } ];
}

message PtptptdintintfMetrics {
  fixed64 Key = 1;
  delphi.Counter pb_err = 2 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_intf_pb_err" Description: "Packet to PB sent with error. Possible axi read response error or malformed dma commands. Check other interrupts in ptd_wr block" Units: Count } ];
  delphi.Counter pb_sop_err = 3 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_intf_pb_sop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter pb_eop_err = 4 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_intf_pb_eop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter npv_resub_err = 5 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_intf_npv_resub_err" Description: "PHV sent to NPV with error bit. Possible error bit set in PHV from STG or ecc error. check interrupts in other blocks." Units: Count } ];
  delphi.Counter npv_resub_sop_err = 6 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_intf_npv_resub_sop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter npv_resub_eop_err = 7 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_intf_npv_resub_eop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter ma_err = 8 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_intf_ma_err" Description: "PHV from STG received with error bit. Possible ecc error. Check interrupts in other blocks." Units: Count } ];
  delphi.Counter ma_sop_err = 9 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_intf_ma_sop_err" Description: "hardware error" Units: Count } ];
  delphi.Counter ma_eop_err = 10 [ (venice.metricsField) = { DisplayName: "pt_pt_ptd_int_intf_ma_eop_err" Description: "hardware error" Units: Count } ];
}

message Pcrte0interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "pcr_te_0_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "pcr_te_0_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "pcr_te_0_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "pcr_te_0_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "pcr_te_0_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "pcr_te_0_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "pcr_te_0_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "pcr_te_0_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "pcr_te_0_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "pcr_te_0_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "pcr_te_0_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "pcr_te_0_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "pcr_te_0_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "pcr_te_0_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "pcr_te_0_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "pcr_te_0_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "pcr_te_0_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "pcr_te_0_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "pcr_te_0_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Pcrte1interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "pcr_te_1_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "pcr_te_1_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "pcr_te_1_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "pcr_te_1_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "pcr_te_1_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "pcr_te_1_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "pcr_te_1_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "pcr_te_1_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "pcr_te_1_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "pcr_te_1_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "pcr_te_1_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "pcr_te_1_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "pcr_te_1_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "pcr_te_1_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "pcr_te_1_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "pcr_te_1_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "pcr_te_1_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "pcr_te_1_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "pcr_te_1_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Pcrte2interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "pcr_te_2_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "pcr_te_2_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "pcr_te_2_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "pcr_te_2_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "pcr_te_2_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "pcr_te_2_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "pcr_te_2_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "pcr_te_2_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "pcr_te_2_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "pcr_te_2_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "pcr_te_2_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "pcr_te_2_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "pcr_te_2_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "pcr_te_2_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "pcr_te_2_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "pcr_te_2_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "pcr_te_2_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "pcr_te_2_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "pcr_te_2_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Pcrte3interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "pcr_te_3_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "pcr_te_3_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "pcr_te_3_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "pcr_te_3_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "pcr_te_3_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "pcr_te_3_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "pcr_te_3_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "pcr_te_3_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "pcr_te_3_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "pcr_te_3_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "pcr_te_3_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "pcr_te_3_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "pcr_te_3_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "pcr_te_3_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "pcr_te_3_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "pcr_te_3_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "pcr_te_3_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "pcr_te_3_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "pcr_te_3_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Pcrte4interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "pcr_te_4_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "pcr_te_4_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "pcr_te_4_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "pcr_te_4_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "pcr_te_4_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "pcr_te_4_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "pcr_te_4_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "pcr_te_4_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "pcr_te_4_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "pcr_te_4_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "pcr_te_4_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "pcr_te_4_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "pcr_te_4_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "pcr_te_4_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "pcr_te_4_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "pcr_te_4_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "pcr_te_4_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "pcr_te_4_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "pcr_te_4_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Pcrte5interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "pcr_te_5_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "pcr_te_5_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "pcr_te_5_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "pcr_te_5_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "pcr_te_5_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "pcr_te_5_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "pcr_te_5_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "pcr_te_5_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "pcr_te_5_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "pcr_te_5_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "pcr_te_5_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "pcr_te_5_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "pcr_te_5_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "pcr_te_5_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "pcr_te_5_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "pcr_te_5_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "pcr_te_5_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "pcr_te_5_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "pcr_te_5_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Pcrte6interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "pcr_te_6_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "pcr_te_6_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "pcr_te_6_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "pcr_te_6_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "pcr_te_6_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "pcr_te_6_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "pcr_te_6_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "pcr_te_6_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "pcr_te_6_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "pcr_te_6_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "pcr_te_6_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "pcr_te_6_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "pcr_te_6_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "pcr_te_6_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "pcr_te_6_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "pcr_te_6_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "pcr_te_6_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "pcr_te_6_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "pcr_te_6_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Pcrte7interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "pcr_te_7_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "pcr_te_7_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "pcr_te_7_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "pcr_te_7_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "pcr_te_7_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "pcr_te_7_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "pcr_te_7_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "pcr_te_7_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "pcr_te_7_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "pcr_te_7_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "pcr_te_7_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "pcr_te_7_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "pcr_te_7_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "pcr_te_7_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "pcr_te_7_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "pcr_te_7_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "pcr_te_7_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "pcr_te_7_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "pcr_te_7_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Pcrmpu0interrMetrics {
  fixed64 Key = 1;
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Pcrmpu0intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "pcr_mpu_0_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Pcrmpu1interrMetrics {
  fixed64 Key = 1;
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Pcrmpu1intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "pcr_mpu_1_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Pcrmpu2interrMetrics {
  fixed64 Key = 1;
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Pcrmpu2intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "pcr_mpu_2_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Pcrmpu3interrMetrics {
  fixed64 Key = 1;
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Pcrmpu3intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "pcr_mpu_3_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Pcrmpu4interrMetrics {
  fixed64 Key = 1;
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Pcrmpu4intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "pcr_mpu_4_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Pcrmpu5interrMetrics {
  fixed64 Key = 1;
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Pcrmpu5intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "pcr_mpu_5_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Pcrmpu6interrMetrics {
  fixed64 Key = 1;
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Pcrmpu6intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "pcr_mpu_6_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Pcrmpu7interrMetrics {
  fixed64 Key = 1;
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Pcrmpu7intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "pcr_mpu_7_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message TxstxsintschMetrics {
  fixed64 Key = 1;
  delphi.Counter sch_rid_empty = 3 [ (venice.metricsField) = { DisplayName: "txs_txs_int_sch_sch_rid_empty" Description: "" Units: Count } ];
  delphi.Counter sch_wr_txfifo_ovf = 4 [ (venice.metricsField) = { DisplayName: "txs_txs_int_sch_sch_wr_txfifo_ovf" Description: "" Units: Count } ];
  delphi.Counter sch_rd_txfifo_ovf = 5 [ (venice.metricsField) = { DisplayName: "txs_txs_int_sch_sch_rd_txfifo_ovf" Description: "" Units: Count } ];
  delphi.Counter sch_state_fifo_ovf = 6 [ (venice.metricsField) = { DisplayName: "txs_txs_int_sch_sch_state_fifo_ovf" Description: "" Units: Count } ];
  delphi.Counter sch_hbm_byp_ovf = 8 [ (venice.metricsField) = { DisplayName: "txs_txs_int_sch_sch_hbm_byp_ovf" Description: "" Units: Count } ];
  delphi.Counter sch_hbm_byp_wtag_wrap = 9 [ (venice.metricsField) = { DisplayName: "txs_txs_int_sch_sch_hbm_byp_wtag_wrap" Description: "" Units: Count } ];
  delphi.Counter sch_rlid_ovfl = 10 [ (venice.metricsField) = { DisplayName: "txs_txs_int_sch_sch_rlid_ovfl" Description: "rlid programming error" Units: Count } ];
  delphi.Counter sch_rlid_unfl = 11 [ (venice.metricsField) = { DisplayName: "txs_txs_int_sch_sch_rlid_unfl" Description: "rlid programming error" Units: Count } ];
  delphi.Counter sch_null_lif = 12 [ (venice.metricsField) = { DisplayName: "txs_txs_int_sch_sch_null_lif" Description: "lif map programming error" Units: Count } ];
  delphi.Counter sch_lif_sg_mismatch = 13 [ (venice.metricsField) = { DisplayName: "txs_txs_int_sch_sch_lif_sg_mismatch" Description: "shouldn't happen, need debugging if happens" Units: Count } ];
  delphi.Counter sch_aclr_hbm_ln_rollovr = 14 [ (venice.metricsField) = { DisplayName: "txs_txs_int_sch_sch_aclr_hbm_ln_rollovr" Description: "" Units: Count } ];
  delphi.Counter sch_bid_err = 22 [ (venice.metricsField) = { DisplayName: "txs_txs_int_sch_sch_bid_err" Description: "axi error" Units: Count } ];
  delphi.Counter sch_rresp_err = 23 [ (venice.metricsField) = { DisplayName: "txs_txs_int_sch_sch_rresp_err" Description: "" Units: Count } ];
  delphi.Counter sch_rid_err = 24 [ (venice.metricsField) = { DisplayName: "txs_txs_int_sch_sch_rid_err" Description: "axi error" Units: Count } ];
  delphi.Counter sch_drb_cnt_ovfl = 25 [ (venice.metricsField) = { DisplayName: "txs_txs_int_sch_sch_drb_cnt_ovfl" Description: "need to read clear drb counter in memory to avoid ovfl" Units: Count } ];
  delphi.Counter sch_drb_cnt_unfl = 26 [ (venice.metricsField) = { DisplayName: "txs_txs_int_sch_sch_drb_cnt_unfl" Description: "" Units: Count } ];
  delphi.Counter sch_txdma_msg_ovfl = 27 [ (venice.metricsField) = { DisplayName: "txs_txs_int_sch_sch_txdma_msg_ovfl" Description: "" Units: Count } ];
}

message TxstxsinttmrMetrics {
  fixed64 Key = 1;
  delphi.Counter tmr_rid_empty = 3 [ (venice.metricsField) = { DisplayName: "txs_txs_int_tmr_tmr_rid_empty" Description: "" Units: Count } ];
  delphi.Counter tmr_wr_txfifo_ovf = 4 [ (venice.metricsField) = { DisplayName: "txs_txs_int_tmr_tmr_wr_txfifo_ovf" Description: "" Units: Count } ];
  delphi.Counter tmr_rd_txfifo_ovf = 5 [ (venice.metricsField) = { DisplayName: "txs_txs_int_tmr_tmr_rd_txfifo_ovf" Description: "" Units: Count } ];
  delphi.Counter tmr_state_fifo_ovf = 6 [ (venice.metricsField) = { DisplayName: "txs_txs_int_tmr_tmr_state_fifo_ovf" Description: "" Units: Count } ];
  delphi.Counter tmr_hbm_byp_ovf = 7 [ (venice.metricsField) = { DisplayName: "txs_txs_int_tmr_tmr_hbm_byp_ovf" Description: "" Units: Count } ];
  delphi.Counter tmr_hbm_byp_wtag_wrap = 8 [ (venice.metricsField) = { DisplayName: "txs_txs_int_tmr_tmr_hbm_byp_wtag_wrap" Description: "" Units: Count } ];
  delphi.Counter ftmr_ctime_wrap = 9 [ (venice.metricsField) = { DisplayName: "txs_txs_int_tmr_ftmr_ctime_wrap" Description: "" Units: Count } ];
  delphi.Counter stmr_ctime_wrap = 10 [ (venice.metricsField) = { DisplayName: "txs_txs_int_tmr_stmr_ctime_wrap" Description: "" Units: Count } ];
  delphi.Counter ftmr_fifo_ovf = 19 [ (venice.metricsField) = { DisplayName: "txs_txs_int_tmr_ftmr_fifo_ovf" Description: "" Units: Count } ];
  delphi.Counter stmr_fifo_ovf = 20 [ (venice.metricsField) = { DisplayName: "txs_txs_int_tmr_stmr_fifo_ovf" Description: "" Units: Count } ];
  delphi.Counter tmr_rejct_drb_ovf = 23 [ (venice.metricsField) = { DisplayName: "txs_txs_int_tmr_tmr_rejct_drb_ovf" Description: "" Units: Count } ];
  delphi.Counter tmr_bid_err = 31 [ (venice.metricsField) = { DisplayName: "txs_txs_int_tmr_tmr_bid_err" Description: "" Units: Count } ];
  delphi.Counter tmr_rid_err = 33 [ (venice.metricsField) = { DisplayName: "txs_txs_int_tmr_tmr_rid_err" Description: "" Units: Count } ];
}

message TxstxsintsramseccMetrics {
  fixed64 Key = 1;
  delphi.Counter tmr_cnt_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "txs_txs_int_srams_ecc_tmr_cnt_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter tmr_cnt_correctable = 3 [ (venice.metricsField) = { DisplayName: "txs_txs_int_srams_ecc_tmr_cnt_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter sch_lif_map_uncorrectable = 4 [ (venice.metricsField) = { DisplayName: "txs_txs_int_srams_ecc_sch_lif_map_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sch_lif_map_correctable = 5 [ (venice.metricsField) = { DisplayName: "txs_txs_int_srams_ecc_sch_lif_map_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter sch_rlid_map_uncorrectable = 6 [ (venice.metricsField) = { DisplayName: "txs_txs_int_srams_ecc_sch_rlid_map_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sch_rlid_map_correctable = 7 [ (venice.metricsField) = { DisplayName: "txs_txs_int_srams_ecc_sch_rlid_map_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter sch_grp_uncorrectable = 8 [ (venice.metricsField) = { DisplayName: "txs_txs_int_srams_ecc_sch_grp_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sch_grp_correctable = 9 [ (venice.metricsField) = { DisplayName: "txs_txs_int_srams_ecc_sch_grp_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Pctte0interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "pct_te_0_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "pct_te_0_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "pct_te_0_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "pct_te_0_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "pct_te_0_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "pct_te_0_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "pct_te_0_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "pct_te_0_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "pct_te_0_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "pct_te_0_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "pct_te_0_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "pct_te_0_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "pct_te_0_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "pct_te_0_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "pct_te_0_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "pct_te_0_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "pct_te_0_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "pct_te_0_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "pct_te_0_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Pctte1interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "pct_te_1_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "pct_te_1_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "pct_te_1_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "pct_te_1_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "pct_te_1_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "pct_te_1_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "pct_te_1_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "pct_te_1_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "pct_te_1_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "pct_te_1_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "pct_te_1_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "pct_te_1_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "pct_te_1_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "pct_te_1_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "pct_te_1_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "pct_te_1_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "pct_te_1_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "pct_te_1_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "pct_te_1_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Pctte2interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "pct_te_2_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "pct_te_2_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "pct_te_2_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "pct_te_2_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "pct_te_2_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "pct_te_2_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "pct_te_2_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "pct_te_2_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "pct_te_2_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "pct_te_2_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "pct_te_2_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "pct_te_2_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "pct_te_2_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "pct_te_2_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "pct_te_2_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "pct_te_2_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "pct_te_2_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "pct_te_2_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "pct_te_2_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Pctte3interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "pct_te_3_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "pct_te_3_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "pct_te_3_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "pct_te_3_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "pct_te_3_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "pct_te_3_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "pct_te_3_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "pct_te_3_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "pct_te_3_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "pct_te_3_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "pct_te_3_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "pct_te_3_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "pct_te_3_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "pct_te_3_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "pct_te_3_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "pct_te_3_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "pct_te_3_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "pct_te_3_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "pct_te_3_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Pctte4interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "pct_te_4_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "pct_te_4_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "pct_te_4_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "pct_te_4_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "pct_te_4_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "pct_te_4_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "pct_te_4_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "pct_te_4_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "pct_te_4_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "pct_te_4_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "pct_te_4_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "pct_te_4_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "pct_te_4_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "pct_te_4_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "pct_te_4_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "pct_te_4_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "pct_te_4_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "pct_te_4_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "pct_te_4_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Pctte5interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "pct_te_5_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "pct_te_5_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "pct_te_5_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "pct_te_5_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "pct_te_5_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "pct_te_5_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "pct_te_5_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "pct_te_5_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "pct_te_5_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "pct_te_5_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "pct_te_5_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "pct_te_5_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "pct_te_5_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "pct_te_5_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "pct_te_5_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "pct_te_5_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "pct_te_5_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "pct_te_5_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "pct_te_5_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Pctte6interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "pct_te_6_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "pct_te_6_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "pct_te_6_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "pct_te_6_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "pct_te_6_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "pct_te_6_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "pct_te_6_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "pct_te_6_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "pct_te_6_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "pct_te_6_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "pct_te_6_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "pct_te_6_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "pct_te_6_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "pct_te_6_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "pct_te_6_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "pct_te_6_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "pct_te_6_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "pct_te_6_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "pct_te_6_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Pctte7interrMetrics {
  fixed64 Key = 1;
  delphi.Counter miss_sop = 2 [ (venice.metricsField) = { DisplayName: "pct_te_7_int_err_miss_sop" Description: "previous stage error" Units: Count } ];
  delphi.Counter miss_eop = 3 [ (venice.metricsField) = { DisplayName: "pct_te_7_int_err_miss_eop" Description: "previous stage error" Units: Count } ];
  delphi.Counter phv_max_size = 4 [ (venice.metricsField) = { DisplayName: "pct_te_7_int_err_phv_max_size" Description: "invalid" Units: Count } ];
  delphi.Counter spurious_axi_rsp = 5 [ (venice.metricsField) = { DisplayName: "pct_te_7_int_err_spurious_axi_rsp" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter spurious_tcam_rsp = 6 [ (venice.metricsField) = { DisplayName: "pct_te_7_int_err_spurious_tcam_rsp" Description: "bad tcam response" Units: Count } ];
  delphi.Counter axi_rdrsp_err = 8 [ (venice.metricsField) = { DisplayName: "pct_te_7_int_err_axi_rdrsp_err" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter axi_bad_read = 9 [ (venice.metricsField) = { DisplayName: "pct_te_7_int_err_axi_bad_read" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter tcam_req_idx_fifo = 10 [ (venice.metricsField) = { DisplayName: "pct_te_7_int_err_tcam_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter tcam_rsp_idx_fifo = 11 [ (venice.metricsField) = { DisplayName: "pct_te_7_int_err_tcam_rsp_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter mpu_req_idx_fifo = 12 [ (venice.metricsField) = { DisplayName: "pct_te_7_int_err_mpu_req_idx_fifo" Description: "pop empty fifo" Units: Count } ];
  delphi.Counter axi_req_idx_fifo = 13 [ (venice.metricsField) = { DisplayName: "pct_te_7_int_err_axi_req_idx_fifo" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter proc_tbl_vld_wo_proc = 14 [ (venice.metricsField) = { DisplayName: "pct_te_7_int_err_proc_tbl_vld_wo_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_wb = 15 [ (venice.metricsField) = { DisplayName: "pct_te_7_int_err_pend_wo_wb" Description: "mpu error" Units: Count } ];
  delphi.Counter pend1_wo_pend0 = 16 [ (venice.metricsField) = { DisplayName: "pct_te_7_int_err_pend1_wo_pend0" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_down = 17 [ (venice.metricsField) = { DisplayName: "pct_te_7_int_err_both_pend_down" Description: "mpu error" Units: Count } ];
  delphi.Counter pend_wo_proc_down = 18 [ (venice.metricsField) = { DisplayName: "pct_te_7_int_err_pend_wo_proc_down" Description: "mpu error" Units: Count } ];
  delphi.Counter both_pend_went_up = 19 [ (venice.metricsField) = { DisplayName: "pct_te_7_int_err_both_pend_went_up" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc = 20 [ (venice.metricsField) = { DisplayName: "pct_te_7_int_err_loaded_but_no_proc" Description: "mpu error" Units: Count } ];
  delphi.Counter loaded_but_no_proc_tbl_vld = 21 [ (venice.metricsField) = { DisplayName: "pct_te_7_int_err_loaded_but_no_proc_tbl_vld" Description: "mpu error" Units: Count } ];
}

message Pctmpu0interrMetrics {
  fixed64 Key = 1;
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Pctmpu0intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "pct_mpu_0_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Pctmpu1interrMetrics {
  fixed64 Key = 1;
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Pctmpu1intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "pct_mpu_1_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Pctmpu2interrMetrics {
  fixed64 Key = 1;
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Pctmpu2intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "pct_mpu_2_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Pctmpu3interrMetrics {
  fixed64 Key = 1;
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Pctmpu3intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "pct_mpu_3_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Pctmpu4interrMetrics {
  fixed64 Key = 1;
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Pctmpu4intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "pct_mpu_4_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Pctmpu5interrMetrics {
  fixed64 Key = 1;
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Pctmpu5intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "pct_mpu_5_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Pctmpu6interrMetrics {
  fixed64 Key = 1;
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Pctmpu6intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "pct_mpu_6_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Pctmpu7interrMetrics {
  fixed64 Key = 1;
  delphi.Counter sdp_mem_uncorrectable = 3 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_sdp_mem_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter sdp_mem_correctable = 4 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_sdp_mem_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter illegal_op_0 = 5 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_illegal_op_0" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_1 = 6 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_illegal_op_1" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_2 = 7 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_illegal_op_2" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter illegal_op_3 = 8 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_illegal_op_3" Description: "MPU executed illegal opcode (likely a jump to bad address or code space written over by DMA)" Units: Count } ];
  delphi.Counter max_inst_0 = 9 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_max_inst_0" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_1 = 10 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_max_inst_1" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_2 = 11 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_max_inst_2" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter max_inst_3 = 12 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_max_inst_3" Description: "MPU exceeded max instruction count for one program" Units: Count } ];
  delphi.Counter phvwr_0 = 13 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_phvwr_0" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_1 = 14 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_phvwr_1" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_2 = 15 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_phvwr_2" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter phvwr_3 = 16 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_phvwr_3" Description: "Illegal phvwr command or offset" Units: Count } ];
  delphi.Counter write_err_0 = 17 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_write_err_0" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_1 = 18 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_write_err_1" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_2 = 19 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_write_err_2" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter write_err_3 = 20 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_write_err_3" Description: "MPU write returned error on acknowledge, likely an address error" Units: Count } ];
  delphi.Counter cache_axi_0 = 21 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_cache_axi_0" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_1 = 22 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_cache_axi_1" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_2 = 23 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_cache_axi_2" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_axi_3 = 24 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_cache_axi_3" Description: "instruction cache fill returned response error, likely memory address error" Units: Count } ];
  delphi.Counter cache_parity_0 = 25 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_cache_parity_0" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_1 = 26 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_cache_parity_1" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_2 = 27 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_cache_parity_2" Description: "instruction cache parity error" Units: Count } ];
  delphi.Counter cache_parity_3 = 28 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_err_cache_parity_3" Description: "instruction cache parity error" Units: Count } ];
}

message Pctmpu7intinfoMetrics {
  fixed64 Key = 1;
  delphi.Counter mpu_stop_0 = 6 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_info_mpu_stop_0" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_1 = 7 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_info_mpu_stop_1" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_2 = 8 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_info_mpu_stop_2" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
  delphi.Counter mpu_stop_3 = 9 [ (venice.metricsField) = { DisplayName: "pct_mpu_7_int_info_mpu_stop_3" Description: "MPU stopped, in debug mode, pipeline frozen until start" Units: Count } ];
}

message Pbpbcinteccfc0Metrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_fc_0_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_fc_0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Pbpbcinteccll0Metrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_ll_0_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_ll_0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Pbpbcinteccdesc0Metrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_desc_0_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_desc_0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Pbpbcinteccfc1Metrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_fc_1_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_fc_1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Pbpbcinteccll1Metrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_ll_1_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_ll_1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Pbpbcinteccdesc1Metrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_desc_1_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_desc_1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Pbpbcintwrite0Metrics {
  fixed64 Key = 1;
  delphi.Counter credit_growth_error = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_write_0_credit_growth_error" Description: "Software Error" Units: Count } ];
}

message Pbpbcintwrite1Metrics {
  fixed64 Key = 1;
  delphi.Counter credit_growth_error = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_write_1_credit_growth_error" Description: "Software Error" Units: Count } ];
}

message Pbpbcintwrite2Metrics {
  fixed64 Key = 1;
  delphi.Counter credit_growth_error = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_write_2_credit_growth_error" Description: "Software Error" Units: Count } ];
}

message Pbpbcintwrite3Metrics {
  fixed64 Key = 1;
  delphi.Counter credit_growth_error = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_write_3_credit_growth_error" Description: "Software Error" Units: Count } ];
}

message Pbpbcintwrite4Metrics {
  fixed64 Key = 1;
  delphi.Counter credit_growth_error = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_write_4_credit_growth_error" Description: "Software Error" Units: Count } ];
}

message Pbpbcintwrite5Metrics {
  fixed64 Key = 1;
  delphi.Counter credit_growth_error = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_write_5_credit_growth_error" Description: "Software Error" Units: Count } ];
}

message Pbpbcintwrite6Metrics {
  fixed64 Key = 1;
  delphi.Counter credit_growth_error = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_write_6_credit_growth_error" Description: "Software Error" Units: Count } ];
}

message Pbpbcintwrite7Metrics {
  fixed64 Key = 1;
  delphi.Counter credit_growth_error = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_write_7_credit_growth_error" Description: "Software Error" Units: Count } ];
}

message Pbpbcintwrite8Metrics {
  fixed64 Key = 1;
  delphi.Counter credit_growth_error = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_write_8_credit_growth_error" Description: "Software Error" Units: Count } ];
}

message Pbpbcintwrite9Metrics {
  fixed64 Key = 1;
  delphi.Counter credit_growth_error = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_write_9_credit_growth_error" Description: "Software Error" Units: Count } ];
}

message Pbpbcintwrite10Metrics {
  fixed64 Key = 1;
  delphi.Counter credit_growth_error = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_write_10_credit_growth_error" Description: "Software Error" Units: Count } ];
}

message Pbpbcintwrite11Metrics {
  fixed64 Key = 1;
  delphi.Counter credit_growth_error = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_write_11_credit_growth_error" Description: "Software Error" Units: Count } ];
}

message PbpbcinteccrcMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_rc_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_rc_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message PbpbcinteccpackMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_pack_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_pack_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message PbpbcinteccrwrMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_rwr_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_rwr_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message PbpbcinteccschedMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_sched_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_sched_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message PbpbcinteccsidebandMetrics {
  fixed64 Key = 1;
  delphi.Counter pck_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_sideband_pck_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pck_correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_sideband_pck_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rwr_uncorrectable = 4 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_sideband_rwr_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter rwr_correctable = 5 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_sideband_rwr_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter rxd_uncorrectable = 6 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_sideband_rxd_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter rxd_correctable = 7 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_sideband_rxd_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message PbpbcinteccncMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_nc_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_nc_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message PbpbcinteccucMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_uc_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_uc_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message PbpbcinteccportmoninMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_port_mon_in_uncorrectable" Description: " Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_port_mon_in_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message PbpbcinteccportmonoutMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_port_mon_out_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_ecc_port_mon_out_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message PbpbcintrplMetrics {
  fixed64 Key = 1;
  delphi.Counter memory_error = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_rpl_memory_error" Description: "Hardware Error" Units: Count } ];
}

message PbpbcintcreditunderflowMetrics {
  fixed64 Key = 1;
  delphi.Counter port_10 = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_credit_underflow_port_10" Description: "Software Error" Units: Count } ];
  delphi.Counter port_11 = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_credit_underflow_port_11" Description: "Software Error" Units: Count } ];
}

message PbpbcintpbusviolationinMetrics {
  fixed64 Key = 1;
  delphi.Counter sop_sop_in_0 = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_sop_sop_in_0" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_1 = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_sop_sop_in_1" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_2 = 4 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_sop_sop_in_2" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_3 = 5 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_sop_sop_in_3" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_4 = 6 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_sop_sop_in_4" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_5 = 7 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_sop_sop_in_5" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_6 = 8 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_sop_sop_in_6" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_7 = 9 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_sop_sop_in_7" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_8 = 10 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_sop_sop_in_8" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_9 = 11 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_sop_sop_in_9" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_10 = 12 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_sop_sop_in_10" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_11 = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_sop_sop_in_11" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_0 = 14 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_eop_eop_in_0" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_1 = 15 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_eop_eop_in_1" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_2 = 16 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_eop_eop_in_2" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_3 = 17 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_eop_eop_in_3" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_4 = 18 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_eop_eop_in_4" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_5 = 19 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_eop_eop_in_5" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_6 = 20 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_eop_eop_in_6" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_7 = 21 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_eop_eop_in_7" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_8 = 22 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_eop_eop_in_8" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_9 = 23 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_eop_eop_in_9" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_10 = 24 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_eop_eop_in_10" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_11 = 25 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_in_eop_eop_in_11" Description: "Hardware Error" Units: Count } ];
}

message PbpbcintpbusviolationoutMetrics {
  fixed64 Key = 1;
  delphi.Counter sop_sop_out_0 = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_sop_sop_out_0" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_1 = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_sop_sop_out_1" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_2 = 4 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_sop_sop_out_2" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_3 = 5 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_sop_sop_out_3" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_4 = 6 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_sop_sop_out_4" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_5 = 7 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_sop_sop_out_5" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_6 = 8 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_sop_sop_out_6" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_7 = 9 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_sop_sop_out_7" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_8 = 10 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_sop_sop_out_8" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_9 = 11 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_sop_sop_out_9" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_10 = 12 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_sop_sop_out_10" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_11 = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_sop_sop_out_11" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_0 = 14 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_eop_eop_out_0" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_1 = 15 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_eop_eop_out_1" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_2 = 16 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_eop_eop_out_2" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_3 = 17 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_eop_eop_out_3" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_4 = 18 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_eop_eop_out_4" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_5 = 19 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_eop_eop_out_5" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_6 = 20 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_eop_eop_out_6" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_7 = 21 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_eop_eop_out_7" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_8 = 22 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_eop_eop_out_8" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_9 = 23 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_eop_eop_out_9" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_10 = 24 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_eop_eop_out_10" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_11 = 25 [ (venice.metricsField) = { DisplayName: "pb_pbc_int_pbus_violation_out_eop_eop_out_11" Description: "Hardware Error" Units: Count } ];
}

message PbpbchbmintecchbmmtuMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_ecc_hbm_mtu_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_ecc_hbm_mtu_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message PbpbchbmintecchbmrbMetrics {
  fixed64 Key = 1;
  delphi.Counter rb_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_ecc_hbm_rb_rb_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter rb_correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_ecc_hbm_rb_rb_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter cdt_uncorrectable = 4 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_ecc_hbm_rb_cdt_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter cdt_correctable = 5 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_ecc_hbm_rb_cdt_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message PbpbchbmintecchbmwbMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_ecc_hbm_wb_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_ecc_hbm_wb_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message PbpbchbmintecchbmhtMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_ecc_hbm_ht_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_ecc_hbm_ht_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message PbpbchbminthbmpbusviolationinMetrics {
  fixed64 Key = 1;
  delphi.Counter sop_sop_in_0 = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_0" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_1 = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_1" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_2 = 4 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_2" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_3 = 5 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_3" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_4 = 6 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_4" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_5 = 7 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_5" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_6 = 8 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_6" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_7 = 9 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_7" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_8 = 10 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_8" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_in_9 = 11 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_sop_sop_in_9" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_0 = 12 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_0" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_1 = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_1" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_2 = 14 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_2" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_3 = 15 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_3" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_4 = 16 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_4" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_5 = 17 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_5" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_6 = 18 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_6" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_7 = 19 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_7" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_8 = 20 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_8" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_in_9 = 21 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_in_eop_eop_in_9" Description: "Hardware Error" Units: Count } ];
}

message PbpbchbminthbmpbusviolationoutMetrics {
  fixed64 Key = 1;
  delphi.Counter sop_sop_out_0 = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_0" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_1 = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_1" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_2 = 4 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_2" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_3 = 5 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_3" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_4 = 6 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_4" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_5 = 7 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_5" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_6 = 8 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_6" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_7 = 9 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_7" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_8 = 10 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_8" Description: "Hardware Error" Units: Count } ];
  delphi.Counter sop_sop_out_9 = 11 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_sop_sop_out_9" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_0 = 12 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_0" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_1 = 13 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_1" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_2 = 14 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_2" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_3 = 15 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_3" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_4 = 16 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_4" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_5 = 17 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_5" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_6 = 18 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_6" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_7 = 19 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_7" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_8 = 20 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_8" Description: "Hardware Error" Units: Count } ];
  delphi.Counter eop_eop_out_9 = 21 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_pbus_violation_out_eop_eop_out_9" Description: "Hardware Error" Units: Count } ];
}

message PbpbchbminthbmaxierrrspMetrics {
  fixed64 Key = 1;
  delphi.Counter ctrl = 2 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_axi_err_rsp_ctrl" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter pyld = 3 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_axi_err_rsp_pyld" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
  delphi.Counter r2a = 4 [ (venice.metricsField) = { DisplayName: "pb_pbc_hbm_int_hbm_axi_err_rsp_r2a" Description: "Access to invalid address, missing address range in the NOC, or slave sent back an error" Units: Count } ];
}

message Pmpbmintecccol0Metrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col0_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col0_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Pmpbmintecccol1Metrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col1_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col1_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Pmpbmintecccol2Metrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col2_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col2_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Pmpbmintecccol3Metrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col3_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col3_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Pmpbmintecccol4Metrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col4_uncorrectable" Description: "Hardware Error" Units: Count } ];
  delphi.Counter correctable = 3 [ (venice.metricsField) = { DisplayName: "pm_pbm_int_ecc_col4_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message DbwaintlifqstatemapMetrics {
  fixed64 Key = 1;
  delphi.Counter ecc_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "db_wa_int_lif_qstate_map_ecc_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter ecc_correctable = 3 [ (venice.metricsField) = { DisplayName: "db_wa_int_lif_qstate_map_ecc_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter qid_invalid = 4 [ (venice.metricsField) = { DisplayName: "db_wa_int_lif_qstate_map_qid_invalid" Description: "" Units: Count } ];
}

message DbwaintdbMetrics {
  fixed64 Key = 1;
  delphi.Counter db_pid_chk_fail = 3 [ (venice.metricsField) = { DisplayName: "db_wa_int_db_db_pid_chk_fail" Description: "" Units: Count } ];
  delphi.Counter db_qid_overflow = 4 [ (venice.metricsField) = { DisplayName: "db_wa_int_db_db_qid_overflow" Description: "" Units: Count } ];
  delphi.Counter host_ring_access_err = 5 [ (venice.metricsField) = { DisplayName: "db_wa_int_db_host_ring_access_err" Description: "" Units: Count } ];
  delphi.Counter total_ring_access_err = 6 [ (venice.metricsField) = { DisplayName: "db_wa_int_db_total_ring_access_err" Description: "" Units: Count } ];
  delphi.Counter rresp_err = 7 [ (venice.metricsField) = { DisplayName: "db_wa_int_db_rresp_err" Description: "" Units: Count } ];
  delphi.Counter bresp_err = 8 [ (venice.metricsField) = { DisplayName: "db_wa_int_db_bresp_err" Description: "" Units: Count } ];
}

message SsipicsintpicsMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable_ecc = 2 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_pics_uncorrectable_ecc" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter correctable_ecc = 3 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_pics_correctable_ecc" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter too_many_rl_sch_error = 4 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_pics_too_many_rl_sch_error" Description: "SW programming error" Units: Count } ];
}

message SsipicsintbadaddrMetrics {
  fixed64 Key = 1;
  delphi.Counter rdreq0_bad_addr = 2 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_rdreq0_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq0_bad_addr = 3 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_wrreq0_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq1_bad_addr = 4 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_rdreq1_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq1_bad_addr = 5 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_wrreq1_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq2_bad_addr = 6 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_rdreq2_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq2_bad_addr = 7 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_wrreq2_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq3_bad_addr = 8 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_rdreq3_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq3_bad_addr = 9 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_wrreq3_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq4_bad_addr = 10 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_rdreq4_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq4_bad_addr = 11 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_wrreq4_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq5_bad_addr = 12 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_rdreq5_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq5_bad_addr = 13 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_wrreq5_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq6_bad_addr = 14 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_rdreq6_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq6_bad_addr = 15 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_wrreq6_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq7_bad_addr = 16 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_rdreq7_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq7_bad_addr = 17 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_wrreq7_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter cpu_bad_addr = 18 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_cpu_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter bg_bad_addr = 19 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_badaddr_bg_bad_addr" Description: "SW programming error" Units: Count } ];
}

message SsipicsintbgMetrics {
  fixed64 Key = 1;
  delphi.Counter unfinished_bg0 = 2 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg0" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg1 = 3 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg1" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg2 = 4 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg2" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg3 = 5 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg3" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg4 = 6 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg4" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg5 = 7 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg5" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg6 = 8 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg6" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg7 = 9 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg7" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg8 = 10 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg8" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg9 = 11 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg9" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg10 = 12 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg10" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg11 = 13 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg11" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg12 = 14 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg12" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg13 = 15 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg13" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg14 = 16 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg14" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg15 = 17 [ (venice.metricsField) = { DisplayName: "ssi_pics_int_bg_unfinished_bg15" Description: "SW programming error" Units: Count } ];
}

message SsipicspiccintpiccMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable_ecc = 2 [ (venice.metricsField) = { DisplayName: "ssi_pics_picc_int_picc_uncorrectable_ecc" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter correctable_ecc = 3 [ (venice.metricsField) = { DisplayName: "ssi_pics_picc_int_picc_correctable_ecc" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter cache_stg_awlen_err = 4 [ (venice.metricsField) = { DisplayName: "ssi_pics_picc_int_picc_cache_stg_awlen_err" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_rresp_slverr = 5 [ (venice.metricsField) = { DisplayName: "ssi_pics_picc_int_picc_cache_hbm_rresp_slverr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_rresp_decerr = 6 [ (venice.metricsField) = { DisplayName: "ssi_pics_picc_int_picc_cache_hbm_rresp_decerr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_bresp_slverr = 7 [ (venice.metricsField) = { DisplayName: "ssi_pics_picc_int_picc_cache_hbm_bresp_slverr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_bresp_decerr = 8 [ (venice.metricsField) = { DisplayName: "ssi_pics_picc_int_picc_cache_hbm_bresp_decerr" Description: "HBM access fatal error" Units: Count } ];
}

message SsepicsintpicsMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable_ecc = 2 [ (venice.metricsField) = { DisplayName: "sse_pics_int_pics_uncorrectable_ecc" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter correctable_ecc = 3 [ (venice.metricsField) = { DisplayName: "sse_pics_int_pics_correctable_ecc" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter too_many_rl_sch_error = 4 [ (venice.metricsField) = { DisplayName: "sse_pics_int_pics_too_many_rl_sch_error" Description: "SW programming error" Units: Count } ];
}

message SsepicsintbadaddrMetrics {
  fixed64 Key = 1;
  delphi.Counter rdreq0_bad_addr = 2 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_rdreq0_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq0_bad_addr = 3 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_wrreq0_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq1_bad_addr = 4 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_rdreq1_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq1_bad_addr = 5 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_wrreq1_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq2_bad_addr = 6 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_rdreq2_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq2_bad_addr = 7 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_wrreq2_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq3_bad_addr = 8 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_rdreq3_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq3_bad_addr = 9 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_wrreq3_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq4_bad_addr = 10 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_rdreq4_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq4_bad_addr = 11 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_wrreq4_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq5_bad_addr = 12 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_rdreq5_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq5_bad_addr = 13 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_wrreq5_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq6_bad_addr = 14 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_rdreq6_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq6_bad_addr = 15 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_wrreq6_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq7_bad_addr = 16 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_rdreq7_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq7_bad_addr = 17 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_wrreq7_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter cpu_bad_addr = 18 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_cpu_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter bg_bad_addr = 19 [ (venice.metricsField) = { DisplayName: "sse_pics_int_badaddr_bg_bad_addr" Description: "SW programming error" Units: Count } ];
}

message SsepicsintbgMetrics {
  fixed64 Key = 1;
  delphi.Counter unfinished_bg0 = 2 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg0" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg1 = 3 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg1" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg2 = 4 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg2" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg3 = 5 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg3" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg4 = 6 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg4" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg5 = 7 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg5" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg6 = 8 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg6" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg7 = 9 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg7" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg8 = 10 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg8" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg9 = 11 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg9" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg10 = 12 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg10" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg11 = 13 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg11" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg12 = 14 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg12" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg13 = 15 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg13" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg14 = 16 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg14" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg15 = 17 [ (venice.metricsField) = { DisplayName: "sse_pics_int_bg_unfinished_bg15" Description: "SW programming error" Units: Count } ];
}

message SsepicspiccintpiccMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable_ecc = 2 [ (venice.metricsField) = { DisplayName: "sse_pics_picc_int_picc_uncorrectable_ecc" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter correctable_ecc = 3 [ (venice.metricsField) = { DisplayName: "sse_pics_picc_int_picc_correctable_ecc" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter cache_stg_awlen_err = 4 [ (venice.metricsField) = { DisplayName: "sse_pics_picc_int_picc_cache_stg_awlen_err" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_rresp_slverr = 5 [ (venice.metricsField) = { DisplayName: "sse_pics_picc_int_picc_cache_hbm_rresp_slverr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_rresp_decerr = 6 [ (venice.metricsField) = { DisplayName: "sse_pics_picc_int_picc_cache_hbm_rresp_decerr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_bresp_slverr = 7 [ (venice.metricsField) = { DisplayName: "sse_pics_picc_int_picc_cache_hbm_bresp_slverr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_bresp_decerr = 8 [ (venice.metricsField) = { DisplayName: "sse_pics_picc_int_picc_cache_hbm_bresp_decerr" Description: "HBM access fatal error" Units: Count } ];
}

message BxbxintmacMetrics {
  fixed64 Key = 1;
  delphi.Counter lane_sbe = 2 [ (venice.metricsField) = { DisplayName: "bx_bx_int_mac_lane_sbe" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter lane_dbe = 3 [ (venice.metricsField) = { DisplayName: "bx_bx_int_mac_lane_dbe" Description: "Double bit error in SerDes. Lane may go down" Units: Count } ];
  delphi.Counter bxpb_pbus_drdy = 6 [ (venice.metricsField) = { DisplayName: "bx_bx_int_mac_bxpb_pbus_drdy" Description: "Debug PB config. Never happen; otherwise, it's hardware bug" Units: Count } ];
}

message MdhensintpkeccMetrics {
  fixed64 Key = 1;
  delphi.Counter correctable_err = 2 [ (venice.metricsField) = { DisplayName: "md_hens_int_pk_ecc_correctable_err" Description: "Hardware Error" Units: Count } ];
  delphi.Counter uncorrectable_err = 3 [ (venice.metricsField) = { DisplayName: "md_hens_int_pk_ecc_uncorrectable_err" Description: "Hardware Error" Units: Count } ];
}

message MdhensintdrbgintrameccMetrics {
  fixed64 Key = 1;
  delphi.Counter correctable_err = 2 [ (venice.metricsField) = { DisplayName: "md_hens_int_drbg_intram_ecc_correctable_err" Description: "Hardware Error" Units: Count } ];
  delphi.Counter uncorrectable_err = 3 [ (venice.metricsField) = { DisplayName: "md_hens_int_drbg_intram_ecc_uncorrectable_err" Description: "Hardware Error" Units: Count } ];
}

message MdhensintdrbgcryptorameccMetrics {
  fixed64 Key = 1;
  delphi.Counter correctable_err = 2 [ (venice.metricsField) = { DisplayName: "md_hens_int_drbg_cryptoram_ecc_correctable_err" Description: "Hardware Error" Units: Count } ];
  delphi.Counter uncorrectable_err = 3 [ (venice.metricsField) = { DisplayName: "md_hens_int_drbg_cryptoram_ecc_uncorrectable_err" Description: "Hardware Error" Units: Count } ];
}

message MdhensintaxierrMetrics {
  fixed64 Key = 1;
  delphi.Counter wrsp_err = 2 [ (venice.metricsField) = { DisplayName: "md_hens_int_axi_err_wrsp_err" Description: "Software Error" Units: Count } ];
  delphi.Counter rrsp_err = 3 [ (venice.metricsField) = { DisplayName: "md_hens_int_axi_err_rrsp_err" Description: "Software Error" Units: Count } ];
}

message TpcpicsintpicsMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable_ecc = 2 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_pics_uncorrectable_ecc" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter correctable_ecc = 3 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_pics_correctable_ecc" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter too_many_rl_sch_error = 4 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_pics_too_many_rl_sch_error" Description: "SW programming error" Units: Count } ];
}

message TpcpicsintbadaddrMetrics {
  fixed64 Key = 1;
  delphi.Counter rdreq0_bad_addr = 2 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_rdreq0_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq0_bad_addr = 3 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_wrreq0_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq1_bad_addr = 4 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_rdreq1_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq1_bad_addr = 5 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_wrreq1_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq2_bad_addr = 6 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_rdreq2_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq2_bad_addr = 7 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_wrreq2_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq3_bad_addr = 8 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_rdreq3_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq3_bad_addr = 9 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_wrreq3_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq4_bad_addr = 10 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_rdreq4_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq4_bad_addr = 11 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_wrreq4_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq5_bad_addr = 12 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_rdreq5_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq5_bad_addr = 13 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_wrreq5_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq6_bad_addr = 14 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_rdreq6_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq6_bad_addr = 15 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_wrreq6_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter rdreq7_bad_addr = 16 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_rdreq7_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter wrreq7_bad_addr = 17 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_wrreq7_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter cpu_bad_addr = 18 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_cpu_bad_addr" Description: "SW programming error" Units: Count } ];
  delphi.Counter bg_bad_addr = 19 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_badaddr_bg_bad_addr" Description: "SW programming error" Units: Count } ];
}

message TpcpicsintbgMetrics {
  fixed64 Key = 1;
  delphi.Counter unfinished_bg0 = 2 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg0" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg1 = 3 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg1" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg2 = 4 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg2" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg3 = 5 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg3" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg4 = 6 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg4" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg5 = 7 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg5" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg6 = 8 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg6" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg7 = 9 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg7" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg8 = 10 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg8" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg9 = 11 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg9" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg10 = 12 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg10" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg11 = 13 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg11" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg12 = 14 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg12" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg13 = 15 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg13" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg14 = 16 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg14" Description: "SW programming error" Units: Count } ];
  delphi.Counter unfinished_bg15 = 17 [ (venice.metricsField) = { DisplayName: "tpc_pics_int_bg_unfinished_bg15" Description: "SW programming error" Units: Count } ];
}

message TpcpicspiccintpiccMetrics {
  fixed64 Key = 1;
  delphi.Counter uncorrectable_ecc = 2 [ (venice.metricsField) = { DisplayName: "tpc_pics_picc_int_picc_uncorrectable_ecc" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter correctable_ecc = 3 [ (venice.metricsField) = { DisplayName: "tpc_pics_picc_int_picc_correctable_ecc" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter cache_stg_awlen_err = 4 [ (venice.metricsField) = { DisplayName: "tpc_pics_picc_int_picc_cache_stg_awlen_err" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_rresp_slverr = 5 [ (venice.metricsField) = { DisplayName: "tpc_pics_picc_int_picc_cache_hbm_rresp_slverr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_rresp_decerr = 6 [ (venice.metricsField) = { DisplayName: "tpc_pics_picc_int_picc_cache_hbm_rresp_decerr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_bresp_slverr = 7 [ (venice.metricsField) = { DisplayName: "tpc_pics_picc_int_picc_cache_hbm_bresp_slverr" Description: "HBM access fatal error" Units: Count } ];
  delphi.Counter cache_hbm_bresp_decerr = 8 [ (venice.metricsField) = { DisplayName: "tpc_pics_picc_int_picc_cache_hbm_bresp_decerr" Description: "HBM access fatal error" Units: Count } ];
}

message Dprdpr0intreg1Metrics {
  fixed64 Key = 1;
  delphi.Counter err_phv_sop_no_eop = 2 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_phv_sop_no_eop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_phv_eop_no_sop = 3 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_phv_eop_no_sop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_ohi_sop_no_eop = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_ohi_sop_no_eop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_ohi_eop_no_sop = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_ohi_eop_no_sop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_pktin_sop_no_eop = 6 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_pktin_sop_no_eop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_pktin_eop_no_sop = 7 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_pktin_eop_no_sop" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_csum_offset_gt_pkt_size_4 = 8 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_offset_gt_pkt_size_4" Description: "P4 program/compiler error. Checksum covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_offset_gt_pkt_size_3 = 9 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_offset_gt_pkt_size_3" Description: "P4 program/compiler error. Checksum covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_offset_gt_pkt_size_2 = 10 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_offset_gt_pkt_size_2" Description: "P4 program/compiler error. Checksum covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_offset_gt_pkt_size_1 = 11 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_offset_gt_pkt_size_1" Description: "P4 program/compiler error. Checksum covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_offset_gt_pkt_size_0 = 12 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_offset_gt_pkt_size_0" Description: "P4 program/compiler error. Checksum covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_phdr_offset_gt_pkt_size_4 = 13 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_phdr_offset_gt_pkt_size_4" Description: "P4 program/compiler error. Checksum pseudoheaders covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_phdr_offset_gt_pkt_size_3 = 14 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_phdr_offset_gt_pkt_size_3" Description: "P4 program/compiler error. Checksum pseudoheaders covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_phdr_offset_gt_pkt_size_2 = 15 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_phdr_offset_gt_pkt_size_2" Description: "P4 program/compiler error. Checksum pseudoheaders covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_phdr_offset_gt_pkt_size_1 = 16 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_phdr_offset_gt_pkt_size_1" Description: "P4 program/compiler error. Checksum pseudoheaders covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_phdr_offset_gt_pkt_size_0 = 17 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_phdr_offset_gt_pkt_size_0" Description: "P4 program/compiler error. Checksum pseudoheaders covers more than packet size" Units: Count } ];
  delphi.Counter err_csum_loc_gt_pkt_size_4 = 18 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_loc_gt_pkt_size_4" Description: "P4 program/compiler error. Checksum location greater then packet size" Units: Count } ];
  delphi.Counter err_csum_loc_gt_pkt_size_3 = 19 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_loc_gt_pkt_size_3" Description: "P4 program/compiler error. Checksum location greater then packet size" Units: Count } ];
  delphi.Counter err_csum_loc_gt_pkt_size_2 = 20 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_loc_gt_pkt_size_2" Description: "P4 program/compiler error. Checksum location greater then packet size" Units: Count } ];
  delphi.Counter err_csum_loc_gt_pkt_size_1 = 21 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_loc_gt_pkt_size_1" Description: "P4 program/compiler error. Checksum location greater then packet size" Units: Count } ];
  delphi.Counter err_csum_loc_gt_pkt_size_0 = 22 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_loc_gt_pkt_size_0" Description: "P4 program/compiler error. Checksum location greater then packet size" Units: Count } ];
  delphi.Counter err_crc_offset_gt_pkt_size = 23 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_crc_offset_gt_pkt_size" Description: "P4 program/compiler error. ICRC covers more than packet size" Units: Count } ];
  delphi.Counter err_crc_loc_gt_pkt_size = 24 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_crc_loc_gt_pkt_size" Description: "P4 program/compiler error. ICRC location greater then packet size" Units: Count } ];
  delphi.Counter err_ptr_ff_overflow = 27 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_ptr_ff_overflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_csum_ff_overflow = 28 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_csum_ff_overflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter err_pktout_ff_overflow = 29 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg1_err_pktout_ff_overflow" Description: "Hardware Error" Units: Count } ];
}

message Dprdpr0intreg2Metrics {
  fixed64 Key = 1;
  delphi.Counter err_csum_start_gt_end_4 = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg2_err_csum_start_gt_end_4" Description: "P4 program/compiler error. Checksum start is greater then end" Units: Count } ];
  delphi.Counter err_csum_start_gt_end_3 = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg2_err_csum_start_gt_end_3" Description: "P4 program/compiler error. Checksum start is greater then end" Units: Count } ];
  delphi.Counter err_csum_start_gt_end_2 = 6 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg2_err_csum_start_gt_end_2" Description: "P4 program/compiler error. Checksum start is greater then end" Units: Count } ];
  delphi.Counter err_csum_start_gt_end_1 = 7 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg2_err_csum_start_gt_end_1" Description: "P4 program/compiler error. Checksum start is greater then end" Units: Count } ];
  delphi.Counter err_csum_start_gt_end_0 = 8 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg2_err_csum_start_gt_end_0" Description: "P4 program/compiler error. Checksum start is greater then end" Units: Count } ];
  delphi.Counter err_crc_start_gt_end = 9 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_reg2_err_crc_start_gt_end" Description: "P4 program/compiler error. ICRC start is greater then end" Units: Count } ];
}

message Dprdpr0intsramseccMetrics {
  fixed64 Key = 1;
  delphi.Counter dpr_pktin_fifo_uncorrectable = 2 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_pktin_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpr_pktin_fifo_correctable = 3 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_pktin_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter dpr_csum_fifo_uncorrectable = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_csum_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpr_csum_fifo_correctable = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_csum_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter dpr_phv_fifo_uncorrectable = 6 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_phv_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpr_phv_fifo_correctable = 7 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_phv_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter dpr_ohi_fifo_uncorrectable = 8 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_ohi_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpr_ohi_fifo_correctable = 9 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_ohi_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter dpr_ptr_fifo_uncorrectable = 10 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_ptr_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpr_ptr_fifo_correctable = 11 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_ptr_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
  delphi.Counter dpr_pktout_fifo_uncorrectable = 12 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_pktout_fifo_uncorrectable" Description: "ecc uncorrectable DOUBLE bit SOFT error, expect once per 250 years per chip" Units: Count } ];
  delphi.Counter dpr_pktout_fifo_correctable = 13 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_srams_ecc_dpr_pktout_fifo_correctable" Description: "ecc correctable single bit SOFT error, expect once per 25 years per chip" Units: Count } ];
}

message Dprdpr0intfifoMetrics {
  fixed64 Key = 1;
  delphi.Counter phv_ff_ovflow = 2 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_fifo_phv_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ohi_ff_ovflow = 3 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_fifo_ohi_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktin_ff_ovflow = 4 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_fifo_pktin_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter pktout_ff_undflow = 5 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_fifo_pktout_ff_undflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter csum_ff_ovflow = 6 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_fifo_csum_ff_ovflow" Description: "Hardware Error" Units: Count } ];
  delphi.Counter ptr_ff_ovflow = 7 [ (venice.metricsField) = { DisplayName: "dpr_dpr_0_int_fifo_ptr_ff_ovflow" Description: "Hardware Error" Units: Count } ];
}

