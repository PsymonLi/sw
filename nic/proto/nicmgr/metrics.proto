syntax = "proto3";
package metrics;

import "delphi.proto";
import "metrics_annotations.proto";


message LifMetrics {
    option (delphi.datapath_metrics) = true;
    option (venice.metricInfo) = {
        DisplayName: "Logical Interface Statistics",
        Description: "Key index - LIF IfIndex",
        Scope: PerLIF,
        Tags: [ Level4 ]
    };

    fixed64        Key                              = 1; // Lif ifidx

    delphi.Counter rx_unicast_bytes                 = 2 [(venice.metricsField) = {DisplayName: "Rx Unicast Bytes" Description: "Bytes received in packets with unicast destination"}];      // Unicast bytes received at LIF
    delphi.Counter rx_unicast_packets               = 3 [(venice.metricsField) = {DisplayName: "Rx Unicast Packets" Description: "Packets received with unicast destination"}];             // Unicast packets received at LIF
    delphi.Counter rx_multicast_bytes               = 4 [(venice.metricsField) = {DisplayName: "Rx Multicast Bytes" Description: "Bytes received in packets with multicast destination"}];  // Multicast bytes received at LIF
    delphi.Counter rx_multicast_packets             = 5 [(venice.metricsField) = {DisplayName: "Rx Multicast Packets" Description: "Packets received with multicast destination"}];         // Multicast packets received at LIF
    delphi.Counter rx_broadcast_bytes               = 6 [(venice.metricsField) = {DisplayName: "Rx Broadcast Bytes" Description: "Bytes received in packets with broadcast destination"}];  // Broadcast bytes received at LIF
    delphi.Counter rx_broadcast_packets             = 7 [(venice.metricsField) = {DisplayName: "Rx Broadcast Packets" Description: "Packets received with broadcast destination"}];         // Broadcast packets received at LIF
    delphi.Counter __rsvd__0                        = 8 [json_name="-"];
    delphi.Counter __rsvd__1                        = 9 [json_name="-"];

    delphi.Counter rx_drop_unicast_bytes            = 10 [(venice.metricsField) = {DisplayName: "Rx Drop Unicast Bytes" Description: "Bytes of received packets dropped with unicast destination"}];    // Unicast bytes dropped during received (per LIF)
    delphi.Counter rx_drop_unicast_packets          = 11 [(venice.metricsField) = {DisplayName: "Rx Drop Unicast Packets" Description: "Received packets dropped with unicast destination"}];           // Unicast packets dropped during received (per LIF)
    delphi.Counter rx_drop_multicast_bytes          = 12 [(venice.metricsField) = {DisplayName: "Rx Drop Multicast Bytes" Description: "Bytes of received packets dropped with multicast destination"}];// Multicast bytes dropped during received (per LIF)
    delphi.Counter rx_drop_multicast_packets        = 13 [(venice.metricsField) = {DisplayName: "Rx Drop Multicast Packets" Description: "Received packets dropped with multicast destination"}];       // Multicast packets dropped during received (per LIF)
    delphi.Counter rx_drop_broadcast_bytes          = 14 [(venice.metricsField) = {DisplayName: "Rx Drop Broadcast Bytes" Description: "Bytes of received packets dropped with broadcast destination"}];// Broadcast bytes dropped during received (per LIF)
    delphi.Counter rx_drop_broadcast_packets        = 15 [(venice.metricsField) = {DisplayName: "Rx Drop Broadcast Packets" Description: "Received packets dropped with broadcast destination"}];       // Broadcast packets dropped during received (per LIF)
    delphi.Counter rx_dma_error                     = 16 [json_name="-"]; // Packet DMA errors
    delphi.Counter __rsvd__2                        = 17 [json_name="-"];

    delphi.Counter tx_unicast_bytes                 = 18[(venice.metricsField) = {DisplayName: "Tx Unicast Bytes" Description: "Bytes transmitted in packets with unicast destination"}];       // Unicast bytes transmitted by LIF
    delphi.Counter tx_unicast_packets               = 19[(venice.metricsField) = {DisplayName: "Tx Unicast Packets" Description: "Packets transmitted with unicast destination"}];              // Unicast packets transmitted by LIF
    delphi.Counter tx_multicast_bytes               = 20[(venice.metricsField) = {DisplayName: "Tx Multicast Bytes" Description: "Bytes transmitted in packets with multicast destination"}];   // Multicast bytes transmitted by LIF
    delphi.Counter tx_multicast_packets             = 21[(venice.metricsField) = {DisplayName: "Tx Multicast Packets" Description: "Packets transmitted with multicast destination"}];          // Multicast packets transmitted by LIF
    delphi.Counter tx_broadcast_bytes               = 22[(venice.metricsField) = {DisplayName: "Tx Broadcast Bytes" Description: "Bytes transmitted in packets with broadcast destination"}];   // Broadcast bytes transmitted by LIF
    delphi.Counter tx_broadcast_packets             = 23[(venice.metricsField) = {DisplayName: "Tx Broadcast Packets" Description: "Packets transmitted with broadcast destination"}];          // Broadcast packets transmitted by LIF
    delphi.Counter __rsvd__3                        = 24 [json_name="-"];
    delphi.Counter __rsvd__4                        = 25 [json_name="-"];

    delphi.Counter tx_drop_unicast_bytes            = 26[(venice.metricsField) = {DisplayName: "Tx Drop Unicast Bytes" Description: "Bytes of transmit packets dropped with unicast destination"}];     // Unicast bytes dropped during transmit (per LIF)
    delphi.Counter tx_drop_unicast_packets          = 27[(venice.metricsField) = {DisplayName: "Tx Drop Unicast Packets" Description: "Transmit packets dropped with unicast destination"}];            // Unicast packets dropped during transmit (per LIF)
    delphi.Counter tx_drop_multicast_bytes          = 28[(venice.metricsField) = {DisplayName: "Tx Drop Multicast Bytes" Description: "Bytes of transmit packets dropped with multicast destination"}]; // Multicast bytes dropped during transmit (per LIF)
    delphi.Counter tx_drop_multicast_packets        = 29[(venice.metricsField) = {DisplayName: "Tx Drop Multicast Packets" Description: "Transmit packets dropped with multicast destination"}];        // Multicast packets dropped during transmit (per LIF)
    delphi.Counter tx_drop_broadcast_bytes          = 30[(venice.metricsField) = {DisplayName: "Tx Drop Broadcast Bytes" Description: "Bytes of transmit packets dropped with broadcast destination"}]; // Broadcast bytes dropped during transmit (per LIF)
    delphi.Counter tx_drop_broadcast_packets        = 31[(venice.metricsField) = {DisplayName: "Tx Drop Broadcast Packets" Description: "Transmit packets dropped with broadcast destination"}];        // Broadcast packets dropped during transmit (per LIF)
    delphi.Counter tx_dma_error                     = 32 [json_name="-"]; // Packet DMA errors
    delphi.Counter __rsvd__5                        = 33 [json_name="-"];

    delphi.Counter rx_queue_disabled_drops          = 34 [json_name="-"]; // Packets dropped due to queue disabled
    delphi.Counter rx_queue_empty_drops             = 35 [json_name="-"]; // Packets dropped due to buffer exhaustion
    delphi.Counter rx_queue_sched                   = 36 [json_name="-"]; // Descriptor fetch errors
    delphi.Counter rx_desc_fetch_error              = 37 [json_name="-"]; // Descriptor fetch errors
    delphi.Counter rx_desc_data_error               = 38 [json_name="-"]; // Descriptor fetch errors
    delphi.Counter __rsvd__6                        = 39 [json_name="-"];
    delphi.Counter __rsvd__7                        = 40 [json_name="-"];
    delphi.Counter __rsvd__8                        = 41 [json_name="-"];

    delphi.Counter tx_queue_disabled_drops          = 42 [json_name="-"];
    delphi.Counter tx_queue_sched                   = 43 [json_name="-"];
    delphi.Counter tx_desc_fetch_error              = 44 [json_name="-"];
    delphi.Counter tx_desc_data_error               = 45 [json_name="-"];
    delphi.Counter __rsvd__9                        = 46 [json_name="-"];
    delphi.Counter __rsvd__10                       = 47 [json_name="-"];
    delphi.Counter __rsvd__11                       = 48 [json_name="-"];
    delphi.Counter __rsvd__12                       = 49 [json_name="-"];

    delphi.Counter tx_rdma_ucast_bytes              = 50 [json_name="-"];
    delphi.Counter tx_rdma_ucast_packets            = 51 [json_name="-"];
    delphi.Counter tx_rdma_mcast_bytes              = 52 [json_name="-"];
    delphi.Counter tx_rdma_mcast_packets            = 53 [json_name="-"];
    delphi.Counter tx_rdma_cnp_packets              = 54 [json_name="-"];
    delphi.Counter __rsvd__13                       = 55 [json_name="-"];
    delphi.Counter __rsvd__14                       = 56 [json_name="-"];
    delphi.Counter __rsvd__15                       = 57 [json_name="-"];

    delphi.Counter rx_rdma_ucast_bytes            = 58 [json_name="-"];
    delphi.Counter rx_rdma_ucast_packets          = 59 [json_name="-"];
    delphi.Counter rx_rdma_mcast_bytes            = 60 [json_name="-"];
    delphi.Counter rx_rdma_mcast_packets          = 61 [json_name="-"];
    delphi.Counter rx_rdma_cnp_packets            = 62 [json_name="-"];
    delphi.Counter rx_rdma_ecn_packets            = 63 [json_name="-"];
    delphi.Counter rsvd16                         = 64 [json_name="-"];
    delphi.Counter rsvd17                         = 65 [json_name="-"];

    delphi.Counter rsvd18                         = 66 [json_name="-"];
    delphi.Counter rsvd19                         = 67 [json_name="-"];
    delphi.Counter rsvd20                         = 68 [json_name="-"];
    delphi.Counter rsvd21                         = 69 [json_name="-"];
    delphi.Counter rsvd22                         = 70 [json_name="-"];
    delphi.Counter rsvd23                         = 71 [json_name="-"];
    delphi.Counter rsvd24                         = 72 [json_name="-"];
    delphi.Counter rsvd25                         = 73 [json_name="-"];

    delphi.Counter rsvd26                         = 74 [json_name="-"];
    delphi.Counter rsvd27                         = 75 [json_name="-"];
    delphi.Counter rsvd28                         = 76 [json_name="-"];
    delphi.Counter rsvd29                         = 77 [json_name="-"];
    delphi.Counter rsvd30                         = 78 [json_name="-"];
    delphi.Counter rsvd31                         = 79 [json_name="-"];
    delphi.Counter rsvd32                         = 80 [json_name="-"];
    delphi.Counter rsvd33                         = 81 [json_name="-"];

    delphi.Counter rsvd34                         = 82 [json_name="-"];
    delphi.Counter rsvd35                         = 83 [json_name="-"];
    delphi.Counter rsvd36                         = 84 [json_name="-"];
    delphi.Counter rsvd37                         = 85 [json_name="-"];
    delphi.Counter rsvd38                         = 86 [json_name="-"];
    delphi.Counter rsvd39                         = 87 [json_name="-"];
    delphi.Counter rsvd40                         = 88 [json_name="-"];
    delphi.Counter rsvd41                         = 89 [json_name="-"];

    delphi.Counter tx_pkts                        = 90 [(venice.metricsField) = {DisplayName: "Tx Packets" Description: "Total Transmit Packets"}];
    delphi.Counter tx_bytes                       = 91 [(venice.metricsField) = {DisplayName: "Tx Bytes" Description: "Total Transmit Bytes"}];
    delphi.Counter rx_pkts                        = 92 [(venice.metricsField) = {DisplayName: "Rx Packets" Description: "Total Receive Packets"}];
    delphi.Counter rx_bytes                       = 93 [(venice.metricsField) = {DisplayName: "Rx Bytes" Description: "Total Receive Bytes"}];
    delphi.Counter tx_pps                         = 94 [(venice.metricsField) = {DisplayName: "Tx Packets/sec" Description: "Transmit bandwidth in Packets per second"}];
    delphi.Counter tx_bytesps                     = 95 [(venice.metricsField) = {DisplayName: "Tx Bytes/sec" Description: "Transmit bandwidth in Bytes per second"}];
    delphi.Counter rx_pps                         = 96 [(venice.metricsField) = {DisplayName: "Rx Packets/sec" Description: "Receive bandwidth in Packets per second"}];
    delphi.Counter rx_bytesps                     = 97 [(venice.metricsField) = {DisplayName: "Rx Bytes/sec" Description: "Receive bandwidth in Bytes per second"}];

    delphi.Counter rdma_req_rx_pkt_seq_err         = 98 [json_name="-"];
    delphi.Counter rdma_req_rx_rnr_retry_err       = 99 [json_name="-"];
    delphi.Counter rdma_req_rx_remote_access_err   = 100 [json_name="-"];
    delphi.Counter rdma_req_rx_remote_inv_req_err  = 101 [json_name="-"];
    delphi.Counter rdma_req_rx_remote_oper_err     = 102 [json_name="-"];
    delphi.Counter rdma_req_rx_implied_nak_seq_err = 103 [json_name="-"];
    delphi.Counter rdma_req_rx_cqe_err             = 104 [json_name="-"];
    delphi.Counter rdma_req_rx_cqe_flush_err       = 105 [json_name="-"];

    delphi.Counter rdma_req_rx_dup_responses      = 106 [json_name="-"];
    delphi.Counter rdma_req_rx_invalid_packets    = 107 [json_name="-"];
    delphi.Counter rdma_req_tx_local_access_err   = 108 [json_name="-"];
    delphi.Counter rdma_req_tx_local_oper_err     = 109 [json_name="-"];
    delphi.Counter rdma_req_tx_memory_mgmt_err    = 110 [json_name="-"];
    delphi.Counter rsvd52                         = 111 [json_name="-"];
    delphi.Counter rsvd53                         = 112 [json_name="-"];
    delphi.Counter rsvd54                         = 113 [json_name="-"];

    delphi.Counter rdma_resp_rx_dup_requests      = 114 [json_name="-"];
    delphi.Counter rdma_resp_rx_out_of_buffer     = 115 [json_name="-"];
    delphi.Counter rdma_resp_rx_out_of_seq_pkts   = 116 [json_name="-"];
    delphi.Counter rdma_resp_rx_cqe_err           = 117 [json_name="-"];
    delphi.Counter rdma_resp_rx_cqe_flush_err     = 118 [json_name="-"];
    delphi.Counter rdma_resp_rx_local_len_err     = 119 [json_name="-"];
    delphi.Counter rdma_resp_rx_inv_request_err   = 120 [json_name="-"];
    delphi.Counter rdma_resp_rx_local_qp_oper_err = 121 [json_name="-"];

    delphi.Counter rdma_resp_rx_out_of_atomic_resource = 122 [json_name="-"];
    delphi.Counter rdma_resp_tx_pkt_seq_err            = 123 [json_name="-"];
    delphi.Counter rdma_resp_tx_remote_inv_req_err     = 124 [json_name="-"];
    delphi.Counter rdma_resp_tx_remote_access_err      = 125 [json_name="-"];
    delphi.Counter rdma_resp_tx_remote_oper_err        = 126 [json_name="-"];
    delphi.Counter rdma_resp_tx_rnr_retry_err          = 127 [json_name="-"];
    delphi.Counter rsvd57                              = 128 [json_name="-"];
    delphi.Counter rsvd58                              = 129 [json_name="-"];
}
