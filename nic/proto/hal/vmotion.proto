syntax = "proto3";

import "types.proto";
import "session.proto";

package vmotion_msg;
option go_package="halproto";

enum VmotionMessageType {
    VMOTION_MSG_TYPE_INIT               = 0; // syncing state :: new -> old
    VMOTION_MSG_TYPE_SYNC               = 1; // syncing state :: old -> new
    VMOTION_MSG_TYPE_SYNC_END           = 2; // syncing state :: old -> new
    VMOTION_MSG_TYPE_TERM_SYNC_REQ      = 3; // syncing state :: new -> old
    VMOTION_MSG_TYPE_TERM_SYNC          = 4; // syncing state :: old -> new
    VMOTION_MSG_TYPE_TERM_SYNC_END      = 5; // syncing state :: old -> new
    VMOTION_MSG_TYPE_TERM_SYNC_ACK      = 6; // syncing state :: new -> old
    VMOTION_MSG_TYPE_EP_MOVED           = 7; // syncing state :: old -> new
    VMOTION_MSG_TYPE_EP_MOVED_ACK       = 8; // syncing state :: new -> old
}

enum VmotionMessageStatus {
    STATUS_OK   = 0; 
    STATUS_ERR  = 1;
}

message VmotionInitiate {
    uint64 mac_address = 1; // mac of EP in vmotion
}

message VmotionSync {
  repeated session.SessionGetResponse response = 1; // list of sessions
}

message VmotionSyncEnd {
    VmotionMessageStatus status = 1;
}

message VmotionTermSyncReq {
}

message VmotionTermSync {
  repeated session.SessionGetResponse response = 1; // list of sessions
}

message VmotionTermSyncEnd {
    VmotionMessageStatus status = 1;
}

message VmotionTermSyncAck {
    VmotionMessageStatus status = 1;
}

message VmotionEpMoved {
}

message VmotionMessage {
    VmotionMessageType type                     = 1;
    oneof msg {
        VmotionInitiate       init              = 2; 
        VmotionSync           sync              = 3;
        VmotionSyncEnd        sync_end          = 4;
        VmotionTermSyncReq    term_sync_req     = 5;
        VmotionTermSync       term_sync         = 6;
        VmotionTermSyncEnd    term_sync_end     = 7;
        VmotionTermSyncAck    term_sync_ack     = 8;
        VmotionEpMoved        ep_moved          = 9;
    }
}
