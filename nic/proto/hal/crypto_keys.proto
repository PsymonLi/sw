//------------------------------------------------------------------------------
// protobuf specification for Crypto Key APIs
//------------------------------------------------------------------------------

syntax = "proto3";

import "types.proto";

package cryptokey;
option go_package="halproto";

service CryptoKey {
    rpc CryptoKeyCreate (CryptoKeyCreateRequestMsg) returns (CryptoKeyCreateResponseMsg) {}
    rpc CryptoKeyCreateWithId (CryptoKeyCreateWithIdRequestMsg) returns (CryptoKeyCreateWithIdResponseMsg) {}
    rpc CryptoKeyRead (CryptoKeyReadRequestMsg) returns (CryptoKeyReadResponseMsg) {}
    rpc CryptoKeyUpdate (CryptoKeyUpdateRequestMsg) returns (CryptoKeyUpdateResponseMsg) {}
    rpc CryptoKeyDelete (CryptoKeyDeleteRequestMsg) returns (CryptoKeyDeleteResponseMsg) {}
}


message CryptoKeyCreateRequest {
}
message CryptoKeyCreateRequestMsg {
    repeated CryptoKeyCreateRequest request     = 1;
}
message CryptoKeyCreateResponse {
  types.ApiStatus       api_status              = 1;    // API status code
  uint32                keyindex                = 2;
}
message CryptoKeyCreateResponseMsg {
    repeated CryptoKeyCreateResponse response   = 1;
}

message CryptoKeyCreateWithIdRequest {
  uint32                keyindex                = 1;
  uint32                allow_dup_alloc         = 2;
}
message CryptoKeyCreateWithIdRequestMsg {
    repeated CryptoKeyCreateWithIdRequest request = 1;
}
message CryptoKeyCreateWithIdResponse {
  types.ApiStatus       api_status              = 1;    // API status code
  uint32                keyindex                = 2;
}
message CryptoKeyCreateWithIdResponseMsg {
    repeated CryptoKeyCreateWithIdResponse response   = 1;
}

message CryptoKeySpec {
  uint32                keyindex                = 1;
  types.CryptoKeyType   key_type                = 2;
  uint32                key_size                = 3;
  bytes                 key                     = 4;
}


message CryptoKeyReadRequest {
  uint32                keyindex                = 1;
}
message CryptoKeyReadRequestMsg {
    repeated CryptoKeyReadRequest request       = 1;
}
message CryptoKeyReadResponse {
  types.ApiStatus       api_status              = 1;    // API status code
  CryptoKeySpec         key                     = 2;
}
message CryptoKeyReadResponseMsg {
    repeated CryptoKeyReadResponse response     = 1;
}


message CryptoKeyUpdateRequest {
  CryptoKeySpec         key                     = 1;
}
message CryptoKeyUpdateRequestMsg {
    repeated CryptoKeyUpdateRequest request     = 1;
}
message CryptoKeyUpdateResponse{
  types.ApiStatus       api_status              = 1;    // API status code
  uint32                keyindex                = 2;
}
message CryptoKeyUpdateResponseMsg {
    repeated CryptoKeyUpdateResponse response   = 1;
}


message CryptoKeyDeleteRequest {
  uint32                keyindex                = 1;
}
message CryptoKeyDeleteRequestMsg {
    repeated CryptoKeyDeleteRequest request     = 1;
}
message CryptoKeyDeleteResponse {
  types.ApiStatus       api_status              = 1;    // API status code
  uint32                keyindex                = 2;
}
message CryptoKeyDeleteResponseMsg {
    repeated CryptoKeyDeleteResponse response   = 1;
}
