//------------------------------------------------------------------------------
// {C} Copyright 2017 Pensando Systems Inc. All rights reserved
//
// protobuf specification for TcpProxy
//------------------------------------------------------------------------------

syntax = "proto3";
import "types.proto";
import "kh.proto";

package tcp_proxy;
option go_package="halproto";

// The TcpProxy service definition
service TcpProxy {

  rpc TcpProxyRuleCreate (TcpProxyRuleRequestMsg) returns (TcpProxyRuleResponseMsg) {}
  rpc TcpProxyRuleUpdate (TcpProxyRuleRequestMsg) returns (TcpProxyRuleResponseMsg) {}
  rpc TcpProxyRuleDelete (TcpProxyRuleDeleteRequestMsg) returns (TcpProxyRuleDeleteResponseMsg) {}
  rpc TcpProxyRuleGet (TcpProxyRuleGetRequestMsg) returns (TcpProxyRuleGetResponseMsg) {}

}

enum TcpProxyActionType {
  TCP_PROXY_ACTION_TYPE_NONE = 0;
  TCP_PROXY_ACTION_TYPE_ENABLE = 1;
  TCP_PROXY_ACTION_TYPE_DISABLE = 2;
}
 
message TcpProxyAction {
  TcpProxyActionType tcp_proxy_action_type = 1;
}
    
message TcpProxyRuleMatchSpec {
  uint64             rule_id    = 1;    // rule id
  types.RuleMatch    match      = 2;    // match conditions
  TcpProxyAction     tcp_proxy_action  = 3;
}

// TcpProxyRuleSpec is the user intent for the TcpProxy rule
message TcpProxyRuleSpec {
  types.ObjectMeta               meta                      = 1;    // common object meta
  kh.TcpProxyRuleKeyHandle          key_or_handle             = 2 [(gogoproto.moretags) = "venice:key"];    // key or handle of this object
  kh.VrfKeyHandle                vrf_key_handle            = 3 [(gogoproto.moretags) = "venice:ref"];
  repeated TcpProxyRuleMatchSpec    rules                     = 4;
}

// TcpProxyRuleRequestMsg is the batched add or modify of NAT rule request
message TcpProxyRuleRequestMsg {
  repeated TcpProxyRuleSpec    request = 1;    // batched request
}

// TcpProxyRuleStatus reflects the current operational status of the TcpProxy rule
message TcpProxyRuleStatus {
  fixed64    handle = 1;    // id of the TcpProxy rule returned by HAL
}

// TcpProxyRuleResponse is the response to TcpProxyRuleSpec
message TcpProxyRuleResponse {
  types.ApiStatus    api_status = 1 [(gogoproto.jsontag) = "api_status"];  // API status code
  TcpProxyRuleStatus    status     = 2;    // operational status of the rule
}

// TcpProxyRuleResponseMsg is batched response to TcpProxyRuleRequestMsg
message TcpProxyRuleResponseMsg {
  repeated TcpProxyRuleResponse    response = 1;    // batched response
}

// TcpProxyRuleDeleteRequest is used to delete a policy rule 
message TcpProxyRuleDeleteRequest {
  types.ObjectMeta        meta          = 1;    // object meta
  kh.TcpProxyRuleKeyHandle      key_or_handle = 2;    // TcpProxyRule key or handle
}

// TcpProxyRuleDeleteRequestMsg is used to delete a batch of tcp_proxy rules
message TcpProxyRuleDeleteRequestMsg {
  repeated TcpProxyRuleDeleteRequest    request = 1;    // batched delete request
}

// TcpProxyRuleDeleteResponse is response to TcpProxyRuleDeleteRequest
message TcpProxyRuleDeleteResponse {
  types.ApiStatus    api_status     = 1 [(gogoproto.moretags) = "venice:api_status"];    // API status code
}

// TcpProxyRuleDeleteResponseMsg is batched response to TcpProxyRuleDeleteRequestMsg
message TcpProxyRuleDeleteResponseMsg {
  repeated TcpProxyRuleDeleteResponse   response = 1;    // batched delete response
}

// TcpProxyRuleGetRequest is used to get information about a tcp_proxy rule
message TcpProxyRuleGetRequest {
  types.ObjectMeta          meta          = 1;    // object meta
  kh.TcpProxyRuleKeyHandle        key_or_handle = 2;    // TcpProxyRule key or handle
}

// TcpProxyRuleGetRequestMsg is batched GET requests for tcp_proxy rule
message TcpProxyRuleGetRequestMsg {
  repeated TcpProxyRuleGetRequest    request = 1;    // batched get request
}

// per rule stats
message TcpProxyRuleEntryStats {
  uint32    num_tcp_sessions   = 1;
  uint32    num_other_sessions = 2;
}

// per policy stats
message TcpProxyRuleStats {
  repeated TcpProxyRuleEntryStats    stats = 1;    // batched rule stats
}

// TcpProxyRuleGetResponse catpures all information about TcpProxy policy
message TcpProxyRuleGetResponse {
  types.ApiStatus    api_status = 1 [(gogoproto.moretags) = "venice:api_status"]; // API status code
  TcpProxyRuleSpec      spec       = 2;    // config
  TcpProxyRuleStatus    status     = 3;    // operational state
  TcpProxyRuleStats     stats      = 4;    // stats
}

// TcpProxyRuleGetResponseMsg is batched response to TcpProxyRuleGetRequestMsg
message TcpProxyRuleGetResponseMsg {
  repeated TcpProxyRuleGetResponse    response = 1;
}

