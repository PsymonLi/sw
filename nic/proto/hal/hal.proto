//------------------------------------------------------------------------------
// {C} Copyright 2017 Pensando Systems Inc. All rights reserved
//------------------------------------------------------------------------------

syntax = "proto3";
import "delphi.proto";
package hal;

//------------------------------------------------------------------------------
// HalStatus captures various states it is goes through while the system is
// coming up or going down (e.g., during upgrade)
//------------------------------------------------------------------------------
enum HalState {
  HAL_STATE_NONE                    = 0;  // invalid state
  HAL_STATE_ASIC_INIT_DONE          = 1;  // HAL moves to this state after chip init is done
  HAL_STATE_MEM_INIT_DONE           = 2;  // HAL moves to this state after memory initialization
  HAL_STATE_PACKET_BUFFER_INIT_DONE = 3;  // HAL moves to this state after PB init is done
  HAL_STATE_DATA_PLANE_INIT_DONE    = 4;  // HAL moves to this state after all ports are enabled
  HAL_STATE_SCHEDULER_INIT_DONE     = 5;  // HAL moves to this state once scheduler initialization is done
  HAL_STATE_UP                      = 6;  // HAL moves to this state after all initialization is done
}

message HalStatus {
  option (delphi.update_event)  = true;
  option (delphi.singleton)     = true;
  delphi.ObjectMeta    Meta     = 1;    // common delphi meta
  HalState             state    = 2;    // current state of HAL
}
