//------------------------------------------------------------------------------
// protobuf specification for proxyccb (App Proxy Chain control block)
//------------------------------------------------------------------------------

syntax = "proto3";

import "types.proto";

package proxyccb;

// The App Proxy Chain cb service definition
service ProxycCb {
  rpc ProxycCbCreate (ProxycCbRequestMsg) returns (ProxycCbResponseMsg) {}
  rpc ProxycCbUpdate (ProxycCbRequestMsg) returns (ProxycCbResponseMsg) {}
  rpc ProxycCbDelete (ProxycCbDeleteRequestMsg) returns (ProxycCbDeleteResponseMsg) {}
  rpc ProxycCbGet (ProxycCbGetRequestMsg) returns (ProxycCbGetResponseMsg) {}
}

// ProxycCbKeyHandle is used to operate on a proxyccb either by its key or handle
message ProxycCbKeyHandle {
  oneof key_or_handle {
    uint32     proxyccb_id          = 1;    // unique proxyccb id allocated by app
    fixed64    proxyccb_handle      = 2;    // proxyccb handle returned by HAL
  }
}

// ProxycCbSpec captures all the proxyccb level configuration
message ProxycCbSpec {
  types.ObjectMeta      meta                       = 1;    // common object meta
  ProxycCbKeyHandle     key_or_handle              = 2;    // proxyccb being created/updated
  uint32                pi                         = 3;
  uint32                ci                         = 4;
  uint32                proxyccb_flags             = 5;
  uint32                my_txq_base                = 6;
  uint32                my_txq_ring_size_shift     = 7;
  uint32                my_txq_entry_size_shift    = 8;
  uint32                chain_txq_base             = 9;    // next service chain TxQ base
  uint32                chain_txq_ring_indices_addr= 10;
  uint32                chain_txq_ring_size_shift  = 11;
  uint32                chain_txq_entry_size_shift = 12;
  uint32                chain_txq_lif              = 13;
  uint32                chain_txq_qtype            = 14;
  uint32                chain_txq_qid              = 15;
  uint32                chain_txq_ring             = 16;
}

// ProxycCbRequestMsg is batched add or modify proxyccb request
message ProxycCbRequestMsg {
  repeated ProxycCbSpec  request = 1;    // batched request
}

// ProxycCbStatus is the operational status of a given proxyccb
message ProxycCbStatus {
  fixed64    proxyccb_handle = 1;    // id of proxyccb returned by HAL
}

// ProxycCbResponse is response to ProxycCbSpec
message ProxycCbResponse {
  types.ApiStatus        api_status      = 1;    // API status code
  ProxycCbStatus         proxyccb_status = 2;    // proxyccb status, if api succeeded
}

// ProxycCbResponseMsg is batched response to ProxycCbRequestMsg
message ProxycCbResponseMsg {
  repeated ProxycCbResponse  response = 1;    // batched response
}

// ProxycCbDeleteRequest is used to delete a proxyccb
message ProxycCbDeleteRequest {
  types.ObjectMeta        meta          = 1;    // object meta
  ProxycCbKeyHandle       key_or_handle = 2;    // ProxycCb key or handle
}

// ProxycCbDeleteRequestMsg is used to delete a batch of proxyccbs
message ProxycCbDeleteRequestMsg {
  repeated ProxycCbDeleteRequest  request = 1;    // batched delete request
}

// ProxycCbDeleteResponseMsg is batched response to ProxycCbDeleteRequestMsg
message ProxycCbDeleteResponseMsg {
  repeated types.ApiStatus    api_status = 1;    // API status code
}

// ProxycCbGetRequest is used to get information about a proxyccb
message ProxycCbGetRequest {
  types.ObjectMeta          meta          = 1;    // object meta
  ProxycCbKeyHandle         key_or_handle = 2;    // ProxycCb key or handle
}

// ProxycCbGetRequestMsg is batched GET requests for proxyccbs
message ProxycCbGetRequestMsg {
  repeated ProxycCbGetRequest  request = 1;    // batched get request
}

// ProxycCbStats is the statistics object for each proxyccb
message ProxycCbStats {
}

// ProxycCbGetResponse captures all the information about a proxyccb
// only if api_status indicates success, other fields are valid
message ProxycCbGetResponse {
  types.ApiStatus    api_status = 1;    // API status code
  ProxycCbSpec       spec       = 2;    // proxyccb configuration
  ProxycCbStatus     status     = 3;    // operational state of proxyccb
  ProxycCbStats      stats      = 4;    // stats of the proxyccb
}

// ProxycCbGetResponseMsg is batched response to ProxycCbGetRequestMsg
message ProxycCbGetResponseMsg {
  repeated ProxycCbGetResponse  response = 1;    // batch get response
}
