// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package netproto is a auto generated package.
Input file: tenant.proto
*/
package restapi

import (
	"encoding/json"
	"io/ioutil"
	"net/http"

	"github.com/gorilla/mux"

	"github.com/pensando/sw/nic/agent/httputils"
	"github.com/pensando/sw/venice/ctrler/npm/rpcserver/netproto"
)

// addTenantAPIRoutes adds Tenant routes
func addTenantAPIRoutes(r *mux.Router, srv *RestServer) {

	r.Methods("GET").Subrouter().HandleFunc("/", httputils.MakeHTTPHandler(srv.listTenantHandler))

	r.Methods("POST").Subrouter().HandleFunc("/", httputils.MakeHTTPHandler(srv.postTenantHandler))

	r.Methods("DELETE").Subrouter().HandleFunc("/{ObjectMeta.Name}", httputils.MakeHTTPHandler(srv.deleteTenantHandler))

	r.Methods("PUT").Subrouter().HandleFunc("/{ObjectMeta.Name}", httputils.MakeHTTPHandler(srv.putTenantHandler))

}

func (s *RestServer) listTenantHandler(r *http.Request) (interface{}, error) {
	return s.agent.ListTenant(), nil
}

func (s *RestServer) postTenantHandler(r *http.Request) (interface{}, error) {
	var o netproto.Tenant
	b, _ := ioutil.ReadAll(r.Body)
	err := json.Unmarshal(b, &o)
	if err != nil {
		return nil, err
	}

	return nil, s.agent.CreateTenant(&o)

}

func (s *RestServer) deleteTenantHandler(r *http.Request) (interface{}, error) {
	var o netproto.Tenant
	b, _ := ioutil.ReadAll(r.Body)
	err := json.Unmarshal(b, &o)
	if err != nil {
		return nil, err
	}

	return nil, s.agent.DeleteTenant(&o)

}

func (s *RestServer) putTenantHandler(r *http.Request) (interface{}, error) {
	var o netproto.Tenant
	b, _ := ioutil.ReadAll(r.Body)
	err := json.Unmarshal(b, &o)
	if err != nil {
		return nil, err
	}

	return nil, s.agent.UpdateTenant(&o)

}
