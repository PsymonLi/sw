{
  "swagger": "2.0",
  "info": {
    "title": "security.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/sgs/": {
      "get": {
        "operationId": "",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/netprotoSecurityGroup"
              }
            }
          }
        },
        "tags": [
          "SecurityGroup"
        ]
      },
      "post": {
        "operationId": "",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/netprotoApiResponse"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/netprotoApiResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/netprotoSecurityGroup"
            }
          }
        ],
        "tags": [
          "SecurityGroup"
        ]
      }
    },
    "/api/sgs/{ObjectMeta.Tenant}/{ObjectMeta.Namespace}/{ObjectMeta.Name}": {
      "delete": {
        "operationId": "",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/netprotoApiResponse"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/netprotoApiResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string"
                },
                "meta": {
                  "$ref": "#/definitions/apiObjectMeta"
                }
              }
            }
          }
        ],
        "tags": [
          "SecurityGroup"
        ]
      }
    }
  },
  "definitions": {
    "SecurityRuleService": {
      "type": "object",
      "properties": {
        "protocol": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "apiEventType": {
      "type": "string",
      "enum": [
        "CreateEvent",
        "UpdateEvent",
        "DeleteEvent"
      ],
      "default": "CreateEvent",
      "title": "Watch event types"
    },
    "apiObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the object, unique within a Namespace for scoped objects."
        },
        "tenant": {
          "type": "string",
          "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace of the object, for scoped objects."
        },
        "resource-version": {
          "type": "string",
          "description": "Resource version in the object store. This can only be set by the server."
        },
        "uuid": {
          "type": "string",
          "description": "UUID is the unique identifier for the object. This can only be set by the server."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels are arbitrary (key,value) pairs associated with any object."
        },
        "creation-time": {
          "type": "string",
          "format": "date-time",
          "title": "CreationTime is the creation time of Object"
        },
        "mod-time": {
          "type": "string",
          "format": "date-time",
          "title": "ModTime is the Last Modification time of Object"
        },
        "self-link": {
          "type": "string",
          "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway."
        }
      },
      "description": "ObjectMeta contains metadata that all objects stored in kvstore must have."
    },
    "apiObjectRef": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string",
          "description": "Tenant of the object."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace of the object, for scoped objects."
        },
        "kind": {
          "type": "string",
          "description": "Kind represents the type of the API object."
        },
        "name": {
          "type": "string",
          "description": "Name of the object, unique within a Namespace for scoped objects."
        },
        "uri": {
          "type": "string",
          "description": "URI is a link to accessing the referenced object."
        }
      },
      "description": "ObjectRef contains identifying information about an object."
    },
    "apiStatus": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/apiStatusResult",
          "description": "Result contains the status of the operation, success or failure."
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Message contains human readable form of the error."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Code is the HTTP status code."
        },
        "object-ref": {
          "$ref": "#/definitions/apiObjectRef",
          "description": "Reference to the object (optional) for which this status is being sent."
        }
      },
      "description": "Status is returned for calls that dont return objects."
    },
    "apiStatusResult": {
      "type": "object",
      "properties": {
        "Str": {
          "type": "string"
        }
      },
      "description": "StatusResult contains possible statuses for a NIC."
    },
    "apiTimestamp": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "apiTypeMeta": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind represents the type of the API object."
        },
        "api-version": {
          "type": "string",
          "description": "APIVersion defines the version of the API object."
        }
      },
      "description": "TypeMeta contains the metadata about kind and version for all API objects."
    },
    "netprotoApiResponse": {
      "type": "object",
      "properties": {
        "status-code": {
          "type": "integer"
        },
        "error": {
          "type": "string"
        },
        "references": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "netprotoSecurityGroup": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/netprotoSecurityGroupSpec"
        },
        "status": {
          "$ref": "#/definitions/netprotoSecurityGroupStatus"
        }
      },
      "title": "security group object"
    },
    "netprotoSecurityGroupEvent": {
      "type": "object",
      "properties": {
        "event-type": {
          "$ref": "#/definitions/apiEventType"
        },
        "security-group": {
          "$ref": "#/definitions/netprotoSecurityGroup"
        }
      },
      "title": "security group watch event"
    },
    "netprotoSecurityGroupList": {
      "type": "object",
      "properties": {
        "SecurityGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/netprotoSecurityGroup"
          }
        }
      },
      "title": "list of security groups"
    },
    "netprotoSecurityGroupSpec": {
      "type": "object",
      "properties": {
        "SecurityProfile": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/netprotoSecurityRule"
          },
          "title": "security rules"
        }
      },
      "title": "security group spec"
    },
    "netprotoSecurityGroupStatus": {
      "type": "object",
      "properties": {
        "SecurityGroupID": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "security group status"
    },
    "netprotoSecurityRule": {
      "type": "object",
      "properties": {
        "Direction": {
          "type": "string"
        },
        "PeerGroup": {
          "type": "string"
        },
        "PeerGroupID": {
          "type": "string",
          "format": "uint64"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRuleService"
          },
          "title": "services (port \u0026 protocol)"
        },
        "Action": {
          "type": "string"
        },
        "Log": {
          "type": "boolean",
          "format": "boolean"
        },
        "Apps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "FIXME: Move these match fields before action?"
        },
        "AppUsers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "security rule"
    }
  }
}
