// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package {{.GoPkg.Name}} is a auto generated package.
Input file: {{.Name}}
*/
package restapi

{{range .Services}}
    {{$svcname := .Name}}
    {{if (hasExtension "venice.naplesRestService" .)}}
       {{$params := (getRestSvcOptions .)}}
       {{range $params}}
            // add{{.CrudObject}}APIRoutes adds {{.CrudObject}} routes
            func add{{.CrudObject}}APIRoutes(r *mux.Router, srv *RestServer){
            {{$crudObject := .CrudObject}}
            {{$pattern := .Pattern}}
            {{$methods := .Methods}}
            {{range $methods}}
                {{if strEq . "list"}}
                    r.Methods("GET").Subrouter().HandleFunc("/", httputils.MakeHTTPHandler(srv.{{lower $crudObject}}{{title .}}Handler))
                {{else if strEq . "post"}}
                    r.Methods("{{upper .}}").Subrouter().HandleFunc("/", httputils.MakeHTTPHandler(srv.{{lower $crudObject}}{{title .}}Handler))
                {{else}}
                    r.Methods("{{upper .}}").Subrouter().HandleFunc("{{$pattern}}", httputils.MakeHTTPHandler(srv.{{ lower $crudObject}}{{title .}}Handler))
                {{end}}
            {{end}}
            }
       {{end}}
       {{range $params}}
           {{$crudObject := .CrudObject}}
           {{$pattern := .Pattern}}
           {{$methods := .Methods}}
           {{range $methods}}
                {{if strEq . "list"}}
                    func (s *RestServer) {{lower $crudObject}}{{title .}}Handler(r *http.Request) (interface{}, error){
                        return s.agent.List{{title $crudObject}}(), nil
                    }
                {{else if and (strEq $crudObject "Endpoint") (strEq . "post")}}
                    func (s *RestServer) {{lower $crudObject}}{{title .}}Handler(r *http.Request) (interface{}, error){
                        var o netproto.{{title $crudObject}}
                        b, _ := ioutil.ReadAll(r.Body)
                        err := json.Unmarshal(b, &o)
                        if err != nil {
                            return nil, err
                        }
                         _, err = s.agent.Create{{title $crudObject}}(&o)
                        return nil, err
                    }
                {{else}}
                    func (s *RestServer) {{lower $crudObject}}{{title .}}Handler(r *http.Request) (interface{}, error){
                        var o netproto.{{title $crudObject}}
                        b, _ := ioutil.ReadAll(r.Body)
                        err := json.Unmarshal(b, &o)
                        if err != nil {
                            return nil, err
                        }
                        {{if strEq . "post"}}
                             return nil, s.agent.Create{{title $crudObject}}(&o)
                        {{else if strEq . "put"}}
                             return nil, s.agent.Update{{title $crudObject}}(&o)
                        {{else if strEq . "delete"}}
                             return nil, s.agent.Delete{{title $crudObject}}(&o)
                        {{end}}
                    }
                {{end}}
           {{end}}
       {{end}}
    {{end}}
{{end}}
