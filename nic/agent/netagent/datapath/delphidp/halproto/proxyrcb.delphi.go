// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proxyrcb.proto

package halproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// ProxyrCbKeyHandle is used to operate on a proxyrcb either by its key or handle
type ProxyrCbKeyHandle struct {
	// Types that are valid to be assigned to KeyOrHandle:
	//	*ProxyrCbKeyHandle_ProxyrcbId
	//	*ProxyrCbKeyHandle_ProxyrcbHandle
	KeyOrHandle isProxyrCbKeyHandle_KeyOrHandle `protobuf_oneof:"key_or_handle"`
}

func (m *ProxyrCbKeyHandle) Reset()                    { *m = ProxyrCbKeyHandle{} }
func (m *ProxyrCbKeyHandle) String() string            { return proto.CompactTextString(m) }
func (*ProxyrCbKeyHandle) ProtoMessage()               {}
func (*ProxyrCbKeyHandle) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{0} }

type isProxyrCbKeyHandle_KeyOrHandle interface{ isProxyrCbKeyHandle_KeyOrHandle() }

type ProxyrCbKeyHandle_ProxyrcbId struct {
	ProxyrcbId uint32 `protobuf:"varint,1,opt,name=proxyrcb_id,json=proxyrcbId,oneof"`
}
type ProxyrCbKeyHandle_ProxyrcbHandle struct {
	ProxyrcbHandle uint64 `protobuf:"fixed64,2,opt,name=proxyrcb_handle,json=proxyrcbHandle,oneof"`
}

func (*ProxyrCbKeyHandle_ProxyrcbId) isProxyrCbKeyHandle_KeyOrHandle()     {}
func (*ProxyrCbKeyHandle_ProxyrcbHandle) isProxyrCbKeyHandle_KeyOrHandle() {}

func (m *ProxyrCbKeyHandle) GetKeyOrHandle() isProxyrCbKeyHandle_KeyOrHandle {
	if m != nil {
		return m.KeyOrHandle
	}
	return nil
}

func (m *ProxyrCbKeyHandle) GetProxyrcbId() uint32 {
	if x, ok := m.GetKeyOrHandle().(*ProxyrCbKeyHandle_ProxyrcbId); ok {
		return x.ProxyrcbId
	}
	return 0
}

func (m *ProxyrCbKeyHandle) GetProxyrcbHandle() uint64 {
	if x, ok := m.GetKeyOrHandle().(*ProxyrCbKeyHandle_ProxyrcbHandle); ok {
		return x.ProxyrcbHandle
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ProxyrCbKeyHandle) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ProxyrCbKeyHandle_OneofMarshaler, _ProxyrCbKeyHandle_OneofUnmarshaler, _ProxyrCbKeyHandle_OneofSizer, []interface{}{
		(*ProxyrCbKeyHandle_ProxyrcbId)(nil),
		(*ProxyrCbKeyHandle_ProxyrcbHandle)(nil),
	}
}

func _ProxyrCbKeyHandle_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ProxyrCbKeyHandle)
	// key_or_handle
	switch x := m.KeyOrHandle.(type) {
	case *ProxyrCbKeyHandle_ProxyrcbId:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.ProxyrcbId))
	case *ProxyrCbKeyHandle_ProxyrcbHandle:
		b.EncodeVarint(2<<3 | proto.WireFixed64)
		b.EncodeFixed64(uint64(x.ProxyrcbHandle))
	case nil:
	default:
		return fmt.Errorf("ProxyrCbKeyHandle.KeyOrHandle has unexpected type %T", x)
	}
	return nil
}

func _ProxyrCbKeyHandle_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ProxyrCbKeyHandle)
	switch tag {
	case 1: // key_or_handle.proxyrcb_id
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.KeyOrHandle = &ProxyrCbKeyHandle_ProxyrcbId{uint32(x)}
		return true, err
	case 2: // key_or_handle.proxyrcb_handle
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.KeyOrHandle = &ProxyrCbKeyHandle_ProxyrcbHandle{x}
		return true, err
	default:
		return false, nil
	}
}

func _ProxyrCbKeyHandle_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ProxyrCbKeyHandle)
	// key_or_handle
	switch x := m.KeyOrHandle.(type) {
	case *ProxyrCbKeyHandle_ProxyrcbId:
		n += proto.SizeVarint(1<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.ProxyrcbId))
	case *ProxyrCbKeyHandle_ProxyrcbHandle:
		n += proto.SizeVarint(2<<3 | proto.WireFixed64)
		n += 8
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// ProxyrCbSpec captures all the proxyrcb level configuration
type ProxyrCbSpec struct {
	Meta                    *ObjectMeta        `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	KeyOrHandle             *ProxyrCbKeyHandle `protobuf:"bytes,2,opt,name=key_or_handle,json=keyOrHandle" json:"key_or_handle,omitempty"`
	Pi                      uint32             `protobuf:"varint,3,opt,name=pi" json:"pi,omitempty"`
	Ci                      uint32             `protobuf:"varint,4,opt,name=ci" json:"ci,omitempty"`
	ProxyrcbFlags           uint32             `protobuf:"varint,5,opt,name=proxyrcb_flags,json=proxyrcbFlags" json:"proxyrcb_flags,omitempty"`
	MyTxqBase               uint64             `protobuf:"varint,6,opt,name=my_txq_base,json=myTxqBase" json:"my_txq_base,omitempty"`
	MyTxqRingSizeShift      uint32             `protobuf:"varint,7,opt,name=my_txq_ring_size_shift,json=myTxqRingSizeShift" json:"my_txq_ring_size_shift,omitempty"`
	MyTxqEntrySizeShift     uint32             `protobuf:"varint,8,opt,name=my_txq_entry_size_shift,json=myTxqEntrySizeShift" json:"my_txq_entry_size_shift,omitempty"`
	ChainRxqBase            uint64             `protobuf:"varint,9,opt,name=chain_rxq_base,json=chainRxqBase" json:"chain_rxq_base,omitempty"`
	ChainRxqRingIndicesAddr uint64             `protobuf:"varint,10,opt,name=chain_rxq_ring_indices_addr,json=chainRxqRingIndicesAddr" json:"chain_rxq_ring_indices_addr,omitempty"`
	ChainRxqRingSizeShift   uint32             `protobuf:"varint,11,opt,name=chain_rxq_ring_size_shift,json=chainRxqRingSizeShift" json:"chain_rxq_ring_size_shift,omitempty"`
	ChainRxqEntrySizeShift  uint32             `protobuf:"varint,12,opt,name=chain_rxq_entry_size_shift,json=chainRxqEntrySizeShift" json:"chain_rxq_entry_size_shift,omitempty"`
	ChainRxqRingIndexSelect uint32             `protobuf:"varint,13,opt,name=chain_rxq_ring_index_select,json=chainRxqRingIndexSelect" json:"chain_rxq_ring_index_select,omitempty"`
	RedirSpan               uint32             `protobuf:"varint,14,opt,name=redir_span,json=redirSpan" json:"redir_span,omitempty"`
	IpSa                    *IPAddress         `protobuf:"bytes,15,opt,name=ip_sa,json=ipSa" json:"ip_sa,omitempty"`
	IpDa                    *IPAddress         `protobuf:"bytes,16,opt,name=ip_da,json=ipDa" json:"ip_da,omitempty"`
	Sport                   uint32             `protobuf:"varint,17,opt,name=sport" json:"sport,omitempty"`
	Dport                   uint32             `protobuf:"varint,18,opt,name=dport" json:"dport,omitempty"`
	Vrf                     uint32             `protobuf:"varint,19,opt,name=vrf" json:"vrf,omitempty"`
	Af                      uint32             `protobuf:"varint,20,opt,name=af" json:"af,omitempty"`
	IpProto                 IPProtocol         `protobuf:"varint,21,opt,name=ip_proto,json=ipProto,enum=types.IPProtocol" json:"ip_proto,omitempty"`
	Dir                     uint32             `protobuf:"varint,22,opt,name=dir" json:"dir,omitempty"`
	Role                    uint32             `protobuf:"varint,23,opt,name=role" json:"role,omitempty"`
	RevCbId                 uint32             `protobuf:"varint,24,opt,name=rev_cb_id,json=revCbId" json:"rev_cb_id,omitempty"`
	//
	// 64-bit statistic counters
	StatPktsRedir   uint64 `protobuf:"varint,25,opt,name=stat_pkts_redir,json=statPktsRedir" json:"stat_pkts_redir,omitempty"`
	StatPktsDiscard uint64 `protobuf:"varint,26,opt,name=stat_pkts_discard,json=statPktsDiscard" json:"stat_pkts_discard,omitempty"`
	//
	// 32-bit saturating statistic counters
	StatCbNotReady          uint32 `protobuf:"varint,27,opt,name=stat_cb_not_ready,json=statCbNotReady" json:"stat_cb_not_ready,omitempty"`
	StatNullRingIndicesAddr uint32 `protobuf:"varint,28,opt,name=stat_null_ring_indices_addr,json=statNullRingIndicesAddr" json:"stat_null_ring_indices_addr,omitempty"`
	StatAolErr              uint32 `protobuf:"varint,29,opt,name=stat_aol_err,json=statAolErr" json:"stat_aol_err,omitempty"`
	StatRxqFull             uint32 `protobuf:"varint,30,opt,name=stat_rxq_full,json=statRxqFull" json:"stat_rxq_full,omitempty"`
	StatTxqEmpty            uint32 `protobuf:"varint,31,opt,name=stat_txq_empty,json=statTxqEmpty" json:"stat_txq_empty,omitempty"`
	StatSemAllocFull        uint32 `protobuf:"varint,32,opt,name=stat_sem_alloc_full,json=statSemAllocFull" json:"stat_sem_alloc_full,omitempty"`
	StatSemFreeFull         uint32 `protobuf:"varint,33,opt,name=stat_sem_free_full,json=statSemFreeFull" json:"stat_sem_free_full,omitempty"`
}

func (m *ProxyrCbSpec) Reset()                    { *m = ProxyrCbSpec{} }
func (m *ProxyrCbSpec) String() string            { return proto.CompactTextString(m) }
func (*ProxyrCbSpec) ProtoMessage()               {}
func (*ProxyrCbSpec) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{1} }

func (m *ProxyrCbSpec) GetMeta() *ObjectMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ProxyrCbSpec) GetKeyOrHandle() *ProxyrCbKeyHandle {
	if m != nil {
		return m.KeyOrHandle
	}
	return nil
}

func (m *ProxyrCbSpec) GetPi() uint32 {
	if m != nil {
		return m.Pi
	}
	return 0
}

func (m *ProxyrCbSpec) GetCi() uint32 {
	if m != nil {
		return m.Ci
	}
	return 0
}

func (m *ProxyrCbSpec) GetProxyrcbFlags() uint32 {
	if m != nil {
		return m.ProxyrcbFlags
	}
	return 0
}

func (m *ProxyrCbSpec) GetMyTxqBase() uint64 {
	if m != nil {
		return m.MyTxqBase
	}
	return 0
}

func (m *ProxyrCbSpec) GetMyTxqRingSizeShift() uint32 {
	if m != nil {
		return m.MyTxqRingSizeShift
	}
	return 0
}

func (m *ProxyrCbSpec) GetMyTxqEntrySizeShift() uint32 {
	if m != nil {
		return m.MyTxqEntrySizeShift
	}
	return 0
}

func (m *ProxyrCbSpec) GetChainRxqBase() uint64 {
	if m != nil {
		return m.ChainRxqBase
	}
	return 0
}

func (m *ProxyrCbSpec) GetChainRxqRingIndicesAddr() uint64 {
	if m != nil {
		return m.ChainRxqRingIndicesAddr
	}
	return 0
}

func (m *ProxyrCbSpec) GetChainRxqRingSizeShift() uint32 {
	if m != nil {
		return m.ChainRxqRingSizeShift
	}
	return 0
}

func (m *ProxyrCbSpec) GetChainRxqEntrySizeShift() uint32 {
	if m != nil {
		return m.ChainRxqEntrySizeShift
	}
	return 0
}

func (m *ProxyrCbSpec) GetChainRxqRingIndexSelect() uint32 {
	if m != nil {
		return m.ChainRxqRingIndexSelect
	}
	return 0
}

func (m *ProxyrCbSpec) GetRedirSpan() uint32 {
	if m != nil {
		return m.RedirSpan
	}
	return 0
}

func (m *ProxyrCbSpec) GetIpSa() *IPAddress {
	if m != nil {
		return m.IpSa
	}
	return nil
}

func (m *ProxyrCbSpec) GetIpDa() *IPAddress {
	if m != nil {
		return m.IpDa
	}
	return nil
}

func (m *ProxyrCbSpec) GetSport() uint32 {
	if m != nil {
		return m.Sport
	}
	return 0
}

func (m *ProxyrCbSpec) GetDport() uint32 {
	if m != nil {
		return m.Dport
	}
	return 0
}

func (m *ProxyrCbSpec) GetVrf() uint32 {
	if m != nil {
		return m.Vrf
	}
	return 0
}

func (m *ProxyrCbSpec) GetAf() uint32 {
	if m != nil {
		return m.Af
	}
	return 0
}

func (m *ProxyrCbSpec) GetIpProto() IPProtocol {
	if m != nil {
		return m.IpProto
	}
	return IPProtocol_IPPROTO_NONE
}

func (m *ProxyrCbSpec) GetDir() uint32 {
	if m != nil {
		return m.Dir
	}
	return 0
}

func (m *ProxyrCbSpec) GetRole() uint32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *ProxyrCbSpec) GetRevCbId() uint32 {
	if m != nil {
		return m.RevCbId
	}
	return 0
}

func (m *ProxyrCbSpec) GetStatPktsRedir() uint64 {
	if m != nil {
		return m.StatPktsRedir
	}
	return 0
}

func (m *ProxyrCbSpec) GetStatPktsDiscard() uint64 {
	if m != nil {
		return m.StatPktsDiscard
	}
	return 0
}

func (m *ProxyrCbSpec) GetStatCbNotReady() uint32 {
	if m != nil {
		return m.StatCbNotReady
	}
	return 0
}

func (m *ProxyrCbSpec) GetStatNullRingIndicesAddr() uint32 {
	if m != nil {
		return m.StatNullRingIndicesAddr
	}
	return 0
}

func (m *ProxyrCbSpec) GetStatAolErr() uint32 {
	if m != nil {
		return m.StatAolErr
	}
	return 0
}

func (m *ProxyrCbSpec) GetStatRxqFull() uint32 {
	if m != nil {
		return m.StatRxqFull
	}
	return 0
}

func (m *ProxyrCbSpec) GetStatTxqEmpty() uint32 {
	if m != nil {
		return m.StatTxqEmpty
	}
	return 0
}

func (m *ProxyrCbSpec) GetStatSemAllocFull() uint32 {
	if m != nil {
		return m.StatSemAllocFull
	}
	return 0
}

func (m *ProxyrCbSpec) GetStatSemFreeFull() uint32 {
	if m != nil {
		return m.StatSemFreeFull
	}
	return 0
}

// ProxyrCbRequestMsg is batched add or modify proxyrcb request
type ProxyrCbRequestMsg struct {
	Request []*ProxyrCbSpec `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
}

func (m *ProxyrCbRequestMsg) Reset()                    { *m = ProxyrCbRequestMsg{} }
func (m *ProxyrCbRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*ProxyrCbRequestMsg) ProtoMessage()               {}
func (*ProxyrCbRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{2} }

func (m *ProxyrCbRequestMsg) GetRequest() []*ProxyrCbSpec {
	if m != nil {
		return m.Request
	}
	return nil
}

// ProxyrCbStatus is the operational status of a given proxyrcb
type ProxyrCbStatus struct {
	ProxyrcbHandle uint64 `protobuf:"fixed64,1,opt,name=proxyrcb_handle,json=proxyrcbHandle" json:"proxyrcb_handle,omitempty"`
}

func (m *ProxyrCbStatus) Reset()                    { *m = ProxyrCbStatus{} }
func (m *ProxyrCbStatus) String() string            { return proto.CompactTextString(m) }
func (*ProxyrCbStatus) ProtoMessage()               {}
func (*ProxyrCbStatus) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{3} }

func (m *ProxyrCbStatus) GetProxyrcbHandle() uint64 {
	if m != nil {
		return m.ProxyrcbHandle
	}
	return 0
}

// ProxyrCbResponse is response to ProxyrCbSpec
type ProxyrCbResponse struct {
	ApiStatus      ApiStatus       `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	ProxyrcbStatus *ProxyrCbStatus `protobuf:"bytes,2,opt,name=proxyrcb_status,json=proxyrcbStatus" json:"proxyrcb_status,omitempty"`
}

func (m *ProxyrCbResponse) Reset()                    { *m = ProxyrCbResponse{} }
func (m *ProxyrCbResponse) String() string            { return proto.CompactTextString(m) }
func (*ProxyrCbResponse) ProtoMessage()               {}
func (*ProxyrCbResponse) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{4} }

func (m *ProxyrCbResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *ProxyrCbResponse) GetProxyrcbStatus() *ProxyrCbStatus {
	if m != nil {
		return m.ProxyrcbStatus
	}
	return nil
}

// ProxyrCbResponseMsg is batched response to ProxyrCbRequestMsg
type ProxyrCbResponseMsg struct {
	Response []*ProxyrCbResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *ProxyrCbResponseMsg) Reset()                    { *m = ProxyrCbResponseMsg{} }
func (m *ProxyrCbResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*ProxyrCbResponseMsg) ProtoMessage()               {}
func (*ProxyrCbResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{5} }

func (m *ProxyrCbResponseMsg) GetResponse() []*ProxyrCbResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

// ProxyrCbDeleteRequest is used to delete a proxyrcb
type ProxyrCbDeleteRequest struct {
	Meta        *ObjectMeta        `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	KeyOrHandle *ProxyrCbKeyHandle `protobuf:"bytes,2,opt,name=key_or_handle,json=keyOrHandle" json:"key_or_handle,omitempty"`
}

func (m *ProxyrCbDeleteRequest) Reset()                    { *m = ProxyrCbDeleteRequest{} }
func (m *ProxyrCbDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*ProxyrCbDeleteRequest) ProtoMessage()               {}
func (*ProxyrCbDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{6} }

func (m *ProxyrCbDeleteRequest) GetMeta() *ObjectMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ProxyrCbDeleteRequest) GetKeyOrHandle() *ProxyrCbKeyHandle {
	if m != nil {
		return m.KeyOrHandle
	}
	return nil
}

// ProxyrCbDeleteRequestMsg is used to delete a batch of proxyrcbs
type ProxyrCbDeleteRequestMsg struct {
	Request []*ProxyrCbDeleteRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
}

func (m *ProxyrCbDeleteRequestMsg) Reset()                    { *m = ProxyrCbDeleteRequestMsg{} }
func (m *ProxyrCbDeleteRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*ProxyrCbDeleteRequestMsg) ProtoMessage()               {}
func (*ProxyrCbDeleteRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{7} }

func (m *ProxyrCbDeleteRequestMsg) GetRequest() []*ProxyrCbDeleteRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

// ProxyrCbDeleteResponseMsg is batched response to ProxyrCbDeleteRequestMsg
type ProxyrCbDeleteResponseMsg struct {
	ApiStatus []ApiStatus `protobuf:"varint,1,rep,packed,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
}

func (m *ProxyrCbDeleteResponseMsg) Reset()                    { *m = ProxyrCbDeleteResponseMsg{} }
func (m *ProxyrCbDeleteResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*ProxyrCbDeleteResponseMsg) ProtoMessage()               {}
func (*ProxyrCbDeleteResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{8} }

func (m *ProxyrCbDeleteResponseMsg) GetApiStatus() []ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return nil
}

// ProxyrCbGetRequest is used to get information about a proxyrcb
type ProxyrCbGetRequest struct {
	Meta        *ObjectMeta        `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	KeyOrHandle *ProxyrCbKeyHandle `protobuf:"bytes,2,opt,name=key_or_handle,json=keyOrHandle" json:"key_or_handle,omitempty"`
}

func (m *ProxyrCbGetRequest) Reset()                    { *m = ProxyrCbGetRequest{} }
func (m *ProxyrCbGetRequest) String() string            { return proto.CompactTextString(m) }
func (*ProxyrCbGetRequest) ProtoMessage()               {}
func (*ProxyrCbGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{9} }

func (m *ProxyrCbGetRequest) GetMeta() *ObjectMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ProxyrCbGetRequest) GetKeyOrHandle() *ProxyrCbKeyHandle {
	if m != nil {
		return m.KeyOrHandle
	}
	return nil
}

// ProxyrCbGetRequestMsg is batched GET requests for proxyrcbs
type ProxyrCbGetRequestMsg struct {
	Request []*ProxyrCbGetRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
}

func (m *ProxyrCbGetRequestMsg) Reset()                    { *m = ProxyrCbGetRequestMsg{} }
func (m *ProxyrCbGetRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*ProxyrCbGetRequestMsg) ProtoMessage()               {}
func (*ProxyrCbGetRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{10} }

func (m *ProxyrCbGetRequestMsg) GetRequest() []*ProxyrCbGetRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

// ProxyrCbStats is the statistics object for each proxyrcb
type ProxyrCbStats struct {
}

func (m *ProxyrCbStats) Reset()                    { *m = ProxyrCbStats{} }
func (m *ProxyrCbStats) String() string            { return proto.CompactTextString(m) }
func (*ProxyrCbStats) ProtoMessage()               {}
func (*ProxyrCbStats) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{11} }

// ProxyrCbGetResponse captures all the information about a proxyrcb
// only if api_status indicates success, other fields are valid
type ProxyrCbGetResponse struct {
	ApiStatus ApiStatus       `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	Spec      *ProxyrCbSpec   `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	Status    *ProxyrCbStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	Stats     *ProxyrCbStats  `protobuf:"bytes,4,opt,name=stats" json:"stats,omitempty"`
}

func (m *ProxyrCbGetResponse) Reset()                    { *m = ProxyrCbGetResponse{} }
func (m *ProxyrCbGetResponse) String() string            { return proto.CompactTextString(m) }
func (*ProxyrCbGetResponse) ProtoMessage()               {}
func (*ProxyrCbGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{12} }

func (m *ProxyrCbGetResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *ProxyrCbGetResponse) GetSpec() *ProxyrCbSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *ProxyrCbGetResponse) GetStatus() *ProxyrCbStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ProxyrCbGetResponse) GetStats() *ProxyrCbStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

// ProxyrCbGetResponseMsg is batched response to ProxyrCbGetRequestMsg
type ProxyrCbGetResponseMsg struct {
	Response []*ProxyrCbGetResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *ProxyrCbGetResponseMsg) Reset()                    { *m = ProxyrCbGetResponseMsg{} }
func (m *ProxyrCbGetResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*ProxyrCbGetResponseMsg) ProtoMessage()               {}
func (*ProxyrCbGetResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{13} }

func (m *ProxyrCbGetResponseMsg) GetResponse() []*ProxyrCbGetResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func init() {
	proto.RegisterType((*ProxyrCbKeyHandle)(nil), "halproto.ProxyrCbKeyHandle")
	proto.RegisterType((*ProxyrCbSpec)(nil), "halproto.ProxyrCbSpec")
	proto.RegisterType((*ProxyrCbRequestMsg)(nil), "halproto.ProxyrCbRequestMsg")
	proto.RegisterType((*ProxyrCbStatus)(nil), "halproto.ProxyrCbStatus")
	proto.RegisterType((*ProxyrCbResponse)(nil), "halproto.ProxyrCbResponse")
	proto.RegisterType((*ProxyrCbResponseMsg)(nil), "halproto.ProxyrCbResponseMsg")
	proto.RegisterType((*ProxyrCbDeleteRequest)(nil), "halproto.ProxyrCbDeleteRequest")
	proto.RegisterType((*ProxyrCbDeleteRequestMsg)(nil), "halproto.ProxyrCbDeleteRequestMsg")
	proto.RegisterType((*ProxyrCbDeleteResponseMsg)(nil), "halproto.ProxyrCbDeleteResponseMsg")
	proto.RegisterType((*ProxyrCbGetRequest)(nil), "halproto.ProxyrCbGetRequest")
	proto.RegisterType((*ProxyrCbGetRequestMsg)(nil), "halproto.ProxyrCbGetRequestMsg")
	proto.RegisterType((*ProxyrCbStats)(nil), "halproto.ProxyrCbStats")
	proto.RegisterType((*ProxyrCbGetResponse)(nil), "halproto.ProxyrCbGetResponse")
	proto.RegisterType((*ProxyrCbGetResponseMsg)(nil), "halproto.ProxyrCbGetResponseMsg")
}

func init() { proto.RegisterFile("proxyrcb.proto", fileDescriptor30) }

var fileDescriptor30 = []byte{
	// 1118 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x5d, 0x4f, 0x1b, 0x47,
	0x17, 0x8e, 0xc1, 0x80, 0x39, 0xc6, 0x36, 0x0c, 0x09, 0x4c, 0x0c, 0x04, 0x67, 0xdf, 0x97, 0x96,
	0xa4, 0x0d, 0x8d, 0xdc, 0xaa, 0x6a, 0xaa, 0x4a, 0x15, 0x1f, 0xa1, 0xa0, 0x96, 0x80, 0xd6, 0xcd,
	0x4d, 0x7b, 0xb1, 0x1a, 0xef, 0x8e, 0x61, 0xca, 0xda, 0xbb, 0xcc, 0x8c, 0x91, 0x1d, 0x55, 0xea,
	0x5d, 0x6f, 0xfb, 0xe3, 0x7a, 0xdd, 0xff, 0x52, 0xcd, 0x99, 0x5d, 0xaf, 0xbb, 0x36, 0x41, 0xaa,
	0xaa, 0x5c, 0xb1, 0x73, 0xce, 0xf3, 0x3c, 0x73, 0x3e, 0xc7, 0x40, 0x35, 0x96, 0xd1, 0x60, 0x28,
	0xfd, 0xf6, 0x5e, 0x2c, 0x23, 0x1d, 0x91, 0x52, 0x7a, 0xae, 0x97, 0xf5, 0x30, 0xe6, 0xca, 0x9a,
	0x1d, 0x09, 0x2b, 0x17, 0xe8, 0x38, 0x6c, 0x7f, 0xcf, 0x87, 0x27, 0xac, 0x17, 0x84, 0x9c, 0x3c,
	0x85, 0x72, 0x8a, 0xf6, 0x44, 0x40, 0x0b, 0x8d, 0xc2, 0x6e, 0xe5, 0xe4, 0x81, 0x0b, 0xa9, 0xf1,
	0x34, 0x20, 0xcf, 0xa0, 0x36, 0x82, 0x5c, 0x21, 0x8b, 0xce, 0x34, 0x0a, 0xbb, 0xf3, 0x27, 0x0f,
	0xdc, 0xd1, 0xcd, 0x56, 0xed, 0xa0, 0x06, 0x95, 0x6b, 0x3e, 0xf4, 0x22, 0x99, 0x00, 0x9d, 0x3f,
	0x00, 0x96, 0xd2, 0x4b, 0x5b, 0x31, 0xf7, 0xc9, 0x0e, 0x14, 0xbb, 0x5c, 0x33, 0xbc, 0xa8, 0xdc,
	0x5c, 0xd9, 0xb3, 0x01, 0x9e, 0xb7, 0x7f, 0xe1, 0xbe, 0x3e, 0xe3, 0x9a, 0xb9, 0xe8, 0x26, 0xdf,
	0xe6, 0x84, 0xf0, 0xc6, 0x72, 0x73, 0x63, 0x6f, 0x94, 0xea, 0x44, 0x2a, 0x6e, 0xf9, 0x9a, 0x0f,
	0xcf, 0x65, 0x92, 0x57, 0x15, 0x66, 0x62, 0x41, 0x67, 0x4d, 0x3a, 0xee, 0x4c, 0x2c, 0xcc, 0xd9,
	0x17, 0xb4, 0x68, 0xcf, 0xbe, 0x20, 0x3b, 0x59, 0xd5, 0xbc, 0x4e, 0xc8, 0x2e, 0x15, 0x9d, 0x43,
	0x5f, 0x25, 0xb5, 0x1e, 0x1b, 0x23, 0x79, 0x02, 0xe5, 0xee, 0xd0, 0xd3, 0x83, 0x1b, 0xaf, 0xcd,
	0x14, 0xa7, 0xf3, 0x8d, 0xc2, 0x6e, 0xd1, 0x5d, 0xec, 0x0e, 0x7f, 0x1c, 0xdc, 0x1c, 0x30, 0xc5,
	0x49, 0x13, 0xd6, 0x12, 0xbf, 0x14, 0xbd, 0x4b, 0x4f, 0x89, 0x77, 0xdc, 0x53, 0x57, 0xa2, 0xa3,
	0xe9, 0x02, 0xca, 0x11, 0x84, 0xba, 0xa2, 0x77, 0xd9, 0x12, 0xef, 0x78, 0xcb, 0x78, 0xc8, 0x17,
	0xb0, 0x9e, 0x70, 0x78, 0x4f, 0xcb, 0xe1, 0x38, 0xa9, 0x84, 0xa4, 0x55, 0x24, 0xbd, 0x36, 0xce,
	0x8c, 0xf5, 0x7f, 0xa8, 0xfa, 0x57, 0x4c, 0xf4, 0x3c, 0x99, 0x06, 0xb3, 0x88, 0xc1, 0x2c, 0xa1,
	0xd5, 0x4d, 0xe2, 0xf9, 0x06, 0x36, 0x32, 0x14, 0x86, 0x24, 0x7a, 0x81, 0xf0, 0xb9, 0xf2, 0x58,
	0x10, 0x48, 0x0a, 0x48, 0x59, 0x4f, 0x29, 0x26, 0xae, 0x53, 0xeb, 0xdf, 0x0f, 0x02, 0x49, 0xbe,
	0x82, 0xc7, 0x39, 0xf6, 0x58, 0x6c, 0x65, 0x8c, 0xed, 0xd1, 0x38, 0x37, 0x8b, 0xee, 0x6b, 0xa8,
	0x67, 0xcc, 0x89, 0xb4, 0x96, 0x90, 0xba, 0x96, 0x52, 0x73, 0x99, 0x4d, 0x8d, 0x99, 0x0f, 0x3c,
	0xc5, 0x43, 0xee, 0x6b, 0x5a, 0x41, 0x72, 0x3e, 0x66, 0x3e, 0x68, 0xa1, 0x9b, 0x6c, 0x01, 0x48,
	0x1e, 0x08, 0xe9, 0xa9, 0x98, 0xf5, 0x68, 0x15, 0xc1, 0x8b, 0x68, 0x69, 0xc5, 0xac, 0x47, 0x76,
	0x60, 0x4e, 0xc4, 0x9e, 0x62, 0xb4, 0x86, 0x03, 0xb4, 0x9c, 0x0c, 0xdc, 0xe9, 0x85, 0x49, 0x98,
	0x2b, 0xe5, 0x16, 0x45, 0xdc, 0x62, 0x09, 0x2c, 0x60, 0x74, 0xf9, 0x6e, 0xd8, 0x11, 0x23, 0x0f,
	0x61, 0x4e, 0xc5, 0x91, 0xd4, 0x74, 0x05, 0xef, 0xb1, 0x07, 0x63, 0x0d, 0xd0, 0x4a, 0xac, 0x15,
	0x0f, 0x64, 0x19, 0x66, 0x6f, 0x65, 0x87, 0xae, 0xa2, 0xcd, 0x7c, 0x9a, 0x19, 0x64, 0x1d, 0xfa,
	0xd0, 0xce, 0x20, 0xeb, 0x90, 0x4f, 0xa1, 0x24, 0x62, 0x0f, 0x97, 0x93, 0x3e, 0x6a, 0x14, 0x76,
	0xab, 0xa3, 0x7d, 0x38, 0xbd, 0xb8, 0x30, 0x56, 0x3f, 0x0a, 0xdd, 0x05, 0x11, 0xe3, 0xb7, 0xd1,
	0x0b, 0x84, 0xa4, 0x6b, 0x56, 0x2f, 0x10, 0x92, 0x10, 0x28, 0xca, 0x28, 0xe4, 0x74, 0x1d, 0x4d,
	0xf8, 0x4d, 0xea, 0xb0, 0x28, 0xf9, 0xad, 0x67, 0xb7, 0x99, 0xa2, 0x63, 0x41, 0xf2, 0xdb, 0x43,
	0xb3, 0xc8, 0x1f, 0x41, 0x4d, 0x69, 0xa6, 0xbd, 0xf8, 0x5a, 0x2b, 0x0f, 0x4b, 0x44, 0x1f, 0xe3,
	0x40, 0x54, 0x8c, 0xf9, 0xe2, 0x5a, 0x2b, 0xd7, 0x18, 0xc9, 0x73, 0x58, 0xc9, 0x70, 0x81, 0x50,
	0x3e, 0x93, 0x01, 0xad, 0x23, 0xb2, 0x96, 0x22, 0x8f, 0xac, 0x99, 0x3c, 0x4b, 0xb0, 0x7e, 0xdb,
	0xeb, 0x45, 0xda, 0x93, 0x9c, 0x05, 0x43, 0xba, 0x81, 0xf7, 0x56, 0x8d, 0xe3, 0xb0, 0xfd, 0x26,
	0xd2, 0xae, 0xb1, 0x9a, 0x3e, 0x23, 0xb4, 0xd7, 0x0f, 0xc3, 0x29, 0xb3, 0xb9, 0x69, 0xfb, 0x6c,
	0x20, 0x6f, 0xfa, 0x61, 0x98, 0x9f, 0xcd, 0x06, 0x2c, 0x21, 0x9b, 0x45, 0xa1, 0xc7, 0xa5, 0xa4,
	0x5b, 0x08, 0x07, 0x63, 0xdb, 0x8f, 0xc2, 0xd7, 0x52, 0x12, 0x07, 0x30, 0x0f, 0x1c, 0xa3, 0x4e,
	0x3f, 0x0c, 0xe9, 0x13, 0x84, 0x94, 0x8d, 0xd1, 0x1d, 0xdc, 0x1c, 0xf7, 0xc3, 0xd0, 0x6c, 0x11,
	0x62, 0x70, 0xfb, 0xba, 0xb1, 0x1e, 0xd2, 0x6d, 0x04, 0xa1, 0xb6, 0x59, 0x3a, 0x63, 0x23, 0x2f,
	0x60, 0x15, 0x51, 0x8a, 0x77, 0x3d, 0x16, 0x86, 0x91, 0x6f, 0xf5, 0x1a, 0x08, 0x5d, 0x36, 0xae,
	0x16, 0xef, 0xee, 0x1b, 0x07, 0x8a, 0x7e, 0x02, 0x64, 0x04, 0xef, 0x48, 0xce, 0x2d, 0xfa, 0x29,
	0xa2, 0x6b, 0x09, 0xfa, 0x58, 0x72, 0x6e, 0xc0, 0xce, 0x31, 0x90, 0xf4, 0xe9, 0x72, 0xf9, 0x4d,
	0x9f, 0x2b, 0x7d, 0xa6, 0x2e, 0xc9, 0x4b, 0x58, 0x90, 0xf6, 0x44, 0x0b, 0x8d, 0xd9, 0xdd, 0x72,
	0x73, 0x6d, 0xf2, 0xa5, 0x33, 0xef, 0xa7, 0x9b, 0xc2, 0x9c, 0x57, 0x50, 0x1d, 0x39, 0x34, 0xd3,
	0x7d, 0x45, 0x3e, 0x9e, 0x7c, 0xa7, 0xcd, 0x2b, 0x3b, 0x9f, 0x7f, 0xa5, 0x9d, 0xdf, 0x0b, 0xb0,
	0x9c, 0xc5, 0xa0, 0xe2, 0xa8, 0xa7, 0x38, 0xf9, 0x0c, 0x80, 0xc5, 0xc2, 0x53, 0xa8, 0x85, 0xc4,
	0xea, 0x68, 0x0d, 0xf6, 0x63, 0x61, 0xef, 0x70, 0x17, 0x59, 0xfa, 0x49, 0xf6, 0xc7, 0xae, 0x4b,
	0x58, 0xf6, 0x91, 0xa6, 0x53, 0x42, 0xb7, 0xec, 0x51, 0x20, 0xf6, 0xec, 0x9c, 0xc1, 0x6a, 0x3e,
	0x0e, 0x53, 0x8c, 0x2f, 0xa1, 0x24, 0x93, 0x63, 0x52, 0x8d, 0xfa, 0xa4, 0x64, 0x4a, 0x70, 0x47,
	0x58, 0xe7, 0x37, 0x78, 0x94, 0x7a, 0x8f, 0x78, 0xc8, 0x35, 0x4f, 0x0a, 0xfc, 0xa1, 0x7e, 0x74,
	0x9c, 0xb7, 0x40, 0xa7, 0x06, 0x60, 0x92, 0x7a, 0x95, 0xef, 0xf0, 0xf6, 0xa4, 0xec, 0x3f, 0x48,
	0x59, 0xab, 0x7f, 0x80, 0xc7, 0x79, 0x44, 0x56, 0xac, 0x7c, 0xdf, 0x66, 0xef, 0xe9, 0x9b, 0xf3,
	0x6b, 0x36, 0x80, 0xdf, 0x71, 0xfd, 0xa1, 0x4b, 0x74, 0x9e, 0xf5, 0x28, 0xbb, 0xdd, 0x36, 0x3d,
	0x57, 0x9f, 0xcd, 0x49, 0xcd, 0x8c, 0x91, 0x15, 0xa7, 0x06, 0x95, 0xf1, 0x29, 0x53, 0xce, 0x9f,
	0x85, 0x6c, 0xaa, 0x90, 0xf0, 0x6f, 0x07, 0xfc, 0x39, 0x14, 0x55, 0xcc, 0xfd, 0x24, 0xc5, 0xbb,
	0x16, 0x12, 0x31, 0xe4, 0x25, 0xcc, 0x27, 0xc2, 0xb3, 0xf7, 0xec, 0x40, 0x82, 0x23, 0x2f, 0x60,
	0xce, 0x7c, 0x29, 0xfc, 0x9f, 0xa4, 0xdc, 0x5c, 0x9f, 0x4e, 0x50, 0xae, 0x45, 0x39, 0x2d, 0x58,
	0x9b, 0x92, 0x94, 0x1d, 0xac, 0xfc, 0xb6, 0x6c, 0xdd, 0x51, 0xb9, 0xfc, 0xc2, 0x34, 0xff, 0x9a,
	0x81, 0x52, 0x8a, 0x20, 0xe7, 0xd9, 0x83, 0x72, 0x28, 0x39, 0xd3, 0x9c, 0x6c, 0x4e, 0xdb, 0xba,
	0xb4, 0x61, 0xf5, 0xad, 0xbb, 0x77, 0xf2, 0x4c, 0x5d, 0x3a, 0x0f, 0xc6, 0x05, 0xdf, 0xc6, 0xc1,
	0x7f, 0x20, 0xf8, 0x73, 0x26, 0x68, 0xf7, 0x80, 0x38, 0xf7, 0xec, 0x90, 0x91, 0xfd, 0xdf, 0xdd,
	0x98, 0x71, 0x71, 0x17, 0xca, 0x63, 0xc5, 0x22, 0xdb, 0xef, 0x9b, 0x3e, 0x23, 0xdb, 0x78, 0x6f,
	0x91, 0x51, 0xf3, 0x00, 0x7e, 0x2a, 0x5d, 0xb1, 0x10, 0x7f, 0xe0, 0xdb, 0xf3, 0xf8, 0xe7, 0xf3,
	0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x16, 0x44, 0x43, 0xc2, 0xad, 0x0b, 0x00, 0x00,
}
