// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vmotion.proto

package halproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type VmotionMessageType int32

const (
	VmotionMessageType_VMOTION_MSG_TYPE_INITIATE         VmotionMessageType = 0
	VmotionMessageType_VMOTION_MSG_TYPE_INITIATE_DONE    VmotionMessageType = 1
	VmotionMessageType_VMOTION_MSG_TYPE_STATE_SYNC_START VmotionMessageType = 2
	VmotionMessageType_VMOTION_MSG_TYPE_STATE_SYNC       VmotionMessageType = 3
	VmotionMessageType_VMOTION_MSG_TYPE_STATE_SYNC_END   VmotionMessageType = 4
	VmotionMessageType_VMOTION_MSG_TYPE_END              VmotionMessageType = 5
	VmotionMessageType_VMOTION_MSG_TYPE_END_ACK          VmotionMessageType = 6
)

var VmotionMessageType_name = map[int32]string{
	0: "VMOTION_MSG_TYPE_INITIATE",
	1: "VMOTION_MSG_TYPE_INITIATE_DONE",
	2: "VMOTION_MSG_TYPE_STATE_SYNC_START",
	3: "VMOTION_MSG_TYPE_STATE_SYNC",
	4: "VMOTION_MSG_TYPE_STATE_SYNC_END",
	5: "VMOTION_MSG_TYPE_END",
	6: "VMOTION_MSG_TYPE_END_ACK",
}
var VmotionMessageType_value = map[string]int32{
	"VMOTION_MSG_TYPE_INITIATE":         0,
	"VMOTION_MSG_TYPE_INITIATE_DONE":    1,
	"VMOTION_MSG_TYPE_STATE_SYNC_START": 2,
	"VMOTION_MSG_TYPE_STATE_SYNC":       3,
	"VMOTION_MSG_TYPE_STATE_SYNC_END":   4,
	"VMOTION_MSG_TYPE_END":              5,
	"VMOTION_MSG_TYPE_END_ACK":          6,
}

func (x VmotionMessageType) String() string {
	return proto.EnumName(VmotionMessageType_name, int32(x))
}
func (VmotionMessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor33, []int{0} }

type VmotionMessageStatus int32

const (
	VmotionMessageStatus_STATUS_OK  VmotionMessageStatus = 0
	VmotionMessageStatus_STATUS_ERR VmotionMessageStatus = 1
)

var VmotionMessageStatus_name = map[int32]string{
	0: "STATUS_OK",
	1: "STATUS_ERR",
}
var VmotionMessageStatus_value = map[string]int32{
	"STATUS_OK":  0,
	"STATUS_ERR": 1,
}

func (x VmotionMessageStatus) String() string {
	return proto.EnumName(VmotionMessageStatus_name, int32(x))
}
func (VmotionMessageStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor33, []int{1} }

type VmotionInitiate struct {
	MacAddress uint64 `protobuf:"varint,1,opt,name=mac_address,json=macAddress" json:"mac_address,omitempty"`
}

func (m *VmotionInitiate) Reset()                    { *m = VmotionInitiate{} }
func (m *VmotionInitiate) String() string            { return proto.CompactTextString(m) }
func (*VmotionInitiate) ProtoMessage()               {}
func (*VmotionInitiate) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{0} }

func (m *VmotionInitiate) GetMacAddress() uint64 {
	if m != nil {
		return m.MacAddress
	}
	return 0
}

type VmotionInitiateDone struct {
	Status VmotionMessageStatus `protobuf:"varint,1,opt,name=status,enum=vmotion.VmotionMessageStatus" json:"status,omitempty"`
}

func (m *VmotionInitiateDone) Reset()                    { *m = VmotionInitiateDone{} }
func (m *VmotionInitiateDone) String() string            { return proto.CompactTextString(m) }
func (*VmotionInitiateDone) ProtoMessage()               {}
func (*VmotionInitiateDone) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{1} }

func (m *VmotionInitiateDone) GetStatus() VmotionMessageStatus {
	if m != nil {
		return m.Status
	}
	return VmotionMessageStatus_STATUS_OK
}

type VmotionStateSyncStart struct {
}

func (m *VmotionStateSyncStart) Reset()                    { *m = VmotionStateSyncStart{} }
func (m *VmotionStateSyncStart) String() string            { return proto.CompactTextString(m) }
func (*VmotionStateSyncStart) ProtoMessage()               {}
func (*VmotionStateSyncStart) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{2} }

type VmotionStateSync struct {
	Response []*SessionGetResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *VmotionStateSync) Reset()                    { *m = VmotionStateSync{} }
func (m *VmotionStateSync) String() string            { return proto.CompactTextString(m) }
func (*VmotionStateSync) ProtoMessage()               {}
func (*VmotionStateSync) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{3} }

func (m *VmotionStateSync) GetResponse() []*SessionGetResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type VmotionStateSyncEnd struct {
	Status VmotionMessageStatus `protobuf:"varint,1,opt,name=status,enum=vmotion.VmotionMessageStatus" json:"status,omitempty"`
}

func (m *VmotionStateSyncEnd) Reset()                    { *m = VmotionStateSyncEnd{} }
func (m *VmotionStateSyncEnd) String() string            { return proto.CompactTextString(m) }
func (*VmotionStateSyncEnd) ProtoMessage()               {}
func (*VmotionStateSyncEnd) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{4} }

func (m *VmotionStateSyncEnd) GetStatus() VmotionMessageStatus {
	if m != nil {
		return m.Status
	}
	return VmotionMessageStatus_STATUS_OK
}

type VmotionEnd struct {
}

func (m *VmotionEnd) Reset()                    { *m = VmotionEnd{} }
func (m *VmotionEnd) String() string            { return proto.CompactTextString(m) }
func (*VmotionEnd) ProtoMessage()               {}
func (*VmotionEnd) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{5} }

type VmotionEndAck struct {
}

func (m *VmotionEndAck) Reset()                    { *m = VmotionEndAck{} }
func (m *VmotionEndAck) String() string            { return proto.CompactTextString(m) }
func (*VmotionEndAck) ProtoMessage()               {}
func (*VmotionEndAck) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{6} }

type VmotionMessage struct {
	Type VmotionMessageType `protobuf:"varint,1,opt,name=type,enum=vmotion.VmotionMessageType" json:"type,omitempty"`
	// Types that are valid to be assigned to Msg:
	//	*VmotionMessage_Init
	//	*VmotionMessage_InitDone
	//	*VmotionMessage_StateSyncStart
	//	*VmotionMessage_StateSync
	//	*VmotionMessage_StateSyncEnd
	//	*VmotionMessage_End
	//	*VmotionMessage_EndAck
	Msg isVmotionMessage_Msg `protobuf_oneof:"msg"`
}

func (m *VmotionMessage) Reset()                    { *m = VmotionMessage{} }
func (m *VmotionMessage) String() string            { return proto.CompactTextString(m) }
func (*VmotionMessage) ProtoMessage()               {}
func (*VmotionMessage) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{7} }

type isVmotionMessage_Msg interface{ isVmotionMessage_Msg() }

type VmotionMessage_Init struct {
	Init *VmotionInitiate `protobuf:"bytes,2,opt,name=init,oneof"`
}
type VmotionMessage_InitDone struct {
	InitDone *VmotionInitiateDone `protobuf:"bytes,3,opt,name=init_done,json=initDone,oneof"`
}
type VmotionMessage_StateSyncStart struct {
	StateSyncStart *VmotionStateSyncStart `protobuf:"bytes,4,opt,name=state_sync_start,json=stateSyncStart,oneof"`
}
type VmotionMessage_StateSync struct {
	StateSync *VmotionStateSync `protobuf:"bytes,5,opt,name=state_sync,json=stateSync,oneof"`
}
type VmotionMessage_StateSyncEnd struct {
	StateSyncEnd *VmotionStateSyncEnd `protobuf:"bytes,6,opt,name=state_sync_end,json=stateSyncEnd,oneof"`
}
type VmotionMessage_End struct {
	End *VmotionEnd `protobuf:"bytes,7,opt,name=end,oneof"`
}
type VmotionMessage_EndAck struct {
	EndAck *VmotionEndAck `protobuf:"bytes,8,opt,name=end_ack,json=endAck,oneof"`
}

func (*VmotionMessage_Init) isVmotionMessage_Msg()           {}
func (*VmotionMessage_InitDone) isVmotionMessage_Msg()       {}
func (*VmotionMessage_StateSyncStart) isVmotionMessage_Msg() {}
func (*VmotionMessage_StateSync) isVmotionMessage_Msg()      {}
func (*VmotionMessage_StateSyncEnd) isVmotionMessage_Msg()   {}
func (*VmotionMessage_End) isVmotionMessage_Msg()            {}
func (*VmotionMessage_EndAck) isVmotionMessage_Msg()         {}

func (m *VmotionMessage) GetMsg() isVmotionMessage_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *VmotionMessage) GetType() VmotionMessageType {
	if m != nil {
		return m.Type
	}
	return VmotionMessageType_VMOTION_MSG_TYPE_INITIATE
}

func (m *VmotionMessage) GetInit() *VmotionInitiate {
	if x, ok := m.GetMsg().(*VmotionMessage_Init); ok {
		return x.Init
	}
	return nil
}

func (m *VmotionMessage) GetInitDone() *VmotionInitiateDone {
	if x, ok := m.GetMsg().(*VmotionMessage_InitDone); ok {
		return x.InitDone
	}
	return nil
}

func (m *VmotionMessage) GetStateSyncStart() *VmotionStateSyncStart {
	if x, ok := m.GetMsg().(*VmotionMessage_StateSyncStart); ok {
		return x.StateSyncStart
	}
	return nil
}

func (m *VmotionMessage) GetStateSync() *VmotionStateSync {
	if x, ok := m.GetMsg().(*VmotionMessage_StateSync); ok {
		return x.StateSync
	}
	return nil
}

func (m *VmotionMessage) GetStateSyncEnd() *VmotionStateSyncEnd {
	if x, ok := m.GetMsg().(*VmotionMessage_StateSyncEnd); ok {
		return x.StateSyncEnd
	}
	return nil
}

func (m *VmotionMessage) GetEnd() *VmotionEnd {
	if x, ok := m.GetMsg().(*VmotionMessage_End); ok {
		return x.End
	}
	return nil
}

func (m *VmotionMessage) GetEndAck() *VmotionEndAck {
	if x, ok := m.GetMsg().(*VmotionMessage_EndAck); ok {
		return x.EndAck
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*VmotionMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _VmotionMessage_OneofMarshaler, _VmotionMessage_OneofUnmarshaler, _VmotionMessage_OneofSizer, []interface{}{
		(*VmotionMessage_Init)(nil),
		(*VmotionMessage_InitDone)(nil),
		(*VmotionMessage_StateSyncStart)(nil),
		(*VmotionMessage_StateSync)(nil),
		(*VmotionMessage_StateSyncEnd)(nil),
		(*VmotionMessage_End)(nil),
		(*VmotionMessage_EndAck)(nil),
	}
}

func _VmotionMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*VmotionMessage)
	// msg
	switch x := m.Msg.(type) {
	case *VmotionMessage_Init:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Init); err != nil {
			return err
		}
	case *VmotionMessage_InitDone:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InitDone); err != nil {
			return err
		}
	case *VmotionMessage_StateSyncStart:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StateSyncStart); err != nil {
			return err
		}
	case *VmotionMessage_StateSync:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StateSync); err != nil {
			return err
		}
	case *VmotionMessage_StateSyncEnd:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StateSyncEnd); err != nil {
			return err
		}
	case *VmotionMessage_End:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.End); err != nil {
			return err
		}
	case *VmotionMessage_EndAck:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EndAck); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VmotionMessage.Msg has unexpected type %T", x)
	}
	return nil
}

func _VmotionMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*VmotionMessage)
	switch tag {
	case 2: // msg.init
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VmotionInitiate)
		err := b.DecodeMessage(msg)
		m.Msg = &VmotionMessage_Init{msg}
		return true, err
	case 3: // msg.init_done
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VmotionInitiateDone)
		err := b.DecodeMessage(msg)
		m.Msg = &VmotionMessage_InitDone{msg}
		return true, err
	case 4: // msg.state_sync_start
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VmotionStateSyncStart)
		err := b.DecodeMessage(msg)
		m.Msg = &VmotionMessage_StateSyncStart{msg}
		return true, err
	case 5: // msg.state_sync
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VmotionStateSync)
		err := b.DecodeMessage(msg)
		m.Msg = &VmotionMessage_StateSync{msg}
		return true, err
	case 6: // msg.state_sync_end
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VmotionStateSyncEnd)
		err := b.DecodeMessage(msg)
		m.Msg = &VmotionMessage_StateSyncEnd{msg}
		return true, err
	case 7: // msg.end
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VmotionEnd)
		err := b.DecodeMessage(msg)
		m.Msg = &VmotionMessage_End{msg}
		return true, err
	case 8: // msg.end_ack
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VmotionEndAck)
		err := b.DecodeMessage(msg)
		m.Msg = &VmotionMessage_EndAck{msg}
		return true, err
	default:
		return false, nil
	}
}

func _VmotionMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*VmotionMessage)
	// msg
	switch x := m.Msg.(type) {
	case *VmotionMessage_Init:
		s := proto.Size(x.Init)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *VmotionMessage_InitDone:
		s := proto.Size(x.InitDone)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *VmotionMessage_StateSyncStart:
		s := proto.Size(x.StateSyncStart)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *VmotionMessage_StateSync:
		s := proto.Size(x.StateSync)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *VmotionMessage_StateSyncEnd:
		s := proto.Size(x.StateSyncEnd)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *VmotionMessage_End:
		s := proto.Size(x.End)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *VmotionMessage_EndAck:
		s := proto.Size(x.EndAck)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*VmotionInitiate)(nil), "halproto.VmotionInitiate")
	proto.RegisterType((*VmotionInitiateDone)(nil), "halproto.VmotionInitiateDone")
	proto.RegisterType((*VmotionStateSyncStart)(nil), "halproto.VmotionStateSyncStart")
	proto.RegisterType((*VmotionStateSync)(nil), "halproto.VmotionStateSync")
	proto.RegisterType((*VmotionStateSyncEnd)(nil), "halproto.VmotionStateSyncEnd")
	proto.RegisterType((*VmotionEnd)(nil), "halproto.VmotionEnd")
	proto.RegisterType((*VmotionEndAck)(nil), "halproto.VmotionEndAck")
	proto.RegisterType((*VmotionMessage)(nil), "halproto.VmotionMessage")
	proto.RegisterEnum("halproto.VmotionMessageType", VmotionMessageType_name, VmotionMessageType_value)
	proto.RegisterEnum("halproto.VmotionMessageStatus", VmotionMessageStatus_name, VmotionMessageStatus_value)
}

func init() { proto.RegisterFile("vmotion.proto", fileDescriptor33) }

var fileDescriptor33 = []byte{
	// 552 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0x5b, 0x6f, 0xda, 0x3e,
	0x18, 0xc6, 0x93, 0x86, 0x72, 0x78, 0x29, 0x34, 0x72, 0xfb, 0xff, 0x2f, 0x2d, 0x6d, 0x61, 0x99,
	0xa6, 0xa1, 0x5e, 0x30, 0x8d, 0xa9, 0x9a, 0xb4, 0x5d, 0xd1, 0x12, 0x35, 0x8c, 0x01, 0x93, 0x93,
	0x55, 0xea, 0x6e, 0xac, 0x2c, 0xb1, 0x3a, 0xc4, 0x70, 0x10, 0xf6, 0x26, 0xf1, 0x69, 0xf7, 0x45,
	0x76, 0x31, 0xd9, 0x09, 0x94, 0x63, 0x2f, 0x76, 0xe5, 0xc3, 0xfb, 0x7b, 0x1e, 0xbf, 0xf6, 0xa3,
	0x04, 0x4a, 0xbf, 0xc6, 0xb1, 0x18, 0xc6, 0xac, 0x31, 0x99, 0xc6, 0x22, 0x46, 0xb9, 0x74, 0x79,
	0x5a, 0x14, 0xb3, 0x09, 0xe5, 0xc9, 0xee, 0x69, 0x89, 0x53, 0xce, 0x17, 0x90, 0xdd, 0x84, 0xc3,
	0xbb, 0x04, 0xeb, 0xb0, 0xa1, 0x18, 0x06, 0x82, 0xa2, 0x2a, 0x14, 0xc7, 0x41, 0x48, 0x82, 0x28,
	0x9a, 0x52, 0xce, 0x2d, 0xbd, 0xa6, 0xd7, 0x33, 0x18, 0xc6, 0x41, 0xd8, 0x4a, 0x76, 0xec, 0x4f,
	0x70, 0xb4, 0xa6, 0x69, 0xc7, 0x8c, 0xa2, 0x2b, 0xc8, 0x72, 0x11, 0x88, 0x9f, 0x89, 0xa4, 0xdc,
	0x3c, 0x6f, 0xcc, 0xfb, 0x49, 0xe9, 0x1e, 0xe5, 0x3c, 0x78, 0xa0, 0x9e, 0x82, 0x70, 0x0a, 0xdb,
	0xcf, 0xe0, 0xbf, 0xb4, 0x2e, 0x0b, 0xd4, 0x9b, 0xb1, 0xd0, 0x13, 0xc1, 0x54, 0xd8, 0x5d, 0x30,
	0xd7, 0x0b, 0xe8, 0x1d, 0xe4, 0xa7, 0x94, 0x4f, 0x62, 0xc6, 0xa9, 0xa5, 0xd7, 0x8c, 0x7a, 0xb1,
	0x59, 0x69, 0xcc, 0x2f, 0xe4, 0x25, 0xe3, 0x2d, 0x15, 0x38, 0x45, 0xf0, 0x02, 0x5e, 0xea, 0x79,
	0x61, 0xe6, 0xb0, 0xe8, 0x5f, 0x7b, 0x3e, 0x00, 0x48, 0xeb, 0x0e, 0x8b, 0xec, 0x43, 0x28, 0x3d,
	0xae, 0x5a, 0xe1, 0xc8, 0xfe, 0x6d, 0x40, 0x79, 0x55, 0x8f, 0x5e, 0x43, 0x46, 0xa6, 0x90, 0x1e,
	0x53, 0xd9, 0x71, 0x8c, 0x3f, 0x9b, 0x50, 0xac, 0x40, 0xd4, 0x80, 0xcc, 0x90, 0x0d, 0x85, 0xb5,
	0x57, 0xd3, 0xeb, 0xc5, 0xa6, 0xb5, 0x2e, 0x98, 0xbf, 0xbc, 0xab, 0x61, 0xc5, 0xa1, 0x0f, 0x50,
	0x90, 0x23, 0x89, 0x62, 0x46, 0x2d, 0x43, 0x89, 0xce, 0x76, 0x89, 0x64, 0x5c, 0xae, 0x86, 0xf3,
	0x52, 0xa0, 0xa2, 0xfb, 0x08, 0xa6, 0xbc, 0x19, 0x25, 0x7c, 0xc6, 0x42, 0xc2, 0xe5, 0xf3, 0x5b,
	0x19, 0xe5, 0x71, 0xb1, 0xee, 0xb1, 0x1a, 0x92, 0xab, 0xe1, 0x32, 0x5f, 0xd9, 0x41, 0xef, 0x01,
	0x1e, 0xbd, 0xac, 0x7d, 0xe5, 0x72, 0xb2, 0xd3, 0xc5, 0xd5, 0x70, 0x61, 0x61, 0x80, 0xda, 0x50,
	0x5e, 0xea, 0x83, 0xb2, 0xc8, 0xca, 0x6e, 0xbf, 0xc9, 0x72, 0x88, 0xae, 0x86, 0x0f, 0xf8, 0x72,
	0xa8, 0xaf, 0xc0, 0x90, 0xd2, 0x9c, 0x92, 0x1e, 0xad, 0x4b, 0x13, 0x85, 0x24, 0xd0, 0x1b, 0xc8,
	0x51, 0x16, 0x91, 0x20, 0x1c, 0x59, 0x79, 0x05, 0xff, 0xbf, 0x05, 0x6e, 0x85, 0x23, 0x57, 0xc3,
	0x59, 0xaa, 0x66, 0xd7, 0xfb, 0x60, 0x8c, 0xf9, 0xc3, 0xe5, 0x1f, 0x1d, 0xd0, 0x66, 0x74, 0xe8,
	0x1c, 0x4e, 0xee, 0x7a, 0x03, 0xbf, 0x33, 0xe8, 0x93, 0x9e, 0x77, 0x4b, 0xfc, 0xfb, 0xcf, 0x0e,
	0xe9, 0xf4, 0x3b, 0x7e, 0xa7, 0xe5, 0x3b, 0xa6, 0x86, 0x6c, 0xb8, 0xd8, 0x59, 0x26, 0xed, 0x41,
	0xdf, 0x31, 0x75, 0xf4, 0x12, 0x9e, 0x6f, 0x30, 0x9e, 0x2f, 0x01, 0xef, 0xbe, 0x7f, 0x23, 0xa7,
	0xd8, 0x37, 0xf7, 0x50, 0x15, 0x2a, 0x4f, 0x60, 0xa6, 0x81, 0x5e, 0x40, 0xf5, 0x29, 0x1f, 0xa7,
	0xdf, 0x36, 0x33, 0xc8, 0x82, 0xe3, 0x0d, 0x48, 0x56, 0xf6, 0xd1, 0x19, 0x58, 0xdb, 0x2a, 0xa4,
	0x75, 0xd3, 0x35, 0xb3, 0x97, 0x57, 0x70, 0xbc, 0xed, 0xfb, 0x40, 0x25, 0x28, 0xc8, 0x33, 0xbe,
	0x78, 0x64, 0xd0, 0x35, 0x35, 0x54, 0x06, 0x48, 0x97, 0x0e, 0xc6, 0xa6, 0x7e, 0x0d, 0x5f, 0xf3,
	0xdf, 0x83, 0x1f, 0xea, 0xc7, 0xf3, 0x2d, 0xab, 0x86, 0xb7, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x28, 0x24, 0xc4, 0x4e, 0xb5, 0x04, 0x00, 0x00,
}
