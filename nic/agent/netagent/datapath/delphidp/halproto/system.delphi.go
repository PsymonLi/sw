// Code generated by protoc-gen-go. DO NOT EDIT.
// source: system.proto

package halproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ApiCounter int32

const (
	ApiCounter_API_COUNTER_NONE                                    ApiCounter = 0
	ApiCounter_API_COUNTER_VRF_CREATE                              ApiCounter = 1
	ApiCounter_API_COUNTER_VRF_UPDATE                              ApiCounter = 2
	ApiCounter_API_COUNTER_VRF_DELETE                              ApiCounter = 3
	ApiCounter_API_COUNTER_VRF_GET                                 ApiCounter = 4
	ApiCounter_API_COUNTER_ACL_CREATE                              ApiCounter = 5
	ApiCounter_API_COUNTER_ACL_UPDATE                              ApiCounter = 6
	ApiCounter_API_COUNTER_ACL_DELETE                              ApiCounter = 7
	ApiCounter_API_COUNTER_ACL_GET                                 ApiCounter = 8
	ApiCounter_API_COUNTER_CPUCB_CREATE                            ApiCounter = 9
	ApiCounter_API_COUNTER_CPUCB_UPDATE                            ApiCounter = 10
	ApiCounter_API_COUNTER_CPUCB_DELETE                            ApiCounter = 11
	ApiCounter_API_COUNTER_CPUCB_GET                               ApiCounter = 12
	ApiCounter_API_COUNTER_CRYPTOAPI_INVOKE                        ApiCounter = 13
	ApiCounter_API_COUNTER_CRYPTOKEY_CREATE                        ApiCounter = 14
	ApiCounter_API_COUNTER_CRYPTOKEY_UPDATE                        ApiCounter = 15
	ApiCounter_API_COUNTER_CRYPTOKEY_DELETE                        ApiCounter = 16
	ApiCounter_API_COUNTER_CRYPTOKEY_READ                          ApiCounter = 17
	ApiCounter_API_COUNTER_DESCRAOL_GET                            ApiCounter = 18
	ApiCounter_API_COUNTER_ENDPOINT_CREATE                         ApiCounter = 19
	ApiCounter_API_COUNTER_ENDPOINT_UPDATE                         ApiCounter = 20
	ApiCounter_API_COUNTER_ENDPOINT_DELETE                         ApiCounter = 21
	ApiCounter_API_COUNTER_ENDPOINT_GET                            ApiCounter = 22
	ApiCounter_API_COUNTER_GFT_EXACT_MATCH_PROFILE_CREATE          ApiCounter = 23
	ApiCounter_API_COUNTER_GFT_HEADER_TRANSPOSITION_PROFILE_CREATE ApiCounter = 24
	ApiCounter_API_COUNTER_GFT_EXACT_MATCH_FLOW_ENTRY_CREATE       ApiCounter = 25
	ApiCounter_API_COUNTER_GETPROGRAM_ADDRESS                      ApiCounter = 26
	ApiCounter_API_COUNTER_ALLOCHBM_ADDRESS                        ApiCounter = 27
	ApiCounter_API_COUNTER_CONFIGURELIF_BDF                        ApiCounter = 28
	ApiCounter_API_COUNTER_IPSECCB_CREATE                          ApiCounter = 29
	ApiCounter_API_COUNTER_IPSECCB_UPDATE                          ApiCounter = 30
	ApiCounter_API_COUNTER_IPSECCB_DELETE                          ApiCounter = 31
	ApiCounter_API_COUNTER_IPSECCB_GET                             ApiCounter = 32
	ApiCounter_API_COUNTER_L2SEGMENT_CREATE                        ApiCounter = 33
	ApiCounter_API_COUNTER_L2SEGMENT_UPDATE                        ApiCounter = 34
	ApiCounter_API_COUNTER_L2SEGMENT_DELETE                        ApiCounter = 35
	ApiCounter_API_COUNTER_L2SEGMENT_GET                           ApiCounter = 36
	ApiCounter_API_COUNTER_L4LBSERVICE_CREATE                      ApiCounter = 37
	ApiCounter_API_COUNTER_MULTICASTENTRY_CREATE                   ApiCounter = 38
	ApiCounter_API_COUNTER_MULTICASTENTRY_UPDATE                   ApiCounter = 39
	ApiCounter_API_COUNTER_MULTICASTENTRY_DELETE                   ApiCounter = 40
	ApiCounter_API_COUNTER_MULTICASTENTRY_GET                      ApiCounter = 41
	ApiCounter_API_COUNTER_SECURITYPROFILE_CREATE                  ApiCounter = 42
	ApiCounter_API_COUNTER_SECURITYPROFILE_UPDATE                  ApiCounter = 43
	ApiCounter_API_COUNTER_SECURITYPROFILE_DELETE                  ApiCounter = 44
	ApiCounter_API_COUNTER_SECURITYPROFILE_GET                     ApiCounter = 45
	ApiCounter_API_COUNTER_SECURITYGROUPPOLICY_CREATE              ApiCounter = 46
	ApiCounter_API_COUNTER_SECURITYGROUPPOLICY_UPDATE              ApiCounter = 47
	ApiCounter_API_COUNTER_SECURITYGROUPPOLICY_DELETE              ApiCounter = 48
	ApiCounter_API_COUNTER_SECURITYGROUPPOLICY_GET                 ApiCounter = 49
	ApiCounter_API_COUNTER_SECURITYGROUP_CREATE                    ApiCounter = 50
	ApiCounter_API_COUNTER_SECURITYGROUP_UPDATE                    ApiCounter = 51
	ApiCounter_API_COUNTER_SECURITYGROUP_DELETE                    ApiCounter = 52
	ApiCounter_API_COUNTER_SECURITYGROUP_GET                       ApiCounter = 53
	ApiCounter_API_COUNTER_DOSPOLICY_CREATE                        ApiCounter = 54
	ApiCounter_API_COUNTER_DOSPOLICY_UPDATE                        ApiCounter = 55
	ApiCounter_API_COUNTER_DOSPOLICY_DELETE                        ApiCounter = 56
	ApiCounter_API_COUNTER_DOSPOLICY_GET                           ApiCounter = 57
	ApiCounter_API_COUNTER_PROXYCCB_CREATE                         ApiCounter = 58
	ApiCounter_API_COUNTER_PROXYCCB_UPDATE                         ApiCounter = 59
	ApiCounter_API_COUNTER_PROXYCCB_DELETE                         ApiCounter = 60
	ApiCounter_API_COUNTER_PROXYCCB_GET                            ApiCounter = 61
	ApiCounter_API_COUNTER_PROXYRCB_CREATE                         ApiCounter = 62
	ApiCounter_API_COUNTER_PROXYRCB_UPDATE                         ApiCounter = 63
	ApiCounter_API_COUNTER_PROXYRCB_DELETE                         ApiCounter = 64
	ApiCounter_API_COUNTER_PROXYRCB_GET                            ApiCounter = 65
	ApiCounter_API_COUNTER_QOSCLASS_CREATE                         ApiCounter = 66
	ApiCounter_API_COUNTER_QOSCLASS_UPDATE                         ApiCounter = 67
	ApiCounter_API_COUNTER_QOSCLASS_DELETE                         ApiCounter = 68
	ApiCounter_API_COUNTER_QOSCLASS_GET                            ApiCounter = 69
	ApiCounter_API_COUNTER_COPP_UPDATE                             ApiCounter = 70
	ApiCounter_API_COUNTER_COPP_GET                                ApiCounter = 71
	ApiCounter_API_COUNTER_RAWCCB_CREATE                           ApiCounter = 72
	ApiCounter_API_COUNTER_RAWCCB_UPDATE                           ApiCounter = 73
	ApiCounter_API_COUNTER_RAWCCB_DELETE                           ApiCounter = 74
	ApiCounter_API_COUNTER_RAWCCB_GET                              ApiCounter = 75
	ApiCounter_API_COUNTER_TCPCB_CREATE                            ApiCounter = 76
	ApiCounter_API_COUNTER_TCPCB_UPDATE                            ApiCounter = 77
	ApiCounter_API_COUNTER_TCPCB_DELETE                            ApiCounter = 78
	ApiCounter_API_COUNTER_TCPCB_GET                               ApiCounter = 79
	ApiCounter_API_COUNTER_TLSCB_CREATE                            ApiCounter = 80
	ApiCounter_API_COUNTER_TLSCB_UPDATE                            ApiCounter = 81
	ApiCounter_API_COUNTER_TLSCB_DELETE                            ApiCounter = 82
	ApiCounter_API_COUNTER_TLSCB_GET                               ApiCounter = 83
	ApiCounter_API_COUNTER_MAX                                     ApiCounter = 84
)

var ApiCounter_name = map[int32]string{
	0:  "API_COUNTER_NONE",
	1:  "API_COUNTER_VRF_CREATE",
	2:  "API_COUNTER_VRF_UPDATE",
	3:  "API_COUNTER_VRF_DELETE",
	4:  "API_COUNTER_VRF_GET",
	5:  "API_COUNTER_ACL_CREATE",
	6:  "API_COUNTER_ACL_UPDATE",
	7:  "API_COUNTER_ACL_DELETE",
	8:  "API_COUNTER_ACL_GET",
	9:  "API_COUNTER_CPUCB_CREATE",
	10: "API_COUNTER_CPUCB_UPDATE",
	11: "API_COUNTER_CPUCB_DELETE",
	12: "API_COUNTER_CPUCB_GET",
	13: "API_COUNTER_CRYPTOAPI_INVOKE",
	14: "API_COUNTER_CRYPTOKEY_CREATE",
	15: "API_COUNTER_CRYPTOKEY_UPDATE",
	16: "API_COUNTER_CRYPTOKEY_DELETE",
	17: "API_COUNTER_CRYPTOKEY_READ",
	18: "API_COUNTER_DESCRAOL_GET",
	19: "API_COUNTER_ENDPOINT_CREATE",
	20: "API_COUNTER_ENDPOINT_UPDATE",
	21: "API_COUNTER_ENDPOINT_DELETE",
	22: "API_COUNTER_ENDPOINT_GET",
	23: "API_COUNTER_GFT_EXACT_MATCH_PROFILE_CREATE",
	24: "API_COUNTER_GFT_HEADER_TRANSPOSITION_PROFILE_CREATE",
	25: "API_COUNTER_GFT_EXACT_MATCH_FLOW_ENTRY_CREATE",
	26: "API_COUNTER_GETPROGRAM_ADDRESS",
	27: "API_COUNTER_ALLOCHBM_ADDRESS",
	28: "API_COUNTER_CONFIGURELIF_BDF",
	29: "API_COUNTER_IPSECCB_CREATE",
	30: "API_COUNTER_IPSECCB_UPDATE",
	31: "API_COUNTER_IPSECCB_DELETE",
	32: "API_COUNTER_IPSECCB_GET",
	33: "API_COUNTER_L2SEGMENT_CREATE",
	34: "API_COUNTER_L2SEGMENT_UPDATE",
	35: "API_COUNTER_L2SEGMENT_DELETE",
	36: "API_COUNTER_L2SEGMENT_GET",
	37: "API_COUNTER_L4LBSERVICE_CREATE",
	38: "API_COUNTER_MULTICASTENTRY_CREATE",
	39: "API_COUNTER_MULTICASTENTRY_UPDATE",
	40: "API_COUNTER_MULTICASTENTRY_DELETE",
	41: "API_COUNTER_MULTICASTENTRY_GET",
	42: "API_COUNTER_SECURITYPROFILE_CREATE",
	43: "API_COUNTER_SECURITYPROFILE_UPDATE",
	44: "API_COUNTER_SECURITYPROFILE_DELETE",
	45: "API_COUNTER_SECURITYPROFILE_GET",
	46: "API_COUNTER_SECURITYGROUPPOLICY_CREATE",
	47: "API_COUNTER_SECURITYGROUPPOLICY_UPDATE",
	48: "API_COUNTER_SECURITYGROUPPOLICY_DELETE",
	49: "API_COUNTER_SECURITYGROUPPOLICY_GET",
	50: "API_COUNTER_SECURITYGROUP_CREATE",
	51: "API_COUNTER_SECURITYGROUP_UPDATE",
	52: "API_COUNTER_SECURITYGROUP_DELETE",
	53: "API_COUNTER_SECURITYGROUP_GET",
	54: "API_COUNTER_DOSPOLICY_CREATE",
	55: "API_COUNTER_DOSPOLICY_UPDATE",
	56: "API_COUNTER_DOSPOLICY_DELETE",
	57: "API_COUNTER_DOSPOLICY_GET",
	58: "API_COUNTER_PROXYCCB_CREATE",
	59: "API_COUNTER_PROXYCCB_UPDATE",
	60: "API_COUNTER_PROXYCCB_DELETE",
	61: "API_COUNTER_PROXYCCB_GET",
	62: "API_COUNTER_PROXYRCB_CREATE",
	63: "API_COUNTER_PROXYRCB_UPDATE",
	64: "API_COUNTER_PROXYRCB_DELETE",
	65: "API_COUNTER_PROXYRCB_GET",
	66: "API_COUNTER_QOSCLASS_CREATE",
	67: "API_COUNTER_QOSCLASS_UPDATE",
	68: "API_COUNTER_QOSCLASS_DELETE",
	69: "API_COUNTER_QOSCLASS_GET",
	70: "API_COUNTER_COPP_UPDATE",
	71: "API_COUNTER_COPP_GET",
	72: "API_COUNTER_RAWCCB_CREATE",
	73: "API_COUNTER_RAWCCB_UPDATE",
	74: "API_COUNTER_RAWCCB_DELETE",
	75: "API_COUNTER_RAWCCB_GET",
	76: "API_COUNTER_TCPCB_CREATE",
	77: "API_COUNTER_TCPCB_UPDATE",
	78: "API_COUNTER_TCPCB_DELETE",
	79: "API_COUNTER_TCPCB_GET",
	80: "API_COUNTER_TLSCB_CREATE",
	81: "API_COUNTER_TLSCB_UPDATE",
	82: "API_COUNTER_TLSCB_DELETE",
	83: "API_COUNTER_TLSCB_GET",
	84: "API_COUNTER_MAX",
}
var ApiCounter_value = map[string]int32{
	"API_COUNTER_NONE":                                    0,
	"API_COUNTER_VRF_CREATE":                              1,
	"API_COUNTER_VRF_UPDATE":                              2,
	"API_COUNTER_VRF_DELETE":                              3,
	"API_COUNTER_VRF_GET":                                 4,
	"API_COUNTER_ACL_CREATE":                              5,
	"API_COUNTER_ACL_UPDATE":                              6,
	"API_COUNTER_ACL_DELETE":                              7,
	"API_COUNTER_ACL_GET":                                 8,
	"API_COUNTER_CPUCB_CREATE":                            9,
	"API_COUNTER_CPUCB_UPDATE":                            10,
	"API_COUNTER_CPUCB_DELETE":                            11,
	"API_COUNTER_CPUCB_GET":                               12,
	"API_COUNTER_CRYPTOAPI_INVOKE":                        13,
	"API_COUNTER_CRYPTOKEY_CREATE":                        14,
	"API_COUNTER_CRYPTOKEY_UPDATE":                        15,
	"API_COUNTER_CRYPTOKEY_DELETE":                        16,
	"API_COUNTER_CRYPTOKEY_READ":                          17,
	"API_COUNTER_DESCRAOL_GET":                            18,
	"API_COUNTER_ENDPOINT_CREATE":                         19,
	"API_COUNTER_ENDPOINT_UPDATE":                         20,
	"API_COUNTER_ENDPOINT_DELETE":                         21,
	"API_COUNTER_ENDPOINT_GET":                            22,
	"API_COUNTER_GFT_EXACT_MATCH_PROFILE_CREATE":          23,
	"API_COUNTER_GFT_HEADER_TRANSPOSITION_PROFILE_CREATE": 24,
	"API_COUNTER_GFT_EXACT_MATCH_FLOW_ENTRY_CREATE":       25,
	"API_COUNTER_GETPROGRAM_ADDRESS":                      26,
	"API_COUNTER_ALLOCHBM_ADDRESS":                        27,
	"API_COUNTER_CONFIGURELIF_BDF":                        28,
	"API_COUNTER_IPSECCB_CREATE":                          29,
	"API_COUNTER_IPSECCB_UPDATE":                          30,
	"API_COUNTER_IPSECCB_DELETE":                          31,
	"API_COUNTER_IPSECCB_GET":                             32,
	"API_COUNTER_L2SEGMENT_CREATE":                        33,
	"API_COUNTER_L2SEGMENT_UPDATE":                        34,
	"API_COUNTER_L2SEGMENT_DELETE":                        35,
	"API_COUNTER_L2SEGMENT_GET":                           36,
	"API_COUNTER_L4LBSERVICE_CREATE":                      37,
	"API_COUNTER_MULTICASTENTRY_CREATE":                   38,
	"API_COUNTER_MULTICASTENTRY_UPDATE":                   39,
	"API_COUNTER_MULTICASTENTRY_DELETE":                   40,
	"API_COUNTER_MULTICASTENTRY_GET":                      41,
	"API_COUNTER_SECURITYPROFILE_CREATE":                  42,
	"API_COUNTER_SECURITYPROFILE_UPDATE":                  43,
	"API_COUNTER_SECURITYPROFILE_DELETE":                  44,
	"API_COUNTER_SECURITYPROFILE_GET":                     45,
	"API_COUNTER_SECURITYGROUPPOLICY_CREATE":              46,
	"API_COUNTER_SECURITYGROUPPOLICY_UPDATE":              47,
	"API_COUNTER_SECURITYGROUPPOLICY_DELETE":              48,
	"API_COUNTER_SECURITYGROUPPOLICY_GET":                 49,
	"API_COUNTER_SECURITYGROUP_CREATE":                    50,
	"API_COUNTER_SECURITYGROUP_UPDATE":                    51,
	"API_COUNTER_SECURITYGROUP_DELETE":                    52,
	"API_COUNTER_SECURITYGROUP_GET":                       53,
	"API_COUNTER_DOSPOLICY_CREATE":                        54,
	"API_COUNTER_DOSPOLICY_UPDATE":                        55,
	"API_COUNTER_DOSPOLICY_DELETE":                        56,
	"API_COUNTER_DOSPOLICY_GET":                           57,
	"API_COUNTER_PROXYCCB_CREATE":                         58,
	"API_COUNTER_PROXYCCB_UPDATE":                         59,
	"API_COUNTER_PROXYCCB_DELETE":                         60,
	"API_COUNTER_PROXYCCB_GET":                            61,
	"API_COUNTER_PROXYRCB_CREATE":                         62,
	"API_COUNTER_PROXYRCB_UPDATE":                         63,
	"API_COUNTER_PROXYRCB_DELETE":                         64,
	"API_COUNTER_PROXYRCB_GET":                            65,
	"API_COUNTER_QOSCLASS_CREATE":                         66,
	"API_COUNTER_QOSCLASS_UPDATE":                         67,
	"API_COUNTER_QOSCLASS_DELETE":                         68,
	"API_COUNTER_QOSCLASS_GET":                            69,
	"API_COUNTER_COPP_UPDATE":                             70,
	"API_COUNTER_COPP_GET":                                71,
	"API_COUNTER_RAWCCB_CREATE":                           72,
	"API_COUNTER_RAWCCB_UPDATE":                           73,
	"API_COUNTER_RAWCCB_DELETE":                           74,
	"API_COUNTER_RAWCCB_GET":                              75,
	"API_COUNTER_TCPCB_CREATE":                            76,
	"API_COUNTER_TCPCB_UPDATE":                            77,
	"API_COUNTER_TCPCB_DELETE":                            78,
	"API_COUNTER_TCPCB_GET":                               79,
	"API_COUNTER_TLSCB_CREATE":                            80,
	"API_COUNTER_TLSCB_UPDATE":                            81,
	"API_COUNTER_TLSCB_DELETE":                            82,
	"API_COUNTER_TLSCB_GET":                               83,
	"API_COUNTER_MAX":                                     84,
}

func (x ApiCounter) String() string {
	return proto.EnumName(ApiCounter_name, int32(x))
}
func (ApiCounter) EnumDescriptor() ([]byte, []int) { return fileDescriptor28, []int{0} }

// BufferDropStats captures instantaneous drop counts due to buffering drops
type BufferDropReasons int32

const (
	BufferDropReasons_INTRINSIC_DROP            BufferDropReasons = 0
	BufferDropReasons_DISCARDED                 BufferDropReasons = 1
	BufferDropReasons_ADMITTED                  BufferDropReasons = 2
	BufferDropReasons_OUT_OF_CELLS_DROP         BufferDropReasons = 3
	BufferDropReasons_OUT_OF_CELLS_DROP_2       BufferDropReasons = 4
	BufferDropReasons_OUT_OF_CREDIT_DROP        BufferDropReasons = 5
	BufferDropReasons_TRUNCATION_DROP           BufferDropReasons = 6
	BufferDropReasons_PORT_DISABLED_DROP        BufferDropReasons = 7
	BufferDropReasons_COPY_TO_CPU_TAIL_DROP     BufferDropReasons = 8
	BufferDropReasons_SPAN_TAIL_DROP            BufferDropReasons = 9
	BufferDropReasons_MIN_SIZE_VIOLATION_DROP   BufferDropReasons = 10
	BufferDropReasons_ENQUEUE_ERROR_DROP        BufferDropReasons = 11
	BufferDropReasons_INVALID_PORT_DROP         BufferDropReasons = 12
	BufferDropReasons_INVALID_OUTPUT_QUEUE_DROP BufferDropReasons = 13
)

var BufferDropReasons_name = map[int32]string{
	0:  "INTRINSIC_DROP",
	1:  "DISCARDED",
	2:  "ADMITTED",
	3:  "OUT_OF_CELLS_DROP",
	4:  "OUT_OF_CELLS_DROP_2",
	5:  "OUT_OF_CREDIT_DROP",
	6:  "TRUNCATION_DROP",
	7:  "PORT_DISABLED_DROP",
	8:  "COPY_TO_CPU_TAIL_DROP",
	9:  "SPAN_TAIL_DROP",
	10: "MIN_SIZE_VIOLATION_DROP",
	11: "ENQUEUE_ERROR_DROP",
	12: "INVALID_PORT_DROP",
	13: "INVALID_OUTPUT_QUEUE_DROP",
}
var BufferDropReasons_value = map[string]int32{
	"INTRINSIC_DROP":            0,
	"DISCARDED":                 1,
	"ADMITTED":                  2,
	"OUT_OF_CELLS_DROP":         3,
	"OUT_OF_CELLS_DROP_2":       4,
	"OUT_OF_CREDIT_DROP":        5,
	"TRUNCATION_DROP":           6,
	"PORT_DISABLED_DROP":        7,
	"COPY_TO_CPU_TAIL_DROP":     8,
	"SPAN_TAIL_DROP":            9,
	"MIN_SIZE_VIOLATION_DROP":   10,
	"ENQUEUE_ERROR_DROP":        11,
	"INVALID_PORT_DROP":         12,
	"INVALID_OUTPUT_QUEUE_DROP": 13,
}

func (x BufferDropReasons) String() string {
	return proto.EnumName(BufferDropReasons_name, int32(x))
}
func (BufferDropReasons) EnumDescriptor() ([]byte, []int) { return fileDescriptor28, []int{1} }

// Table types
type TableType int32

const (
	TableType_TABLE_TYPE_NONE      TableType = 0
	TableType_TABLE_TYPE_INDEX     TableType = 1
	TableType_TABLE_TYPE_HASH      TableType = 2
	TableType_TABLE_TYPE_HASH_TCAM TableType = 3
	TableType_TABLE_TYPE_TCAM      TableType = 4
)

var TableType_name = map[int32]string{
	0: "TABLE_TYPE_NONE",
	1: "TABLE_TYPE_INDEX",
	2: "TABLE_TYPE_HASH",
	3: "TABLE_TYPE_HASH_TCAM",
	4: "TABLE_TYPE_TCAM",
}
var TableType_value = map[string]int32{
	"TABLE_TYPE_NONE":      0,
	"TABLE_TYPE_INDEX":     1,
	"TABLE_TYPE_HASH":      2,
	"TABLE_TYPE_HASH_TCAM": 3,
	"TABLE_TYPE_TCAM":      4,
}

func (x TableType) String() string {
	return proto.EnumName(TableType_name, int32(x))
}
func (TableType) EnumDescriptor() ([]byte, []int) { return fileDescriptor28, []int{2} }

// OflowFifoDropStats captures instantaneous drop counts at the overflow fifo interface
type OflowFifoDropType int32

const (
	OflowFifoDropType_OCCUPANCY_DROP                OflowFifoDropType = 0
	OflowFifoDropType_EMERGENCY_STOP_DROP           OflowFifoDropType = 1
	OflowFifoDropType_WRITE_BUFFER_ACK_FILL_UP_DROP OflowFifoDropType = 2
	OflowFifoDropType_WRITE_BUFFER_ACK_FULL_DROP    OflowFifoDropType = 3
	OflowFifoDropType_WRITE_BUFFER_FULL_DROP        OflowFifoDropType = 4
	OflowFifoDropType_CONTROL_FIFO_FULL_DROP        OflowFifoDropType = 5
)

var OflowFifoDropType_name = map[int32]string{
	0: "OCCUPANCY_DROP",
	1: "EMERGENCY_STOP_DROP",
	2: "WRITE_BUFFER_ACK_FILL_UP_DROP",
	3: "WRITE_BUFFER_ACK_FULL_DROP",
	4: "WRITE_BUFFER_FULL_DROP",
	5: "CONTROL_FIFO_FULL_DROP",
}
var OflowFifoDropType_value = map[string]int32{
	"OCCUPANCY_DROP":                0,
	"EMERGENCY_STOP_DROP":           1,
	"WRITE_BUFFER_ACK_FILL_UP_DROP": 2,
	"WRITE_BUFFER_ACK_FULL_DROP":    3,
	"WRITE_BUFFER_FULL_DROP":        4,
	"CONTROL_FIFO_FULL_DROP":        5,
}

func (x OflowFifoDropType) String() string {
	return proto.EnumName(OflowFifoDropType_name, int32(x))
}
func (OflowFifoDropType) EnumDescriptor() ([]byte, []int) { return fileDescriptor28, []int{3} }

type SystemGetType int32

const (
	SystemGetType_SYSTEM_GET_FTE_STATS      SystemGetType = 0
	SystemGetType_SYSTEM_GET_FTE_TXRX_STATS SystemGetType = 1
	SystemGetType_SYSTEM_GET_TABLE_STATS    SystemGetType = 2
	SystemGetType_SYSTEM_GET_PB_STATS       SystemGetType = 3
	SystemGetType_SYSTEM_GET_DROP_STATS     SystemGetType = 4
	SystemGetType_SYSTEM_GET_ALL_STATS      SystemGetType = 5
)

var SystemGetType_name = map[int32]string{
	0: "SYSTEM_GET_FTE_STATS",
	1: "SYSTEM_GET_FTE_TXRX_STATS",
	2: "SYSTEM_GET_TABLE_STATS",
	3: "SYSTEM_GET_PB_STATS",
	4: "SYSTEM_GET_DROP_STATS",
	5: "SYSTEM_GET_ALL_STATS",
}
var SystemGetType_value = map[string]int32{
	"SYSTEM_GET_FTE_STATS":      0,
	"SYSTEM_GET_FTE_TXRX_STATS": 1,
	"SYSTEM_GET_TABLE_STATS":    2,
	"SYSTEM_GET_PB_STATS":       3,
	"SYSTEM_GET_DROP_STATS":     4,
	"SYSTEM_GET_ALL_STATS":      5,
}

func (x SystemGetType) String() string {
	return proto.EnumName(SystemGetType_name, int32(x))
}
func (SystemGetType) EnumDescriptor() ([]byte, []int) { return fileDescriptor28, []int{4} }

type ForwardingMode int32

const (
	ForwardingMode_FORWARDING_MODE_NONE              ForwardingMode = 0
	ForwardingMode_FORWARDING_MODE_CLASSIC           ForwardingMode = 1
	ForwardingMode_FORWARDING_MODE_SMART_SWITCH      ForwardingMode = 2
	ForwardingMode_FORWARDING_MODE_SMART_HOST_PINNED ForwardingMode = 3
)

var ForwardingMode_name = map[int32]string{
	0: "FORWARDING_MODE_NONE",
	1: "FORWARDING_MODE_CLASSIC",
	2: "FORWARDING_MODE_SMART_SWITCH",
	3: "FORWARDING_MODE_SMART_HOST_PINNED",
}
var ForwardingMode_value = map[string]int32{
	"FORWARDING_MODE_NONE":              0,
	"FORWARDING_MODE_CLASSIC":           1,
	"FORWARDING_MODE_SMART_SWITCH":      2,
	"FORWARDING_MODE_SMART_HOST_PINNED": 3,
}

func (x ForwardingMode) String() string {
	return proto.EnumName(ForwardingMode_name, int32(x))
}
func (ForwardingMode) EnumDescriptor() ([]byte, []int) { return fileDescriptor28, []int{5} }

type FeatureProfile int32

const (
	FeatureProfile_FEATURE_PROFILE_NONE                  FeatureProfile = 0
	FeatureProfile_FEATURE_PROFILE_CLASSIC_DEFAULT       FeatureProfile = 1
	FeatureProfile_FEATURE_PROFILE_CLASSIC_ETH_DEV_SCALE FeatureProfile = 2
)

var FeatureProfile_name = map[int32]string{
	0: "FEATURE_PROFILE_NONE",
	1: "FEATURE_PROFILE_CLASSIC_DEFAULT",
	2: "FEATURE_PROFILE_CLASSIC_ETH_DEV_SCALE",
}
var FeatureProfile_value = map[string]int32{
	"FEATURE_PROFILE_NONE":                  0,
	"FEATURE_PROFILE_CLASSIC_DEFAULT":       1,
	"FEATURE_PROFILE_CLASSIC_ETH_DEV_SCALE": 2,
}

func (x FeatureProfile) String() string {
	return proto.EnumName(FeatureProfile_name, int32(x))
}
func (FeatureProfile) EnumDescriptor() ([]byte, []int) { return fileDescriptor28, []int{6} }

type ApiStatsEntry struct {
	ApiType       ApiCounter `protobuf:"varint,1,opt,name=api_type,json=apiType,enum=sys.ApiCounter" json:"api_type,omitempty"`
	NumApiCall    uint32     `protobuf:"varint,2,opt,name=num_api_call,json=numApiCall" json:"num_api_call,omitempty"`
	NumApiSuccess uint32     `protobuf:"varint,3,opt,name=num_api_success,json=numApiSuccess" json:"num_api_success,omitempty"`
	NumApiFail    uint32     `protobuf:"varint,4,opt,name=num_api_fail,json=numApiFail" json:"num_api_fail,omitempty"`
}

func (m *ApiStatsEntry) Reset()                    { *m = ApiStatsEntry{} }
func (m *ApiStatsEntry) String() string            { return proto.CompactTextString(m) }
func (*ApiStatsEntry) ProtoMessage()               {}
func (*ApiStatsEntry) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{0} }

func (m *ApiStatsEntry) GetApiType() ApiCounter {
	if m != nil {
		return m.ApiType
	}
	return ApiCounter_API_COUNTER_NONE
}

func (m *ApiStatsEntry) GetNumApiCall() uint32 {
	if m != nil {
		return m.NumApiCall
	}
	return 0
}

func (m *ApiStatsEntry) GetNumApiSuccess() uint32 {
	if m != nil {
		return m.NumApiSuccess
	}
	return 0
}

func (m *ApiStatsEntry) GetNumApiFail() uint32 {
	if m != nil {
		return m.NumApiFail
	}
	return 0
}

// API Stats object
type ApiStatsResponse struct {
	ApiEntries []*ApiStatsEntry `protobuf:"bytes,1,rep,name=api_entries,json=apiEntries" json:"api_entries,omitempty"`
}

func (m *ApiStatsResponse) Reset()                    { *m = ApiStatsResponse{} }
func (m *ApiStatsResponse) String() string            { return proto.CompactTextString(m) }
func (*ApiStatsResponse) ProtoMessage()               {}
func (*ApiStatsResponse) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{1} }

func (m *ApiStatsResponse) GetApiEntries() []*ApiStatsEntry {
	if m != nil {
		return m.ApiEntries
	}
	return nil
}

type DropStatsEntry struct {
	Reasons   *DropReasons `protobuf:"bytes,1,opt,name=reasons" json:"reasons,omitempty"`
	DropCount uint64       `protobuf:"varint,2,opt,name=drop_count,json=dropCount" json:"drop_count,omitempty"`
}

func (m *DropStatsEntry) Reset()                    { *m = DropStatsEntry{} }
func (m *DropStatsEntry) String() string            { return proto.CompactTextString(m) }
func (*DropStatsEntry) ProtoMessage()               {}
func (*DropStatsEntry) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{2} }

func (m *DropStatsEntry) GetReasons() *DropReasons {
	if m != nil {
		return m.Reasons
	}
	return nil
}

func (m *DropStatsEntry) GetDropCount() uint64 {
	if m != nil {
		return m.DropCount
	}
	return 0
}

type EgressDropStatsEntry struct {
	Reasons   *EgressDropReasons `protobuf:"bytes,1,opt,name=reasons" json:"reasons,omitempty"`
	DropCount uint64             `protobuf:"varint,2,opt,name=drop_count,json=dropCount" json:"drop_count,omitempty"`
}

func (m *EgressDropStatsEntry) Reset()                    { *m = EgressDropStatsEntry{} }
func (m *EgressDropStatsEntry) String() string            { return proto.CompactTextString(m) }
func (*EgressDropStatsEntry) ProtoMessage()               {}
func (*EgressDropStatsEntry) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{3} }

func (m *EgressDropStatsEntry) GetReasons() *EgressDropReasons {
	if m != nil {
		return m.Reasons
	}
	return nil
}

func (m *EgressDropStatsEntry) GetDropCount() uint64 {
	if m != nil {
		return m.DropCount
	}
	return 0
}

type BufferDropStatsEntry struct {
	Reasons   BufferDropReasons `protobuf:"varint,1,opt,name=reasons,enum=sys.BufferDropReasons" json:"reasons,omitempty"`
	DropCount uint32            `protobuf:"varint,2,opt,name=drop_count,json=dropCount" json:"drop_count,omitempty"`
}

func (m *BufferDropStatsEntry) Reset()                    { *m = BufferDropStatsEntry{} }
func (m *BufferDropStatsEntry) String() string            { return proto.CompactTextString(m) }
func (*BufferDropStatsEntry) ProtoMessage()               {}
func (*BufferDropStatsEntry) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{4} }

func (m *BufferDropStatsEntry) GetReasons() BufferDropReasons {
	if m != nil {
		return m.Reasons
	}
	return BufferDropReasons_INTRINSIC_DROP
}

func (m *BufferDropStatsEntry) GetDropCount() uint32 {
	if m != nil {
		return m.DropCount
	}
	return 0
}

type BufferDropStats struct {
	StatsEntries []*BufferDropStatsEntry `protobuf:"bytes,1,rep,name=stats_entries,json=statsEntries" json:"stats_entries,omitempty"`
}

func (m *BufferDropStats) Reset()                    { *m = BufferDropStats{} }
func (m *BufferDropStats) String() string            { return proto.CompactTextString(m) }
func (*BufferDropStats) ProtoMessage()               {}
func (*BufferDropStats) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{5} }

func (m *BufferDropStats) GetStatsEntries() []*BufferDropStatsEntry {
	if m != nil {
		return m.StatsEntries
	}
	return nil
}

// TableStatsEntry captures table specific stats for h/w table health monitoring
type TableStatsEntry struct {
	TableType            TableType `protobuf:"varint,1,opt,name=table_type,json=tableType,enum=sys.TableType" json:"table_type,omitempty"`
	TableName            string    `protobuf:"bytes,2,opt,name=table_name,json=tableName" json:"table_name,omitempty"`
	TableSize            uint32    `protobuf:"varint,3,opt,name=table_size,json=tableSize" json:"table_size,omitempty"`
	OverflowTableSize    uint32    `protobuf:"varint,4,opt,name=overflow_table_size,json=overflowTableSize" json:"overflow_table_size,omitempty"`
	EntriesInUse         uint32    `protobuf:"varint,5,opt,name=entries_in_use,json=entriesInUse" json:"entries_in_use,omitempty"`
	OverflowEntriesInUse uint32    `protobuf:"varint,6,opt,name=overflow_entries_in_use,json=overflowEntriesInUse" json:"overflow_entries_in_use,omitempty"`
	NumInserts           uint32    `protobuf:"varint,7,opt,name=num_inserts,json=numInserts" json:"num_inserts,omitempty"`
	NumInsertErrors      uint32    `protobuf:"varint,8,opt,name=num_insert_errors,json=numInsertErrors" json:"num_insert_errors,omitempty"`
	NumDeletes           uint32    `protobuf:"varint,9,opt,name=num_deletes,json=numDeletes" json:"num_deletes,omitempty"`
	NumDeleteErrors      uint32    `protobuf:"varint,10,opt,name=num_delete_errors,json=numDeleteErrors" json:"num_delete_errors,omitempty"`
}

func (m *TableStatsEntry) Reset()                    { *m = TableStatsEntry{} }
func (m *TableStatsEntry) String() string            { return proto.CompactTextString(m) }
func (*TableStatsEntry) ProtoMessage()               {}
func (*TableStatsEntry) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{6} }

func (m *TableStatsEntry) GetTableType() TableType {
	if m != nil {
		return m.TableType
	}
	return TableType_TABLE_TYPE_NONE
}

func (m *TableStatsEntry) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

func (m *TableStatsEntry) GetTableSize() uint32 {
	if m != nil {
		return m.TableSize
	}
	return 0
}

func (m *TableStatsEntry) GetOverflowTableSize() uint32 {
	if m != nil {
		return m.OverflowTableSize
	}
	return 0
}

func (m *TableStatsEntry) GetEntriesInUse() uint32 {
	if m != nil {
		return m.EntriesInUse
	}
	return 0
}

func (m *TableStatsEntry) GetOverflowEntriesInUse() uint32 {
	if m != nil {
		return m.OverflowEntriesInUse
	}
	return 0
}

func (m *TableStatsEntry) GetNumInserts() uint32 {
	if m != nil {
		return m.NumInserts
	}
	return 0
}

func (m *TableStatsEntry) GetNumInsertErrors() uint32 {
	if m != nil {
		return m.NumInsertErrors
	}
	return 0
}

func (m *TableStatsEntry) GetNumDeletes() uint32 {
	if m != nil {
		return m.NumDeletes
	}
	return 0
}

func (m *TableStatsEntry) GetNumDeleteErrors() uint32 {
	if m != nil {
		return m.NumDeleteErrors
	}
	return 0
}

// TableStats is container for statistics of all tables in the data path
type TableStats struct {
	TableStats []*TableStatsEntry `protobuf:"bytes,1,rep,name=table_stats,json=tableStats" json:"table_stats,omitempty"`
}

func (m *TableStats) Reset()                    { *m = TableStats{} }
func (m *TableStats) String() string            { return proto.CompactTextString(m) }
func (*TableStats) ProtoMessage()               {}
func (*TableStats) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{7} }

func (m *TableStats) GetTableStats() []*TableStatsEntry {
	if m != nil {
		return m.TableStats
	}
	return nil
}

// BufferStats captures instantaneous counters of the buffering module
type BufferStats struct {
	SopCountIn  uint32           `protobuf:"varint,1,opt,name=sop_count_in,json=sopCountIn" json:"sop_count_in,omitempty"`
	EopCountIn  uint32           `protobuf:"varint,2,opt,name=eop_count_in,json=eopCountIn" json:"eop_count_in,omitempty"`
	SopCountOut uint32           `protobuf:"varint,3,opt,name=sop_count_out,json=sopCountOut" json:"sop_count_out,omitempty"`
	EopCountOut uint32           `protobuf:"varint,4,opt,name=eop_count_out,json=eopCountOut" json:"eop_count_out,omitempty"`
	DropCounts  *BufferDropStats `protobuf:"bytes,5,opt,name=drop_counts,json=dropCounts" json:"drop_counts,omitempty"`
}

func (m *BufferStats) Reset()                    { *m = BufferStats{} }
func (m *BufferStats) String() string            { return proto.CompactTextString(m) }
func (*BufferStats) ProtoMessage()               {}
func (*BufferStats) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{8} }

func (m *BufferStats) GetSopCountIn() uint32 {
	if m != nil {
		return m.SopCountIn
	}
	return 0
}

func (m *BufferStats) GetEopCountIn() uint32 {
	if m != nil {
		return m.EopCountIn
	}
	return 0
}

func (m *BufferStats) GetSopCountOut() uint32 {
	if m != nil {
		return m.SopCountOut
	}
	return 0
}

func (m *BufferStats) GetEopCountOut() uint32 {
	if m != nil {
		return m.EopCountOut
	}
	return 0
}

func (m *BufferStats) GetDropCounts() *BufferDropStats {
	if m != nil {
		return m.DropCounts
	}
	return nil
}

type OflowFifoDropStatsEntry struct {
	Type  OflowFifoDropType `protobuf:"varint,1,opt,name=type,enum=sys.OflowFifoDropType" json:"type,omitempty"`
	Count uint32            `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *OflowFifoDropStatsEntry) Reset()                    { *m = OflowFifoDropStatsEntry{} }
func (m *OflowFifoDropStatsEntry) String() string            { return proto.CompactTextString(m) }
func (*OflowFifoDropStatsEntry) ProtoMessage()               {}
func (*OflowFifoDropStatsEntry) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{9} }

func (m *OflowFifoDropStatsEntry) GetType() OflowFifoDropType {
	if m != nil {
		return m.Type
	}
	return OflowFifoDropType_OCCUPANCY_DROP
}

func (m *OflowFifoDropStatsEntry) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type OflowFifoDropStats struct {
	Entry []*OflowFifoDropStatsEntry `protobuf:"bytes,1,rep,name=entry" json:"entry,omitempty"`
}

func (m *OflowFifoDropStats) Reset()                    { *m = OflowFifoDropStats{} }
func (m *OflowFifoDropStats) String() string            { return proto.CompactTextString(m) }
func (*OflowFifoDropStats) ProtoMessage()               {}
func (*OflowFifoDropStats) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{10} }

func (m *OflowFifoDropStats) GetEntry() []*OflowFifoDropStatsEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

// OflowFifoStats captures instantaneous counters at the overflow fifo interface
type OflowFifoStats struct {
	SopCountIn  uint32              `protobuf:"varint,1,opt,name=sop_count_in,json=sopCountIn" json:"sop_count_in,omitempty"`
	EopCountIn  uint32              `protobuf:"varint,2,opt,name=eop_count_in,json=eopCountIn" json:"eop_count_in,omitempty"`
	SopCountOut uint32              `protobuf:"varint,3,opt,name=sop_count_out,json=sopCountOut" json:"sop_count_out,omitempty"`
	EopCountOut uint32              `protobuf:"varint,4,opt,name=eop_count_out,json=eopCountOut" json:"eop_count_out,omitempty"`
	DropCounts  *OflowFifoDropStats `protobuf:"bytes,5,opt,name=drop_counts,json=dropCounts" json:"drop_counts,omitempty"`
}

func (m *OflowFifoStats) Reset()                    { *m = OflowFifoStats{} }
func (m *OflowFifoStats) String() string            { return proto.CompactTextString(m) }
func (*OflowFifoStats) ProtoMessage()               {}
func (*OflowFifoStats) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{11} }

func (m *OflowFifoStats) GetSopCountIn() uint32 {
	if m != nil {
		return m.SopCountIn
	}
	return 0
}

func (m *OflowFifoStats) GetEopCountIn() uint32 {
	if m != nil {
		return m.EopCountIn
	}
	return 0
}

func (m *OflowFifoStats) GetSopCountOut() uint32 {
	if m != nil {
		return m.SopCountOut
	}
	return 0
}

func (m *OflowFifoStats) GetEopCountOut() uint32 {
	if m != nil {
		return m.EopCountOut
	}
	return 0
}

func (m *OflowFifoStats) GetDropCounts() *OflowFifoDropStats {
	if m != nil {
		return m.DropCounts
	}
	return nil
}

// PacketBufferPortStats is container to capture all counters exposed by the buffering
// module at the port level
type PacketBufferPortStats struct {
	PacketBufferPort *PacketBufferPort   `protobuf:"bytes,1,opt,name=packet_buffer_port,json=packetBufferPort" json:"packet_buffer_port,omitempty"`
	BufferStats      *BufferStats        `protobuf:"bytes,2,opt,name=buffer_stats,json=bufferStats" json:"buffer_stats,omitempty"`
	OflowFifoStats   *OflowFifoStats     `protobuf:"bytes,3,opt,name=oflow_fifo_stats,json=oflowFifoStats" json:"oflow_fifo_stats,omitempty"`
	QosQueueStats    *QosClassQueueStats `protobuf:"bytes,4,opt,name=qos_queue_stats,json=qosQueueStats" json:"qos_queue_stats,omitempty"`
}

func (m *PacketBufferPortStats) Reset()                    { *m = PacketBufferPortStats{} }
func (m *PacketBufferPortStats) String() string            { return proto.CompactTextString(m) }
func (*PacketBufferPortStats) ProtoMessage()               {}
func (*PacketBufferPortStats) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{12} }

func (m *PacketBufferPortStats) GetPacketBufferPort() *PacketBufferPort {
	if m != nil {
		return m.PacketBufferPort
	}
	return nil
}

func (m *PacketBufferPortStats) GetBufferStats() *BufferStats {
	if m != nil {
		return m.BufferStats
	}
	return nil
}

func (m *PacketBufferPortStats) GetOflowFifoStats() *OflowFifoStats {
	if m != nil {
		return m.OflowFifoStats
	}
	return nil
}

func (m *PacketBufferPortStats) GetQosQueueStats() *QosClassQueueStats {
	if m != nil {
		return m.QosQueueStats
	}
	return nil
}

// PacketBufferStats captures all the statistics of the packet buffering module
type PacketBufferStats struct {
	PortStats []*PacketBufferPortStats `protobuf:"bytes,1,rep,name=port_stats,json=portStats" json:"port_stats,omitempty"`
}

func (m *PacketBufferStats) Reset()                    { *m = PacketBufferStats{} }
func (m *PacketBufferStats) String() string            { return proto.CompactTextString(m) }
func (*PacketBufferStats) ProtoMessage()               {}
func (*PacketBufferStats) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{13} }

func (m *PacketBufferStats) GetPortStats() []*PacketBufferPortStats {
	if m != nil {
		return m.PortStats
	}
	return nil
}

// Status captures the operating status of various components in the HAL
// including "ready" status, thread health etc.
type Status struct {
}

func (m *Status) Reset()                    { *m = Status{} }
func (m *Status) String() string            { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()               {}
func (*Status) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{14} }

type SystemGetRequest struct {
	Request SystemGetType `protobuf:"varint,1,opt,name=request,enum=sys.SystemGetType" json:"request,omitempty"`
}

func (m *SystemGetRequest) Reset()                    { *m = SystemGetRequest{} }
func (m *SystemGetRequest) String() string            { return proto.CompactTextString(m) }
func (*SystemGetRequest) ProtoMessage()               {}
func (*SystemGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{15} }

func (m *SystemGetRequest) GetRequest() SystemGetType {
	if m != nil {
		return m.Request
	}
	return SystemGetType_SYSTEM_GET_FTE_STATS
}

// Global system object
type SystemResponse struct {
	ApiStatus ApiStatus `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	Stats     *Stats    `protobuf:"bytes,2,opt,name=stats" json:"stats,omitempty"`
	Status    *Status   `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	Uuid      string    `protobuf:"bytes,4,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *SystemResponse) Reset()                    { *m = SystemResponse{} }
func (m *SystemResponse) String() string            { return proto.CompactTextString(m) }
func (*SystemResponse) ProtoMessage()               {}
func (*SystemResponse) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{16} }

func (m *SystemResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *SystemResponse) GetStats() *Stats {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *SystemResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SystemResponse) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

// Stats object
type Stats struct {
	DropStats         *DropStats           `protobuf:"bytes,1,opt,name=drop_stats,json=dropStats" json:"drop_stats,omitempty"`
	EgressDropStats   *EgressDropStats     `protobuf:"bytes,2,opt,name=egress_drop_stats,json=egressDropStats" json:"egress_drop_stats,omitempty"`
	TableStats        *TableStats          `protobuf:"bytes,3,opt,name=table_stats,json=tableStats" json:"table_stats,omitempty"`
	PacketBufferStats *PacketBufferStats   `protobuf:"bytes,4,opt,name=packet_buffer_stats,json=packetBufferStats" json:"packet_buffer_stats,omitempty"`
	FteStats          *FTEStats            `protobuf:"bytes,5,opt,name=fte_stats,json=fteStats" json:"fte_stats,omitempty"`
	SessionStats      *SessionSummaryStats `protobuf:"bytes,6,opt,name=session_stats,json=sessionStats" json:"session_stats,omitempty"`
	PmdStats          *PMDStats            `protobuf:"bytes,7,opt,name=pmd_stats,json=pmdStats" json:"pmd_stats,omitempty"`
}

func (m *Stats) Reset()                    { *m = Stats{} }
func (m *Stats) String() string            { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()               {}
func (*Stats) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{17} }

func (m *Stats) GetDropStats() *DropStats {
	if m != nil {
		return m.DropStats
	}
	return nil
}

func (m *Stats) GetEgressDropStats() *EgressDropStats {
	if m != nil {
		return m.EgressDropStats
	}
	return nil
}

func (m *Stats) GetTableStats() *TableStats {
	if m != nil {
		return m.TableStats
	}
	return nil
}

func (m *Stats) GetPacketBufferStats() *PacketBufferStats {
	if m != nil {
		return m.PacketBufferStats
	}
	return nil
}

func (m *Stats) GetFteStats() *FTEStats {
	if m != nil {
		return m.FteStats
	}
	return nil
}

func (m *Stats) GetSessionStats() *SessionSummaryStats {
	if m != nil {
		return m.SessionStats
	}
	return nil
}

func (m *Stats) GetPmdStats() *PMDStats {
	if m != nil {
		return m.PmdStats
	}
	return nil
}

// Drop Stats object
type DropStats struct {
	DropEntries []*DropStatsEntry `protobuf:"bytes,1,rep,name=drop_entries,json=dropEntries" json:"drop_entries,omitempty"`
}

func (m *DropStats) Reset()                    { *m = DropStats{} }
func (m *DropStats) String() string            { return proto.CompactTextString(m) }
func (*DropStats) ProtoMessage()               {}
func (*DropStats) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{18} }

func (m *DropStats) GetDropEntries() []*DropStatsEntry {
	if m != nil {
		return m.DropEntries
	}
	return nil
}

type EgressDropStats struct {
	DropEntries []*EgressDropStatsEntry `protobuf:"bytes,1,rep,name=drop_entries,json=dropEntries" json:"drop_entries,omitempty"`
}

func (m *EgressDropStats) Reset()                    { *m = EgressDropStats{} }
func (m *EgressDropStats) String() string            { return proto.CompactTextString(m) }
func (*EgressDropStats) ProtoMessage()               {}
func (*EgressDropStats) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{19} }

func (m *EgressDropStats) GetDropEntries() []*EgressDropStatsEntry {
	if m != nil {
		return m.DropEntries
	}
	return nil
}

type FTEError struct {
	FteError string `protobuf:"bytes,1,opt,name=fte_error,json=fteError" json:"fte_error,omitempty"`
	Count    uint64 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *FTEError) Reset()                    { *m = FTEError{} }
func (m *FTEError) String() string            { return proto.CompactTextString(m) }
func (*FTEError) ProtoMessage()               {}
func (*FTEError) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{20} }

func (m *FTEError) GetFteError() string {
	if m != nil {
		return m.FteError
	}
	return ""
}

func (m *FTEError) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type FTEFeatureStats struct {
	FeatureName string      `protobuf:"bytes,1,opt,name=feature_name,json=featureName" json:"feature_name,omitempty"`
	DropPkts    uint64      `protobuf:"varint,2,opt,name=drop_pkts,json=dropPkts" json:"drop_pkts,omitempty"`
	DropReason  []*FTEError `protobuf:"bytes,3,rep,name=drop_reason,json=dropReason" json:"drop_reason,omitempty"`
}

func (m *FTEFeatureStats) Reset()                    { *m = FTEFeatureStats{} }
func (m *FTEFeatureStats) String() string            { return proto.CompactTextString(m) }
func (*FTEFeatureStats) ProtoMessage()               {}
func (*FTEFeatureStats) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{21} }

func (m *FTEFeatureStats) GetFeatureName() string {
	if m != nil {
		return m.FeatureName
	}
	return ""
}

func (m *FTEFeatureStats) GetDropPkts() uint64 {
	if m != nil {
		return m.DropPkts
	}
	return 0
}

func (m *FTEFeatureStats) GetDropReason() []*FTEError {
	if m != nil {
		return m.DropReason
	}
	return nil
}

// per FTE Stats
type FTEStatsInfo struct {
	ConnPerSecond       uint64             `protobuf:"varint,1,opt,name=conn_per_second,json=connPerSecond" json:"conn_per_second,omitempty"`
	FlowMissPkts        uint64             `protobuf:"varint,2,opt,name=flow_miss_pkts,json=flowMissPkts" json:"flow_miss_pkts,omitempty"`
	RetransmitPkts      uint64             `protobuf:"varint,3,opt,name=retransmit_pkts,json=retransmitPkts" json:"retransmit_pkts,omitempty"`
	RedirPkts           uint64             `protobuf:"varint,4,opt,name=redir_pkts,json=redirPkts" json:"redir_pkts,omitempty"`
	CflowPkts           uint64             `protobuf:"varint,5,opt,name=cflow_pkts,json=cflowPkts" json:"cflow_pkts,omitempty"`
	TcpClosePkts        uint64             `protobuf:"varint,6,opt,name=tcp_close_pkts,json=tcpClosePkts" json:"tcp_close_pkts,omitempty"`
	TlsProxyPkts        uint64             `protobuf:"varint,7,opt,name=tls_proxy_pkts,json=tlsProxyPkts" json:"tls_proxy_pkts,omitempty"`
	SoftqReqs           uint64             `protobuf:"varint,8,opt,name=softq_reqs,json=softqReqs" json:"softq_reqs,omitempty"`
	QueuedTxPkts        uint64             `protobuf:"varint,9,opt,name=queued_tx_pkts,json=queuedTxPkts" json:"queued_tx_pkts,omitempty"`
	MaxConnPerSecond    uint64             `protobuf:"varint,10,opt,name=max_conn_per_second,json=maxConnPerSecond" json:"max_conn_per_second,omitempty"`
	PacketsPerSecond    uint64             `protobuf:"varint,11,opt,name=packets_per_second,json=packetsPerSecond" json:"packets_per_second,omitempty"`
	MaxPacketsPerSecond uint64             `protobuf:"varint,12,opt,name=max_packets_per_second,json=maxPacketsPerSecond" json:"max_packets_per_second,omitempty"`
	SoftqLen            uint64             `protobuf:"varint,13,opt,name=softq_len,json=softqLen" json:"softq_len,omitempty"`
	FteErrors           []*FTEError        `protobuf:"bytes,14,rep,name=fte_errors,json=fteErrors" json:"fte_errors,omitempty"`
	FeatureStats        []*FTEFeatureStats `protobuf:"bytes,15,rep,name=feature_stats,json=featureStats" json:"feature_stats,omitempty"`
}

func (m *FTEStatsInfo) Reset()                    { *m = FTEStatsInfo{} }
func (m *FTEStatsInfo) String() string            { return proto.CompactTextString(m) }
func (*FTEStatsInfo) ProtoMessage()               {}
func (*FTEStatsInfo) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{22} }

func (m *FTEStatsInfo) GetConnPerSecond() uint64 {
	if m != nil {
		return m.ConnPerSecond
	}
	return 0
}

func (m *FTEStatsInfo) GetFlowMissPkts() uint64 {
	if m != nil {
		return m.FlowMissPkts
	}
	return 0
}

func (m *FTEStatsInfo) GetRetransmitPkts() uint64 {
	if m != nil {
		return m.RetransmitPkts
	}
	return 0
}

func (m *FTEStatsInfo) GetRedirPkts() uint64 {
	if m != nil {
		return m.RedirPkts
	}
	return 0
}

func (m *FTEStatsInfo) GetCflowPkts() uint64 {
	if m != nil {
		return m.CflowPkts
	}
	return 0
}

func (m *FTEStatsInfo) GetTcpClosePkts() uint64 {
	if m != nil {
		return m.TcpClosePkts
	}
	return 0
}

func (m *FTEStatsInfo) GetTlsProxyPkts() uint64 {
	if m != nil {
		return m.TlsProxyPkts
	}
	return 0
}

func (m *FTEStatsInfo) GetSoftqReqs() uint64 {
	if m != nil {
		return m.SoftqReqs
	}
	return 0
}

func (m *FTEStatsInfo) GetQueuedTxPkts() uint64 {
	if m != nil {
		return m.QueuedTxPkts
	}
	return 0
}

func (m *FTEStatsInfo) GetMaxConnPerSecond() uint64 {
	if m != nil {
		return m.MaxConnPerSecond
	}
	return 0
}

func (m *FTEStatsInfo) GetPacketsPerSecond() uint64 {
	if m != nil {
		return m.PacketsPerSecond
	}
	return 0
}

func (m *FTEStatsInfo) GetMaxPacketsPerSecond() uint64 {
	if m != nil {
		return m.MaxPacketsPerSecond
	}
	return 0
}

func (m *FTEStatsInfo) GetSoftqLen() uint64 {
	if m != nil {
		return m.SoftqLen
	}
	return 0
}

func (m *FTEStatsInfo) GetFteErrors() []*FTEError {
	if m != nil {
		return m.FteErrors
	}
	return nil
}

func (m *FTEStatsInfo) GetFeatureStats() []*FTEFeatureStats {
	if m != nil {
		return m.FeatureStats
	}
	return nil
}

// FTE Global Stats
type FTEStats struct {
	ApiStatus    ApiStatus       `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	FteStatsInfo []*FTEStatsInfo `protobuf:"bytes,2,rep,name=fte_stats_info,json=fteStatsInfo" json:"fte_stats_info,omitempty"`
}

func (m *FTEStats) Reset()                    { *m = FTEStats{} }
func (m *FTEStats) String() string            { return proto.CompactTextString(m) }
func (*FTEStats) ProtoMessage()               {}
func (*FTEStats) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{23} }

func (m *FTEStats) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *FTEStats) GetFteStatsInfo() []*FTEStatsInfo {
	if m != nil {
		return m.FteStatsInfo
	}
	return nil
}

// Session Summary Stats
type SessionSummaryStats struct {
	TotalActiveSessions          uint64 `protobuf:"varint,1,opt,name=total_active_sessions,json=totalActiveSessions" json:"total_active_sessions,omitempty"`
	L2Sessions                   uint64 `protobuf:"varint,2,opt,name=l2_sessions,json=l2Sessions" json:"l2_sessions,omitempty"`
	TcpSessions                  uint64 `protobuf:"varint,3,opt,name=tcp_sessions,json=tcpSessions" json:"tcp_sessions,omitempty"`
	TcpEstablishedSessions       uint64 `protobuf:"varint,4,opt,name=tcp_established_sessions,json=tcpEstablishedSessions" json:"tcp_established_sessions,omitempty"`
	TcpClosedSessions            uint64 `protobuf:"varint,5,opt,name=tcp_closed_sessions,json=tcpClosedSessions" json:"tcp_closed_sessions,omitempty"`
	UdpSessions                  uint64 `protobuf:"varint,6,opt,name=udp_sessions,json=udpSessions" json:"udp_sessions,omitempty"`
	IcmpSessions                 uint64 `protobuf:"varint,7,opt,name=icmp_sessions,json=icmpSessions" json:"icmp_sessions,omitempty"`
	DropSessions                 uint64 `protobuf:"varint,8,opt,name=drop_sessions,json=dropSessions" json:"drop_sessions,omitempty"`
	AgedSessions                 uint64 `protobuf:"varint,9,opt,name=aged_sessions,json=agedSessions" json:"aged_sessions,omitempty"`
	NumTcpResetSent              uint64 `protobuf:"varint,10,opt,name=num_tcp_reset_sent,json=numTcpResetSent" json:"num_tcp_reset_sent,omitempty"`
	NumIcmpErrorSent             uint64 `protobuf:"varint,11,opt,name=num_icmp_error_sent,json=numIcmpErrorSent" json:"num_icmp_error_sent,omitempty"`
	NumConnectionTimeoutSessions uint64 `protobuf:"varint,12,opt,name=num_connection_timeout_sessions,json=numConnectionTimeoutSessions" json:"num_connection_timeout_sessions,omitempty"`
	NumSessionCreateErrors       uint64 `protobuf:"varint,13,opt,name=num_session_create_errors,json=numSessionCreateErrors" json:"num_session_create_errors,omitempty"`
}

func (m *SessionSummaryStats) Reset()                    { *m = SessionSummaryStats{} }
func (m *SessionSummaryStats) String() string            { return proto.CompactTextString(m) }
func (*SessionSummaryStats) ProtoMessage()               {}
func (*SessionSummaryStats) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{24} }

func (m *SessionSummaryStats) GetTotalActiveSessions() uint64 {
	if m != nil {
		return m.TotalActiveSessions
	}
	return 0
}

func (m *SessionSummaryStats) GetL2Sessions() uint64 {
	if m != nil {
		return m.L2Sessions
	}
	return 0
}

func (m *SessionSummaryStats) GetTcpSessions() uint64 {
	if m != nil {
		return m.TcpSessions
	}
	return 0
}

func (m *SessionSummaryStats) GetTcpEstablishedSessions() uint64 {
	if m != nil {
		return m.TcpEstablishedSessions
	}
	return 0
}

func (m *SessionSummaryStats) GetTcpClosedSessions() uint64 {
	if m != nil {
		return m.TcpClosedSessions
	}
	return 0
}

func (m *SessionSummaryStats) GetUdpSessions() uint64 {
	if m != nil {
		return m.UdpSessions
	}
	return 0
}

func (m *SessionSummaryStats) GetIcmpSessions() uint64 {
	if m != nil {
		return m.IcmpSessions
	}
	return 0
}

func (m *SessionSummaryStats) GetDropSessions() uint64 {
	if m != nil {
		return m.DropSessions
	}
	return 0
}

func (m *SessionSummaryStats) GetAgedSessions() uint64 {
	if m != nil {
		return m.AgedSessions
	}
	return 0
}

func (m *SessionSummaryStats) GetNumTcpResetSent() uint64 {
	if m != nil {
		return m.NumTcpResetSent
	}
	return 0
}

func (m *SessionSummaryStats) GetNumIcmpErrorSent() uint64 {
	if m != nil {
		return m.NumIcmpErrorSent
	}
	return 0
}

func (m *SessionSummaryStats) GetNumConnectionTimeoutSessions() uint64 {
	if m != nil {
		return m.NumConnectionTimeoutSessions
	}
	return 0
}

func (m *SessionSummaryStats) GetNumSessionCreateErrors() uint64 {
	if m != nil {
		return m.NumSessionCreateErrors
	}
	return 0
}

type QCtr struct {
	SendPkts           uint64 `protobuf:"varint,1,opt,name=send_pkts,json=sendPkts" json:"send_pkts,omitempty"`
	RecvPkts           uint64 `protobuf:"varint,2,opt,name=recv_pkts,json=recvPkts" json:"recv_pkts,omitempty"`
	RxSemWrErr         uint32 `protobuf:"varint,3,opt,name=rx_sem_wr_err,json=rxSemWrErr" json:"rx_sem_wr_err,omitempty"`
	RxSlotValueReadErr uint32 `protobuf:"varint,4,opt,name=rx_slot_value_read_err,json=rxSlotValueReadErr" json:"rx_slot_value_read_err,omitempty"`
	RxDescrReadErr     uint32 `protobuf:"varint,5,opt,name=rx_descr_read_err,json=rxDescrReadErr" json:"rx_descr_read_err,omitempty"`
	RxDescrToHdrErr    uint32 `protobuf:"varint,6,opt,name=rx_descr_to_hdr_err,json=rxDescrToHdrErr" json:"rx_descr_to_hdr_err,omitempty"`
	RxDescrFreeErr     uint32 `protobuf:"varint,7,opt,name=rx_descr_free_err,json=rxDescrFreeErr" json:"rx_descr_free_err,omitempty"`
	TxDescrFreeErr     uint32 `protobuf:"varint,8,opt,name=tx_descr_free_err,json=txDescrFreeErr" json:"tx_descr_free_err,omitempty"`
	TxPageAllocErr     uint32 `protobuf:"varint,9,opt,name=tx_page_alloc_err,json=txPageAllocErr" json:"tx_page_alloc_err,omitempty"`
	TxPageCopyErr      uint32 `protobuf:"varint,10,opt,name=tx_page_copy_err,json=txPageCopyErr" json:"tx_page_copy_err,omitempty"`
	TxDescrPgmErr      uint32 `protobuf:"varint,11,opt,name=tx_descr_pgm_err,json=txDescrPgmErr" json:"tx_descr_pgm_err,omitempty"`
	TxSendErr          uint32 `protobuf:"varint,12,opt,name=tx_send_err,json=txSendErr" json:"tx_send_err,omitempty"`
	RxDescrAddrOob     uint32 `protobuf:"varint,13,opt,name=rx_descr_addr_oob,json=rxDescrAddrOob" json:"rx_descr_addr_oob,omitempty"`
	PollCount          uint64 `protobuf:"varint,14,opt,name=poll_count,json=pollCount" json:"poll_count,omitempty"`
	TxDoorbellErr      uint32 `protobuf:"varint,15,opt,name=tx_doorbell_err,json=txDoorbellErr" json:"tx_doorbell_err,omitempty"`
}

func (m *QCtr) Reset()                    { *m = QCtr{} }
func (m *QCtr) String() string            { return proto.CompactTextString(m) }
func (*QCtr) ProtoMessage()               {}
func (*QCtr) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{25} }

func (m *QCtr) GetSendPkts() uint64 {
	if m != nil {
		return m.SendPkts
	}
	return 0
}

func (m *QCtr) GetRecvPkts() uint64 {
	if m != nil {
		return m.RecvPkts
	}
	return 0
}

func (m *QCtr) GetRxSemWrErr() uint32 {
	if m != nil {
		return m.RxSemWrErr
	}
	return 0
}

func (m *QCtr) GetRxSlotValueReadErr() uint32 {
	if m != nil {
		return m.RxSlotValueReadErr
	}
	return 0
}

func (m *QCtr) GetRxDescrReadErr() uint32 {
	if m != nil {
		return m.RxDescrReadErr
	}
	return 0
}

func (m *QCtr) GetRxDescrToHdrErr() uint32 {
	if m != nil {
		return m.RxDescrToHdrErr
	}
	return 0
}

func (m *QCtr) GetRxDescrFreeErr() uint32 {
	if m != nil {
		return m.RxDescrFreeErr
	}
	return 0
}

func (m *QCtr) GetTxDescrFreeErr() uint32 {
	if m != nil {
		return m.TxDescrFreeErr
	}
	return 0
}

func (m *QCtr) GetTxPageAllocErr() uint32 {
	if m != nil {
		return m.TxPageAllocErr
	}
	return 0
}

func (m *QCtr) GetTxPageCopyErr() uint32 {
	if m != nil {
		return m.TxPageCopyErr
	}
	return 0
}

func (m *QCtr) GetTxDescrPgmErr() uint32 {
	if m != nil {
		return m.TxDescrPgmErr
	}
	return 0
}

func (m *QCtr) GetTxSendErr() uint32 {
	if m != nil {
		return m.TxSendErr
	}
	return 0
}

func (m *QCtr) GetRxDescrAddrOob() uint32 {
	if m != nil {
		return m.RxDescrAddrOob
	}
	return 0
}

func (m *QCtr) GetPollCount() uint64 {
	if m != nil {
		return m.PollCount
	}
	return 0
}

func (m *QCtr) GetTxDoorbellErr() uint32 {
	if m != nil {
		return m.TxDoorbellErr
	}
	return 0
}

type QGlobalInfo struct {
	GcPindex                    uint32 `protobuf:"varint,1,opt,name=gc_pindex,json=gcPindex" json:"gc_pindex,omitempty"`
	CpuTxPagePindex             uint32 `protobuf:"varint,2,opt,name=cpu_tx_page_pindex,json=cpuTxPagePindex" json:"cpu_tx_page_pindex,omitempty"`
	CpuTxPageCindex             uint32 `protobuf:"varint,3,opt,name=cpu_tx_page_cindex,json=cpuTxPageCindex" json:"cpu_tx_page_cindex,omitempty"`
	CpuTxDescrPindex            uint32 `protobuf:"varint,4,opt,name=cpu_tx_descr_pindex,json=cpuTxDescrPindex" json:"cpu_tx_descr_pindex,omitempty"`
	CpuTxDescrCindex            uint32 `protobuf:"varint,5,opt,name=cpu_tx_descr_cindex,json=cpuTxDescrCindex" json:"cpu_tx_descr_cindex,omitempty"`
	CpuRxDprCindex              uint32 `protobuf:"varint,6,opt,name=cpu_rx_dpr_cindex,json=cpuRxDprCindex" json:"cpu_rx_dpr_cindex,omitempty"`
	CpuRxDprSemCindex           uint32 `protobuf:"varint,7,opt,name=cpu_rx_dpr_sem_cindex,json=cpuRxDprSemCindex" json:"cpu_rx_dpr_sem_cindex,omitempty"`
	CpuRxDprDescrFreeErr        uint32 `protobuf:"varint,8,opt,name=cpu_rx_dpr_descr_free_err,json=cpuRxDprDescrFreeErr" json:"cpu_rx_dpr_descr_free_err,omitempty"`
	CpuRxDprSemFreeErr          uint32 `protobuf:"varint,9,opt,name=cpu_rx_dpr_sem_free_err,json=cpuRxDprSemFreeErr" json:"cpu_rx_dpr_sem_free_err,omitempty"`
	CpuRxDprDescrInvalidFreeErr uint32 `protobuf:"varint,10,opt,name=cpu_rx_dpr_descr_invalid_free_err,json=cpuRxDprDescrInvalidFreeErr" json:"cpu_rx_dpr_descr_invalid_free_err,omitempty"`
}

func (m *QGlobalInfo) Reset()                    { *m = QGlobalInfo{} }
func (m *QGlobalInfo) String() string            { return proto.CompactTextString(m) }
func (*QGlobalInfo) ProtoMessage()               {}
func (*QGlobalInfo) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{26} }

func (m *QGlobalInfo) GetGcPindex() uint32 {
	if m != nil {
		return m.GcPindex
	}
	return 0
}

func (m *QGlobalInfo) GetCpuTxPagePindex() uint32 {
	if m != nil {
		return m.CpuTxPagePindex
	}
	return 0
}

func (m *QGlobalInfo) GetCpuTxPageCindex() uint32 {
	if m != nil {
		return m.CpuTxPageCindex
	}
	return 0
}

func (m *QGlobalInfo) GetCpuTxDescrPindex() uint32 {
	if m != nil {
		return m.CpuTxDescrPindex
	}
	return 0
}

func (m *QGlobalInfo) GetCpuTxDescrCindex() uint32 {
	if m != nil {
		return m.CpuTxDescrCindex
	}
	return 0
}

func (m *QGlobalInfo) GetCpuRxDprCindex() uint32 {
	if m != nil {
		return m.CpuRxDprCindex
	}
	return 0
}

func (m *QGlobalInfo) GetCpuRxDprSemCindex() uint32 {
	if m != nil {
		return m.CpuRxDprSemCindex
	}
	return 0
}

func (m *QGlobalInfo) GetCpuRxDprDescrFreeErr() uint32 {
	if m != nil {
		return m.CpuRxDprDescrFreeErr
	}
	return 0
}

func (m *QGlobalInfo) GetCpuRxDprSemFreeErr() uint32 {
	if m != nil {
		return m.CpuRxDprSemFreeErr
	}
	return 0
}

func (m *QGlobalInfo) GetCpuRxDprDescrInvalidFreeErr() uint32 {
	if m != nil {
		return m.CpuRxDprDescrInvalidFreeErr
	}
	return 0
}

type QInfo struct {
	QueueId       uint32 `protobuf:"varint,1,opt,name=queue_id,json=queueId" json:"queue_id,omitempty"`
	BaseAddr      uint64 `protobuf:"varint,2,opt,name=base_addr,json=baseAddr" json:"base_addr,omitempty"`
	PcIndex       uint32 `protobuf:"varint,3,opt,name=pc_index,json=pcIndex" json:"pc_index,omitempty"`
	PcIndexAddr   uint32 `protobuf:"varint,4,opt,name=pc_index_addr,json=pcIndexAddr" json:"pc_index_addr,omitempty"`
	ValidBitValue uint64 `protobuf:"varint,5,opt,name=valid_bit_value,json=validBitValue" json:"valid_bit_value,omitempty"`
	QueueType     uint32 `protobuf:"varint,6,opt,name=queue_type,json=queueType" json:"queue_type,omitempty"`
	Ctr           *QCtr  `protobuf:"bytes,7,opt,name=ctr" json:"ctr,omitempty"`
}

func (m *QInfo) Reset()                    { *m = QInfo{} }
func (m *QInfo) String() string            { return proto.CompactTextString(m) }
func (*QInfo) ProtoMessage()               {}
func (*QInfo) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{27} }

func (m *QInfo) GetQueueId() uint32 {
	if m != nil {
		return m.QueueId
	}
	return 0
}

func (m *QInfo) GetBaseAddr() uint64 {
	if m != nil {
		return m.BaseAddr
	}
	return 0
}

func (m *QInfo) GetPcIndex() uint32 {
	if m != nil {
		return m.PcIndex
	}
	return 0
}

func (m *QInfo) GetPcIndexAddr() uint32 {
	if m != nil {
		return m.PcIndexAddr
	}
	return 0
}

func (m *QInfo) GetValidBitValue() uint64 {
	if m != nil {
		return m.ValidBitValue
	}
	return 0
}

func (m *QInfo) GetQueueType() uint32 {
	if m != nil {
		return m.QueueType
	}
	return 0
}

func (m *QInfo) GetCtr() *QCtr {
	if m != nil {
		return m.Ctr
	}
	return nil
}

type FTEInfo struct {
	QueueId uint32       `protobuf:"varint,1,opt,name=queue_id,json=queueId" json:"queue_id,omitempty"`
	Glbal   *QGlobalInfo `protobuf:"bytes,2,opt,name=glbal" json:"glbal,omitempty"`
	Qinfo   []*QInfo     `protobuf:"bytes,3,rep,name=qinfo" json:"qinfo,omitempty"`
}

func (m *FTEInfo) Reset()                    { *m = FTEInfo{} }
func (m *FTEInfo) String() string            { return proto.CompactTextString(m) }
func (*FTEInfo) ProtoMessage()               {}
func (*FTEInfo) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{28} }

func (m *FTEInfo) GetQueueId() uint32 {
	if m != nil {
		return m.QueueId
	}
	return 0
}

func (m *FTEInfo) GetGlbal() *QGlobalInfo {
	if m != nil {
		return m.Glbal
	}
	return nil
}

func (m *FTEInfo) GetQinfo() []*QInfo {
	if m != nil {
		return m.Qinfo
	}
	return nil
}

type PMDStats struct {
	FteInfo []*FTEInfo `protobuf:"bytes,1,rep,name=fte_info,json=fteInfo" json:"fte_info,omitempty"`
}

func (m *PMDStats) Reset()                    { *m = PMDStats{} }
func (m *PMDStats) String() string            { return proto.CompactTextString(m) }
func (*PMDStats) ProtoMessage()               {}
func (*PMDStats) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{29} }

func (m *PMDStats) GetFteInfo() []*FTEInfo {
	if m != nil {
		return m.FteInfo
	}
	return nil
}

type ForwardingModeResponse struct {
	ApiStatus ApiStatus      `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	FwdMode   ForwardingMode `protobuf:"varint,2,opt,name=fwd_mode,json=fwdMode,enum=sys.ForwardingMode" json:"fwd_mode,omitempty"`
}

func (m *ForwardingModeResponse) Reset()                    { *m = ForwardingModeResponse{} }
func (m *ForwardingModeResponse) String() string            { return proto.CompactTextString(m) }
func (*ForwardingModeResponse) ProtoMessage()               {}
func (*ForwardingModeResponse) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{30} }

func (m *ForwardingModeResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *ForwardingModeResponse) GetFwdMode() ForwardingMode {
	if m != nil {
		return m.FwdMode
	}
	return ForwardingMode_FORWARDING_MODE_NONE
}

type FeatureProfileResponse struct {
	ApiStatus      ApiStatus      `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	FeatureProfile FeatureProfile `protobuf:"varint,2,opt,name=feature_profile,json=featureProfile,enum=sys.FeatureProfile" json:"feature_profile,omitempty"`
}

func (m *FeatureProfileResponse) Reset()                    { *m = FeatureProfileResponse{} }
func (m *FeatureProfileResponse) String() string            { return proto.CompactTextString(m) }
func (*FeatureProfileResponse) ProtoMessage()               {}
func (*FeatureProfileResponse) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{31} }

func (m *FeatureProfileResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *FeatureProfileResponse) GetFeatureProfile() FeatureProfile {
	if m != nil {
		return m.FeatureProfile
	}
	return FeatureProfile_FEATURE_PROFILE_NONE
}

func init() {
	proto.RegisterType((*ApiStatsEntry)(nil), "halproto.ApiStatsEntry")
	proto.RegisterType((*ApiStatsResponse)(nil), "halproto.ApiStatsResponse")
	proto.RegisterType((*DropStatsEntry)(nil), "halproto.DropStatsEntry")
	proto.RegisterType((*EgressDropStatsEntry)(nil), "halproto.EgressDropStatsEntry")
	proto.RegisterType((*BufferDropStatsEntry)(nil), "halproto.BufferDropStatsEntry")
	proto.RegisterType((*BufferDropStats)(nil), "halproto.BufferDropStats")
	proto.RegisterType((*TableStatsEntry)(nil), "halproto.TableStatsEntry")
	proto.RegisterType((*TableStats)(nil), "halproto.TableStats")
	proto.RegisterType((*BufferStats)(nil), "halproto.BufferStats")
	proto.RegisterType((*OflowFifoDropStatsEntry)(nil), "halproto.OflowFifoDropStatsEntry")
	proto.RegisterType((*OflowFifoDropStats)(nil), "halproto.OflowFifoDropStats")
	proto.RegisterType((*OflowFifoStats)(nil), "halproto.OflowFifoStats")
	proto.RegisterType((*PacketBufferPortStats)(nil), "halproto.PacketBufferPortStats")
	proto.RegisterType((*PacketBufferStats)(nil), "halproto.PacketBufferStats")
	proto.RegisterType((*Status)(nil), "halproto.Status")
	proto.RegisterType((*SystemGetRequest)(nil), "halproto.SystemGetRequest")
	proto.RegisterType((*SystemResponse)(nil), "halproto.SystemResponse")
	proto.RegisterType((*Stats)(nil), "halproto.Stats")
	proto.RegisterType((*DropStats)(nil), "halproto.DropStats")
	proto.RegisterType((*EgressDropStats)(nil), "halproto.EgressDropStats")
	proto.RegisterType((*FTEError)(nil), "halproto.FTEError")
	proto.RegisterType((*FTEFeatureStats)(nil), "halproto.FTEFeatureStats")
	proto.RegisterType((*FTEStatsInfo)(nil), "halproto.FTEStatsInfo")
	proto.RegisterType((*FTEStats)(nil), "halproto.FTEStats")
	proto.RegisterType((*SessionSummaryStats)(nil), "halproto.SessionSummaryStats")
	proto.RegisterType((*QCtr)(nil), "halproto.QCtr")
	proto.RegisterType((*QGlobalInfo)(nil), "halproto.QGlobalInfo")
	proto.RegisterType((*QInfo)(nil), "halproto.QInfo")
	proto.RegisterType((*FTEInfo)(nil), "halproto.FTEInfo")
	proto.RegisterType((*PMDStats)(nil), "halproto.PMDStats")
	proto.RegisterType((*ForwardingModeResponse)(nil), "halproto.ForwardingModeResponse")
	proto.RegisterType((*FeatureProfileResponse)(nil), "halproto.FeatureProfileResponse")
	proto.RegisterEnum("halproto.ApiCounter", ApiCounter_name, ApiCounter_value)
	proto.RegisterEnum("halproto.BufferDropReasons", BufferDropReasons_name, BufferDropReasons_value)
	proto.RegisterEnum("halproto.TableType", TableType_name, TableType_value)
	proto.RegisterEnum("halproto.OflowFifoDropType", OflowFifoDropType_name, OflowFifoDropType_value)
	proto.RegisterEnum("halproto.SystemGetType", SystemGetType_name, SystemGetType_value)
	proto.RegisterEnum("halproto.ForwardingMode", ForwardingMode_name, ForwardingMode_value)
	proto.RegisterEnum("halproto.FeatureProfile", FeatureProfile_name, FeatureProfile_value)
}

func init() { proto.RegisterFile("system.proto", fileDescriptor28) }

var fileDescriptor28 = []byte{
	// 3812 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0xcb, 0x73, 0xdb, 0xe6,
	0x76, 0x37, 0x25, 0xea, 0xc1, 0xc3, 0xa7, 0xa0, 0xa7, 0x25, 0x3b, 0x96, 0xe9, 0xc4, 0x4e, 0x74,
	0x6d, 0xc5, 0x91, 0xe3, 0x9b, 0xa4, 0x4d, 0xee, 0x0d, 0x04, 0x82, 0x12, 0x1a, 0x8a, 0x80, 0x00,
	0xd0, 0x8f, 0xdb, 0xe9, 0x7c, 0x03, 0x91, 0x1f, 0x15, 0x4c, 0x48, 0x00, 0x02, 0x40, 0x5b, 0xf2,
	0xae, 0xab, 0x4e, 0x77, 0xbd, 0xd3, 0x6d, 0xb7, 0x9d, 0xee, 0xbb, 0xed, 0x3f, 0xd1, 0x99, 0x4e,
	0xfb, 0x07, 0x74, 0xd3, 0x4d, 0xb7, 0xdd, 0x77, 0xbe, 0x07, 0x9e, 0x24, 0x6d, 0xa7, 0xdd, 0xdc,
	0x95, 0x80, 0x73, 0x7e, 0xe7, 0x9c, 0xdf, 0x77, 0xce, 0xf9, 0x5e, 0x10, 0xa1, 0x12, 0xdc, 0x04,
	0x21, 0x1e, 0x1f, 0x7a, 0xbe, 0x1b, 0xba, 0xc2, 0x62, 0x70, 0x13, 0xec, 0x96, 0xc3, 0x1b, 0x0f,
	0x07, 0x4c, 0xb2, 0x5b, 0xba, 0x72, 0xf9, 0x63, 0xf3, 0x9f, 0x0a, 0x50, 0x15, 0x3d, 0xdb, 0x08,
	0xad, 0x30, 0x90, 0x9d, 0xd0, 0xbf, 0x11, 0x0e, 0x60, 0xd5, 0xf2, 0x6c, 0x44, 0xf0, 0x3b, 0x85,
	0xfd, 0xc2, 0xe7, 0xb5, 0xa3, 0xfa, 0x61, 0x70, 0x13, 0x1c, 0x8a, 0x9e, 0x2d, 0xb9, 0x13, 0x27,
	0xc4, 0xbe, 0xbe, 0x62, 0x79, 0xb6, 0x79, 0xe3, 0x61, 0x61, 0x1f, 0x2a, 0xce, 0x64, 0x8c, 0x08,
	0xbe, 0x6f, 0x8d, 0x46, 0x3b, 0x0b, 0xfb, 0x85, 0xcf, 0xab, 0x3a, 0x38, 0x93, 0x31, 0x41, 0x5b,
	0xa3, 0x91, 0xf0, 0x10, 0xea, 0x11, 0x22, 0x98, 0xf4, 0xfb, 0x38, 0x08, 0x76, 0x16, 0x29, 0xa8,
	0xca, 0x40, 0x06, 0x13, 0xa6, 0x3d, 0x0d, 0x2d, 0x7b, 0xb4, 0x53, 0x4c, 0x7b, 0x6a, 0x5b, 0xf6,
	0xa8, 0x79, 0x02, 0x8d, 0x88, 0xa8, 0x8e, 0x03, 0xcf, 0x75, 0x02, 0x2c, 0x3c, 0x83, 0x32, 0xb1,
	0xc0, 0x4e, 0xe8, 0xdb, 0x38, 0xd8, 0x29, 0xec, 0x2f, 0x7e, 0x5e, 0x3e, 0x12, 0x22, 0xba, 0xc9,
	0xa0, 0x74, 0xb0, 0x3c, 0x5b, 0x66, 0xa8, 0xe6, 0x5f, 0x41, 0xad, 0xe5, 0xbb, 0x5e, 0x6a, 0xc8,
	0x8f, 0x61, 0xc5, 0xc7, 0x56, 0xe0, 0x3a, 0x01, 0x1d, 0x31, 0x71, 0xc1, 0xd2, 0x45, 0x70, 0x3a,
	0xd3, 0xe8, 0x11, 0x44, 0xb8, 0x0b, 0x30, 0xf0, 0x5d, 0x0f, 0xf5, 0x49, 0x36, 0xe8, 0x90, 0x8b,
	0x7a, 0x89, 0x48, 0x68, 0x7a, 0x9a, 0x36, 0x6c, 0xc8, 0x97, 0x3e, 0x0e, 0x82, 0x5c, 0x90, 0xa3,
	0x7c, 0x90, 0x1d, 0x1e, 0x24, 0x41, 0xff, 0xda, 0x50, 0x97, 0xb0, 0x71, 0x3c, 0x19, 0x0e, 0xb1,
	0x9f, 0x0b, 0xf5, 0x34, 0x1b, 0xaa, 0x76, 0xb4, 0x45, 0x53, 0x92, 0x60, 0x3f, 0x22, 0x50, 0x35,
	0x1d, 0xe8, 0x1c, 0xea, 0xb9, 0x40, 0xc2, 0xef, 0xa0, 0x1a, 0x90, 0x87, 0x5c, 0xf2, 0x6f, 0xe7,
	0x22, 0xa5, 0x6a, 0x50, 0x09, 0xa2, 0x67, 0x52, 0x85, 0x7f, 0x5c, 0x84, 0xba, 0x69, 0x5d, 0x8c,
	0x70, 0x8a, 0xf7, 0x13, 0x80, 0x90, 0x88, 0xd2, 0xcd, 0x57, 0xa3, 0x0e, 0x29, 0x92, 0xb4, 0x9c,
	0x5e, 0x0a, 0xa3, 0x47, 0x42, 0x9a, 0xc1, 0x1d, 0x6b, 0x8c, 0x29, 0xe9, 0x12, 0x57, 0x77, 0xad,
	0x71, 0x4a, 0x1d, 0xd8, 0xef, 0x30, 0xef, 0x3a, 0xa6, 0x36, 0xec, 0x77, 0x58, 0x38, 0x84, 0x75,
	0xf7, 0x0d, 0xf6, 0x87, 0x23, 0xf7, 0x2d, 0x4a, 0xe1, 0x58, 0xe3, 0xad, 0x45, 0x2a, 0x33, 0xc6,
	0x7f, 0x0a, 0x35, 0x3e, 0x54, 0x64, 0x3b, 0x68, 0x12, 0xe0, 0x9d, 0x25, 0x0a, 0xad, 0x70, 0xa9,
	0xe2, 0xf4, 0x02, 0x2c, 0x3c, 0x87, 0xed, 0xd8, 0x6b, 0x0e, 0xbe, 0x4c, 0xe1, 0x1b, 0x91, 0x5a,
	0x4e, 0x9b, 0xdd, 0x83, 0x32, 0x69, 0x7f, 0xdb, 0x09, 0xb0, 0x1f, 0x06, 0x3b, 0x2b, 0x71, 0xf7,
	0x2b, 0x4c, 0x22, 0x1c, 0xc0, 0x5a, 0x02, 0x40, 0xd8, 0xf7, 0x5d, 0x3f, 0xd8, 0x59, 0xa5, 0xb0,
	0x7a, 0x0c, 0x93, 0xa9, 0x38, 0x72, 0x36, 0xc0, 0x23, 0x1c, 0xe2, 0x60, 0xa7, 0x14, 0x3b, 0x6b,
	0x31, 0x49, 0xe4, 0x8c, 0x01, 0x22, 0x67, 0x10, 0x3b, 0x63, 0x30, 0xe6, 0xac, 0x29, 0x01, 0x24,
	0x65, 0x12, 0x9e, 0x43, 0x99, 0xe7, 0x8a, 0xbc, 0xf2, 0x9a, 0x6f, 0x24, 0x25, 0x4a, 0x4f, 0xb9,
	0x30, 0x16, 0x34, 0xff, 0xb5, 0x00, 0x65, 0xd6, 0x13, 0xcc, 0xcd, 0x3e, 0x54, 0x82, 0xa8, 0xdb,
	0x90, 0xed, 0xd0, 0x52, 0x57, 0x75, 0x08, 0x78, 0xbf, 0x29, 0x0e, 0x41, 0xe0, 0x34, 0x82, 0xaf,
	0x2c, 0x38, 0x41, 0x34, 0xa1, 0x9a, 0xf8, 0x70, 0x27, 0x21, 0xaf, 0x70, 0x39, 0x72, 0xa2, 0x4e,
	0x42, 0x82, 0xc1, 0x19, 0x0c, 0xab, 0x6e, 0x19, 0xa7, 0x30, 0xcf, 0xa1, 0x9c, 0xb4, 0x7e, 0x40,
	0x8b, 0x1a, 0x0d, 0x29, 0xd7, 0xc6, 0x3a, 0xc4, 0x33, 0x22, 0x68, 0xfe, 0x25, 0x6c, 0xab, 0xa4,
	0x8c, 0x6d, 0x7b, 0xe8, 0xe6, 0xa6, 0xdf, 0x01, 0x14, 0x53, 0x0d, 0xcc, 0xe6, 0x5e, 0x06, 0x4b,
	0x1b, 0x99, 0x62, 0x84, 0x0d, 0x58, 0x4a, 0xcf, 0x39, 0xf6, 0xd2, 0x3c, 0x05, 0x61, 0xda, 0xb9,
	0x70, 0x04, 0x4b, 0xa4, 0xa5, 0x6e, 0x78, 0xda, 0xef, 0x4c, 0x3b, 0x4e, 0xa5, 0x9f, 0x41, 0x9b,
	0xff, 0x51, 0x80, 0x5a, 0x0c, 0xf9, 0xd3, 0x4b, 0xfe, 0xb7, 0xb3, 0x92, 0xbf, 0x3d, 0x67, 0x60,
	0x99, 0xfc, 0xff, 0x71, 0x01, 0x36, 0x35, 0xab, 0xff, 0x0b, 0x0e, 0x59, 0x95, 0x34, 0xd7, 0x0f,
	0xd9, 0xf8, 0x24, 0x10, 0x3c, 0xaa, 0x40, 0x17, 0x54, 0x83, 0x3c, 0xd7, 0x0f, 0xf9, 0x9a, 0xbb,
	0x79, 0x48, 0xb6, 0xbe, 0xbc, 0x9d, 0xde, 0xf0, 0x72, 0x12, 0xe1, 0x19, 0x54, 0xb8, 0x35, 0xeb,
	0xf4, 0x05, 0x6a, 0xde, 0x48, 0xb5, 0x05, 0xa3, 0x54, 0xbe, 0x48, 0xb5, 0xf5, 0x0f, 0xd0, 0x70,
	0xe9, 0xcc, 0x1f, 0xda, 0x43, 0x97, 0x1b, 0x2e, 0x52, 0xc3, 0xf5, 0xec, 0x90, 0x98, 0x6d, 0xcd,
	0xcd, 0x16, 0xe6, 0xf7, 0x50, 0xbf, 0x72, 0x03, 0x74, 0x35, 0xc1, 0x93, 0x68, 0x82, 0x15, 0x79,
	0x42, 0x08, 0xeb, 0x73, 0x37, 0x90, 0x46, 0x56, 0x10, 0x9c, 0x13, 0x3d, 0xf3, 0x50, 0xbd, 0x72,
	0x53, 0xaf, 0xcd, 0x2e, 0xac, 0xa5, 0x87, 0xc6, 0xbc, 0x7e, 0x07, 0x40, 0x12, 0x90, 0x99, 0xb1,
	0xbb, 0x94, 0xce, 0xcc, 0xf4, 0xe9, 0x25, 0x2f, 0x7a, 0x6c, 0xae, 0xc2, 0x32, 0x79, 0x98, 0x04,
	0xcd, 0x1f, 0xa1, 0x61, 0xd0, 0x33, 0xc5, 0x09, 0x0e, 0x75, 0x7c, 0x35, 0xc1, 0x41, 0xc8, 0x76,
	0x4d, 0xfa, 0xc8, 0x3b, 0x9d, 0x6d, 0xbc, 0x31, 0x8e, 0x76, 0x79, 0x04, 0x69, 0xfe, 0x43, 0x01,
	0x6a, 0x4c, 0x15, 0xef, 0xde, 0x5f, 0x02, 0xd0, 0x73, 0x01, 0x0d, 0xc1, 0x7d, 0x34, 0xf8, 0xa6,
	0xc8, 0xb7, 0xef, 0x49, 0xa0, 0x97, 0xac, 0xe8, 0x51, 0xd8, 0x87, 0xa5, 0x74, 0x35, 0x80, 0xc5,
	0xa3, 0xac, 0x99, 0x42, 0x78, 0x00, 0xcb, 0xdc, 0x1d, 0xcb, 0x7b, 0x39, 0x86, 0x4c, 0x02, 0x9d,
	0xab, 0x04, 0x01, 0x8a, 0x93, 0x89, 0x3d, 0xa0, 0xc9, 0x2d, 0xe9, 0xf4, 0xb9, 0xf9, 0xb7, 0x8b,
	0xb0, 0xc4, 0xf2, 0xf5, 0x84, 0x6f, 0x85, 0x51, 0xbe, 0x88, 0x1b, 0xb6, 0x09, 0x25, 0x8d, 0x48,
	0xb7, 0x46, 0x06, 0xff, 0x11, 0xd6, 0x30, 0xdd, 0xc0, 0x51, 0xca, 0x6a, 0x21, 0xb5, 0x88, 0xe4,
	0x0e, 0x03, 0x7a, 0x1d, 0x67, 0x05, 0xc2, 0xd3, 0xec, 0x9a, 0xca, 0x88, 0xd7, 0x73, 0x6b, 0x6a,
	0x7a, 0x39, 0x15, 0xda, 0xb0, 0x9e, 0xed, 0xf0, 0x74, 0xb3, 0x6c, 0x4d, 0xd5, 0x96, 0x39, 0x58,
	0xf3, 0xa6, 0x5a, 0xe3, 0x00, 0x4a, 0xc3, 0x30, 0x8a, 0xcb, 0xe6, 0x5e, 0x95, 0x5a, 0xb7, 0x4d,
	0x99, 0x19, 0xad, 0x0e, 0x43, 0x1c, 0xf5, 0x76, 0x35, 0xc0, 0x41, 0x60, 0xbb, 0x0e, 0xc7, 0x2f,
	0xf3, 0x43, 0x0c, 0x4d, 0x30, 0xd3, 0x18, 0x93, 0xf1, 0xd8, 0xf2, 0x6f, 0x98, 0x69, 0x85, 0xc3,
	0xe3, 0x50, 0xde, 0x78, 0xc0, 0x4d, 0x57, 0x52, 0xa1, 0xb4, 0xb3, 0x16, 0x0f, 0xe5, 0x8d, 0x07,
	0xac, 0xed, 0x24, 0x28, 0x25, 0xd9, 0xf9, 0x2d, 0x54, 0x68, 0x62, 0xb3, 0xc7, 0x8c, 0xf5, 0x6c,
	0x41, 0xd8, 0x92, 0x47, 0x97, 0x92, 0xe8, 0x7c, 0xa1, 0x42, 0x3d, 0x97, 0x79, 0xe1, 0xfb, 0x99,
	0xae, 0x6e, 0xcf, 0xaa, 0xd2, 0x0c, 0x87, 0x3f, 0xc0, 0x6a, 0xdb, 0x94, 0xe9, 0xae, 0x28, 0xec,
	0xb1, 0xc4, 0xd1, 0x9d, 0x93, 0xb6, 0x48, 0x89, 0x66, 0x8a, 0x29, 0x33, 0x4b, 0x7a, 0x31, 0x5a,
	0xd2, 0xff, 0xba, 0x00, 0xf5, 0xb6, 0x29, 0xb7, 0xb1, 0x15, 0x4e, 0x7c, 0x9e, 0xd3, 0xfb, 0x50,
	0x19, 0xb2, 0x77, 0x76, 0x84, 0x61, 0x9e, 0xca, 0x5c, 0x46, 0x0f, 0x31, 0x7b, 0x40, 0x7b, 0x0d,
	0x79, 0xbf, 0xf0, 0xb6, 0x2a, 0xea, 0xab, 0x44, 0xa0, 0xfd, 0x12, 0x06, 0xc2, 0x21, 0x5f, 0x3d,
	0xd9, 0x29, 0x6e, 0x67, 0x91, 0x8e, 0x27, 0xae, 0x20, 0x65, 0xc3, 0xd6, 0x4c, 0x76, 0xde, 0x6b,
	0xfe, 0x77, 0x11, 0x2a, 0x51, 0x69, 0x15, 0x67, 0xe8, 0x92, 0xd3, 0x79, 0xdf, 0x75, 0x1c, 0xe4,
	0x91, 0x1e, 0xc2, 0x7d, 0xd7, 0x19, 0x50, 0x0e, 0x45, 0xbd, 0x4a, 0xc4, 0x1a, 0xf6, 0x0d, 0x2a,
	0x24, 0x67, 0x1f, 0xba, 0xae, 0x8d, 0xed, 0x20, 0x48, 0x53, 0xa9, 0x10, 0xe9, 0x99, 0x1d, 0x04,
	0x94, 0xce, 0x23, 0xa8, 0xfb, 0x38, 0xf4, 0x2d, 0x27, 0x18, 0xdb, 0x21, 0x83, 0x2d, 0x52, 0x58,
	0x2d, 0x11, 0x53, 0xe0, 0x5d, 0x00, 0x1f, 0x0f, 0x6c, 0x9f, 0x61, 0x8a, 0xec, 0x58, 0x4b, 0x25,
	0x91, 0xba, 0x4f, 0xc3, 0x51, 0xf5, 0x12, 0x53, 0x53, 0x09, 0x55, 0x7f, 0x0a, 0xb5, 0xb0, 0xef,
	0xa1, 0xfe, 0xc8, 0x0d, 0x30, 0x83, 0x2c, 0x33, 0x32, 0x61, 0xdf, 0x93, 0x88, 0x30, 0x46, 0x8d,
	0x02, 0xe4, 0xf9, 0xee, 0xf5, 0x0d, 0x43, 0xad, 0x70, 0xd4, 0x28, 0xd0, 0x88, 0x30, 0x0a, 0x15,
	0xb8, 0xc3, 0xf0, 0x0a, 0xf9, 0xf8, 0x8a, 0x9d, 0xa7, 0x8a, 0x7a, 0x89, 0x4a, 0x74, 0x7c, 0x45,
	0x9d, 0xd0, 0xd5, 0x78, 0x80, 0xc2, 0x6b, 0xe6, 0xa4, 0xc4, 0x9c, 0x30, 0xa9, 0x79, 0x4d, 0x9d,
	0x3c, 0x81, 0xf5, 0xb1, 0x75, 0x8d, 0xf2, 0x99, 0x04, 0x0a, 0x6d, 0x8c, 0xad, 0x6b, 0x29, 0x93,
	0xcc, 0xc7, 0xd1, 0xfe, 0x14, 0xa4, 0xd1, 0x65, 0x86, 0xe6, 0x9a, 0x04, 0xfd, 0x0c, 0xb6, 0x88,
	0xf3, 0x19, 0x16, 0x15, 0x6a, 0x41, 0x42, 0x6b, 0x79, 0xa3, 0x3d, 0x60, 0x83, 0x40, 0x23, 0xec,
	0xec, 0x54, 0x59, 0xd7, 0x50, 0x41, 0x07, 0x3b, 0xc2, 0x63, 0x80, 0x61, 0x72, 0xec, 0xab, 0xcd,
	0x6a, 0x9a, 0x52, 0xd4, 0xcc, 0x64, 0xfb, 0xa8, 0x46, 0x3d, 0xca, 0x26, 0x6f, 0x3d, 0x75, 0xe6,
	0xcb, 0x35, 0xb4, 0x1e, 0xb5, 0x33, 0x9b, 0xc7, 0x21, 0x9d, 0x31, 0xac, 0xd5, 0x7f, 0xf5, 0x5a,
	0xff, 0x0d, 0xd4, 0xe2, 0xb5, 0x09, 0xd9, 0xce, 0xd0, 0xdd, 0x59, 0xa0, 0x81, 0xd7, 0x32, 0x0b,
	0x14, 0xe9, 0x62, 0xbd, 0x12, 0x2d, 0x52, 0xe4, 0xad, 0xf9, 0x5f, 0x45, 0x58, 0x9f, 0xb1, 0x1e,
	0x09, 0x47, 0xb0, 0x19, 0xba, 0xa1, 0x35, 0x42, 0x56, 0x3f, 0xb4, 0xdf, 0x60, 0xc4, 0x97, 0xa7,
	0x80, 0x77, 0xfc, 0x3a, 0x55, 0x8a, 0x54, 0xc7, 0xcd, 0xe9, 0x49, 0x7a, 0x74, 0x94, 0x20, 0x59,
	0xd3, 0xc3, 0xe8, 0x28, 0x06, 0xdc, 0x07, 0xd2, 0x75, 0x09, 0x82, 0xf5, 0x7b, 0x39, 0xec, 0x7b,
	0x31, 0xe4, 0x5b, 0xd8, 0x21, 0x10, 0x1c, 0x90, 0x05, 0xdc, 0x0e, 0x7e, 0xc6, 0x83, 0x04, 0xce,
	0x5a, 0x7f, 0x2b, 0xec, 0x7b, 0x72, 0xa2, 0x8e, 0x2d, 0x0f, 0x61, 0x3d, 0x6e, 0xf4, 0x94, 0x11,
	0x9b, 0x10, 0x6b, 0x51, 0xb7, 0x0f, 0xd2, 0x64, 0x26, 0x83, 0x14, 0x19, 0x36, 0x2d, 0xca, 0x93,
	0x41, 0x42, 0xe6, 0x01, 0x54, 0xed, 0xfe, 0x38, 0x85, 0xe1, 0x93, 0x82, 0x08, 0xd3, 0x20, 0xb6,
	0x97, 0x45, 0x20, 0x36, 0x2f, 0xe8, 0xe2, 0x99, 0x06, 0x59, 0x97, 0x69, 0x5a, 0x7c, 0x66, 0x10,
	0x61, 0x0c, 0xfa, 0x0d, 0x08, 0xe4, 0xa2, 0x41, 0x46, 0xe1, 0xe3, 0x00, 0x87, 0x28, 0xc0, 0x4e,
	0xc8, 0x27, 0x06, 0xb9, 0x69, 0x98, 0x7d, 0x4f, 0x27, 0x72, 0x03, 0x3b, 0x21, 0x99, 0x46, 0xf4,
	0x8a, 0x43, 0xf8, 0xd1, 0xe6, 0x64, 0x68, 0x3e, 0x31, 0xc8, 0x25, 0xa7, 0x3f, 0xf6, 0x68, 0x57,
	0x52, 0xb8, 0x0c, 0xf7, 0x08, 0x9c, 0xcc, 0x3a, 0xdc, 0x0f, 0xc9, 0xbe, 0x14, 0xda, 0x63, 0xec,
	0x4e, 0xc2, 0x84, 0x12, 0x9b, 0x21, 0x77, 0x9c, 0xc9, 0x58, 0x8a, 0x51, 0x26, 0x03, 0xc5, 0x14,
	0xbf, 0x83, 0xdb, 0xc4, 0x4d, 0xb4, 0xb7, 0xf5, 0x7d, 0x6c, 0x25, 0x93, 0x83, 0x4d, 0x9d, 0x2d,
	0x67, 0x32, 0xe6, 0x78, 0x89, 0xaa, 0xf9, 0xd5, 0xe8, 0xdf, 0x8b, 0x50, 0x3c, 0x97, 0x42, 0xba,
	0x1d, 0x04, 0xd8, 0x19, 0xb0, 0x15, 0xa2, 0xc0, 0xa7, 0x1b, 0x76, 0x06, 0x74, 0x75, 0xd8, 0x83,
	0x92, 0x8f, 0xfb, 0x6f, 0x32, 0x2b, 0x38, 0x11, 0x50, 0xe5, 0x7d, 0xa8, 0xfa, 0xd7, 0x28, 0xc0,
	0x63, 0xf4, 0xd6, 0x27, 0x41, 0xf9, 0x39, 0x1a, 0xfc, 0x6b, 0x03, 0x8f, 0x5f, 0xfa, 0xb2, 0xef,
	0x0b, 0x47, 0xb0, 0x45, 0x20, 0x23, 0x37, 0x44, 0x6f, 0xac, 0xd1, 0x04, 0x93, 0xd5, 0x7e, 0x40,
	0xb1, 0xec, 0x3c, 0x2d, 0xf8, 0xd7, 0xc6, 0xc8, 0x0d, 0x5f, 0x10, 0x9d, 0x8e, 0xad, 0x01, 0xb1,
	0xf9, 0x02, 0xd6, 0xfc, 0x6b, 0x34, 0xc0, 0x41, 0xdf, 0x4f, 0xe0, 0xec, 0xba, 0x5a, 0xf3, 0xaf,
	0x5b, 0x44, 0x1e, 0x41, 0x1f, 0xc3, 0x7a, 0x0c, 0x0d, 0x5d, 0xf4, 0xf3, 0x80, 0xf1, 0x60, 0x97,
	0xd5, 0x3a, 0x07, 0x9b, 0xee, 0xe9, 0xc0, 0xcf, 0x3b, 0x1e, 0xfa, 0x98, 0x26, 0x8a, 0xdf, 0x56,
	0x23, 0xc7, 0x6d, 0x1f, 0x63, 0x0e, 0x0d, 0xa7, 0xa0, 0xec, 0xc6, 0x5a, 0x0b, 0x67, 0x41, 0x3d,
	0xeb, 0x12, 0x23, 0x6b, 0x34, 0x72, 0xfb, 0x14, 0x5a, 0x8a, 0xa0, 0x9a, 0x75, 0x89, 0x45, 0x22,
	0x26, 0xd0, 0x47, 0xd0, 0x88, 0xa0, 0x7d, 0xd7, 0xbb, 0xa1, 0x48, 0x76, 0x73, 0xad, 0x32, 0xa4,
	0xe4, 0x7a, 0x37, 0x09, 0x90, 0x85, 0xf7, 0x2e, 0xc7, 0x14, 0x58, 0x8e, 0x80, 0x34, 0xba, 0x76,
	0x39, 0x26, 0xc0, 0x4f, 0xa0, 0x1c, 0x92, 0x12, 0x38, 0x2c, 0x4b, 0x15, 0xfe, 0x9d, 0xe0, 0xda,
	0xc0, 0xce, 0x54, 0x2e, 0xad, 0xc1, 0xc0, 0x47, 0xae, 0x7b, 0x41, 0x1b, 0x23, 0x19, 0xb2, 0x38,
	0x18, 0xf8, 0xaa, 0x7b, 0x41, 0x76, 0x13, 0xcf, 0x1d, 0x8d, 0xf8, 0x57, 0x94, 0x1a, 0xdb, 0x4d,
	0x88, 0x84, 0xde, 0x59, 0xc8, 0x6e, 0x4b, 0x28, 0xb9, 0xae, 0x7f, 0x81, 0x47, 0x23, 0x1a, 0xad,
	0x1e, 0x33, 0xe2, 0x52, 0xd9, 0xf7, 0x9b, 0xff, 0xb3, 0x08, 0xe5, 0xf3, 0x93, 0x91, 0x7b, 0x61,
	0x8d, 0xe8, 0x2e, 0xbd, 0x07, 0xa5, 0xcb, 0x3e, 0xf2, 0x6c, 0x67, 0x80, 0xaf, 0xf9, 0x6d, 0x6d,
	0xf5, 0xb2, 0xaf, 0xd1, 0x77, 0x32, 0xc5, 0xfa, 0xde, 0x04, 0x45, 0x49, 0xe1, 0x28, 0x76, 0x63,
	0xab, 0xf7, 0xbd, 0x89, 0x49, 0xb3, 0x32, 0x1b, 0xdc, 0x67, 0xe0, 0xc5, 0x1c, 0x58, 0x62, 0xe0,
	0x27, 0xb0, 0xce, 0xc1, 0x3c, 0x8b, 0x0c, 0xcd, 0xba, 0xae, 0x41, 0xd1, 0x2c, 0x8f, 0xb3, 0xe1,
	0xdc, 0xf9, 0x52, 0x1e, 0xce, 0xbd, 0x7f, 0x01, 0x6b, 0x04, 0x4e, 0x52, 0xeb, 0xc5, 0x60, 0xd6,
	0x75, 0xb5, 0xbe, 0x37, 0xd1, 0xaf, 0x5b, 0x5e, 0x04, 0x7d, 0x0a, 0x9b, 0x29, 0x28, 0x99, 0x2c,
	0x1c, 0xce, 0x1a, 0x6f, 0x2d, 0x82, 0x1b, 0x78, 0xcc, 0x2d, 0xbe, 0x81, 0xdb, 0x29, 0x8b, 0x99,
	0x3d, 0xb8, 0x11, 0x59, 0x65, 0x3a, 0xf1, 0x19, 0x6c, 0xe7, 0x42, 0xc5, 0x66, 0xac, 0x1f, 0x85,
	0x54, 0xb0, 0xc8, 0xa8, 0x0d, 0xf7, 0xa7, 0xa2, 0xd9, 0xce, 0x1b, 0x6b, 0x64, 0x0f, 0x12, 0x73,
	0xd6, 0xa4, 0x7b, 0x99, 0xa8, 0x0a, 0x03, 0x71, 0x3f, 0xcd, 0xff, 0x2c, 0xc0, 0xd2, 0x39, 0xad,
	0xf8, 0x6d, 0x58, 0x65, 0xb7, 0x40, 0x7b, 0xc0, 0x0b, 0xbe, 0x42, 0xdf, 0x15, 0xba, 0xb5, 0x5f,
	0x58, 0x01, 0xa6, 0xad, 0x18, 0x2d, 0x27, 0x44, 0x40, 0x7a, 0x90, 0xd8, 0x79, 0x7d, 0x94, 0xae,
	0xea, 0x8a, 0xd7, 0x57, 0x68, 0x4a, 0x9a, 0x50, 0x8d, 0x54, 0xcc, 0x96, 0xdf, 0xc6, 0xb9, 0x9e,
	0x9a, 0x3f, 0x84, 0x3a, 0x63, 0x7d, 0x61, 0xf3, 0xc5, 0x86, 0x6f, 0x36, 0x55, 0x2a, 0x3e, 0xb6,
	0xd9, 0x2a, 0x43, 0xfa, 0x9c, 0xd1, 0xa3, 0x9f, 0x39, 0x58, 0xd1, 0x4a, 0x54, 0x42, 0xbf, 0xcb,
	0xed, 0xc1, 0x62, 0x3f, 0xf4, 0xf9, 0x29, 0xbf, 0x44, 0xf7, 0x6b, 0xb2, 0x4c, 0xea, 0x44, 0xda,
	0x74, 0x60, 0xa5, 0x6d, 0xca, 0x1f, 0x1a, 0xe5, 0x43, 0x58, 0xba, 0x1c, 0x5d, 0x58, 0xa3, 0xcc,
	0xbd, 0x3b, 0x35, 0x27, 0x74, 0xa6, 0x26, 0x37, 0xc2, 0x2b, 0x7a, 0x38, 0x60, 0x67, 0x5f, 0x76,
	0x23, 0x3c, 0x67, 0x08, 0xaa, 0x68, 0x3e, 0x83, 0xd5, 0xe8, 0x8a, 0x21, 0x3c, 0x02, 0x72, 0x4a,
	0x67, 0xa7, 0x09, 0x76, 0xf8, 0xaf, 0x44, 0xa7, 0x09, 0x6a, 0xb2, 0x32, 0x0c, 0x31, 0x3d, 0x43,
	0xdc, 0xc0, 0x56, 0xdb, 0xf5, 0xdf, 0x5a, 0xfe, 0xc0, 0x76, 0x2e, 0xcf, 0xdc, 0x01, 0xfe, 0xbf,
	0xdf, 0x59, 0x0f, 0x61, 0x75, 0xf8, 0x76, 0x80, 0xc6, 0xee, 0x80, 0x7d, 0xa2, 0xac, 0xf1, 0xbb,
	0x4b, 0xce, 0xff, 0xca, 0xf0, 0xed, 0x80, 0x3c, 0x34, 0xff, 0xa6, 0x00, 0x5b, 0xfc, 0x4c, 0xa5,
	0xf9, 0xee, 0xd0, 0x1e, 0xfd, 0x3f, 0x62, 0x7f, 0x0f, 0xf5, 0xe8, 0xec, 0xe6, 0x31, 0x5f, 0x59,
	0x0a, 0xd9, 0x30, 0xb5, 0x61, 0xe6, 0xfd, 0xe0, 0x8f, 0x5b, 0x00, 0xc9, 0x47, 0x7f, 0x61, 0x03,
	0x1a, 0xa2, 0xa6, 0x20, 0x49, 0xed, 0x75, 0x4d, 0x59, 0x47, 0x5d, 0xb5, 0x2b, 0x37, 0x6e, 0x09,
	0xbb, 0xb0, 0x95, 0x96, 0xbe, 0xd0, 0xdb, 0x48, 0xd2, 0x65, 0xd1, 0x94, 0x1b, 0x85, 0x59, 0xba,
	0x9e, 0xd6, 0x22, 0xba, 0x85, 0x59, 0xba, 0x96, 0xdc, 0x91, 0x4d, 0xb9, 0xb1, 0x28, 0x6c, 0xc3,
	0x7a, 0x5e, 0x77, 0x22, 0x9b, 0x8d, 0x62, 0xde, 0x48, 0x94, 0x3a, 0x51, 0xb0, 0xa5, 0x59, 0x3a,
	0x1e, 0x6c, 0x79, 0x96, 0x8e, 0x07, 0x5b, 0xc9, 0x07, 0x23, 0x3a, 0x12, 0x6c, 0x55, 0xb8, 0x03,
	0x3b, 0x69, 0x85, 0xa4, 0xf5, 0xa4, 0xe3, 0x28, 0x5c, 0x69, 0xb6, 0x96, 0x07, 0x84, 0xd9, 0x5a,
	0x1e, 0xb2, 0x2c, 0xdc, 0x86, 0xcd, 0x69, 0x2d, 0x09, 0x5a, 0x11, 0xf6, 0xe1, 0x4e, 0x46, 0xa5,
	0xbf, 0xd6, 0x4c, 0x95, 0x48, 0x94, 0xee, 0x0b, 0xf5, 0x27, 0xb9, 0x51, 0x9d, 0x8d, 0xf8, 0x49,
	0x7e, 0x1d, 0x51, 0xab, 0xcd, 0x47, 0x70, 0x7a, 0xf5, 0xf9, 0x08, 0x4e, 0xb1, 0x21, 0x7c, 0x02,
	0xbb, 0xb3, 0x11, 0xba, 0x2c, 0xb6, 0x1a, 0x6b, 0xf9, 0x01, 0xb6, 0x64, 0x43, 0xd2, 0x45, 0x95,
	0xa5, 0x4e, 0x10, 0xee, 0xc1, 0x5e, 0x5a, 0x2b, 0x77, 0x5b, 0x9a, 0xaa, 0x74, 0xcd, 0x88, 0xe2,
	0xfa, 0x5c, 0x00, 0x67, 0xb8, 0x31, 0x17, 0xc0, 0x09, 0x6e, 0xe6, 0x09, 0xc4, 0x00, 0x42, 0x60,
	0x4b, 0x38, 0x84, 0x83, 0xb4, 0xf6, 0xa4, 0x6d, 0x22, 0xf9, 0x95, 0x28, 0x99, 0xe8, 0x4c, 0x34,
	0xa5, 0x53, 0xa4, 0xe9, 0x6a, 0x5b, 0xe9, 0xc8, 0x11, 0x9f, 0x6d, 0xe1, 0x1b, 0x78, 0x96, 0xc7,
	0x9f, 0xca, 0x62, 0x4b, 0xd6, 0x91, 0xa9, 0x8b, 0x5d, 0x43, 0x53, 0x0d, 0xc5, 0x54, 0xd4, 0x6e,
	0xde, 0x70, 0x47, 0xf8, 0x0a, 0x9e, 0xbc, 0x2f, 0x50, 0xbb, 0xa3, 0xbe, 0x44, 0x72, 0xd7, 0xd4,
	0xe3, 0xf2, 0xdc, 0x16, 0x9a, 0xf0, 0x49, 0xc6, 0x44, 0x36, 0x35, 0x5d, 0x3d, 0xd1, 0xc5, 0x33,
	0x24, 0xb6, 0x5a, 0xba, 0x6c, 0x18, 0x8d, 0xdd, 0x7c, 0x81, 0xc4, 0x4e, 0x47, 0x95, 0x4e, 0x8f,
	0x13, 0xc4, 0xde, 0x54, 0x09, 0xd5, 0x6e, 0x5b, 0x39, 0xe9, 0xe9, 0x72, 0x47, 0x69, 0xa3, 0xe3,
	0x56, 0xbb, 0x71, 0x27, 0x5f, 0x42, 0x45, 0x33, 0x64, 0x29, 0xe9, 0xe0, 0xbb, 0xf3, 0xf4, 0xbc,
	0x04, 0x9f, 0xcc, 0xd3, 0xf3, 0x0a, 0xdc, 0x13, 0xf6, 0x60, 0x7b, 0x96, 0x9e, 0x14, 0x60, 0x3f,
	0x4f, 0xaf, 0x73, 0x64, 0xc8, 0x27, 0x67, 0x72, 0xd2, 0x02, 0xf7, 0xe7, 0x23, 0x38, 0x81, 0xe6,
	0x7c, 0x04, 0xa7, 0xf0, 0x40, 0xb8, 0x0b, 0xb7, 0x67, 0x23, 0x08, 0x89, 0x4f, 0xf3, 0x99, 0xee,
	0x7c, 0xdd, 0x39, 0x36, 0x64, 0xfd, 0x85, 0x22, 0xc5, 0x05, 0xfc, 0x4c, 0xf8, 0x0c, 0xee, 0xa7,
	0x31, 0x67, 0xbd, 0x8e, 0xa9, 0x48, 0xa2, 0x61, 0x66, 0x8a, 0xf6, 0xf0, 0x03, 0x30, 0x4e, 0xf9,
	0xd1, 0x07, 0x60, 0x9c, 0xf7, 0xe7, 0x79, 0x62, 0x39, 0x18, 0x21, 0xff, 0x85, 0xf0, 0x10, 0x9a,
	0x69, 0x8c, 0x21, 0x4b, 0x3d, 0x5d, 0x31, 0x5f, 0xe7, 0x3a, 0xf0, 0xe0, 0x43, 0x38, 0x4e, 0xed,
	0x37, 0x1f, 0xc2, 0x71, 0x6e, 0x8f, 0x85, 0x07, 0x70, 0xef, 0x7d, 0x38, 0x42, 0xee, 0x89, 0x70,
	0x00, 0x0f, 0x67, 0x81, 0x4e, 0x74, 0xb5, 0xa7, 0x69, 0x6a, 0x47, 0x91, 0xe2, 0xd4, 0x1d, 0x7e,
	0x0c, 0x96, 0x93, 0xfc, 0xf2, 0x63, 0xb0, 0x9c, 0xe8, 0x53, 0xe1, 0x11, 0x3c, 0xf8, 0x10, 0x96,
	0x90, 0xfd, 0x4a, 0xf8, 0x14, 0xf6, 0xe7, 0x02, 0x23, 0x9a, 0x47, 0xef, 0x47, 0x71, 0x82, 0xcf,
	0xde, 0x8f, 0xe2, 0xd4, 0xbe, 0x16, 0xee, 0xc3, 0xdd, 0xf9, 0x28, 0x42, 0xea, 0x79, 0xbe, 0xb9,
	0x5b, 0xaa, 0x91, 0xcd, 0xdb, 0x6f, 0xe7, 0x23, 0x38, 0x99, 0x6f, 0xe6, 0x23, 0x38, 0x91, 0x6f,
	0xf3, 0x13, 0x24, 0x41, 0x10, 0x12, 0xdf, 0xe5, 0x57, 0x59, 0x4d, 0x57, 0x5f, 0xbd, 0x4e, 0xad,
	0x11, 0x7f, 0x36, 0x17, 0xc0, 0x29, 0xfc, 0xf9, 0x5c, 0x00, 0x67, 0xf0, 0x7d, 0x7e, 0x9d, 0x8e,
	0x01, 0x84, 0xc0, 0x0f, 0x33, 0xcd, 0xf5, 0x84, 0xc0, 0xef, 0xe6, 0x02, 0x38, 0x81, 0xdf, 0xcf,
	0x05, 0x70, 0x02, 0x3f, 0xce, 0x24, 0xa0, 0x73, 0x02, 0x62, 0xde, 0xfc, 0x5c, 0x35, 0xa4, 0x8e,
	0x68, 0x18, 0x11, 0x81, 0xe3, 0xb9, 0x00, 0x4e, 0x40, 0x9a, 0x0b, 0xe0, 0x04, 0x5a, 0x79, 0x02,
	0x31, 0x80, 0x10, 0x90, 0xf3, 0xab, 0xa8, 0xa4, 0x6a, 0x71, 0xb7, 0xb5, 0x85, 0x1d, 0xd8, 0x98,
	0x52, 0x12, 0xb3, 0x93, 0x7c, 0x61, 0x75, 0xf1, 0x65, 0xaa, 0x6e, 0xa7, 0x73, 0xd4, 0xdc, 0xaf,
	0x32, 0x47, 0xcd, 0x19, 0xff, 0x45, 0xfe, 0xb8, 0xc4, 0xd5, 0x24, 0xf0, 0x4f, 0xf9, 0xd1, 0x98,
	0x92, 0x96, 0xc4, 0xed, 0xcc, 0xd6, 0xf2, 0xb0, 0x67, 0xb3, 0xb5, 0x3c, 0x6a, 0x37, 0x7f, 0x2a,
	0x62, 0x5a, 0x12, 0x54, 0x9d, 0x32, 0xec, 0x18, 0x49, 0x50, 0x6d, 0xb6, 0x96, 0x07, 0x3d, 0x9f,
	0xad, 0xe5, 0x41, 0xf5, 0xa9, 0xa0, 0x54, 0x4b, 0x82, 0x1a, 0xc2, 0x3a, 0xd4, 0x33, 0x8b, 0xb4,
	0xf8, 0xaa, 0x61, 0x1e, 0xfc, 0xdb, 0x02, 0xac, 0x4d, 0xfd, 0x8c, 0x42, 0x10, 0xa0, 0xa6, 0x74,
	0x4d, 0x5d, 0xe9, 0x1a, 0x8a, 0x84, 0x5a, 0xba, 0xaa, 0x35, 0x6e, 0x09, 0x55, 0x28, 0xb5, 0x14,
	0x43, 0x12, 0xf5, 0x96, 0xdc, 0x6a, 0x14, 0x84, 0x0a, 0xac, 0x8a, 0xad, 0x33, 0xc5, 0x34, 0xe5,
	0x56, 0x63, 0x41, 0xd8, 0x84, 0x35, 0xb5, 0x67, 0x22, 0xb5, 0x8d, 0x24, 0xb9, 0xd3, 0x31, 0x98,
	0x0d, 0x3d, 0xf8, 0x4e, 0x89, 0xd1, 0x51, 0xa3, 0x28, 0x6c, 0x81, 0x10, 0x29, 0x74, 0xb9, 0xa5,
	0x98, 0xcc, 0x60, 0x89, 0x70, 0x34, 0xf5, 0x5e, 0x57, 0x12, 0xe9, 0xe9, 0x84, 0x0a, 0x97, 0x09,
	0x58, 0x53, 0x75, 0x13, 0xb5, 0x14, 0x43, 0x3c, 0xee, 0xc8, 0x2d, 0x26, 0x5f, 0x21, 0x63, 0x95,
	0x54, 0xed, 0x35, 0x32, 0x55, 0x72, 0xe4, 0x44, 0xa6, 0xa8, 0x74, 0x98, 0x6a, 0x95, 0x0c, 0xc0,
	0xd0, 0xc4, 0x6e, 0x4a, 0x56, 0x22, 0x9d, 0x79, 0xa6, 0x74, 0x91, 0xa1, 0xfc, 0x41, 0x46, 0x2f,
	0x14, 0xb5, 0x93, 0x8a, 0x01, 0x24, 0x86, 0xdc, 0x3d, 0xef, 0xc9, 0x3d, 0x19, 0xc9, 0xba, 0xae,
	0xea, 0x4c, 0x5e, 0x26, 0x03, 0x53, 0xba, 0x2f, 0xc4, 0x8e, 0xd2, 0x42, 0x8c, 0x03, 0x11, 0x57,
	0x48, 0xc3, 0x45, 0x62, 0xb5, 0x67, 0x6a, 0x3d, 0x13, 0x31, 0x5b, 0xaa, 0xae, 0x1e, 0xbc, 0x83,
	0x52, 0xfc, 0x03, 0x0f, 0x3a, 0x26, 0xc2, 0x1b, 0x99, 0xaf, 0x35, 0x39, 0xba, 0x66, 0x6c, 0x40,
	0x23, 0x25, 0x54, 0xba, 0x2d, 0xf9, 0x55, 0xa3, 0x90, 0x83, 0x9e, 0x8a, 0xc6, 0x69, 0x63, 0x81,
	0x4c, 0x9a, 0x9c, 0x10, 0x99, 0x92, 0x78, 0xd6, 0x58, 0xcc, 0xc1, 0xa9, 0xb0, 0x78, 0xf0, 0x2f,
	0x05, 0x58, 0x9b, 0xfa, 0xe7, 0x3c, 0x49, 0x88, 0x2a, 0x49, 0x3d, 0x4d, 0xec, 0x92, 0xe5, 0x94,
	0x55, 0x74, 0x1b, 0xd6, 0xe5, 0x33, 0x59, 0x3f, 0x91, 0x89, 0xcc, 0x30, 0x55, 0x8d, 0x29, 0x0a,
	0x64, 0xb9, 0x7f, 0xa9, 0x2b, 0xa6, 0x8c, 0x8e, 0x7b, 0xed, 0x36, 0xbd, 0x43, 0xfc, 0x84, 0xda,
	0x4a, 0x87, 0x5c, 0x40, 0x18, 0x64, 0x81, 0x1c, 0xa6, 0xa6, 0x21, 0xbd, 0x4e, 0x27, 0xaa, 0xfc,
	0x2e, 0x6c, 0x65, 0xf4, 0x89, 0x8e, 0xde, 0x7a, 0x24, 0xb5, 0x6b, 0xea, 0x6a, 0x07, 0xb5, 0x95,
	0xb6, 0x9a, 0xd2, 0x2d, 0x1d, 0xfc, 0x73, 0x01, 0xaa, 0x99, 0x7f, 0xb8, 0x92, 0xe1, 0x1b, 0xaf,
	0x0d, 0x53, 0x3e, 0x23, 0x6d, 0x8c, 0xda, 0xa6, 0x8c, 0x0c, 0x53, 0x34, 0x8d, 0xc6, 0x2d, 0x52,
	0x84, 0x9c, 0xc6, 0x7c, 0xa5, 0xbf, 0xe2, 0x6a, 0x7a, 0x5b, 0x4b, 0xa9, 0x59, 0xa2, 0x98, 0x6e,
	0x81, 0x0c, 0x3d, 0xa5, 0xd3, 0x8e, 0xb9, 0x62, 0x91, 0xf4, 0x54, 0x4a, 0x41, 0xfb, 0x95, 0xa9,
	0x8a, 0x39, 0x22, 0x62, 0xa7, 0xc3, 0x35, 0x4b, 0x07, 0x7f, 0x57, 0x80, 0x5a, 0xf6, 0xfa, 0x4b,
	0xc0, 0x6d, 0x55, 0x7f, 0x29, 0xea, 0x2d, 0xa5, 0x7b, 0x82, 0xce, 0xd4, 0x56, 0x5c, 0xf9, 0x3d,
	0xd8, 0xce, 0x6b, 0xe8, 0xfa, 0xa9, 0x48, 0x8d, 0x02, 0xd9, 0x01, 0xf3, 0x4a, 0xe3, 0x4c, 0xd4,
	0x4d, 0x64, 0xbc, 0x54, 0x4c, 0x89, 0x74, 0xc3, 0x67, 0x70, 0x7f, 0x36, 0xe2, 0x54, 0x35, 0x4c,
	0xa4, 0x29, 0xdd, 0xae, 0xdc, 0x6a, 0x2c, 0x1e, 0xbc, 0x83, 0x5a, 0xf6, 0x36, 0x4c, 0x19, 0xc9,
	0xa2, 0xd9, 0xd3, 0xe5, 0xf8, 0xd4, 0xcf, 0x19, 0x3d, 0x80, 0x7b, 0x79, 0x0d, 0x67, 0x84, 0x5a,
	0x72, 0x5b, 0xec, 0x75, 0xcc, 0x46, 0x41, 0xf8, 0x02, 0x3e, 0x9b, 0x07, 0x92, 0xcd, 0x53, 0xd4,
	0x92, 0x5f, 0x20, 0x43, 0x12, 0x3b, 0x72, 0x63, 0xe1, 0xe8, 0xef, 0x97, 0x60, 0x99, 0xd5, 0x50,
	0xf8, 0x1a, 0xca, 0xd1, 0xef, 0xd6, 0x4e, 0x70, 0x28, 0x54, 0xa2, 0x5f, 0x88, 0x8d, 0xbd, 0xf0,
	0x66, 0x77, 0x33, 0xf3, 0xbb, 0xb6, 0xe8, 0xab, 0x40, 0xf3, 0x96, 0xf0, 0x1d, 0x94, 0xe2, 0x1e,
	0x10, 0x36, 0xb3, 0xff, 0x84, 0xe7, 0xff, 0xac, 0xdf, 0x5d, 0x4f, 0x89, 0x53, 0xa6, 0x5f, 0x47,
	0xed, 0xd3, 0x9b, 0xd8, 0x83, 0xe9, 0x90, 0x73, 0xac, 0x9e, 0xc3, 0xa6, 0x34, 0xc2, 0x96, 0xaf,
	0x38, 0xb9, 0xff, 0xb0, 0x66, 0xad, 0x33, 0x6f, 0x34, 0xd8, 0x06, 0x35, 0x93, 0x7f, 0x95, 0xd5,
	0x53, 0x68, 0x50, 0x2b, 0xed, 0xe2, 0x63, 0x2d, 0x9e, 0x40, 0x95, 0x5a, 0xb4, 0xa3, 0xff, 0x5d,
	0xbf, 0x1f, 0xfe, 0x15, 0xac, 0x45, 0x70, 0xf3, 0x5a, 0xbf, 0xfe, 0x18, 0x93, 0x2f, 0xa1, 0x4e,
	0x4d, 0x52, 0xbf, 0x8c, 0x7a, 0xbf, 0xc1, 0x63, 0xa8, 0xf0, 0x41, 0x7c, 0x0c, 0xfa, 0x47, 0x58,
	0xcb, 0xce, 0x8f, 0xe9, 0xca, 0xec, 0xcd, 0xfa, 0x88, 0x94, 0x54, 0x88, 0x78, 0xc8, 0xf4, 0xf3,
	0x5c, 0x0f, 0x33, 0x3f, 0x35, 0x35, 0x6f, 0x1d, 0xc3, 0x1f, 0x56, 0x7f, 0xb6, 0x46, 0xf4, 0x47,
	0xa2, 0x17, 0xcb, 0xf4, 0xcf, 0xb3, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x92, 0xdf, 0xa4, 0x00,
	0x58, 0x2a, 0x00, 0x00,
}
