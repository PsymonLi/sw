// Code generated by protoc-gen-go. DO NOT EDIT.
// source: table.proto

package halproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Table Types
type TableKind int32

const (
	TableKind_TABLE_NONE  TableKind = 0
	TableKind_TABLE_INDEX TableKind = 1
	TableKind_TABLE_TCAM  TableKind = 2
	TableKind_TABLE_HASH  TableKind = 3
	TableKind_TABLE_FLOW  TableKind = 4
	TableKind_TABLE_MET   TableKind = 5
)

var TableKind_name = map[int32]string{
	0: "TABLE_NONE",
	1: "TABLE_INDEX",
	2: "TABLE_TCAM",
	3: "TABLE_HASH",
	4: "TABLE_FLOW",
	5: "TABLE_MET",
}
var TableKind_value = map[string]int32{
	"TABLE_NONE":  0,
	"TABLE_INDEX": 1,
	"TABLE_TCAM":  2,
	"TABLE_HASH":  3,
	"TABLE_FLOW":  4,
	"TABLE_MET":   5,
}

func (x TableKind) String() string {
	return proto.EnumName(TableKind_name, int32(x))
}
func (TableKind) EnumDescriptor() ([]byte, []int) { return fileDescriptor29, []int{0} }

// Index Metadata
type TableIndexMetadata struct {
	Capacity          uint32 `protobuf:"fixed32,1,opt,name=capacity" json:"capacity,omitempty"`
	Usage             uint32 `protobuf:"fixed32,2,opt,name=usage" json:"usage,omitempty"`
	NumInserts        uint32 `protobuf:"fixed32,3,opt,name=num_inserts,json=numInserts" json:"num_inserts,omitempty"`
	NumInsertFailures uint32 `protobuf:"fixed32,4,opt,name=num_insert_failures,json=numInsertFailures" json:"num_insert_failures,omitempty"`
	NumUpdates        uint32 `protobuf:"fixed32,5,opt,name=num_updates,json=numUpdates" json:"num_updates,omitempty"`
	NumUpdateFailures uint32 `protobuf:"fixed32,6,opt,name=num_update_failures,json=numUpdateFailures" json:"num_update_failures,omitempty"`
	NumDeletes        uint32 `protobuf:"fixed32,7,opt,name=num_deletes,json=numDeletes" json:"num_deletes,omitempty"`
	NumDeleteFailures uint32 `protobuf:"fixed32,8,opt,name=num_delete_failures,json=numDeleteFailures" json:"num_delete_failures,omitempty"`
}

func (m *TableIndexMetadata) Reset()                    { *m = TableIndexMetadata{} }
func (m *TableIndexMetadata) String() string            { return proto.CompactTextString(m) }
func (*TableIndexMetadata) ProtoMessage()               {}
func (*TableIndexMetadata) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{0} }

func (m *TableIndexMetadata) GetCapacity() uint32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *TableIndexMetadata) GetUsage() uint32 {
	if m != nil {
		return m.Usage
	}
	return 0
}

func (m *TableIndexMetadata) GetNumInserts() uint32 {
	if m != nil {
		return m.NumInserts
	}
	return 0
}

func (m *TableIndexMetadata) GetNumInsertFailures() uint32 {
	if m != nil {
		return m.NumInsertFailures
	}
	return 0
}

func (m *TableIndexMetadata) GetNumUpdates() uint32 {
	if m != nil {
		return m.NumUpdates
	}
	return 0
}

func (m *TableIndexMetadata) GetNumUpdateFailures() uint32 {
	if m != nil {
		return m.NumUpdateFailures
	}
	return 0
}

func (m *TableIndexMetadata) GetNumDeletes() uint32 {
	if m != nil {
		return m.NumDeletes
	}
	return 0
}

func (m *TableIndexMetadata) GetNumDeleteFailures() uint32 {
	if m != nil {
		return m.NumDeleteFailures
	}
	return 0
}

// Tcam Metadata
type TableTcamMetadata struct {
	Capacity          uint32 `protobuf:"fixed32,1,opt,name=capacity" json:"capacity,omitempty"`
	Usage             uint32 `protobuf:"fixed32,2,opt,name=usage" json:"usage,omitempty"`
	NumInserts        uint32 `protobuf:"fixed32,3,opt,name=num_inserts,json=numInserts" json:"num_inserts,omitempty"`
	NumInsertFailures uint32 `protobuf:"fixed32,4,opt,name=num_insert_failures,json=numInsertFailures" json:"num_insert_failures,omitempty"`
	NumUpdates        uint32 `protobuf:"fixed32,5,opt,name=num_updates,json=numUpdates" json:"num_updates,omitempty"`
	NumUpdateFailures uint32 `protobuf:"fixed32,6,opt,name=num_update_failures,json=numUpdateFailures" json:"num_update_failures,omitempty"`
	NumDeletes        uint32 `protobuf:"fixed32,7,opt,name=num_deletes,json=numDeletes" json:"num_deletes,omitempty"`
	NumDeleteFailures uint32 `protobuf:"fixed32,8,opt,name=num_delete_failures,json=numDeleteFailures" json:"num_delete_failures,omitempty"`
}

func (m *TableTcamMetadata) Reset()                    { *m = TableTcamMetadata{} }
func (m *TableTcamMetadata) String() string            { return proto.CompactTextString(m) }
func (*TableTcamMetadata) ProtoMessage()               {}
func (*TableTcamMetadata) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{1} }

func (m *TableTcamMetadata) GetCapacity() uint32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *TableTcamMetadata) GetUsage() uint32 {
	if m != nil {
		return m.Usage
	}
	return 0
}

func (m *TableTcamMetadata) GetNumInserts() uint32 {
	if m != nil {
		return m.NumInserts
	}
	return 0
}

func (m *TableTcamMetadata) GetNumInsertFailures() uint32 {
	if m != nil {
		return m.NumInsertFailures
	}
	return 0
}

func (m *TableTcamMetadata) GetNumUpdates() uint32 {
	if m != nil {
		return m.NumUpdates
	}
	return 0
}

func (m *TableTcamMetadata) GetNumUpdateFailures() uint32 {
	if m != nil {
		return m.NumUpdateFailures
	}
	return 0
}

func (m *TableTcamMetadata) GetNumDeletes() uint32 {
	if m != nil {
		return m.NumDeletes
	}
	return 0
}

func (m *TableTcamMetadata) GetNumDeleteFailures() uint32 {
	if m != nil {
		return m.NumDeleteFailures
	}
	return 0
}

// Hash Metadata
type TableHashMetadata struct {
	HasOtcam          bool   `protobuf:"varint,1,opt,name=has_otcam,json=hasOtcam" json:"has_otcam,omitempty"`
	Capacity          uint32 `protobuf:"fixed32,2,opt,name=capacity" json:"capacity,omitempty"`
	OtcamCapacity     uint32 `protobuf:"fixed32,3,opt,name=otcam_capacity,json=otcamCapacity" json:"otcam_capacity,omitempty"`
	HashUsage         uint32 `protobuf:"fixed32,4,opt,name=hash_usage,json=hashUsage" json:"hash_usage,omitempty"`
	OtcamUsage        uint32 `protobuf:"fixed32,5,opt,name=otcam_usage,json=otcamUsage" json:"otcam_usage,omitempty"`
	NumInserts        uint32 `protobuf:"fixed32,6,opt,name=num_inserts,json=numInserts" json:"num_inserts,omitempty"`
	NumInsertFailures uint32 `protobuf:"fixed32,7,opt,name=num_insert_failures,json=numInsertFailures" json:"num_insert_failures,omitempty"`
	NumUpdates        uint32 `protobuf:"fixed32,8,opt,name=num_updates,json=numUpdates" json:"num_updates,omitempty"`
	NumUpdateFailures uint32 `protobuf:"fixed32,9,opt,name=num_update_failures,json=numUpdateFailures" json:"num_update_failures,omitempty"`
	NumDeletes        uint32 `protobuf:"fixed32,10,opt,name=num_deletes,json=numDeletes" json:"num_deletes,omitempty"`
	NumDeleteFailures uint32 `protobuf:"fixed32,11,opt,name=num_delete_failures,json=numDeleteFailures" json:"num_delete_failures,omitempty"`
}

func (m *TableHashMetadata) Reset()                    { *m = TableHashMetadata{} }
func (m *TableHashMetadata) String() string            { return proto.CompactTextString(m) }
func (*TableHashMetadata) ProtoMessage()               {}
func (*TableHashMetadata) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{2} }

func (m *TableHashMetadata) GetHasOtcam() bool {
	if m != nil {
		return m.HasOtcam
	}
	return false
}

func (m *TableHashMetadata) GetCapacity() uint32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *TableHashMetadata) GetOtcamCapacity() uint32 {
	if m != nil {
		return m.OtcamCapacity
	}
	return 0
}

func (m *TableHashMetadata) GetHashUsage() uint32 {
	if m != nil {
		return m.HashUsage
	}
	return 0
}

func (m *TableHashMetadata) GetOtcamUsage() uint32 {
	if m != nil {
		return m.OtcamUsage
	}
	return 0
}

func (m *TableHashMetadata) GetNumInserts() uint32 {
	if m != nil {
		return m.NumInserts
	}
	return 0
}

func (m *TableHashMetadata) GetNumInsertFailures() uint32 {
	if m != nil {
		return m.NumInsertFailures
	}
	return 0
}

func (m *TableHashMetadata) GetNumUpdates() uint32 {
	if m != nil {
		return m.NumUpdates
	}
	return 0
}

func (m *TableHashMetadata) GetNumUpdateFailures() uint32 {
	if m != nil {
		return m.NumUpdateFailures
	}
	return 0
}

func (m *TableHashMetadata) GetNumDeletes() uint32 {
	if m != nil {
		return m.NumDeletes
	}
	return 0
}

func (m *TableHashMetadata) GetNumDeleteFailures() uint32 {
	if m != nil {
		return m.NumDeleteFailures
	}
	return 0
}

// Flow Metadata
type TableFlowMetadata struct {
	Capacity          uint32 `protobuf:"fixed32,1,opt,name=capacity" json:"capacity,omitempty"`
	CollCapacity      uint32 `protobuf:"fixed32,2,opt,name=coll_capacity,json=collCapacity" json:"coll_capacity,omitempty"`
	HashUsage         uint32 `protobuf:"fixed32,3,opt,name=hash_usage,json=hashUsage" json:"hash_usage,omitempty"`
	CollUsage         uint32 `protobuf:"fixed32,4,opt,name=coll_usage,json=collUsage" json:"coll_usage,omitempty"`
	NumInserts        uint32 `protobuf:"fixed32,5,opt,name=num_inserts,json=numInserts" json:"num_inserts,omitempty"`
	NumInsertFailures uint32 `protobuf:"fixed32,6,opt,name=num_insert_failures,json=numInsertFailures" json:"num_insert_failures,omitempty"`
	NumUpdates        uint32 `protobuf:"fixed32,7,opt,name=num_updates,json=numUpdates" json:"num_updates,omitempty"`
	NumUpdateFailures uint32 `protobuf:"fixed32,8,opt,name=num_update_failures,json=numUpdateFailures" json:"num_update_failures,omitempty"`
	NumDeletes        uint32 `protobuf:"fixed32,9,opt,name=num_deletes,json=numDeletes" json:"num_deletes,omitempty"`
	NumDeleteFailures uint32 `protobuf:"fixed32,10,opt,name=num_delete_failures,json=numDeleteFailures" json:"num_delete_failures,omitempty"`
}

func (m *TableFlowMetadata) Reset()                    { *m = TableFlowMetadata{} }
func (m *TableFlowMetadata) String() string            { return proto.CompactTextString(m) }
func (*TableFlowMetadata) ProtoMessage()               {}
func (*TableFlowMetadata) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{3} }

func (m *TableFlowMetadata) GetCapacity() uint32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *TableFlowMetadata) GetCollCapacity() uint32 {
	if m != nil {
		return m.CollCapacity
	}
	return 0
}

func (m *TableFlowMetadata) GetHashUsage() uint32 {
	if m != nil {
		return m.HashUsage
	}
	return 0
}

func (m *TableFlowMetadata) GetCollUsage() uint32 {
	if m != nil {
		return m.CollUsage
	}
	return 0
}

func (m *TableFlowMetadata) GetNumInserts() uint32 {
	if m != nil {
		return m.NumInserts
	}
	return 0
}

func (m *TableFlowMetadata) GetNumInsertFailures() uint32 {
	if m != nil {
		return m.NumInsertFailures
	}
	return 0
}

func (m *TableFlowMetadata) GetNumUpdates() uint32 {
	if m != nil {
		return m.NumUpdates
	}
	return 0
}

func (m *TableFlowMetadata) GetNumUpdateFailures() uint32 {
	if m != nil {
		return m.NumUpdateFailures
	}
	return 0
}

func (m *TableFlowMetadata) GetNumDeletes() uint32 {
	if m != nil {
		return m.NumDeletes
	}
	return 0
}

func (m *TableFlowMetadata) GetNumDeleteFailures() uint32 {
	if m != nil {
		return m.NumDeleteFailures
	}
	return 0
}

// Met Metadata
type TableMetMetadata struct {
	Capacity          uint32 `protobuf:"fixed32,1,opt,name=capacity" json:"capacity,omitempty"`
	Usage             uint32 `protobuf:"fixed32,2,opt,name=usage" json:"usage,omitempty"`
	NumInserts        uint32 `protobuf:"fixed32,3,opt,name=num_inserts,json=numInserts" json:"num_inserts,omitempty"`
	NumInsertFailures uint32 `protobuf:"fixed32,4,opt,name=num_insert_failures,json=numInsertFailures" json:"num_insert_failures,omitempty"`
	NumUpdates        uint32 `protobuf:"fixed32,5,opt,name=num_updates,json=numUpdates" json:"num_updates,omitempty"`
	NumUpdateFailures uint32 `protobuf:"fixed32,6,opt,name=num_update_failures,json=numUpdateFailures" json:"num_update_failures,omitempty"`
	NumDeletes        uint32 `protobuf:"fixed32,7,opt,name=num_deletes,json=numDeletes" json:"num_deletes,omitempty"`
	NumDeleteFailures uint32 `protobuf:"fixed32,8,opt,name=num_delete_failures,json=numDeleteFailures" json:"num_delete_failures,omitempty"`
}

func (m *TableMetMetadata) Reset()                    { *m = TableMetMetadata{} }
func (m *TableMetMetadata) String() string            { return proto.CompactTextString(m) }
func (*TableMetMetadata) ProtoMessage()               {}
func (*TableMetMetadata) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{4} }

func (m *TableMetMetadata) GetCapacity() uint32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *TableMetMetadata) GetUsage() uint32 {
	if m != nil {
		return m.Usage
	}
	return 0
}

func (m *TableMetMetadata) GetNumInserts() uint32 {
	if m != nil {
		return m.NumInserts
	}
	return 0
}

func (m *TableMetMetadata) GetNumInsertFailures() uint32 {
	if m != nil {
		return m.NumInsertFailures
	}
	return 0
}

func (m *TableMetMetadata) GetNumUpdates() uint32 {
	if m != nil {
		return m.NumUpdates
	}
	return 0
}

func (m *TableMetMetadata) GetNumUpdateFailures() uint32 {
	if m != nil {
		return m.NumUpdateFailures
	}
	return 0
}

func (m *TableMetMetadata) GetNumDeletes() uint32 {
	if m != nil {
		return m.NumDeletes
	}
	return 0
}

func (m *TableMetMetadata) GetNumDeleteFailures() uint32 {
	if m != nil {
		return m.NumDeleteFailures
	}
	return 0
}

// Table Metadata
type TableMetadata struct {
	TableName string    `protobuf:"bytes,1,opt,name=table_name,json=tableName" json:"table_name,omitempty"`
	TableId   uint32    `protobuf:"fixed32,2,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	Kind      TableKind `protobuf:"varint,3,opt,name=kind,enum=table.TableKind" json:"kind,omitempty"`
	// Types that are valid to be assigned to Metadata:
	//	*TableMetadata_IndexMeta
	//	*TableMetadata_TcamMeta
	//	*TableMetadata_HashMeta
	//	*TableMetadata_FlowMeta
	//	*TableMetadata_MetMeta
	Metadata isTableMetadata_Metadata `protobuf_oneof:"metadata"`
}

func (m *TableMetadata) Reset()                    { *m = TableMetadata{} }
func (m *TableMetadata) String() string            { return proto.CompactTextString(m) }
func (*TableMetadata) ProtoMessage()               {}
func (*TableMetadata) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{5} }

type isTableMetadata_Metadata interface{ isTableMetadata_Metadata() }

type TableMetadata_IndexMeta struct {
	IndexMeta *TableIndexMetadata `protobuf:"bytes,4,opt,name=index_meta,json=indexMeta,oneof"`
}
type TableMetadata_TcamMeta struct {
	TcamMeta *TableTcamMetadata `protobuf:"bytes,5,opt,name=tcam_meta,json=tcamMeta,oneof"`
}
type TableMetadata_HashMeta struct {
	HashMeta *TableHashMetadata `protobuf:"bytes,6,opt,name=hash_meta,json=hashMeta,oneof"`
}
type TableMetadata_FlowMeta struct {
	FlowMeta *TableFlowMetadata `protobuf:"bytes,7,opt,name=flow_meta,json=flowMeta,oneof"`
}
type TableMetadata_MetMeta struct {
	MetMeta *TableMetMetadata `protobuf:"bytes,8,opt,name=met_meta,json=metMeta,oneof"`
}

func (*TableMetadata_IndexMeta) isTableMetadata_Metadata() {}
func (*TableMetadata_TcamMeta) isTableMetadata_Metadata()  {}
func (*TableMetadata_HashMeta) isTableMetadata_Metadata()  {}
func (*TableMetadata_FlowMeta) isTableMetadata_Metadata()  {}
func (*TableMetadata_MetMeta) isTableMetadata_Metadata()   {}

func (m *TableMetadata) GetMetadata() isTableMetadata_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *TableMetadata) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

func (m *TableMetadata) GetTableId() uint32 {
	if m != nil {
		return m.TableId
	}
	return 0
}

func (m *TableMetadata) GetKind() TableKind {
	if m != nil {
		return m.Kind
	}
	return TableKind_TABLE_NONE
}

func (m *TableMetadata) GetIndexMeta() *TableIndexMetadata {
	if x, ok := m.GetMetadata().(*TableMetadata_IndexMeta); ok {
		return x.IndexMeta
	}
	return nil
}

func (m *TableMetadata) GetTcamMeta() *TableTcamMetadata {
	if x, ok := m.GetMetadata().(*TableMetadata_TcamMeta); ok {
		return x.TcamMeta
	}
	return nil
}

func (m *TableMetadata) GetHashMeta() *TableHashMetadata {
	if x, ok := m.GetMetadata().(*TableMetadata_HashMeta); ok {
		return x.HashMeta
	}
	return nil
}

func (m *TableMetadata) GetFlowMeta() *TableFlowMetadata {
	if x, ok := m.GetMetadata().(*TableMetadata_FlowMeta); ok {
		return x.FlowMeta
	}
	return nil
}

func (m *TableMetadata) GetMetMeta() *TableMetMetadata {
	if x, ok := m.GetMetadata().(*TableMetadata_MetMeta); ok {
		return x.MetMeta
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TableMetadata) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TableMetadata_OneofMarshaler, _TableMetadata_OneofUnmarshaler, _TableMetadata_OneofSizer, []interface{}{
		(*TableMetadata_IndexMeta)(nil),
		(*TableMetadata_TcamMeta)(nil),
		(*TableMetadata_HashMeta)(nil),
		(*TableMetadata_FlowMeta)(nil),
		(*TableMetadata_MetMeta)(nil),
	}
}

func _TableMetadata_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TableMetadata)
	// metadata
	switch x := m.Metadata.(type) {
	case *TableMetadata_IndexMeta:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IndexMeta); err != nil {
			return err
		}
	case *TableMetadata_TcamMeta:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TcamMeta); err != nil {
			return err
		}
	case *TableMetadata_HashMeta:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HashMeta); err != nil {
			return err
		}
	case *TableMetadata_FlowMeta:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FlowMeta); err != nil {
			return err
		}
	case *TableMetadata_MetMeta:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MetMeta); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TableMetadata.Metadata has unexpected type %T", x)
	}
	return nil
}

func _TableMetadata_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TableMetadata)
	switch tag {
	case 4: // metadata.index_meta
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TableIndexMetadata)
		err := b.DecodeMessage(msg)
		m.Metadata = &TableMetadata_IndexMeta{msg}
		return true, err
	case 5: // metadata.tcam_meta
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TableTcamMetadata)
		err := b.DecodeMessage(msg)
		m.Metadata = &TableMetadata_TcamMeta{msg}
		return true, err
	case 6: // metadata.hash_meta
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TableHashMetadata)
		err := b.DecodeMessage(msg)
		m.Metadata = &TableMetadata_HashMeta{msg}
		return true, err
	case 7: // metadata.flow_meta
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TableFlowMetadata)
		err := b.DecodeMessage(msg)
		m.Metadata = &TableMetadata_FlowMeta{msg}
		return true, err
	case 8: // metadata.met_meta
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TableMetMetadata)
		err := b.DecodeMessage(msg)
		m.Metadata = &TableMetadata_MetMeta{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TableMetadata_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TableMetadata)
	// metadata
	switch x := m.Metadata.(type) {
	case *TableMetadata_IndexMeta:
		s := proto.Size(x.IndexMeta)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TableMetadata_TcamMeta:
		s := proto.Size(x.TcamMeta)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TableMetadata_HashMeta:
		s := proto.Size(x.HashMeta)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TableMetadata_FlowMeta:
		s := proto.Size(x.FlowMeta)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TableMetadata_MetMeta:
		s := proto.Size(x.MetMeta)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Table metadata response message
type TableMetadataResponseMsg struct {
	ApiStatus ApiStatus        `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	TableMeta []*TableMetadata `protobuf:"bytes,2,rep,name=table_meta,json=tableMeta" json:"table_meta,omitempty"`
}

func (m *TableMetadataResponseMsg) Reset()                    { *m = TableMetadataResponseMsg{} }
func (m *TableMetadataResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*TableMetadataResponseMsg) ProtoMessage()               {}
func (*TableMetadataResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{6} }

func (m *TableMetadataResponseMsg) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *TableMetadataResponseMsg) GetTableMeta() []*TableMetadata {
	if m != nil {
		return m.TableMeta
	}
	return nil
}

type TableIdName struct {
	// Types that are valid to be assigned to IdOrName:
	//	*TableIdName_TableName
	//	*TableIdName_TableId
	IdOrName isTableIdName_IdOrName `protobuf_oneof:"id_or_name"`
}

func (m *TableIdName) Reset()                    { *m = TableIdName{} }
func (m *TableIdName) String() string            { return proto.CompactTextString(m) }
func (*TableIdName) ProtoMessage()               {}
func (*TableIdName) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{7} }

type isTableIdName_IdOrName interface{ isTableIdName_IdOrName() }

type TableIdName_TableName struct {
	TableName string `protobuf:"bytes,1,opt,name=table_name,json=tableName,oneof"`
}
type TableIdName_TableId struct {
	TableId uint32 `protobuf:"fixed32,2,opt,name=table_id,json=tableId,oneof"`
}

func (*TableIdName_TableName) isTableIdName_IdOrName() {}
func (*TableIdName_TableId) isTableIdName_IdOrName()   {}

func (m *TableIdName) GetIdOrName() isTableIdName_IdOrName {
	if m != nil {
		return m.IdOrName
	}
	return nil
}

func (m *TableIdName) GetTableName() string {
	if x, ok := m.GetIdOrName().(*TableIdName_TableName); ok {
		return x.TableName
	}
	return ""
}

func (m *TableIdName) GetTableId() uint32 {
	if x, ok := m.GetIdOrName().(*TableIdName_TableId); ok {
		return x.TableId
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TableIdName) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TableIdName_OneofMarshaler, _TableIdName_OneofUnmarshaler, _TableIdName_OneofSizer, []interface{}{
		(*TableIdName_TableName)(nil),
		(*TableIdName_TableId)(nil),
	}
}

func _TableIdName_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TableIdName)
	// id_or_name
	switch x := m.IdOrName.(type) {
	case *TableIdName_TableName:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.TableName)
	case *TableIdName_TableId:
		b.EncodeVarint(2<<3 | proto.WireFixed32)
		b.EncodeFixed32(uint64(x.TableId))
	case nil:
	default:
		return fmt.Errorf("TableIdName.IdOrName has unexpected type %T", x)
	}
	return nil
}

func _TableIdName_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TableIdName)
	switch tag {
	case 1: // id_or_name.table_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.IdOrName = &TableIdName_TableName{x}
		return true, err
	case 2: // id_or_name.table_id
		if wire != proto.WireFixed32 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed32()
		m.IdOrName = &TableIdName_TableId{uint32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _TableIdName_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TableIdName)
	// id_or_name
	switch x := m.IdOrName.(type) {
	case *TableIdName_TableName:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.TableName)))
		n += len(x.TableName)
	case *TableIdName_TableId:
		n += proto.SizeVarint(2<<3 | proto.WireFixed32)
		n += 4
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type TableSpec struct {
	Key *TableIdName `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (m *TableSpec) Reset()                    { *m = TableSpec{} }
func (m *TableSpec) String() string            { return proto.CompactTextString(m) }
func (*TableSpec) ProtoMessage()               {}
func (*TableSpec) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{8} }

func (m *TableSpec) GetKey() *TableIdName {
	if m != nil {
		return m.Key
	}
	return nil
}

type TableRequestMsg struct {
	Spec []*TableSpec `protobuf:"bytes,1,rep,name=spec" json:"spec,omitempty"`
}

func (m *TableRequestMsg) Reset()                    { *m = TableRequestMsg{} }
func (m *TableRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*TableRequestMsg) ProtoMessage()               {}
func (*TableRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{9} }

func (m *TableRequestMsg) GetSpec() []*TableSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type TableIndexEntry struct {
	Index uint32 `protobuf:"fixed32,1,opt,name=index" json:"index,omitempty"`
	Entry string `protobuf:"bytes,2,opt,name=entry" json:"entry,omitempty"`
}

func (m *TableIndexEntry) Reset()                    { *m = TableIndexEntry{} }
func (m *TableIndexEntry) String() string            { return proto.CompactTextString(m) }
func (*TableIndexEntry) ProtoMessage()               {}
func (*TableIndexEntry) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{10} }

func (m *TableIndexEntry) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *TableIndexEntry) GetEntry() string {
	if m != nil {
		return m.Entry
	}
	return ""
}

type TableIndexMsg struct {
	IndexEntry []*TableIndexEntry `protobuf:"bytes,1,rep,name=index_entry,json=indexEntry" json:"index_entry,omitempty"`
}

func (m *TableIndexMsg) Reset()                    { *m = TableIndexMsg{} }
func (m *TableIndexMsg) String() string            { return proto.CompactTextString(m) }
func (*TableIndexMsg) ProtoMessage()               {}
func (*TableIndexMsg) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{11} }

func (m *TableIndexMsg) GetIndexEntry() []*TableIndexEntry {
	if m != nil {
		return m.IndexEntry
	}
	return nil
}

type TableTcamEntry struct {
	Index uint32 `protobuf:"fixed32,1,opt,name=index" json:"index,omitempty"`
	Entry string `protobuf:"bytes,2,opt,name=entry" json:"entry,omitempty"`
}

func (m *TableTcamEntry) Reset()                    { *m = TableTcamEntry{} }
func (m *TableTcamEntry) String() string            { return proto.CompactTextString(m) }
func (*TableTcamEntry) ProtoMessage()               {}
func (*TableTcamEntry) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{12} }

func (m *TableTcamEntry) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *TableTcamEntry) GetEntry() string {
	if m != nil {
		return m.Entry
	}
	return ""
}

type TableTcamMsg struct {
	TcamEntry []*TableTcamEntry `protobuf:"bytes,1,rep,name=tcam_entry,json=tcamEntry" json:"tcam_entry,omitempty"`
}

func (m *TableTcamMsg) Reset()                    { *m = TableTcamMsg{} }
func (m *TableTcamMsg) String() string            { return proto.CompactTextString(m) }
func (*TableTcamMsg) ProtoMessage()               {}
func (*TableTcamMsg) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{13} }

func (m *TableTcamMsg) GetTcamEntry() []*TableTcamEntry {
	if m != nil {
		return m.TcamEntry
	}
	return nil
}

type TableHashEntry struct {
	InOtcam bool   `protobuf:"varint,1,opt,name=in_otcam,json=inOtcam" json:"in_otcam,omitempty"`
	Index   uint32 `protobuf:"fixed32,2,opt,name=index" json:"index,omitempty"`
	Entry   string `protobuf:"bytes,3,opt,name=entry" json:"entry,omitempty"`
}

func (m *TableHashEntry) Reset()                    { *m = TableHashEntry{} }
func (m *TableHashEntry) String() string            { return proto.CompactTextString(m) }
func (*TableHashEntry) ProtoMessage()               {}
func (*TableHashEntry) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{14} }

func (m *TableHashEntry) GetInOtcam() bool {
	if m != nil {
		return m.InOtcam
	}
	return false
}

func (m *TableHashEntry) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *TableHashEntry) GetEntry() string {
	if m != nil {
		return m.Entry
	}
	return ""
}

type TableHashMsg struct {
	HashEntry []*TableHashEntry `protobuf:"bytes,1,rep,name=hash_entry,json=hashEntry" json:"hash_entry,omitempty"`
}

func (m *TableHashMsg) Reset()                    { *m = TableHashMsg{} }
func (m *TableHashMsg) String() string            { return proto.CompactTextString(m) }
func (*TableHashMsg) ProtoMessage()               {}
func (*TableHashMsg) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{15} }

func (m *TableHashMsg) GetHashEntry() []*TableHashEntry {
	if m != nil {
		return m.HashEntry
	}
	return nil
}

type TableFlowEntry struct {
	PrimaryIndexValid   bool   `protobuf:"varint,1,opt,name=primary_index_valid,json=primaryIndexValid" json:"primary_index_valid,omitempty"`
	PrimaryIndex        uint32 `protobuf:"varint,2,opt,name=primary_index,json=primaryIndex" json:"primary_index,omitempty"`
	SecondaryIndexValid bool   `protobuf:"varint,3,opt,name=secondary_index_valid,json=secondaryIndexValid" json:"secondary_index_valid,omitempty"`
	SecondaryIndex      uint32 `protobuf:"varint,4,opt,name=secondary_index,json=secondaryIndex" json:"secondary_index,omitempty"`
	Key                 string `protobuf:"bytes,5,opt,name=key" json:"key,omitempty"`
	Data                string `protobuf:"bytes,6,opt,name=data" json:"data,omitempty"`
}

func (m *TableFlowEntry) Reset()                    { *m = TableFlowEntry{} }
func (m *TableFlowEntry) String() string            { return proto.CompactTextString(m) }
func (*TableFlowEntry) ProtoMessage()               {}
func (*TableFlowEntry) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{16} }

func (m *TableFlowEntry) GetPrimaryIndexValid() bool {
	if m != nil {
		return m.PrimaryIndexValid
	}
	return false
}

func (m *TableFlowEntry) GetPrimaryIndex() uint32 {
	if m != nil {
		return m.PrimaryIndex
	}
	return 0
}

func (m *TableFlowEntry) GetSecondaryIndexValid() bool {
	if m != nil {
		return m.SecondaryIndexValid
	}
	return false
}

func (m *TableFlowEntry) GetSecondaryIndex() uint32 {
	if m != nil {
		return m.SecondaryIndex
	}
	return 0
}

func (m *TableFlowEntry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TableFlowEntry) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type TableFlowMsg struct {
	FlowEntry []*TableFlowEntry `protobuf:"bytes,1,rep,name=flow_entry,json=flowEntry" json:"flow_entry,omitempty"`
}

func (m *TableFlowMsg) Reset()                    { *m = TableFlowMsg{} }
func (m *TableFlowMsg) String() string            { return proto.CompactTextString(m) }
func (*TableFlowMsg) ProtoMessage()               {}
func (*TableFlowMsg) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{17} }

func (m *TableFlowMsg) GetFlowEntry() []*TableFlowEntry {
	if m != nil {
		return m.FlowEntry
	}
	return nil
}

type TableMetEntry struct {
	Index uint32 `protobuf:"fixed32,1,opt,name=index" json:"index,omitempty"`
	Entry string `protobuf:"bytes,2,opt,name=entry" json:"entry,omitempty"`
}

func (m *TableMetEntry) Reset()                    { *m = TableMetEntry{} }
func (m *TableMetEntry) String() string            { return proto.CompactTextString(m) }
func (*TableMetEntry) ProtoMessage()               {}
func (*TableMetEntry) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{18} }

func (m *TableMetEntry) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *TableMetEntry) GetEntry() string {
	if m != nil {
		return m.Entry
	}
	return ""
}

type TableMetMsg struct {
	MetEntry []*TableMetEntry `protobuf:"bytes,1,rep,name=met_entry,json=metEntry" json:"met_entry,omitempty"`
}

func (m *TableMetMsg) Reset()                    { *m = TableMetMsg{} }
func (m *TableMetMsg) String() string            { return proto.CompactTextString(m) }
func (*TableMetMsg) ProtoMessage()               {}
func (*TableMetMsg) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{19} }

func (m *TableMetMsg) GetMetEntry() []*TableMetEntry {
	if m != nil {
		return m.MetEntry
	}
	return nil
}

type TableResponse struct {
	ApiStatus ApiStatus `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	// Types that are valid to be assigned to TableEntry:
	//	*TableResponse_IndexTable
	//	*TableResponse_TcamTable
	//	*TableResponse_HashTable
	//	*TableResponse_FlowTable
	//	*TableResponse_MetTable
	TableEntry isTableResponse_TableEntry `protobuf_oneof:"TableEntry"`
}

func (m *TableResponse) Reset()                    { *m = TableResponse{} }
func (m *TableResponse) String() string            { return proto.CompactTextString(m) }
func (*TableResponse) ProtoMessage()               {}
func (*TableResponse) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{20} }

type isTableResponse_TableEntry interface{ isTableResponse_TableEntry() }

type TableResponse_IndexTable struct {
	IndexTable *TableIndexMsg `protobuf:"bytes,2,opt,name=index_table,json=indexTable,oneof"`
}
type TableResponse_TcamTable struct {
	TcamTable *TableTcamMsg `protobuf:"bytes,3,opt,name=tcam_table,json=tcamTable,oneof"`
}
type TableResponse_HashTable struct {
	HashTable *TableHashMsg `protobuf:"bytes,4,opt,name=hash_table,json=hashTable,oneof"`
}
type TableResponse_FlowTable struct {
	FlowTable *TableFlowMsg `protobuf:"bytes,5,opt,name=flow_table,json=flowTable,oneof"`
}
type TableResponse_MetTable struct {
	MetTable *TableMetMsg `protobuf:"bytes,6,opt,name=met_table,json=metTable,oneof"`
}

func (*TableResponse_IndexTable) isTableResponse_TableEntry() {}
func (*TableResponse_TcamTable) isTableResponse_TableEntry()  {}
func (*TableResponse_HashTable) isTableResponse_TableEntry()  {}
func (*TableResponse_FlowTable) isTableResponse_TableEntry()  {}
func (*TableResponse_MetTable) isTableResponse_TableEntry()   {}

func (m *TableResponse) GetTableEntry() isTableResponse_TableEntry {
	if m != nil {
		return m.TableEntry
	}
	return nil
}

func (m *TableResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *TableResponse) GetIndexTable() *TableIndexMsg {
	if x, ok := m.GetTableEntry().(*TableResponse_IndexTable); ok {
		return x.IndexTable
	}
	return nil
}

func (m *TableResponse) GetTcamTable() *TableTcamMsg {
	if x, ok := m.GetTableEntry().(*TableResponse_TcamTable); ok {
		return x.TcamTable
	}
	return nil
}

func (m *TableResponse) GetHashTable() *TableHashMsg {
	if x, ok := m.GetTableEntry().(*TableResponse_HashTable); ok {
		return x.HashTable
	}
	return nil
}

func (m *TableResponse) GetFlowTable() *TableFlowMsg {
	if x, ok := m.GetTableEntry().(*TableResponse_FlowTable); ok {
		return x.FlowTable
	}
	return nil
}

func (m *TableResponse) GetMetTable() *TableMetMsg {
	if x, ok := m.GetTableEntry().(*TableResponse_MetTable); ok {
		return x.MetTable
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TableResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TableResponse_OneofMarshaler, _TableResponse_OneofUnmarshaler, _TableResponse_OneofSizer, []interface{}{
		(*TableResponse_IndexTable)(nil),
		(*TableResponse_TcamTable)(nil),
		(*TableResponse_HashTable)(nil),
		(*TableResponse_FlowTable)(nil),
		(*TableResponse_MetTable)(nil),
	}
}

func _TableResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TableResponse)
	// TableEntry
	switch x := m.TableEntry.(type) {
	case *TableResponse_IndexTable:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IndexTable); err != nil {
			return err
		}
	case *TableResponse_TcamTable:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TcamTable); err != nil {
			return err
		}
	case *TableResponse_HashTable:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HashTable); err != nil {
			return err
		}
	case *TableResponse_FlowTable:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FlowTable); err != nil {
			return err
		}
	case *TableResponse_MetTable:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MetTable); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TableResponse.TableEntry has unexpected type %T", x)
	}
	return nil
}

func _TableResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TableResponse)
	switch tag {
	case 2: // TableEntry.index_table
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TableIndexMsg)
		err := b.DecodeMessage(msg)
		m.TableEntry = &TableResponse_IndexTable{msg}
		return true, err
	case 3: // TableEntry.tcam_table
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TableTcamMsg)
		err := b.DecodeMessage(msg)
		m.TableEntry = &TableResponse_TcamTable{msg}
		return true, err
	case 4: // TableEntry.hash_table
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TableHashMsg)
		err := b.DecodeMessage(msg)
		m.TableEntry = &TableResponse_HashTable{msg}
		return true, err
	case 5: // TableEntry.flow_table
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TableFlowMsg)
		err := b.DecodeMessage(msg)
		m.TableEntry = &TableResponse_FlowTable{msg}
		return true, err
	case 6: // TableEntry.met_table
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TableMetMsg)
		err := b.DecodeMessage(msg)
		m.TableEntry = &TableResponse_MetTable{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TableResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TableResponse)
	// TableEntry
	switch x := m.TableEntry.(type) {
	case *TableResponse_IndexTable:
		s := proto.Size(x.IndexTable)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TableResponse_TcamTable:
		s := proto.Size(x.TcamTable)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TableResponse_HashTable:
		s := proto.Size(x.HashTable)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TableResponse_FlowTable:
		s := proto.Size(x.FlowTable)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TableResponse_MetTable:
		s := proto.Size(x.MetTable)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type TableResponseMsg struct {
	Response []*TableResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *TableResponseMsg) Reset()                    { *m = TableResponseMsg{} }
func (m *TableResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*TableResponseMsg) ProtoMessage()               {}
func (*TableResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{21} }

func (m *TableResponseMsg) GetResponse() []*TableResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func init() {
	proto.RegisterType((*TableIndexMetadata)(nil), "halproto.TableIndexMetadata")
	proto.RegisterType((*TableTcamMetadata)(nil), "halproto.TableTcamMetadata")
	proto.RegisterType((*TableHashMetadata)(nil), "halproto.TableHashMetadata")
	proto.RegisterType((*TableFlowMetadata)(nil), "halproto.TableFlowMetadata")
	proto.RegisterType((*TableMetMetadata)(nil), "halproto.TableMetMetadata")
	proto.RegisterType((*TableMetadata)(nil), "halproto.TableMetadata")
	proto.RegisterType((*TableMetadataResponseMsg)(nil), "halproto.TableMetadataResponseMsg")
	proto.RegisterType((*TableIdName)(nil), "halproto.TableIdName")
	proto.RegisterType((*TableSpec)(nil), "halproto.TableSpec")
	proto.RegisterType((*TableRequestMsg)(nil), "halproto.TableRequestMsg")
	proto.RegisterType((*TableIndexEntry)(nil), "halproto.TableIndexEntry")
	proto.RegisterType((*TableIndexMsg)(nil), "halproto.TableIndexMsg")
	proto.RegisterType((*TableTcamEntry)(nil), "halproto.TableTcamEntry")
	proto.RegisterType((*TableTcamMsg)(nil), "halproto.TableTcamMsg")
	proto.RegisterType((*TableHashEntry)(nil), "halproto.TableHashEntry")
	proto.RegisterType((*TableHashMsg)(nil), "halproto.TableHashMsg")
	proto.RegisterType((*TableFlowEntry)(nil), "halproto.TableFlowEntry")
	proto.RegisterType((*TableFlowMsg)(nil), "halproto.TableFlowMsg")
	proto.RegisterType((*TableMetEntry)(nil), "halproto.TableMetEntry")
	proto.RegisterType((*TableMetMsg)(nil), "halproto.TableMetMsg")
	proto.RegisterType((*TableResponse)(nil), "halproto.TableResponse")
	proto.RegisterType((*TableResponseMsg)(nil), "halproto.TableResponseMsg")
	proto.RegisterEnum("halproto.TableKind", TableKind_name, TableKind_value)
}

func init() { proto.RegisterFile("table.proto", fileDescriptor29) }

var fileDescriptor29 = []byte{
	// 1231 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x57, 0xdd, 0x6e, 0x1b, 0x55,
	0x10, 0xf6, 0xbf, 0x77, 0xc7, 0x71, 0xe2, 0x9c, 0x34, 0xad, 0x93, 0x2a, 0x4a, 0x65, 0x82, 0xa8,
	0xb8, 0x88, 0xa8, 0x5b, 0x29, 0x52, 0xa1, 0x12, 0xf9, 0x71, 0x70, 0x44, 0x93, 0x48, 0x9b, 0x84,
	0x02, 0x37, 0xab, 0x53, 0xef, 0x49, 0xbc, 0x8a, 0x77, 0xbd, 0x78, 0xd7, 0x2d, 0x79, 0x00, 0xae,
	0x78, 0x00, 0x78, 0x02, 0x5e, 0x01, 0x78, 0x19, 0xae, 0xb9, 0x86, 0x17, 0x40, 0x67, 0xe6, 0xec,
	0xaf, 0x6d, 0x69, 0x23, 0x71, 0xd9, 0xab, 0x78, 0xe6, 0xcc, 0x37, 0x3b, 0xfb, 0x7d, 0x33, 0x73,
	0x36, 0xd0, 0x08, 0xf8, 0xdb, 0x91, 0xd8, 0xf5, 0x26, 0xe3, 0x60, 0xcc, 0xaa, 0x68, 0x6c, 0x36,
	0x82, 0x3b, 0x4f, 0xf8, 0xe4, 0xeb, 0xfc, 0x59, 0x02, 0x76, 0x29, 0xdd, 0x27, 0xae, 0x25, 0x7e,
	0x3c, 0x15, 0x01, 0xb7, 0x78, 0xc0, 0xd9, 0x26, 0x68, 0x03, 0xee, 0xf1, 0x81, 0x1d, 0xdc, 0xb5,
	0x8b, 0x4f, 0x8a, 0x4f, 0xeb, 0x46, 0x64, 0xb3, 0x07, 0x50, 0x9d, 0xfa, 0xfc, 0x46, 0xb4, 0x4b,
	0x78, 0x40, 0x06, 0xdb, 0x86, 0x86, 0x3b, 0x75, 0x4c, 0xdb, 0xf5, 0xc5, 0x24, 0xf0, 0xdb, 0x65,
	0x3c, 0x03, 0x77, 0xea, 0x9c, 0x90, 0x87, 0xed, 0xc2, 0x5a, 0x1c, 0x60, 0x5e, 0x73, 0x7b, 0x34,
	0x9d, 0x08, 0xbf, 0x5d, 0xc1, 0xc0, 0xd5, 0x28, 0xf0, 0x58, 0x1d, 0x84, 0x09, 0xa7, 0x9e, 0xc5,
	0x03, 0xe1, 0xb7, 0xab, 0x51, 0xc2, 0x2b, 0xf2, 0x84, 0x09, 0x29, 0x20, 0x4e, 0x58, 0x8b, 0x12,
	0x52, 0x60, 0x36, 0xa1, 0x25, 0x46, 0x42, 0x26, 0xac, 0x47, 0x09, 0x8f, 0xc8, 0x13, 0x26, 0xa4,
	0x80, 0x38, 0xa1, 0x16, 0x25, 0xa4, 0xc0, 0x30, 0x61, 0xe7, 0x8f, 0x12, 0xac, 0x22, 0x77, 0x97,
	0x03, 0xee, 0x7c, 0xa0, 0xee, 0x3e, 0xd4, 0xfd, 0x56, 0x56, 0xd4, 0xf5, 0xb9, 0x3f, 0x8c, 0xa8,
	0x7b, 0x0c, 0xfa, 0x90, 0xfb, 0xe6, 0x38, 0x18, 0x70, 0x07, 0xb9, 0xd3, 0x0c, 0x6d, 0xc8, 0xfd,
	0x73, 0x69, 0xa7, 0x78, 0x2d, 0x65, 0x78, 0xfd, 0x18, 0x96, 0x11, 0x64, 0x46, 0x11, 0x44, 0x62,
	0x13, 0xbd, 0x87, 0x61, 0xd8, 0x16, 0xc0, 0x90, 0xfb, 0x43, 0x93, 0x34, 0x20, 0xfa, 0xe4, 0x13,
	0x87, 0x57, 0xa1, 0x0e, 0x94, 0x85, 0xce, 0x15, 0x6d, 0xe8, 0xba, 0x9a, 0x27, 0x54, 0x2d, 0xaf,
	0x50, 0xf5, 0x9c, 0x42, 0x69, 0x79, 0x85, 0xd2, 0x73, 0x0a, 0x05, 0x79, 0x85, 0x6a, 0x2c, 0x12,
	0xea, 0xa7, 0x50, 0xa8, 0xe3, 0xd1, 0xf8, 0x7d, 0xae, 0x1e, 0xff, 0x08, 0x9a, 0x83, 0xf1, 0x68,
	0x64, 0x66, 0xc4, 0x5a, 0x92, 0xce, 0x05, 0x4a, 0x94, 0xb3, 0x4a, 0x6c, 0x01, 0x60, 0x8e, 0x94,
	0x50, 0xd2, 0x33, 0x57, 0x87, 0x6a, 0x5e, 0x1d, 0x6a, 0x39, 0x75, 0xa8, 0xe7, 0xd5, 0x41, 0xcb,
	0xa9, 0x83, 0x9e, 0x57, 0x07, 0x58, 0xa4, 0xc3, 0xef, 0x25, 0x68, 0xa1, 0x0e, 0xa7, 0x22, 0xf8,
	0xb0, 0x6a, 0xee, 0xb3, 0x6a, 0x7e, 0x2d, 0x43, 0x33, 0x64, 0x8e, 0x68, 0xdb, 0x02, 0xc0, 0x9b,
	0xd0, 0x74, 0xb9, 0x23, 0x90, 0x38, 0xdd, 0xd0, 0xd1, 0x73, 0xc6, 0x1d, 0xc1, 0x36, 0x40, 0xa3,
	0x63, 0xdb, 0x52, 0xe4, 0xd5, 0xd1, 0x3e, 0xb1, 0xd8, 0x0e, 0x54, 0x6e, 0x6d, 0xd7, 0x42, 0xde,
	0x96, 0xbb, 0xad, 0x5d, 0xba, 0x5d, 0x31, 0xfb, 0xd7, 0xb6, 0x6b, 0x19, 0x78, 0xca, 0x5e, 0x02,
	0xd8, 0xf2, 0x36, 0x35, 0x1d, 0x11, 0x70, 0xa4, 0xae, 0xd1, 0xdd, 0x48, 0xc6, 0xa6, 0xee, 0xda,
	0x7e, 0xc1, 0xd0, 0xed, 0xd0, 0xc1, 0xf6, 0x40, 0xc7, 0x15, 0x84, 0xd0, 0x2a, 0x42, 0xdb, 0x49,
	0x68, 0xf2, 0xaa, 0xe9, 0x17, 0x0c, 0x2d, 0x50, 0xb6, 0x04, 0xe2, 0x44, 0x21, 0xb0, 0x36, 0x0b,
	0x4c, 0x2e, 0x5a, 0x09, 0x1c, 0x2a, 0x5b, 0x02, 0xaf, 0x47, 0xe3, 0xf7, 0x04, 0xac, 0xcf, 0x02,
	0x93, 0x83, 0x2f, 0x81, 0xd7, 0xca, 0x66, 0x2f, 0x40, 0x73, 0x44, 0x40, 0x38, 0x0d, 0x71, 0x8f,
	0x92, 0xb8, 0x44, 0xa3, 0xf6, 0x0b, 0x46, 0xdd, 0x21, 0xf3, 0x00, 0x10, 0x85, 0xee, 0xce, 0x2f,
	0x45, 0x68, 0xa7, 0xa4, 0x31, 0x84, 0xef, 0x8d, 0x5d, 0x5f, 0x9c, 0xfa, 0x37, 0xec, 0x18, 0x80,
	0x7b, 0xb6, 0xe9, 0x07, 0x3c, 0x98, 0xfa, 0xa8, 0x12, 0x32, 0x8e, 0xdf, 0x2e, 0xfb, 0x9e, 0x7d,
	0x81, 0xfe, 0x83, 0xf5, 0x7f, 0xfe, 0xda, 0x5e, 0x7d, 0x27, 0x5c, 0x7b, 0x20, 0x5e, 0xc6, 0xe1,
	0x86, 0xce, 0xc3, 0x08, 0xf6, 0x3c, 0x54, 0x1b, 0x0b, 0x2d, 0x3d, 0x29, 0x3f, 0x6d, 0x74, 0x1f,
	0x64, 0x0a, 0xa5, 0x87, 0x53, 0x0f, 0x48, 0xb3, 0xf3, 0x1d, 0x34, 0x48, 0x29, 0x0b, 0x5b, 0x62,
	0x7b, 0xb6, 0x63, 0xa4, 0x6c, 0x71, 0xcf, 0x3c, 0xce, 0xf6, 0x8c, 0x7c, 0x65, 0xd5, 0x35, 0x07,
	0x4b, 0x00, 0xb6, 0x65, 0x8e, 0x27, 0x88, 0xee, 0x3c, 0x03, 0x1d, 0x53, 0x5f, 0x78, 0x62, 0xc0,
	0x76, 0xa0, 0x7c, 0x2b, 0x68, 0x78, 0x1b, 0x5d, 0x96, 0xea, 0x11, 0x7c, 0xb2, 0x21, 0x8f, 0x3b,
	0x7b, 0xb0, 0x82, 0x3e, 0x43, 0xfc, 0x30, 0x15, 0x7e, 0x20, 0xd9, 0xd9, 0x81, 0x8a, 0xef, 0x89,
	0x41, 0xbb, 0x88, 0xef, 0x93, 0xea, 0x44, 0x99, 0xd8, 0xc0, 0xd3, 0xce, 0x2b, 0x05, 0xc4, 0x86,
	0xeb, 0xb9, 0xc1, 0x04, 0xf7, 0x02, 0x76, 0x9b, 0x5a, 0x18, 0x64, 0x48, 0xaf, 0x90, 0xc7, 0x58,
	0xbc, 0x6e, 0x90, 0xd1, 0xe9, 0xab, 0xc9, 0xa1, 0x7e, 0xf5, 0x6f, 0xd8, 0x1e, 0x34, 0xa8, 0xb3,
	0x29, 0x98, 0x1e, 0xfe, 0x70, 0xa6, 0xb5, 0xf1, 0x49, 0x06, 0x0d, 0x01, 0xfe, 0xee, 0x7c, 0x01,
	0xcb, 0x51, 0xfb, 0xde, 0xbf, 0x8e, 0x23, 0x58, 0x8a, 0x9b, 0xdf, 0xbf, 0x61, 0x2f, 0x00, 0x70,
	0x48, 0x92, 0x55, 0xac, 0x67, 0xa7, 0x84, 0x8a, 0xc0, 0x69, 0xa2, 0x1a, 0xde, 0xa8, 0x1a, 0xe4,
	0x24, 0x50, 0x0d, 0x1b, 0xa0, 0xd9, 0x6e, 0xea, 0x73, 0xa3, 0x6e, 0xbb, 0xf4, 0xb5, 0x11, 0x95,
	0x57, 0x9a, 0x5b, 0x5e, 0x79, 0x5e, 0x79, 0x38, 0x62, 0x54, 0x1e, 0x8e, 0xe2, 0xc2, 0xf2, 0xa2,
	0x0a, 0xe8, 0xce, 0xa3, 0xf2, 0xfe, 0x2e, 0xaa, 0xfa, 0xe4, 0xc0, 0x51, 0x7d, 0xbb, 0xb0, 0xe6,
	0x4d, 0x6c, 0x87, 0x4f, 0xee, 0x4c, 0xa2, 0xfd, 0x1d, 0x1f, 0xd9, 0x96, 0x2a, 0x75, 0x55, 0x1d,
	0x21, 0xe3, 0xdf, 0xc8, 0x03, 0x79, 0xf5, 0xa6, 0xe2, 0xb1, 0xf8, 0xa6, 0xb1, 0x94, 0x8c, 0x64,
	0x5d, 0x58, 0xf7, 0xc5, 0x60, 0xec, 0x5a, 0xd9, 0xb4, 0x65, 0x4c, 0xbb, 0x16, 0x1d, 0x26, 0x12,
	0x7f, 0x02, 0x2b, 0x19, 0x0c, 0xae, 0xb5, 0xa6, 0xb1, 0x9c, 0x8e, 0x66, 0x2d, 0xea, 0xe7, 0x2a,
	0xd2, 0x23, 0x7f, 0x32, 0x06, 0x15, 0x39, 0x5c, 0xb8, 0x92, 0x74, 0x03, 0x7f, 0x47, 0x84, 0xe1,
	0x6a, 0x21, 0xc2, 0x70, 0x05, 0x2d, 0x24, 0x2c, 0xa2, 0xc4, 0xc0, 0x5d, 0x45, 0x84, 0x7d, 0x1e,
	0xef, 0xf5, 0xfb, 0xb7, 0xd4, 0x97, 0x6a, 0xc0, 0xe5, 0x96, 0xf2, 0x6f, 0xd8, 0x33, 0xd0, 0xe5,
	0x2e, 0x4b, 0x16, 0x90, 0xdd, 0x11, 0xf4, 0x7c, 0xb9, 0xbc, 0xe8, 0xf1, 0xff, 0x96, 0xd4, 0xf3,
	0xc3, 0xa5, 0xf5, 0xbf, 0x6d, 0xac, 0x68, 0xca, 0xb0, 0x00, 0xac, 0x3b, 0x53, 0x4e, 0x38, 0x90,
	0xfd, 0x82, 0x9a, 0x32, 0xf4, 0x46, 0x73, 0x41, 0xb8, 0x32, 0xe2, 0xd6, 0x66, 0x6e, 0x0f, 0x84,
	0xe1, 0x5c, 0x44, 0x28, 0x6c, 0x57, 0x42, 0x55, 0x66, 0x51, 0xaa, 0xaf, 0x25, 0x4a, 0x06, 0x46,
	0x28, 0xd4, 0x8c, 0x50, 0xd5, 0x59, 0x94, 0x12, 0x57, 0xa2, 0x64, 0x20, 0xa1, 0x14, 0xcf, 0x04,
	0xaa, 0xcd, 0x6e, 0x3d, 0x92, 0x43, 0x5e, 0x33, 0x8e, 0x08, 0xd0, 0x23, 0xb7, 0x27, 0xfe, 0xe8,
	0xa9, 0x59, 0x6b, 0xa5, 0x48, 0x97, 0xe2, 0x7d, 0x06, 0xda, 0x44, 0x99, 0xf3, 0xb4, 0x0b, 0x43,
	0x8d, 0x28, 0xea, 0xd3, 0x5b, 0xb5, 0x83, 0xe5, 0xa5, 0xcd, 0x96, 0x01, 0x2e, 0xf7, 0x0f, 0x5e,
	0xf7, 0xcc, 0xb3, 0xf3, 0xb3, 0x5e, 0xab, 0xc0, 0x56, 0xa0, 0x41, 0xf6, 0xc9, 0xd9, 0x51, 0xef,
	0xdb, 0x56, 0x31, 0x0e, 0xb8, 0x3c, 0xdc, 0x3f, 0x6d, 0x95, 0x62, 0xbb, 0xbf, 0x7f, 0xd1, 0x6f,
	0x95, 0x63, 0xfb, 0xf8, 0xf5, 0xf9, 0x9b, 0x56, 0x85, 0x35, 0x41, 0x27, 0xfb, 0xb4, 0x77, 0xd9,
	0xaa, 0x76, 0x7f, 0x2e, 0x42, 0x95, 0xde, 0xfe, 0x30, 0xfe, 0x86, 0xc3, 0x1b, 0xe7, 0x2b, 0x11,
	0xb0, 0x25, 0xd5, 0x20, 0x3d, 0xc7, 0x0b, 0xee, 0x36, 0xb7, 0xe7, 0x5e, 0x4c, 0xf1, 0xbb, 0x76,
	0x0a, 0xec, 0x15, 0x68, 0x78, 0x2a, 0xc1, 0x0f, 0xd3, 0xef, 0x19, 0xde, 0x0e, 0x9b, 0x8f, 0xe6,
	0xbd, 0x3f, 0xc2, 0x0f, 0xe0, 0x7b, 0x6d, 0xc8, 0x47, 0xf8, 0xcf, 0xff, 0xdb, 0x1a, 0xfe, 0x79,
	0xfe, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2a, 0x5c, 0x42, 0x50, 0x26, 0x10, 0x00, 0x00,
}
