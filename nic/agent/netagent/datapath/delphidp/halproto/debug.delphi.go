// Code generated by protoc-gen-go. DO NOT EDIT.
// source: debug.proto

package halproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SchedPolicy int32

const (
	SchedPolicy_SCHED_POLICY_OTHER SchedPolicy = 0
	SchedPolicy_SCHED_POLICY_FIFO  SchedPolicy = 1
	SchedPolicy_SCHED_POLICY_RR    SchedPolicy = 2
)

var SchedPolicy_name = map[int32]string{
	0: "SCHED_POLICY_OTHER",
	1: "SCHED_POLICY_FIFO",
	2: "SCHED_POLICY_RR",
}
var SchedPolicy_value = map[string]int32{
	"SCHED_POLICY_OTHER": 0,
	"SCHED_POLICY_FIFO":  1,
	"SCHED_POLICY_RR":    2,
}

func (x SchedPolicy) String() string {
	return proto.EnumName(SchedPolicy_name, int32(x))
}
func (SchedPolicy) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

type ThreadRole int32

const (
	ThreadRole_THREAD_ROLE_CONTROL ThreadRole = 0
	ThreadRole_THREAD_ROLE_DATA    ThreadRole = 1
)

var ThreadRole_name = map[int32]string{
	0: "THREAD_ROLE_CONTROL",
	1: "THREAD_ROLE_DATA",
}
var ThreadRole_value = map[string]int32{
	"THREAD_ROLE_CONTROL": 0,
	"THREAD_ROLE_DATA":    1,
}

func (x ThreadRole) String() string {
	return proto.EnumName(ThreadRole_name, int32(x))
}
func (ThreadRole) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

type TraceLevel int32

const (
	TraceLevel_TRACE_LEVEL_NONE  TraceLevel = 0
	TraceLevel_TRACE_LEVEL_ERROR TraceLevel = 1
	TraceLevel_TRACE_LEVEL_DEBUG TraceLevel = 2
)

var TraceLevel_name = map[int32]string{
	0: "TRACE_LEVEL_NONE",
	1: "TRACE_LEVEL_ERROR",
	2: "TRACE_LEVEL_DEBUG",
}
var TraceLevel_value = map[string]int32{
	"TRACE_LEVEL_NONE":  0,
	"TRACE_LEVEL_ERROR": 1,
	"TRACE_LEVEL_DEBUG": 2,
}

func (x TraceLevel) String() string {
	return proto.EnumName(TraceLevel_name, int32(x))
}
func (TraceLevel) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

// pipeline type for MPU trace
type MpuTracePipelineType int32

const (
	MpuTracePipelineType_MPU_TRACE_PIPELINE_NONE       MpuTracePipelineType = 0
	MpuTracePipelineType_MPU_TRACE_PIPELINE_P4_INGRESS MpuTracePipelineType = 1
	MpuTracePipelineType_MPU_TRACE_PIPELINE_P4_EGRESS  MpuTracePipelineType = 2
	MpuTracePipelineType_MPU_TRACE_PIPELINE_P4P_RXDMA  MpuTracePipelineType = 3
	MpuTracePipelineType_MPU_TRACE_PIPELINE_P4P_TXDMA  MpuTracePipelineType = 4
)

var MpuTracePipelineType_name = map[int32]string{
	0: "MPU_TRACE_PIPELINE_NONE",
	1: "MPU_TRACE_PIPELINE_P4_INGRESS",
	2: "MPU_TRACE_PIPELINE_P4_EGRESS",
	3: "MPU_TRACE_PIPELINE_P4P_RXDMA",
	4: "MPU_TRACE_PIPELINE_P4P_TXDMA",
}
var MpuTracePipelineType_value = map[string]int32{
	"MPU_TRACE_PIPELINE_NONE":       0,
	"MPU_TRACE_PIPELINE_P4_INGRESS": 1,
	"MPU_TRACE_PIPELINE_P4_EGRESS":  2,
	"MPU_TRACE_PIPELINE_P4P_RXDMA":  3,
	"MPU_TRACE_PIPELINE_P4P_TXDMA":  4,
}

func (x MpuTracePipelineType) String() string {
	return proto.EnumName(MpuTracePipelineType_name, int32(x))
}
func (MpuTracePipelineType) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

type CapriBlock int32

const (
	CapriBlock_CAPRI_BLOCK_PB    CapriBlock = 0
	CapriBlock_CAPRI_BLOCK_TXDMA CapriBlock = 1
	CapriBlock_CAPRI_BLOCK_RXDMA CapriBlock = 2
	CapriBlock_CAPRI_BLOCK_MS    CapriBlock = 3
	CapriBlock_CAPRI_BLOCK_PCIE  CapriBlock = 4
)

var CapriBlock_name = map[int32]string{
	0: "CAPRI_BLOCK_PB",
	1: "CAPRI_BLOCK_TXDMA",
	2: "CAPRI_BLOCK_RXDMA",
	3: "CAPRI_BLOCK_MS",
	4: "CAPRI_BLOCK_PCIE",
}
var CapriBlock_value = map[string]int32{
	"CAPRI_BLOCK_PB":    0,
	"CAPRI_BLOCK_TXDMA": 1,
	"CAPRI_BLOCK_RXDMA": 2,
	"CAPRI_BLOCK_MS":    3,
	"CAPRI_BLOCK_PCIE":  4,
}

func (x CapriBlock) String() string {
	return proto.EnumName(CapriBlock_name, int32(x))
}
func (CapriBlock) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

type LlcCounterType int32

const (
	LlcCounterType_LLC_COUNTER_CACHE_NONE        LlcCounterType = 0
	LlcCounterType_LLC_COUNTER_CACHE_READ        LlcCounterType = 1
	LlcCounterType_LLC_COUNTER_CACHE_WRITE       LlcCounterType = 2
	LlcCounterType_LLC_COUNTER_SCRATCHPAD_ACCESS LlcCounterType = 3
	LlcCounterType_LLC_COUNTER_CACHE_HIT         LlcCounterType = 4
	LlcCounterType_LLC_COUNTER_CACHE_MISS        LlcCounterType = 5
	LlcCounterType_LLC_COUNTER_PARTIAL_WRITE     LlcCounterType = 6
	LlcCounterType_LLC_COUNTER_CACHE_MAINT_OP    LlcCounterType = 7
	LlcCounterType_LLC_COUNTER_EVICTION          LlcCounterType = 8
	LlcCounterType_LLC_COUNTER_RETRY_NEEDED      LlcCounterType = 9
	LlcCounterType_LLC_COUNTER_RETRY_ACCESS      LlcCounterType = 10
)

var LlcCounterType_name = map[int32]string{
	0:  "LLC_COUNTER_CACHE_NONE",
	1:  "LLC_COUNTER_CACHE_READ",
	2:  "LLC_COUNTER_CACHE_WRITE",
	3:  "LLC_COUNTER_SCRATCHPAD_ACCESS",
	4:  "LLC_COUNTER_CACHE_HIT",
	5:  "LLC_COUNTER_CACHE_MISS",
	6:  "LLC_COUNTER_PARTIAL_WRITE",
	7:  "LLC_COUNTER_CACHE_MAINT_OP",
	8:  "LLC_COUNTER_EVICTION",
	9:  "LLC_COUNTER_RETRY_NEEDED",
	10: "LLC_COUNTER_RETRY_ACCESS",
}
var LlcCounterType_value = map[string]int32{
	"LLC_COUNTER_CACHE_NONE":        0,
	"LLC_COUNTER_CACHE_READ":        1,
	"LLC_COUNTER_CACHE_WRITE":       2,
	"LLC_COUNTER_SCRATCHPAD_ACCESS": 3,
	"LLC_COUNTER_CACHE_HIT":         4,
	"LLC_COUNTER_CACHE_MISS":        5,
	"LLC_COUNTER_PARTIAL_WRITE":     6,
	"LLC_COUNTER_CACHE_MAINT_OP":    7,
	"LLC_COUNTER_EVICTION":          8,
	"LLC_COUNTER_RETRY_NEEDED":      9,
	"LLC_COUNTER_RETRY_ACCESS":      10,
}

func (x LlcCounterType) String() string {
	return proto.EnumName(LlcCounterType_name, int32(x))
}
func (LlcCounterType) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

type HbmSramType int32

const (
	HbmSramType_SRAM_P4_INGRESS   HbmSramType = 0
	HbmSramType_SRAM_P4_EGRESS    HbmSramType = 1
	HbmSramType_SRAM_P4_ALL       HbmSramType = 2
	HbmSramType_SRAM_P4PLUS_RXDMA HbmSramType = 3
	HbmSramType_SRAM_P4PLUS_TXDMA HbmSramType = 4
	HbmSramType_SRAM_P4PLUS_ALL   HbmSramType = 5
	HbmSramType_SRAM_ALL          HbmSramType = 6
)

var HbmSramType_name = map[int32]string{
	0: "SRAM_P4_INGRESS",
	1: "SRAM_P4_EGRESS",
	2: "SRAM_P4_ALL",
	3: "SRAM_P4PLUS_RXDMA",
	4: "SRAM_P4PLUS_TXDMA",
	5: "SRAM_P4PLUS_ALL",
	6: "SRAM_ALL",
}
var HbmSramType_value = map[string]int32{
	"SRAM_P4_INGRESS":   0,
	"SRAM_P4_EGRESS":    1,
	"SRAM_P4_ALL":       2,
	"SRAM_P4PLUS_RXDMA": 3,
	"SRAM_P4PLUS_TXDMA": 4,
	"SRAM_P4PLUS_ALL":   5,
	"SRAM_ALL":          6,
}

func (x HbmSramType) String() string {
	return proto.EnumName(HbmSramType_name, int32(x))
}
func (HbmSramType) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{6} }

// FTE Span
type FteSpanRequest struct {
	Selector      uint32              `protobuf:"varint,1,opt,name=selector" json:"selector,omitempty"`
	SrcLport      uint32              `protobuf:"varint,2,opt,name=src_lport,json=srcLport" json:"src_lport,omitempty"`
	DstLport      uint32              `protobuf:"varint,3,opt,name=dst_lport,json=dstLport" json:"dst_lport,omitempty"`
	DropReason    uint32              `protobuf:"varint,4,opt,name=drop_reason,json=dropReason" json:"drop_reason,omitempty"`
	FlowLkupDir   uint32              `protobuf:"varint,5,opt,name=flow_lkup_dir,json=flowLkupDir" json:"flow_lkup_dir,omitempty"`
	FlowLkupType  uint32              `protobuf:"varint,6,opt,name=flow_lkup_type,json=flowLkupType" json:"flow_lkup_type,omitempty"`
	FlowLkupVrf   uint32              `protobuf:"varint,7,opt,name=flow_lkup_vrf,json=flowLkupVrf" json:"flow_lkup_vrf,omitempty"`
	FlowLkupSrc   *IPAddress          `protobuf:"bytes,8,opt,name=flow_lkup_src,json=flowLkupSrc" json:"flow_lkup_src,omitempty"`
	FlowLkupDst   *IPAddress          `protobuf:"bytes,9,opt,name=flow_lkup_dst,json=flowLkupDst" json:"flow_lkup_dst,omitempty"`
	FlowLkupProto uint32              `protobuf:"varint,10,opt,name=flow_lkup_proto,json=flowLkupProto" json:"flow_lkup_proto,omitempty"`
	FlowLkupSport uint32              `protobuf:"varint,11,opt,name=flow_lkup_sport,json=flowLkupSport" json:"flow_lkup_sport,omitempty"`
	FlowLkupDport uint32              `protobuf:"varint,12,opt,name=flow_lkup_dport,json=flowLkupDport" json:"flow_lkup_dport,omitempty"`
	EthDmac       uint64              `protobuf:"varint,13,opt,name=eth_dmac,json=ethDmac" json:"eth_dmac,omitempty"`
	FromCpu       bool                `protobuf:"varint,14,opt,name=from_cpu,json=fromCpu" json:"from_cpu,omitempty"`
	IsEgress      bool                `protobuf:"varint,15,opt,name=is_egress,json=isEgress" json:"is_egress,omitempty"`
	EgressIf      *InterfaceKeyHandle `protobuf:"bytes,16,opt,name=egress_if,json=egressIf" json:"egress_if,omitempty"`
}

func (m *FteSpanRequest) Reset()                    { *m = FteSpanRequest{} }
func (m *FteSpanRequest) String() string            { return proto.CompactTextString(m) }
func (*FteSpanRequest) ProtoMessage()               {}
func (*FteSpanRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *FteSpanRequest) GetSelector() uint32 {
	if m != nil {
		return m.Selector
	}
	return 0
}

func (m *FteSpanRequest) GetSrcLport() uint32 {
	if m != nil {
		return m.SrcLport
	}
	return 0
}

func (m *FteSpanRequest) GetDstLport() uint32 {
	if m != nil {
		return m.DstLport
	}
	return 0
}

func (m *FteSpanRequest) GetDropReason() uint32 {
	if m != nil {
		return m.DropReason
	}
	return 0
}

func (m *FteSpanRequest) GetFlowLkupDir() uint32 {
	if m != nil {
		return m.FlowLkupDir
	}
	return 0
}

func (m *FteSpanRequest) GetFlowLkupType() uint32 {
	if m != nil {
		return m.FlowLkupType
	}
	return 0
}

func (m *FteSpanRequest) GetFlowLkupVrf() uint32 {
	if m != nil {
		return m.FlowLkupVrf
	}
	return 0
}

func (m *FteSpanRequest) GetFlowLkupSrc() *IPAddress {
	if m != nil {
		return m.FlowLkupSrc
	}
	return nil
}

func (m *FteSpanRequest) GetFlowLkupDst() *IPAddress {
	if m != nil {
		return m.FlowLkupDst
	}
	return nil
}

func (m *FteSpanRequest) GetFlowLkupProto() uint32 {
	if m != nil {
		return m.FlowLkupProto
	}
	return 0
}

func (m *FteSpanRequest) GetFlowLkupSport() uint32 {
	if m != nil {
		return m.FlowLkupSport
	}
	return 0
}

func (m *FteSpanRequest) GetFlowLkupDport() uint32 {
	if m != nil {
		return m.FlowLkupDport
	}
	return 0
}

func (m *FteSpanRequest) GetEthDmac() uint64 {
	if m != nil {
		return m.EthDmac
	}
	return 0
}

func (m *FteSpanRequest) GetFromCpu() bool {
	if m != nil {
		return m.FromCpu
	}
	return false
}

func (m *FteSpanRequest) GetIsEgress() bool {
	if m != nil {
		return m.IsEgress
	}
	return false
}

func (m *FteSpanRequest) GetEgressIf() *InterfaceKeyHandle {
	if m != nil {
		return m.EgressIf
	}
	return nil
}

type FteSpanRequestMsg struct {
	Request []*FteSpanRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
}

func (m *FteSpanRequestMsg) Reset()                    { *m = FteSpanRequestMsg{} }
func (m *FteSpanRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*FteSpanRequestMsg) ProtoMessage()               {}
func (*FteSpanRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *FteSpanRequestMsg) GetRequest() []*FteSpanRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type FteSpanResponse struct {
	ApiStatus ApiStatus       `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	Request   *FteSpanRequest `protobuf:"bytes,2,opt,name=request" json:"request,omitempty"`
}

func (m *FteSpanResponse) Reset()                    { *m = FteSpanResponse{} }
func (m *FteSpanResponse) String() string            { return proto.CompactTextString(m) }
func (*FteSpanResponse) ProtoMessage()               {}
func (*FteSpanResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *FteSpanResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *FteSpanResponse) GetRequest() *FteSpanRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type FteSpanResponseMsg struct {
	Response []*FteSpanResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *FteSpanResponseMsg) Reset()                    { *m = FteSpanResponseMsg{} }
func (m *FteSpanResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*FteSpanResponseMsg) ProtoMessage()               {}
func (*FteSpanResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *FteSpanResponseMsg) GetResponse() []*FteSpanResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type GenericOpnRequest struct {
	Opn  uint32 `protobuf:"varint,1,opt,name=opn" json:"opn,omitempty"`
	Val1 uint64 `protobuf:"varint,2,opt,name=val1" json:"val1,omitempty"`
	Val2 uint64 `protobuf:"varint,3,opt,name=val2" json:"val2,omitempty"`
	Val3 uint64 `protobuf:"varint,4,opt,name=val3" json:"val3,omitempty"`
	Val4 uint64 `protobuf:"varint,5,opt,name=val4" json:"val4,omitempty"`
}

func (m *GenericOpnRequest) Reset()                    { *m = GenericOpnRequest{} }
func (m *GenericOpnRequest) String() string            { return proto.CompactTextString(m) }
func (*GenericOpnRequest) ProtoMessage()               {}
func (*GenericOpnRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *GenericOpnRequest) GetOpn() uint32 {
	if m != nil {
		return m.Opn
	}
	return 0
}

func (m *GenericOpnRequest) GetVal1() uint64 {
	if m != nil {
		return m.Val1
	}
	return 0
}

func (m *GenericOpnRequest) GetVal2() uint64 {
	if m != nil {
		return m.Val2
	}
	return 0
}

func (m *GenericOpnRequest) GetVal3() uint64 {
	if m != nil {
		return m.Val3
	}
	return 0
}

func (m *GenericOpnRequest) GetVal4() uint64 {
	if m != nil {
		return m.Val4
	}
	return 0
}

type GenericOpnRequestMsg struct {
	Request []*GenericOpnRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
}

func (m *GenericOpnRequestMsg) Reset()                    { *m = GenericOpnRequestMsg{} }
func (m *GenericOpnRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*GenericOpnRequestMsg) ProtoMessage()               {}
func (*GenericOpnRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

func (m *GenericOpnRequestMsg) GetRequest() []*GenericOpnRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type GenericOpnStatus struct {
	Val1 uint64 `protobuf:"varint,1,opt,name=val1" json:"val1,omitempty"`
	Val2 uint64 `protobuf:"varint,2,opt,name=val2" json:"val2,omitempty"`
	Val3 uint64 `protobuf:"varint,3,opt,name=val3" json:"val3,omitempty"`
	Val4 uint64 `protobuf:"varint,4,opt,name=val4" json:"val4,omitempty"`
}

func (m *GenericOpnStatus) Reset()                    { *m = GenericOpnStatus{} }
func (m *GenericOpnStatus) String() string            { return proto.CompactTextString(m) }
func (*GenericOpnStatus) ProtoMessage()               {}
func (*GenericOpnStatus) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{6} }

func (m *GenericOpnStatus) GetVal1() uint64 {
	if m != nil {
		return m.Val1
	}
	return 0
}

func (m *GenericOpnStatus) GetVal2() uint64 {
	if m != nil {
		return m.Val2
	}
	return 0
}

func (m *GenericOpnStatus) GetVal3() uint64 {
	if m != nil {
		return m.Val3
	}
	return 0
}

func (m *GenericOpnStatus) GetVal4() uint64 {
	if m != nil {
		return m.Val4
	}
	return 0
}

type GenericOpnResponse struct {
	ApiStatus ApiStatus         `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	Status    *GenericOpnStatus `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *GenericOpnResponse) Reset()                    { *m = GenericOpnResponse{} }
func (m *GenericOpnResponse) String() string            { return proto.CompactTextString(m) }
func (*GenericOpnResponse) ProtoMessage()               {}
func (*GenericOpnResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{7} }

func (m *GenericOpnResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *GenericOpnResponse) GetStatus() *GenericOpnStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type GenericOpnResponseMsg struct {
	Response []*GenericOpnResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *GenericOpnResponseMsg) Reset()                    { *m = GenericOpnResponseMsg{} }
func (m *GenericOpnResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*GenericOpnResponseMsg) ProtoMessage()               {}
func (*GenericOpnResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{8} }

func (m *GenericOpnResponseMsg) GetResponse() []*GenericOpnResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type RegisterRequest struct {
	// Types that are valid to be assigned to IdOrName:
	//	*RegisterRequest_RegId
	//	*RegisterRequest_RegName
	IdOrName  isRegisterRequest_IdOrName `protobuf_oneof:"id_or_name"`
	BlockName string                     `protobuf:"bytes,3,opt,name=block_name,json=blockName" json:"block_name,omitempty"`
	Addr      uint64                     `protobuf:"varint,4,opt,name=addr" json:"addr,omitempty"`
	RegData   uint32                     `protobuf:"varint,5,opt,name=reg_data,json=regData" json:"reg_data,omitempty"`
}

func (m *RegisterRequest) Reset()                    { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()               {}
func (*RegisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{9} }

type isRegisterRequest_IdOrName interface{ isRegisterRequest_IdOrName() }

type RegisterRequest_RegId struct {
	RegId uint32 `protobuf:"fixed32,1,opt,name=reg_id,json=regId,oneof"`
}
type RegisterRequest_RegName struct {
	RegName string `protobuf:"bytes,2,opt,name=reg_name,json=regName,oneof"`
}

func (*RegisterRequest_RegId) isRegisterRequest_IdOrName()   {}
func (*RegisterRequest_RegName) isRegisterRequest_IdOrName() {}

func (m *RegisterRequest) GetIdOrName() isRegisterRequest_IdOrName {
	if m != nil {
		return m.IdOrName
	}
	return nil
}

func (m *RegisterRequest) GetRegId() uint32 {
	if x, ok := m.GetIdOrName().(*RegisterRequest_RegId); ok {
		return x.RegId
	}
	return 0
}

func (m *RegisterRequest) GetRegName() string {
	if x, ok := m.GetIdOrName().(*RegisterRequest_RegName); ok {
		return x.RegName
	}
	return ""
}

func (m *RegisterRequest) GetBlockName() string {
	if m != nil {
		return m.BlockName
	}
	return ""
}

func (m *RegisterRequest) GetAddr() uint64 {
	if m != nil {
		return m.Addr
	}
	return 0
}

func (m *RegisterRequest) GetRegData() uint32 {
	if m != nil {
		return m.RegData
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RegisterRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RegisterRequest_OneofMarshaler, _RegisterRequest_OneofUnmarshaler, _RegisterRequest_OneofSizer, []interface{}{
		(*RegisterRequest_RegId)(nil),
		(*RegisterRequest_RegName)(nil),
	}
}

func _RegisterRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RegisterRequest)
	// id_or_name
	switch x := m.IdOrName.(type) {
	case *RegisterRequest_RegId:
		b.EncodeVarint(1<<3 | proto.WireFixed32)
		b.EncodeFixed32(uint64(x.RegId))
	case *RegisterRequest_RegName:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.RegName)
	case nil:
	default:
		return fmt.Errorf("RegisterRequest.IdOrName has unexpected type %T", x)
	}
	return nil
}

func _RegisterRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RegisterRequest)
	switch tag {
	case 1: // id_or_name.reg_id
		if wire != proto.WireFixed32 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed32()
		m.IdOrName = &RegisterRequest_RegId{uint32(x)}
		return true, err
	case 2: // id_or_name.reg_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.IdOrName = &RegisterRequest_RegName{x}
		return true, err
	default:
		return false, nil
	}
}

func _RegisterRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RegisterRequest)
	// id_or_name
	switch x := m.IdOrName.(type) {
	case *RegisterRequest_RegId:
		n += proto.SizeVarint(1<<3 | proto.WireFixed32)
		n += 4
	case *RegisterRequest_RegName:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.RegName)))
		n += len(x.RegName)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type RegisterRequestMsg struct {
	Request []*RegisterRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
}

func (m *RegisterRequestMsg) Reset()                    { *m = RegisterRequestMsg{} }
func (m *RegisterRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*RegisterRequestMsg) ProtoMessage()               {}
func (*RegisterRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{10} }

func (m *RegisterRequestMsg) GetRequest() []*RegisterRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type RegisterResponse struct {
	ApiStatus ApiStatus     `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	Data      *RegisterData `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *RegisterResponse) Reset()                    { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()               {}
func (*RegisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{11} }

func (m *RegisterResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *RegisterResponse) GetData() *RegisterData {
	if m != nil {
		return m.Data
	}
	return nil
}

type RegisterResponseMsg struct {
	Response []*RegisterResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *RegisterResponseMsg) Reset()                    { *m = RegisterResponseMsg{} }
func (m *RegisterResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*RegisterResponseMsg) ProtoMessage()               {}
func (*RegisterResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{12} }

func (m *RegisterResponseMsg) GetResponse() []*RegisterResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type MemoryRequest struct {
	// Types that are valid to be assigned to IdOrName:
	//	*MemoryRequest_TableId
	//	*MemoryRequest_TableName
	IdOrName   isMemoryRequest_IdOrName `protobuf_oneof:"id_or_name"`
	Index      uint32                   `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
	Swkey      []byte                   `protobuf:"bytes,4,opt,name=swkey,proto3" json:"swkey,omitempty"`
	SwkeyMask  []byte                   `protobuf:"bytes,5,opt,name=swkey_mask,json=swkeyMask,proto3" json:"swkey_mask,omitempty"`
	Actiondata []byte                   `protobuf:"bytes,6,opt,name=actiondata,proto3" json:"actiondata,omitempty"`
}

func (m *MemoryRequest) Reset()                    { *m = MemoryRequest{} }
func (m *MemoryRequest) String() string            { return proto.CompactTextString(m) }
func (*MemoryRequest) ProtoMessage()               {}
func (*MemoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{13} }

type isMemoryRequest_IdOrName interface{ isMemoryRequest_IdOrName() }

type MemoryRequest_TableId struct {
	TableId uint32 `protobuf:"fixed32,1,opt,name=table_id,json=tableId,oneof"`
}
type MemoryRequest_TableName struct {
	TableName string `protobuf:"bytes,2,opt,name=table_name,json=tableName,oneof"`
}

func (*MemoryRequest_TableId) isMemoryRequest_IdOrName()   {}
func (*MemoryRequest_TableName) isMemoryRequest_IdOrName() {}

func (m *MemoryRequest) GetIdOrName() isMemoryRequest_IdOrName {
	if m != nil {
		return m.IdOrName
	}
	return nil
}

func (m *MemoryRequest) GetTableId() uint32 {
	if x, ok := m.GetIdOrName().(*MemoryRequest_TableId); ok {
		return x.TableId
	}
	return 0
}

func (m *MemoryRequest) GetTableName() string {
	if x, ok := m.GetIdOrName().(*MemoryRequest_TableName); ok {
		return x.TableName
	}
	return ""
}

func (m *MemoryRequest) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *MemoryRequest) GetSwkey() []byte {
	if m != nil {
		return m.Swkey
	}
	return nil
}

func (m *MemoryRequest) GetSwkeyMask() []byte {
	if m != nil {
		return m.SwkeyMask
	}
	return nil
}

func (m *MemoryRequest) GetActiondata() []byte {
	if m != nil {
		return m.Actiondata
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MemoryRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MemoryRequest_OneofMarshaler, _MemoryRequest_OneofUnmarshaler, _MemoryRequest_OneofSizer, []interface{}{
		(*MemoryRequest_TableId)(nil),
		(*MemoryRequest_TableName)(nil),
	}
}

func _MemoryRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MemoryRequest)
	// id_or_name
	switch x := m.IdOrName.(type) {
	case *MemoryRequest_TableId:
		b.EncodeVarint(1<<3 | proto.WireFixed32)
		b.EncodeFixed32(uint64(x.TableId))
	case *MemoryRequest_TableName:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.TableName)
	case nil:
	default:
		return fmt.Errorf("MemoryRequest.IdOrName has unexpected type %T", x)
	}
	return nil
}

func _MemoryRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MemoryRequest)
	switch tag {
	case 1: // id_or_name.table_id
		if wire != proto.WireFixed32 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed32()
		m.IdOrName = &MemoryRequest_TableId{uint32(x)}
		return true, err
	case 2: // id_or_name.table_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.IdOrName = &MemoryRequest_TableName{x}
		return true, err
	default:
		return false, nil
	}
}

func _MemoryRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MemoryRequest)
	// id_or_name
	switch x := m.IdOrName.(type) {
	case *MemoryRequest_TableId:
		n += proto.SizeVarint(1<<3 | proto.WireFixed32)
		n += 4
	case *MemoryRequest_TableName:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.TableName)))
		n += len(x.TableName)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type MemoryRequestMsg struct {
	Request []*MemoryRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
}

func (m *MemoryRequestMsg) Reset()                    { *m = MemoryRequestMsg{} }
func (m *MemoryRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*MemoryRequestMsg) ProtoMessage()               {}
func (*MemoryRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{14} }

func (m *MemoryRequestMsg) GetRequest() []*MemoryRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type MemoryResponse struct {
	ApiStatus  ApiStatus `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	Index      uint32    `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	Swkey      []byte    `protobuf:"bytes,3,opt,name=swkey,proto3" json:"swkey,omitempty"`
	SwkeyMask  []byte    `protobuf:"bytes,4,opt,name=swkey_mask,json=swkeyMask,proto3" json:"swkey_mask,omitempty"`
	Actiondata []byte    `protobuf:"bytes,5,opt,name=actiondata,proto3" json:"actiondata,omitempty"`
}

func (m *MemoryResponse) Reset()                    { *m = MemoryResponse{} }
func (m *MemoryResponse) String() string            { return proto.CompactTextString(m) }
func (*MemoryResponse) ProtoMessage()               {}
func (*MemoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{15} }

func (m *MemoryResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *MemoryResponse) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *MemoryResponse) GetSwkey() []byte {
	if m != nil {
		return m.Swkey
	}
	return nil
}

func (m *MemoryResponse) GetSwkeyMask() []byte {
	if m != nil {
		return m.SwkeyMask
	}
	return nil
}

func (m *MemoryResponse) GetActiondata() []byte {
	if m != nil {
		return m.Actiondata
	}
	return nil
}

type MemoryResponseMsg struct {
	Response []*MemoryResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *MemoryResponseMsg) Reset()                    { *m = MemoryResponseMsg{} }
func (m *MemoryResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*MemoryResponseMsg) ProtoMessage()               {}
func (*MemoryResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{16} }

func (m *MemoryResponseMsg) GetResponse() []*MemoryResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type MemoryRawRequest struct {
	Address uint64 `protobuf:"varint,1,opt,name=address" json:"address,omitempty"`
	Len     uint32 `protobuf:"varint,2,opt,name=len" json:"len,omitempty"`
}

func (m *MemoryRawRequest) Reset()                    { *m = MemoryRawRequest{} }
func (m *MemoryRawRequest) String() string            { return proto.CompactTextString(m) }
func (*MemoryRawRequest) ProtoMessage()               {}
func (*MemoryRawRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{17} }

func (m *MemoryRawRequest) GetAddress() uint64 {
	if m != nil {
		return m.Address
	}
	return 0
}

func (m *MemoryRawRequest) GetLen() uint32 {
	if m != nil {
		return m.Len
	}
	return 0
}

type MemoryRawRequestMsg struct {
	Request []*MemoryRawRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
}

func (m *MemoryRawRequestMsg) Reset()                    { *m = MemoryRawRequestMsg{} }
func (m *MemoryRawRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*MemoryRawRequestMsg) ProtoMessage()               {}
func (*MemoryRawRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{18} }

func (m *MemoryRawRequestMsg) GetRequest() []*MemoryRawRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type MemoryRawResponse struct {
	ApiStatus  ApiStatus `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	Actiondata []byte    `protobuf:"bytes,2,opt,name=actiondata,proto3" json:"actiondata,omitempty"`
}

func (m *MemoryRawResponse) Reset()                    { *m = MemoryRawResponse{} }
func (m *MemoryRawResponse) String() string            { return proto.CompactTextString(m) }
func (*MemoryRawResponse) ProtoMessage()               {}
func (*MemoryRawResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{19} }

func (m *MemoryRawResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *MemoryRawResponse) GetActiondata() []byte {
	if m != nil {
		return m.Actiondata
	}
	return nil
}

type MemoryRawResponseMsg struct {
	Response []*MemoryRawResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *MemoryRawResponseMsg) Reset()                    { *m = MemoryRawResponseMsg{} }
func (m *MemoryRawResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*MemoryRawResponseMsg) ProtoMessage()               {}
func (*MemoryRawResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{20} }

func (m *MemoryRawResponseMsg) GetResponse() []*MemoryRawResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type MemoryRawUpdateRequest struct {
	Address    uint64 `protobuf:"varint,1,opt,name=address" json:"address,omitempty"`
	Actiondata []byte `protobuf:"bytes,2,opt,name=actiondata,proto3" json:"actiondata,omitempty"`
	Len        uint32 `protobuf:"varint,3,opt,name=len" json:"len,omitempty"`
}

func (m *MemoryRawUpdateRequest) Reset()                    { *m = MemoryRawUpdateRequest{} }
func (m *MemoryRawUpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*MemoryRawUpdateRequest) ProtoMessage()               {}
func (*MemoryRawUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{21} }

func (m *MemoryRawUpdateRequest) GetAddress() uint64 {
	if m != nil {
		return m.Address
	}
	return 0
}

func (m *MemoryRawUpdateRequest) GetActiondata() []byte {
	if m != nil {
		return m.Actiondata
	}
	return nil
}

func (m *MemoryRawUpdateRequest) GetLen() uint32 {
	if m != nil {
		return m.Len
	}
	return 0
}

type MemoryRawUpdateRequestMsg struct {
	Request []*MemoryRawUpdateRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
}

func (m *MemoryRawUpdateRequestMsg) Reset()                    { *m = MemoryRawUpdateRequestMsg{} }
func (m *MemoryRawUpdateRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*MemoryRawUpdateRequestMsg) ProtoMessage()               {}
func (*MemoryRawUpdateRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{22} }

func (m *MemoryRawUpdateRequestMsg) GetRequest() []*MemoryRawUpdateRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type MemoryRawUpdateResponse struct {
	ApiStatus ApiStatus `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
}

func (m *MemoryRawUpdateResponse) Reset()                    { *m = MemoryRawUpdateResponse{} }
func (m *MemoryRawUpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*MemoryRawUpdateResponse) ProtoMessage()               {}
func (*MemoryRawUpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{23} }

func (m *MemoryRawUpdateResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

type MemoryRawUpdateResponseMsg struct {
	Response []*MemoryRawUpdateResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *MemoryRawUpdateResponseMsg) Reset()                    { *m = MemoryRawUpdateResponseMsg{} }
func (m *MemoryRawUpdateResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*MemoryRawUpdateResponseMsg) ProtoMessage()               {}
func (*MemoryRawUpdateResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{24} }

func (m *MemoryRawUpdateResponseMsg) GetResponse() []*MemoryRawUpdateResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

// Captures the return data for registers
type RegisterData struct {
	RegName string `protobuf:"bytes,1,opt,name=reg_name,json=regName" json:"reg_name,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Value   string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *RegisterData) Reset()                    { *m = RegisterData{} }
func (m *RegisterData) String() string            { return proto.CompactTextString(m) }
func (*RegisterData) ProtoMessage()               {}
func (*RegisterData) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{25} }

func (m *RegisterData) GetRegName() string {
	if m != nil {
		return m.RegName
	}
	return ""
}

func (m *RegisterData) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *RegisterData) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type MemTrackSpec struct {
	AllocId uint32 `protobuf:"varint,1,opt,name=alloc_id,json=allocId" json:"alloc_id,omitempty"`
}

func (m *MemTrackSpec) Reset()                    { *m = MemTrackSpec{} }
func (m *MemTrackSpec) String() string            { return proto.CompactTextString(m) }
func (*MemTrackSpec) ProtoMessage()               {}
func (*MemTrackSpec) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{26} }

func (m *MemTrackSpec) GetAllocId() uint32 {
	if m != nil {
		return m.AllocId
	}
	return 0
}

// MemTrackGetRequest is request msg with allocation id that info is requested for
type MemTrackGetRequest struct {
	Spec *MemTrackSpec `protobuf:"bytes,1,opt,name=spec" json:"spec,omitempty"`
}

func (m *MemTrackGetRequest) Reset()                    { *m = MemTrackGetRequest{} }
func (m *MemTrackGetRequest) String() string            { return proto.CompactTextString(m) }
func (*MemTrackGetRequest) ProtoMessage()               {}
func (*MemTrackGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{27} }

func (m *MemTrackGetRequest) GetSpec() *MemTrackSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

// MemTrackGetRequestMsg is batched MemTrackGetRequest
type MemTrackGetRequestMsg struct {
	Request []*MemTrackGetRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
}

func (m *MemTrackGetRequestMsg) Reset()                    { *m = MemTrackGetRequestMsg{} }
func (m *MemTrackGetRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*MemTrackGetRequestMsg) ProtoMessage()               {}
func (*MemTrackGetRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{28} }

func (m *MemTrackGetRequestMsg) GetRequest() []*MemTrackGetRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

// operational status of memory tracker object
type MemTrackStatus struct {
}

func (m *MemTrackStatus) Reset()                    { *m = MemTrackStatus{} }
func (m *MemTrackStatus) String() string            { return proto.CompactTextString(m) }
func (*MemTrackStatus) ProtoMessage()               {}
func (*MemTrackStatus) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{29} }

// stats per memory tracker object
type MemTrackStats struct {
	NumAllocs uint32 `protobuf:"varint,1,opt,name=num_allocs,json=numAllocs" json:"num_allocs,omitempty"`
	NumFrees  uint32 `protobuf:"varint,2,opt,name=num_frees,json=numFrees" json:"num_frees,omitempty"`
}

func (m *MemTrackStats) Reset()                    { *m = MemTrackStats{} }
func (m *MemTrackStats) String() string            { return proto.CompactTextString(m) }
func (*MemTrackStats) ProtoMessage()               {}
func (*MemTrackStats) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{30} }

func (m *MemTrackStats) GetNumAllocs() uint32 {
	if m != nil {
		return m.NumAllocs
	}
	return 0
}

func (m *MemTrackStats) GetNumFrees() uint32 {
	if m != nil {
		return m.NumFrees
	}
	return 0
}

// MemTrackGetResponse captures debug information per allocation id
type MemTrackGetResponse struct {
	ApiStatus ApiStatus       `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	Spec      *MemTrackSpec   `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	Status    *MemTrackStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	Stats     *MemTrackStats  `protobuf:"bytes,4,opt,name=stats" json:"stats,omitempty"`
}

func (m *MemTrackGetResponse) Reset()                    { *m = MemTrackGetResponse{} }
func (m *MemTrackGetResponse) String() string            { return proto.CompactTextString(m) }
func (*MemTrackGetResponse) ProtoMessage()               {}
func (*MemTrackGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{31} }

func (m *MemTrackGetResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *MemTrackGetResponse) GetSpec() *MemTrackSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *MemTrackGetResponse) GetStatus() *MemTrackStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *MemTrackGetResponse) GetStats() *MemTrackStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

// MemTrackGetResponseMsg is batched MemTrackGetResponse
type MemTrackGetResponseMsg struct {
	Response []*MemTrackGetResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *MemTrackGetResponseMsg) Reset()                    { *m = MemTrackGetResponseMsg{} }
func (m *MemTrackGetResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*MemTrackGetResponseMsg) ProtoMessage()               {}
func (*MemTrackGetResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{32} }

func (m *MemTrackGetResponseMsg) GetResponse() []*MemTrackGetResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

// SlabSpec identifies a slab
type SlabSpec struct {
	Name             string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id               uint32 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	ElementSize      uint32 `protobuf:"varint,3,opt,name=element_size,json=elementSize" json:"element_size,omitempty"`
	ElementsPerBlock uint32 `protobuf:"varint,4,opt,name=elements_per_block,json=elementsPerBlock" json:"elements_per_block,omitempty"`
	ThreadSafe       bool   `protobuf:"varint,5,opt,name=thread_safe,json=threadSafe" json:"thread_safe,omitempty"`
	GrowOnDemand     bool   `protobuf:"varint,6,opt,name=grow_on_demand,json=growOnDemand" json:"grow_on_demand,omitempty"`
	DelayDelete      bool   `protobuf:"varint,7,opt,name=delay_delete,json=delayDelete" json:"delay_delete,omitempty"`
	ZeroOnAllocation bool   `protobuf:"varint,8,opt,name=zero_on_allocation,json=zeroOnAllocation" json:"zero_on_allocation,omitempty"`
	RawBlockSize     uint32 `protobuf:"varint,9,opt,name=raw_block_size,json=rawBlockSize" json:"raw_block_size,omitempty"`
}

func (m *SlabSpec) Reset()                    { *m = SlabSpec{} }
func (m *SlabSpec) String() string            { return proto.CompactTextString(m) }
func (*SlabSpec) ProtoMessage()               {}
func (*SlabSpec) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{33} }

func (m *SlabSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SlabSpec) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SlabSpec) GetElementSize() uint32 {
	if m != nil {
		return m.ElementSize
	}
	return 0
}

func (m *SlabSpec) GetElementsPerBlock() uint32 {
	if m != nil {
		return m.ElementsPerBlock
	}
	return 0
}

func (m *SlabSpec) GetThreadSafe() bool {
	if m != nil {
		return m.ThreadSafe
	}
	return false
}

func (m *SlabSpec) GetGrowOnDemand() bool {
	if m != nil {
		return m.GrowOnDemand
	}
	return false
}

func (m *SlabSpec) GetDelayDelete() bool {
	if m != nil {
		return m.DelayDelete
	}
	return false
}

func (m *SlabSpec) GetZeroOnAllocation() bool {
	if m != nil {
		return m.ZeroOnAllocation
	}
	return false
}

func (m *SlabSpec) GetRawBlockSize() uint32 {
	if m != nil {
		return m.RawBlockSize
	}
	return 0
}

// operational status of slab, if any
type SlabStatus struct {
}

func (m *SlabStatus) Reset()                    { *m = SlabStatus{} }
func (m *SlabStatus) String() string            { return proto.CompactTextString(m) }
func (*SlabStatus) ProtoMessage()               {}
func (*SlabStatus) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{34} }

// per slab statistics
type SlabStats struct {
	NumElementsInUse uint32 `protobuf:"varint,1,opt,name=num_elements_in_use,json=numElementsInUse" json:"num_elements_in_use,omitempty"`
	NumAllocs        uint32 `protobuf:"varint,2,opt,name=num_allocs,json=numAllocs" json:"num_allocs,omitempty"`
	NumFrees         uint32 `protobuf:"varint,3,opt,name=num_frees,json=numFrees" json:"num_frees,omitempty"`
	NumAllocErrors   uint32 `protobuf:"varint,4,opt,name=num_alloc_errors,json=numAllocErrors" json:"num_alloc_errors,omitempty"`
	NumBlocks        uint32 `protobuf:"varint,5,opt,name=num_blocks,json=numBlocks" json:"num_blocks,omitempty"`
}

func (m *SlabStats) Reset()                    { *m = SlabStats{} }
func (m *SlabStats) String() string            { return proto.CompactTextString(m) }
func (*SlabStats) ProtoMessage()               {}
func (*SlabStats) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{35} }

func (m *SlabStats) GetNumElementsInUse() uint32 {
	if m != nil {
		return m.NumElementsInUse
	}
	return 0
}

func (m *SlabStats) GetNumAllocs() uint32 {
	if m != nil {
		return m.NumAllocs
	}
	return 0
}

func (m *SlabStats) GetNumFrees() uint32 {
	if m != nil {
		return m.NumFrees
	}
	return 0
}

func (m *SlabStats) GetNumAllocErrors() uint32 {
	if m != nil {
		return m.NumAllocErrors
	}
	return 0
}

func (m *SlabStats) GetNumBlocks() uint32 {
	if m != nil {
		return m.NumBlocks
	}
	return 0
}

// SlabGetRequest is GET request per slab
type SlabGetRequest struct {
	Id uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *SlabGetRequest) Reset()                    { *m = SlabGetRequest{} }
func (m *SlabGetRequest) String() string            { return proto.CompactTextString(m) }
func (*SlabGetRequest) ProtoMessage()               {}
func (*SlabGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{36} }

func (m *SlabGetRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// SlabGetResponse is batched GET request
type SlabGetRequestMsg struct {
	Request []*SlabGetRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
}

func (m *SlabGetRequestMsg) Reset()                    { *m = SlabGetRequestMsg{} }
func (m *SlabGetRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*SlabGetRequestMsg) ProtoMessage()               {}
func (*SlabGetRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{37} }

func (m *SlabGetRequestMsg) GetRequest() []*SlabGetRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

// SlabGetResponse captures all information about a slab
type SlabGetResponse struct {
	ApiStatus ApiStatus   `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	Spec      *SlabSpec   `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	Status    *SlabStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	Stats     *SlabStats  `protobuf:"bytes,4,opt,name=stats" json:"stats,omitempty"`
}

func (m *SlabGetResponse) Reset()                    { *m = SlabGetResponse{} }
func (m *SlabGetResponse) String() string            { return proto.CompactTextString(m) }
func (*SlabGetResponse) ProtoMessage()               {}
func (*SlabGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{38} }

func (m *SlabGetResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *SlabGetResponse) GetSpec() *SlabSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *SlabGetResponse) GetStatus() *SlabStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SlabGetResponse) GetStats() *SlabStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

// SlabGetResponseMsg is batched response for GET operation
type SlabGetResponseMsg struct {
	Response []*SlabGetResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *SlabGetResponseMsg) Reset()                    { *m = SlabGetResponseMsg{} }
func (m *SlabGetResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*SlabGetResponseMsg) ProtoMessage()               {}
func (*SlabGetResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{39} }

func (m *SlabGetResponseMsg) GetResponse() []*SlabGetResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

// HashTableSpec identifies a hash table
type HashTableSpec struct {
	Name           string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	NumBuckets     uint32 `protobuf:"varint,2,opt,name=num_buckets,json=numBuckets" json:"num_buckets,omitempty"`
	ThreadSafe     bool   `protobuf:"varint,3,opt,name=thread_safe,json=threadSafe" json:"thread_safe,omitempty"`
	MaxBucketDepth uint32 `protobuf:"varint,4,opt,name=max_bucket_depth,json=maxBucketDepth" json:"max_bucket_depth,omitempty"`
	AvgBucketDepth uint32 `protobuf:"varint,5,opt,name=avg_bucket_depth,json=avgBucketDepth" json:"avg_bucket_depth,omitempty"`
}

func (m *HashTableSpec) Reset()                    { *m = HashTableSpec{} }
func (m *HashTableSpec) String() string            { return proto.CompactTextString(m) }
func (*HashTableSpec) ProtoMessage()               {}
func (*HashTableSpec) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{40} }

func (m *HashTableSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HashTableSpec) GetNumBuckets() uint32 {
	if m != nil {
		return m.NumBuckets
	}
	return 0
}

func (m *HashTableSpec) GetThreadSafe() bool {
	if m != nil {
		return m.ThreadSafe
	}
	return false
}

func (m *HashTableSpec) GetMaxBucketDepth() uint32 {
	if m != nil {
		return m.MaxBucketDepth
	}
	return 0
}

func (m *HashTableSpec) GetAvgBucketDepth() uint32 {
	if m != nil {
		return m.AvgBucketDepth
	}
	return 0
}

// operational status of slab, if any
type HashTableStatus struct {
}

func (m *HashTableStatus) Reset()                    { *m = HashTableStatus{} }
func (m *HashTableStatus) String() string            { return proto.CompactTextString(m) }
func (*HashTableStatus) ProtoMessage()               {}
func (*HashTableStatus) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{41} }

// per hash table statisitics
type HashTableStats struct {
	NumEntries      uint32 `protobuf:"varint,1,opt,name=num_entries,json=numEntries" json:"num_entries,omitempty"`
	NumInserts      uint32 `protobuf:"varint,2,opt,name=num_inserts,json=numInserts" json:"num_inserts,omitempty"`
	NumInsertErrors uint32 `protobuf:"varint,3,opt,name=num_insert_errors,json=numInsertErrors" json:"num_insert_errors,omitempty"`
	NumDeletes      uint32 `protobuf:"varint,4,opt,name=num_deletes,json=numDeletes" json:"num_deletes,omitempty"`
	NumDeleteErrors uint32 `protobuf:"varint,5,opt,name=num_delete_errors,json=numDeleteErrors" json:"num_delete_errors,omitempty"`
	NumLookups      uint32 `protobuf:"varint,6,opt,name=num_lookups,json=numLookups" json:"num_lookups,omitempty"`
}

func (m *HashTableStats) Reset()                    { *m = HashTableStats{} }
func (m *HashTableStats) String() string            { return proto.CompactTextString(m) }
func (*HashTableStats) ProtoMessage()               {}
func (*HashTableStats) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{42} }

func (m *HashTableStats) GetNumEntries() uint32 {
	if m != nil {
		return m.NumEntries
	}
	return 0
}

func (m *HashTableStats) GetNumInserts() uint32 {
	if m != nil {
		return m.NumInserts
	}
	return 0
}

func (m *HashTableStats) GetNumInsertErrors() uint32 {
	if m != nil {
		return m.NumInsertErrors
	}
	return 0
}

func (m *HashTableStats) GetNumDeletes() uint32 {
	if m != nil {
		return m.NumDeletes
	}
	return 0
}

func (m *HashTableStats) GetNumDeleteErrors() uint32 {
	if m != nil {
		return m.NumDeleteErrors
	}
	return 0
}

func (m *HashTableStats) GetNumLookups() uint32 {
	if m != nil {
		return m.NumLookups
	}
	return 0
}

type HashTableGetResponse struct {
	ApiStatus ApiStatus        `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	Spec      *HashTableSpec   `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	Status    *HashTableStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	Stats     *HashTableStats  `protobuf:"bytes,4,opt,name=stats" json:"stats,omitempty"`
}

func (m *HashTableGetResponse) Reset()                    { *m = HashTableGetResponse{} }
func (m *HashTableGetResponse) String() string            { return proto.CompactTextString(m) }
func (*HashTableGetResponse) ProtoMessage()               {}
func (*HashTableGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{43} }

func (m *HashTableGetResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *HashTableGetResponse) GetSpec() *HashTableSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *HashTableGetResponse) GetStatus() *HashTableStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *HashTableGetResponse) GetStats() *HashTableStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type HashTableGetResponseMsg struct {
	Response []*HashTableGetResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *HashTableGetResponseMsg) Reset()                    { *m = HashTableGetResponseMsg{} }
func (m *HashTableGetResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*HashTableGetResponseMsg) ProtoMessage()               {}
func (*HashTableGetResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{44} }

func (m *HashTableGetResponseMsg) GetResponse() []*HashTableGetResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type ThreadSpec struct {
	Name        string      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id          uint32      `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	PthreadId   uint32      `protobuf:"varint,3,opt,name=pthread_id,json=pthreadId" json:"pthread_id,omitempty"`
	Prio        int32       `protobuf:"varint,4,opt,name=prio" json:"prio,omitempty"`
	SchedPolicy SchedPolicy `protobuf:"varint,5,opt,name=sched_policy,json=schedPolicy,enum=debug.SchedPolicy" json:"sched_policy,omitempty"`
	Running     bool        `protobuf:"varint,6,opt,name=running" json:"running,omitempty"`
	Role        ThreadRole  `protobuf:"varint,7,opt,name=role,enum=debug.ThreadRole" json:"role,omitempty"`
	CoreMask    uint64      `protobuf:"varint,8,opt,name=core_mask,json=coreMask" json:"core_mask,omitempty"`
}

func (m *ThreadSpec) Reset()                    { *m = ThreadSpec{} }
func (m *ThreadSpec) String() string            { return proto.CompactTextString(m) }
func (*ThreadSpec) ProtoMessage()               {}
func (*ThreadSpec) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{45} }

func (m *ThreadSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ThreadSpec) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ThreadSpec) GetPthreadId() uint32 {
	if m != nil {
		return m.PthreadId
	}
	return 0
}

func (m *ThreadSpec) GetPrio() int32 {
	if m != nil {
		return m.Prio
	}
	return 0
}

func (m *ThreadSpec) GetSchedPolicy() SchedPolicy {
	if m != nil {
		return m.SchedPolicy
	}
	return SchedPolicy_SCHED_POLICY_OTHER
}

func (m *ThreadSpec) GetRunning() bool {
	if m != nil {
		return m.Running
	}
	return false
}

func (m *ThreadSpec) GetRole() ThreadRole {
	if m != nil {
		return m.Role
	}
	return ThreadRole_THREAD_ROLE_CONTROL
}

func (m *ThreadSpec) GetCoreMask() uint64 {
	if m != nil {
		return m.CoreMask
	}
	return 0
}

type ThreadStatus struct {
	LastHb uint64 `protobuf:"varint,1,opt,name=last_hb,json=lastHb" json:"last_hb,omitempty"`
}

func (m *ThreadStatus) Reset()                    { *m = ThreadStatus{} }
func (m *ThreadStatus) String() string            { return proto.CompactTextString(m) }
func (*ThreadStatus) ProtoMessage()               {}
func (*ThreadStatus) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{46} }

func (m *ThreadStatus) GetLastHb() uint64 {
	if m != nil {
		return m.LastHb
	}
	return 0
}

type ThreadStats struct {
}

func (m *ThreadStats) Reset()                    { *m = ThreadStats{} }
func (m *ThreadStats) String() string            { return proto.CompactTextString(m) }
func (*ThreadStats) ProtoMessage()               {}
func (*ThreadStats) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{47} }

type ThreadResponse struct {
	ApiStatus       ApiStatus     `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	ControlCoreMask uint64        `protobuf:"varint,2,opt,name=control_core_mask,json=controlCoreMask" json:"control_core_mask,omitempty"`
	DataCoreMask    uint64        `protobuf:"varint,3,opt,name=data_core_mask,json=dataCoreMask" json:"data_core_mask,omitempty"`
	Spec            *ThreadSpec   `protobuf:"bytes,4,opt,name=spec" json:"spec,omitempty"`
	Status          *ThreadStatus `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	Stats           *ThreadStats  `protobuf:"bytes,6,opt,name=stats" json:"stats,omitempty"`
}

func (m *ThreadResponse) Reset()                    { *m = ThreadResponse{} }
func (m *ThreadResponse) String() string            { return proto.CompactTextString(m) }
func (*ThreadResponse) ProtoMessage()               {}
func (*ThreadResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{48} }

func (m *ThreadResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *ThreadResponse) GetControlCoreMask() uint64 {
	if m != nil {
		return m.ControlCoreMask
	}
	return 0
}

func (m *ThreadResponse) GetDataCoreMask() uint64 {
	if m != nil {
		return m.DataCoreMask
	}
	return 0
}

func (m *ThreadResponse) GetSpec() *ThreadSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *ThreadResponse) GetStatus() *ThreadStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ThreadResponse) GetStats() *ThreadStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type ThreadResponseMsg struct {
	Response []*ThreadResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *ThreadResponseMsg) Reset()                    { *m = ThreadResponseMsg{} }
func (m *ThreadResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*ThreadResponseMsg) ProtoMessage()               {}
func (*ThreadResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{49} }

func (m *ThreadResponseMsg) GetResponse() []*ThreadResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type TraceSpec struct {
	TraceLevel TraceLevel `protobuf:"varint,1,opt,name=trace_level,json=traceLevel,enum=debug.TraceLevel" json:"trace_level,omitempty"`
}

func (m *TraceSpec) Reset()                    { *m = TraceSpec{} }
func (m *TraceSpec) String() string            { return proto.CompactTextString(m) }
func (*TraceSpec) ProtoMessage()               {}
func (*TraceSpec) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{50} }

func (m *TraceSpec) GetTraceLevel() TraceLevel {
	if m != nil {
		return m.TraceLevel
	}
	return TraceLevel_TRACE_LEVEL_NONE
}

type TraceRequestMsg struct {
	Request []*TraceSpec `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
}

func (m *TraceRequestMsg) Reset()                    { *m = TraceRequestMsg{} }
func (m *TraceRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*TraceRequestMsg) ProtoMessage()               {}
func (*TraceRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{51} }

func (m *TraceRequestMsg) GetRequest() []*TraceSpec {
	if m != nil {
		return m.Request
	}
	return nil
}

type TraceResponse struct {
	ApiStatus  ApiStatus  `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	TraceLevel TraceLevel `protobuf:"varint,2,opt,name=trace_level,json=traceLevel,enum=debug.TraceLevel" json:"trace_level,omitempty"`
}

func (m *TraceResponse) Reset()                    { *m = TraceResponse{} }
func (m *TraceResponse) String() string            { return proto.CompactTextString(m) }
func (*TraceResponse) ProtoMessage()               {}
func (*TraceResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{52} }

func (m *TraceResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *TraceResponse) GetTraceLevel() TraceLevel {
	if m != nil {
		return m.TraceLevel
	}
	return TraceLevel_TRACE_LEVEL_NONE
}

type TraceResponseMsg struct {
	Response []*TraceResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *TraceResponseMsg) Reset()                    { *m = TraceResponseMsg{} }
func (m *TraceResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*TraceResponseMsg) ProtoMessage()               {}
func (*TraceResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{53} }

func (m *TraceResponseMsg) GetResponse() []*TraceResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type MpuTraceSpec struct {
	Enable       bool   `protobuf:"varint,1,opt,name=enable" json:"enable,omitempty"`
	TraceEnable  bool   `protobuf:"varint,2,opt,name=trace_enable,json=traceEnable" json:"trace_enable,omitempty"`
	PhvDebug     bool   `protobuf:"varint,3,opt,name=phv_debug,json=phvDebug" json:"phv_debug,omitempty"`
	PhvError     bool   `protobuf:"varint,4,opt,name=phv_error,json=phvError" json:"phv_error,omitempty"`
	WatchPc      uint64 `protobuf:"varint,5,opt,name=watch_pc,json=watchPc" json:"watch_pc,omitempty"`
	BaseAddr     uint64 `protobuf:"varint,6,opt,name=base_addr,json=baseAddr" json:"base_addr,omitempty"`
	BufSize      uint32 `protobuf:"varint,7,opt,name=buf_size,json=bufSize" json:"buf_size,omitempty"`
	TableKey     bool   `protobuf:"varint,8,opt,name=table_key,json=tableKey" json:"table_key,omitempty"`
	Instructions bool   `protobuf:"varint,9,opt,name=instructions" json:"instructions,omitempty"`
	Wrap         bool   `protobuf:"varint,10,opt,name=wrap" json:"wrap,omitempty"`
	Reset_       bool   `protobuf:"varint,11,opt,name=reset" json:"reset,omitempty"`
}

func (m *MpuTraceSpec) Reset()                    { *m = MpuTraceSpec{} }
func (m *MpuTraceSpec) String() string            { return proto.CompactTextString(m) }
func (*MpuTraceSpec) ProtoMessage()               {}
func (*MpuTraceSpec) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{54} }

func (m *MpuTraceSpec) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *MpuTraceSpec) GetTraceEnable() bool {
	if m != nil {
		return m.TraceEnable
	}
	return false
}

func (m *MpuTraceSpec) GetPhvDebug() bool {
	if m != nil {
		return m.PhvDebug
	}
	return false
}

func (m *MpuTraceSpec) GetPhvError() bool {
	if m != nil {
		return m.PhvError
	}
	return false
}

func (m *MpuTraceSpec) GetWatchPc() uint64 {
	if m != nil {
		return m.WatchPc
	}
	return 0
}

func (m *MpuTraceSpec) GetBaseAddr() uint64 {
	if m != nil {
		return m.BaseAddr
	}
	return 0
}

func (m *MpuTraceSpec) GetBufSize() uint32 {
	if m != nil {
		return m.BufSize
	}
	return 0
}

func (m *MpuTraceSpec) GetTableKey() bool {
	if m != nil {
		return m.TableKey
	}
	return false
}

func (m *MpuTraceSpec) GetInstructions() bool {
	if m != nil {
		return m.Instructions
	}
	return false
}

func (m *MpuTraceSpec) GetWrap() bool {
	if m != nil {
		return m.Wrap
	}
	return false
}

func (m *MpuTraceSpec) GetReset_() bool {
	if m != nil {
		return m.Reset_
	}
	return false
}

// parameters to enable/disable MPU tracing
type MpuTraceRequest struct {
	PipelineType MpuTracePipelineType `protobuf:"varint,1,opt,name=pipeline_type,json=pipelineType,enum=debug.MpuTracePipelineType" json:"pipeline_type,omitempty"`
	StageId      uint32               `protobuf:"varint,2,opt,name=stage_id,json=stageId" json:"stage_id,omitempty"`
	Mpu          uint32               `protobuf:"varint,3,opt,name=mpu" json:"mpu,omitempty"`
	Spec         *MpuTraceSpec        `protobuf:"bytes,4,opt,name=spec" json:"spec,omitempty"`
}

func (m *MpuTraceRequest) Reset()                    { *m = MpuTraceRequest{} }
func (m *MpuTraceRequest) String() string            { return proto.CompactTextString(m) }
func (*MpuTraceRequest) ProtoMessage()               {}
func (*MpuTraceRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{55} }

func (m *MpuTraceRequest) GetPipelineType() MpuTracePipelineType {
	if m != nil {
		return m.PipelineType
	}
	return MpuTracePipelineType_MPU_TRACE_PIPELINE_NONE
}

func (m *MpuTraceRequest) GetStageId() uint32 {
	if m != nil {
		return m.StageId
	}
	return 0
}

func (m *MpuTraceRequest) GetMpu() uint32 {
	if m != nil {
		return m.Mpu
	}
	return 0
}

func (m *MpuTraceRequest) GetSpec() *MpuTraceSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

// Batched MPU trace enable/disable request msg
type MpuTraceRequestMsg struct {
	Request []*MpuTraceRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
}

func (m *MpuTraceRequestMsg) Reset()                    { *m = MpuTraceRequestMsg{} }
func (m *MpuTraceRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*MpuTraceRequestMsg) ProtoMessage()               {}
func (*MpuTraceRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{56} }

func (m *MpuTraceRequestMsg) GetRequest() []*MpuTraceRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

// MPU trace enable/disable status
type MpuTraceResponse struct {
	ApiStatus  ApiStatus     `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	Spec       *MpuTraceSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	DebugIndex uint32        `protobuf:"varint,3,opt,name=debug_index,json=debugIndex" json:"debug_index,omitempty"`
}

func (m *MpuTraceResponse) Reset()                    { *m = MpuTraceResponse{} }
func (m *MpuTraceResponse) String() string            { return proto.CompactTextString(m) }
func (*MpuTraceResponse) ProtoMessage()               {}
func (*MpuTraceResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{57} }

func (m *MpuTraceResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *MpuTraceResponse) GetSpec() *MpuTraceSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *MpuTraceResponse) GetDebugIndex() uint32 {
	if m != nil {
		return m.DebugIndex
	}
	return 0
}

// Batched MPU trace response
type MpuTraceResponseMsg struct {
	Response []*MpuTraceResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *MpuTraceResponseMsg) Reset()                    { *m = MpuTraceResponseMsg{} }
func (m *MpuTraceResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*MpuTraceResponseMsg) ProtoMessage()               {}
func (*MpuTraceResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{58} }

func (m *MpuTraceResponseMsg) GetResponse() []*MpuTraceResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

// Flush logs response
type FlushLogsResponse struct {
	ApiStatus ApiStatus `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
}

func (m *FlushLogsResponse) Reset()                    { *m = FlushLogsResponse{} }
func (m *FlushLogsResponse) String() string            { return proto.CompactTextString(m) }
func (*FlushLogsResponse) ProtoMessage()               {}
func (*FlushLogsResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{59} }

func (m *FlushLogsResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

// Flush logs response message
type FlushLogsResponseMsg struct {
	Response []*FlushLogsResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *FlushLogsResponseMsg) Reset()                    { *m = FlushLogsResponseMsg{} }
func (m *FlushLogsResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*FlushLogsResponseMsg) ProtoMessage()               {}
func (*FlushLogsResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{60} }

func (m *FlushLogsResponseMsg) GetResponse() []*FlushLogsResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type ClockSpec struct {
	HardwareClock uint64 `protobuf:"varint,1,opt,name=hardware_clock,json=hardwareClock" json:"hardware_clock,omitempty"`
	SoftwareDelta uint64 `protobuf:"varint,2,opt,name=software_delta,json=softwareDelta" json:"software_delta,omitempty"`
	SoftwareClock uint64 `protobuf:"varint,3,opt,name=software_clock,json=softwareClock" json:"software_clock,omitempty"`
}

func (m *ClockSpec) Reset()                    { *m = ClockSpec{} }
func (m *ClockSpec) String() string            { return proto.CompactTextString(m) }
func (*ClockSpec) ProtoMessage()               {}
func (*ClockSpec) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{61} }

func (m *ClockSpec) GetHardwareClock() uint64 {
	if m != nil {
		return m.HardwareClock
	}
	return 0
}

func (m *ClockSpec) GetSoftwareDelta() uint64 {
	if m != nil {
		return m.SoftwareDelta
	}
	return 0
}

func (m *ClockSpec) GetSoftwareClock() uint64 {
	if m != nil {
		return m.SoftwareClock
	}
	return 0
}

type ClockStatus struct {
}

func (m *ClockStatus) Reset()                    { *m = ClockStatus{} }
func (m *ClockStatus) String() string            { return proto.CompactTextString(m) }
func (*ClockStatus) ProtoMessage()               {}
func (*ClockStatus) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{62} }

type ClockStats struct {
}

func (m *ClockStats) Reset()                    { *m = ClockStats{} }
func (m *ClockStats) String() string            { return proto.CompactTextString(m) }
func (*ClockStats) ProtoMessage()               {}
func (*ClockStats) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{63} }

type ClockResponse struct {
	ApiStatus ApiStatus    `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	Spec      *ClockSpec   `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	Status    *ClockStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	Stats     *ClockStats  `protobuf:"bytes,4,opt,name=stats" json:"stats,omitempty"`
}

func (m *ClockResponse) Reset()                    { *m = ClockResponse{} }
func (m *ClockResponse) String() string            { return proto.CompactTextString(m) }
func (*ClockResponse) ProtoMessage()               {}
func (*ClockResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{64} }

func (m *ClockResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *ClockResponse) GetSpec() *ClockSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *ClockResponse) GetStatus() *ClockStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ClockResponse) GetStats() *ClockStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type Bandwidth struct {
	Read  float64 `protobuf:"fixed64,1,opt,name=read" json:"read,omitempty"`
	Write float64 `protobuf:"fixed64,2,opt,name=write" json:"write,omitempty"`
}

func (m *Bandwidth) Reset()                    { *m = Bandwidth{} }
func (m *Bandwidth) String() string            { return proto.CompactTextString(m) }
func (*Bandwidth) ProtoMessage()               {}
func (*Bandwidth) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{65} }

func (m *Bandwidth) GetRead() float64 {
	if m != nil {
		return m.Read
	}
	return 0
}

func (m *Bandwidth) GetWrite() float64 {
	if m != nil {
		return m.Write
	}
	return 0
}

type HbmBwGetRequest struct {
	NumSamples    uint32 `protobuf:"varint,1,opt,name=num_samples,json=numSamples" json:"num_samples,omitempty"`
	SleepInterval uint32 `protobuf:"varint,2,opt,name=sleep_interval,json=sleepInterval" json:"sleep_interval,omitempty"`
}

func (m *HbmBwGetRequest) Reset()                    { *m = HbmBwGetRequest{} }
func (m *HbmBwGetRequest) String() string            { return proto.CompactTextString(m) }
func (*HbmBwGetRequest) ProtoMessage()               {}
func (*HbmBwGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{66} }

func (m *HbmBwGetRequest) GetNumSamples() uint32 {
	if m != nil {
		return m.NumSamples
	}
	return 0
}

func (m *HbmBwGetRequest) GetSleepInterval() uint32 {
	if m != nil {
		return m.SleepInterval
	}
	return 0
}

type HbmBwGetRequestMsg struct {
	Request []*HbmBwGetRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
}

func (m *HbmBwGetRequestMsg) Reset()                    { *m = HbmBwGetRequestMsg{} }
func (m *HbmBwGetRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*HbmBwGetRequestMsg) ProtoMessage()               {}
func (*HbmBwGetRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{67} }

func (m *HbmBwGetRequestMsg) GetRequest() []*HbmBwGetRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type HbmBwGetResponse struct {
	Type    CapriBlock `protobuf:"varint,1,opt,name=type,enum=debug.CapriBlock" json:"type,omitempty"`
	Average *Bandwidth `protobuf:"bytes,2,opt,name=average" json:"average,omitempty"`
	Maximum *Bandwidth `protobuf:"bytes,3,opt,name=maximum" json:"maximum,omitempty"`
	ClkDiff uint64     `protobuf:"varint,4,opt,name=clk_diff,json=clkDiff" json:"clk_diff,omitempty"`
}

func (m *HbmBwGetResponse) Reset()                    { *m = HbmBwGetResponse{} }
func (m *HbmBwGetResponse) String() string            { return proto.CompactTextString(m) }
func (*HbmBwGetResponse) ProtoMessage()               {}
func (*HbmBwGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{68} }

func (m *HbmBwGetResponse) GetType() CapriBlock {
	if m != nil {
		return m.Type
	}
	return CapriBlock_CAPRI_BLOCK_PB
}

func (m *HbmBwGetResponse) GetAverage() *Bandwidth {
	if m != nil {
		return m.Average
	}
	return nil
}

func (m *HbmBwGetResponse) GetMaximum() *Bandwidth {
	if m != nil {
		return m.Maximum
	}
	return nil
}

func (m *HbmBwGetResponse) GetClkDiff() uint64 {
	if m != nil {
		return m.ClkDiff
	}
	return 0
}

type HbmBwGetResponseMsg struct {
	Response []*HbmBwGetResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *HbmBwGetResponseMsg) Reset()                    { *m = HbmBwGetResponseMsg{} }
func (m *HbmBwGetResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*HbmBwGetResponseMsg) ProtoMessage()               {}
func (*HbmBwGetResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{69} }

func (m *HbmBwGetResponseMsg) GetResponse() []*HbmBwGetResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type LlcSetupRequest struct {
	Type LlcCounterType `protobuf:"varint,1,opt,name=type,enum=debug.LlcCounterType" json:"type,omitempty"`
}

func (m *LlcSetupRequest) Reset()                    { *m = LlcSetupRequest{} }
func (m *LlcSetupRequest) String() string            { return proto.CompactTextString(m) }
func (*LlcSetupRequest) ProtoMessage()               {}
func (*LlcSetupRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{70} }

func (m *LlcSetupRequest) GetType() LlcCounterType {
	if m != nil {
		return m.Type
	}
	return LlcCounterType_LLC_COUNTER_CACHE_NONE
}

type LlcSetupRequestMsg struct {
	Request []*LlcSetupRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
}

func (m *LlcSetupRequestMsg) Reset()                    { *m = LlcSetupRequestMsg{} }
func (m *LlcSetupRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*LlcSetupRequestMsg) ProtoMessage()               {}
func (*LlcSetupRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{71} }

func (m *LlcSetupRequestMsg) GetRequest() []*LlcSetupRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type LlcSetupResponse struct {
	ApiStatus ApiStatus `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
}

func (m *LlcSetupResponse) Reset()                    { *m = LlcSetupResponse{} }
func (m *LlcSetupResponse) String() string            { return proto.CompactTextString(m) }
func (*LlcSetupResponse) ProtoMessage()               {}
func (*LlcSetupResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{72} }

func (m *LlcSetupResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

type LlcSetupResponseMsg struct {
	Response []*LlcSetupResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *LlcSetupResponseMsg) Reset()                    { *m = LlcSetupResponseMsg{} }
func (m *LlcSetupResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*LlcSetupResponseMsg) ProtoMessage()               {}
func (*LlcSetupResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{73} }

func (m *LlcSetupResponseMsg) GetResponse() []*LlcSetupResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type LlcGetResponse struct {
	ApiStatus ApiStatus      `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	Type      LlcCounterType `protobuf:"varint,2,opt,name=type,enum=debug.LlcCounterType" json:"type,omitempty"`
	Count     []uint32       `protobuf:"varint,3,rep,packed,name=count" json:"count,omitempty"`
}

func (m *LlcGetResponse) Reset()                    { *m = LlcGetResponse{} }
func (m *LlcGetResponse) String() string            { return proto.CompactTextString(m) }
func (*LlcGetResponse) ProtoMessage()               {}
func (*LlcGetResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{74} }

func (m *LlcGetResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *LlcGetResponse) GetType() LlcCounterType {
	if m != nil {
		return m.Type
	}
	return LlcCounterType_LLC_COUNTER_CACHE_NONE
}

func (m *LlcGetResponse) GetCount() []uint32 {
	if m != nil {
		return m.Count
	}
	return nil
}

type LlcGetResponseMsg struct {
	Response []*LlcGetResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *LlcGetResponseMsg) Reset()                    { *m = LlcGetResponseMsg{} }
func (m *LlcGetResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*LlcGetResponseMsg) ProtoMessage()               {}
func (*LlcGetResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{75} }

func (m *LlcGetResponseMsg) GetResponse() []*LlcGetResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type HbmCacheSram struct {
	Type   HbmSramType `protobuf:"varint,1,opt,name=type,enum=debug.HbmSramType" json:"type,omitempty"`
	Enable bool        `protobuf:"varint,2,opt,name=enable" json:"enable,omitempty"`
}

func (m *HbmCacheSram) Reset()                    { *m = HbmCacheSram{} }
func (m *HbmCacheSram) String() string            { return proto.CompactTextString(m) }
func (*HbmCacheSram) ProtoMessage()               {}
func (*HbmCacheSram) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{76} }

func (m *HbmCacheSram) GetType() HbmSramType {
	if m != nil {
		return m.Type
	}
	return HbmSramType_SRAM_P4_INGRESS
}

func (m *HbmCacheSram) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

type HbmCacheLlc struct {
	Enable bool `protobuf:"varint,1,opt,name=enable" json:"enable,omitempty"`
}

func (m *HbmCacheLlc) Reset()                    { *m = HbmCacheLlc{} }
func (m *HbmCacheLlc) String() string            { return proto.CompactTextString(m) }
func (*HbmCacheLlc) ProtoMessage()               {}
func (*HbmCacheLlc) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{77} }

func (m *HbmCacheLlc) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

type HbmCacheRequest struct {
	// Types that are valid to be assigned to CacheRegions:
	//	*HbmCacheRequest_Sram
	//	*HbmCacheRequest_Llc
	CacheRegions isHbmCacheRequest_CacheRegions `protobuf_oneof:"cache_regions"`
}

func (m *HbmCacheRequest) Reset()                    { *m = HbmCacheRequest{} }
func (m *HbmCacheRequest) String() string            { return proto.CompactTextString(m) }
func (*HbmCacheRequest) ProtoMessage()               {}
func (*HbmCacheRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{78} }

type isHbmCacheRequest_CacheRegions interface{ isHbmCacheRequest_CacheRegions() }

type HbmCacheRequest_Sram struct {
	Sram *HbmCacheSram `protobuf:"bytes,1,opt,name=sram,oneof"`
}
type HbmCacheRequest_Llc struct {
	Llc *HbmCacheLlc `protobuf:"bytes,2,opt,name=llc,oneof"`
}

func (*HbmCacheRequest_Sram) isHbmCacheRequest_CacheRegions() {}
func (*HbmCacheRequest_Llc) isHbmCacheRequest_CacheRegions()  {}

func (m *HbmCacheRequest) GetCacheRegions() isHbmCacheRequest_CacheRegions {
	if m != nil {
		return m.CacheRegions
	}
	return nil
}

func (m *HbmCacheRequest) GetSram() *HbmCacheSram {
	if x, ok := m.GetCacheRegions().(*HbmCacheRequest_Sram); ok {
		return x.Sram
	}
	return nil
}

func (m *HbmCacheRequest) GetLlc() *HbmCacheLlc {
	if x, ok := m.GetCacheRegions().(*HbmCacheRequest_Llc); ok {
		return x.Llc
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*HbmCacheRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _HbmCacheRequest_OneofMarshaler, _HbmCacheRequest_OneofUnmarshaler, _HbmCacheRequest_OneofSizer, []interface{}{
		(*HbmCacheRequest_Sram)(nil),
		(*HbmCacheRequest_Llc)(nil),
	}
}

func _HbmCacheRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*HbmCacheRequest)
	// cache_regions
	switch x := m.CacheRegions.(type) {
	case *HbmCacheRequest_Sram:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Sram); err != nil {
			return err
		}
	case *HbmCacheRequest_Llc:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Llc); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("HbmCacheRequest.CacheRegions has unexpected type %T", x)
	}
	return nil
}

func _HbmCacheRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*HbmCacheRequest)
	switch tag {
	case 1: // cache_regions.sram
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HbmCacheSram)
		err := b.DecodeMessage(msg)
		m.CacheRegions = &HbmCacheRequest_Sram{msg}
		return true, err
	case 2: // cache_regions.llc
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HbmCacheLlc)
		err := b.DecodeMessage(msg)
		m.CacheRegions = &HbmCacheRequest_Llc{msg}
		return true, err
	default:
		return false, nil
	}
}

func _HbmCacheRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*HbmCacheRequest)
	// cache_regions
	switch x := m.CacheRegions.(type) {
	case *HbmCacheRequest_Sram:
		s := proto.Size(x.Sram)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *HbmCacheRequest_Llc:
		s := proto.Size(x.Llc)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type HbmCacheRequestMsg struct {
	Request []*HbmCacheRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
}

func (m *HbmCacheRequestMsg) Reset()                    { *m = HbmCacheRequestMsg{} }
func (m *HbmCacheRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*HbmCacheRequestMsg) ProtoMessage()               {}
func (*HbmCacheRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{79} }

func (m *HbmCacheRequestMsg) GetRequest() []*HbmCacheRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type HbmCacheResponse struct {
	ApiStatus ApiStatus `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
}

func (m *HbmCacheResponse) Reset()                    { *m = HbmCacheResponse{} }
func (m *HbmCacheResponse) String() string            { return proto.CompactTextString(m) }
func (*HbmCacheResponse) ProtoMessage()               {}
func (*HbmCacheResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{80} }

func (m *HbmCacheResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

type HbmCacheResponseMsg struct {
	Response []*HbmCacheResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *HbmCacheResponseMsg) Reset()                    { *m = HbmCacheResponseMsg{} }
func (m *HbmCacheResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*HbmCacheResponseMsg) ProtoMessage()               {}
func (*HbmCacheResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{81} }

func (m *HbmCacheResponseMsg) GetResponse() []*HbmCacheResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type CosStats struct {
	Cos           uint32 `protobuf:"varint,1,opt,name=cos" json:"cos,omitempty"`
	DoorbellCount uint32 `protobuf:"varint,2,opt,name=doorbell_count,json=doorbellCount" json:"doorbell_count,omitempty"`
	XonStatus     bool   `protobuf:"varint,3,opt,name=xon_status,json=xonStatus" json:"xon_status,omitempty"`
}

func (m *CosStats) Reset()                    { *m = CosStats{} }
func (m *CosStats) String() string            { return proto.CompactTextString(m) }
func (*CosStats) ProtoMessage()               {}
func (*CosStats) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{82} }

func (m *CosStats) GetCos() uint32 {
	if m != nil {
		return m.Cos
	}
	return 0
}

func (m *CosStats) GetDoorbellCount() uint32 {
	if m != nil {
		return m.DoorbellCount
	}
	return 0
}

func (m *CosStats) GetXonStatus() bool {
	if m != nil {
		return m.XonStatus
	}
	return false
}

type SchedulerStatsResponse struct {
	ApiStatus           ApiStatus   `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	DoorbellSetCount    uint32      `protobuf:"varint,2,opt,name=doorbell_set_count,json=doorbellSetCount" json:"doorbell_set_count,omitempty"`
	DoorbellClearCount  uint32      `protobuf:"varint,3,opt,name=doorbell_clear_count,json=doorbellClearCount" json:"doorbell_clear_count,omitempty"`
	RatelimitStartCount uint32      `protobuf:"varint,4,opt,name=ratelimit_start_count,json=ratelimitStartCount" json:"ratelimit_start_count,omitempty"`
	RatelimitStopCount  uint32      `protobuf:"varint,5,opt,name=ratelimit_stop_count,json=ratelimitStopCount" json:"ratelimit_stop_count,omitempty"`
	CosEntry            []*CosStats `protobuf:"bytes,6,rep,name=cos_entry,json=cosEntry" json:"cos_entry,omitempty"`
}

func (m *SchedulerStatsResponse) Reset()                    { *m = SchedulerStatsResponse{} }
func (m *SchedulerStatsResponse) String() string            { return proto.CompactTextString(m) }
func (*SchedulerStatsResponse) ProtoMessage()               {}
func (*SchedulerStatsResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{83} }

func (m *SchedulerStatsResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *SchedulerStatsResponse) GetDoorbellSetCount() uint32 {
	if m != nil {
		return m.DoorbellSetCount
	}
	return 0
}

func (m *SchedulerStatsResponse) GetDoorbellClearCount() uint32 {
	if m != nil {
		return m.DoorbellClearCount
	}
	return 0
}

func (m *SchedulerStatsResponse) GetRatelimitStartCount() uint32 {
	if m != nil {
		return m.RatelimitStartCount
	}
	return 0
}

func (m *SchedulerStatsResponse) GetRatelimitStopCount() uint32 {
	if m != nil {
		return m.RatelimitStopCount
	}
	return 0
}

func (m *SchedulerStatsResponse) GetCosEntry() []*CosStats {
	if m != nil {
		return m.CosEntry
	}
	return nil
}

type SchedulerStatsResponseMsg struct {
	Response []*SchedulerStatsResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *SchedulerStatsResponseMsg) Reset()                    { *m = SchedulerStatsResponseMsg{} }
func (m *SchedulerStatsResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*SchedulerStatsResponseMsg) ProtoMessage()               {}
func (*SchedulerStatsResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{84} }

func (m *SchedulerStatsResponseMsg) GetResponse() []*SchedulerStatsResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type QRange struct {
	// inclusive of both q_beg and q_end
	QBeg uint32 `protobuf:"varint,1,opt,name=q_beg,json=qBeg" json:"q_beg,omitempty"`
	QEnd uint32 `protobuf:"varint,2,opt,name=q_end,json=qEnd" json:"q_end,omitempty"`
}

func (m *QRange) Reset()                    { *m = QRange{} }
func (m *QRange) String() string            { return proto.CompactTextString(m) }
func (*QRange) ProtoMessage()               {}
func (*QRange) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{85} }

func (m *QRange) GetQBeg() uint32 {
	if m != nil {
		return m.QBeg
	}
	return 0
}

func (m *QRange) GetQEnd() uint32 {
	if m != nil {
		return m.QEnd
	}
	return 0
}

type QRanges struct {
	Range []*QRange `protobuf:"bytes,1,rep,name=range" json:"range,omitempty"`
}

func (m *QRanges) Reset()                    { *m = QRanges{} }
func (m *QRanges) String() string            { return proto.CompactTextString(m) }
func (*QRanges) ProtoMessage()               {}
func (*QRanges) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{86} }

func (m *QRanges) GetRange() []*QRange {
	if m != nil {
		return m.Range
	}
	return nil
}

type SchedulerActiveQRequest struct {
	Lif   *LifKeyHandle `protobuf:"bytes,1,opt,name=lif" json:"lif,omitempty"`
	QType LifQPurpose   `protobuf:"varint,2,opt,name=q_type,json=qType,enum=intf.LifQPurpose" json:"q_type,omitempty"`
	// Types that are valid to be assigned to NumOrRanges:
	//	*SchedulerActiveQRequest_QNum
	//	*SchedulerActiveQRequest_QRanges
	NumOrRanges isSchedulerActiveQRequest_NumOrRanges `protobuf_oneof:"num_or_ranges"`
	PollCount   uint32                                `protobuf:"varint,5,opt,name=poll_count,json=pollCount" json:"poll_count,omitempty"`
}

func (m *SchedulerActiveQRequest) Reset()                    { *m = SchedulerActiveQRequest{} }
func (m *SchedulerActiveQRequest) String() string            { return proto.CompactTextString(m) }
func (*SchedulerActiveQRequest) ProtoMessage()               {}
func (*SchedulerActiveQRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{87} }

type isSchedulerActiveQRequest_NumOrRanges interface{ isSchedulerActiveQRequest_NumOrRanges() }

type SchedulerActiveQRequest_QNum struct {
	QNum uint32 `protobuf:"varint,3,opt,name=q_num,json=qNum,oneof"`
}
type SchedulerActiveQRequest_QRanges struct {
	QRanges *QRanges `protobuf:"bytes,4,opt,name=q_ranges,json=qRanges,oneof"`
}

func (*SchedulerActiveQRequest_QNum) isSchedulerActiveQRequest_NumOrRanges()    {}
func (*SchedulerActiveQRequest_QRanges) isSchedulerActiveQRequest_NumOrRanges() {}

func (m *SchedulerActiveQRequest) GetNumOrRanges() isSchedulerActiveQRequest_NumOrRanges {
	if m != nil {
		return m.NumOrRanges
	}
	return nil
}

func (m *SchedulerActiveQRequest) GetLif() *LifKeyHandle {
	if m != nil {
		return m.Lif
	}
	return nil
}

func (m *SchedulerActiveQRequest) GetQType() LifQPurpose {
	if m != nil {
		return m.QType
	}
	return LifQPurpose_LIF_QUEUE_PURPOSE_NONE
}

func (m *SchedulerActiveQRequest) GetQNum() uint32 {
	if x, ok := m.GetNumOrRanges().(*SchedulerActiveQRequest_QNum); ok {
		return x.QNum
	}
	return 0
}

func (m *SchedulerActiveQRequest) GetQRanges() *QRanges {
	if x, ok := m.GetNumOrRanges().(*SchedulerActiveQRequest_QRanges); ok {
		return x.QRanges
	}
	return nil
}

func (m *SchedulerActiveQRequest) GetPollCount() uint32 {
	if m != nil {
		return m.PollCount
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SchedulerActiveQRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SchedulerActiveQRequest_OneofMarshaler, _SchedulerActiveQRequest_OneofUnmarshaler, _SchedulerActiveQRequest_OneofSizer, []interface{}{
		(*SchedulerActiveQRequest_QNum)(nil),
		(*SchedulerActiveQRequest_QRanges)(nil),
	}
}

func _SchedulerActiveQRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SchedulerActiveQRequest)
	// num_or_ranges
	switch x := m.NumOrRanges.(type) {
	case *SchedulerActiveQRequest_QNum:
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.QNum))
	case *SchedulerActiveQRequest_QRanges:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.QRanges); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SchedulerActiveQRequest.NumOrRanges has unexpected type %T", x)
	}
	return nil
}

func _SchedulerActiveQRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SchedulerActiveQRequest)
	switch tag {
	case 3: // num_or_ranges.q_num
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.NumOrRanges = &SchedulerActiveQRequest_QNum{uint32(x)}
		return true, err
	case 4: // num_or_ranges.q_ranges
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(QRanges)
		err := b.DecodeMessage(msg)
		m.NumOrRanges = &SchedulerActiveQRequest_QRanges{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SchedulerActiveQRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SchedulerActiveQRequest)
	// num_or_ranges
	switch x := m.NumOrRanges.(type) {
	case *SchedulerActiveQRequest_QNum:
		n += proto.SizeVarint(3<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.QNum))
	case *SchedulerActiveQRequest_QRanges:
		s := proto.Size(x.QRanges)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SchedulerActiveQRequestMsg struct {
	Request []*SchedulerActiveQRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
}

func (m *SchedulerActiveQRequestMsg) Reset()                    { *m = SchedulerActiveQRequestMsg{} }
func (m *SchedulerActiveQRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*SchedulerActiveQRequestMsg) ProtoMessage()               {}
func (*SchedulerActiveQRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{88} }

func (m *SchedulerActiveQRequestMsg) GetRequest() []*SchedulerActiveQRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type SchedulerActiveQResponse struct {
	ActiveQNum []uint32 `protobuf:"varint,1,rep,packed,name=active_q_num,json=activeQNum" json:"active_q_num,omitempty"`
}

func (m *SchedulerActiveQResponse) Reset()                    { *m = SchedulerActiveQResponse{} }
func (m *SchedulerActiveQResponse) String() string            { return proto.CompactTextString(m) }
func (*SchedulerActiveQResponse) ProtoMessage()               {}
func (*SchedulerActiveQResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{89} }

func (m *SchedulerActiveQResponse) GetActiveQNum() []uint32 {
	if m != nil {
		return m.ActiveQNum
	}
	return nil
}

type SchedulerActiveQResponseMsg struct {
	Response []*SchedulerActiveQResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *SchedulerActiveQResponseMsg) Reset()                    { *m = SchedulerActiveQResponseMsg{} }
func (m *SchedulerActiveQResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*SchedulerActiveQResponseMsg) ProtoMessage()               {}
func (*SchedulerActiveQResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{90} }

func (m *SchedulerActiveQResponseMsg) GetResponse() []*SchedulerActiveQResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func init() {
	proto.RegisterType((*FteSpanRequest)(nil), "halproto.FteSpanRequest")
	proto.RegisterType((*FteSpanRequestMsg)(nil), "halproto.FteSpanRequestMsg")
	proto.RegisterType((*FteSpanResponse)(nil), "halproto.FteSpanResponse")
	proto.RegisterType((*FteSpanResponseMsg)(nil), "halproto.FteSpanResponseMsg")
	proto.RegisterType((*GenericOpnRequest)(nil), "halproto.GenericOpnRequest")
	proto.RegisterType((*GenericOpnRequestMsg)(nil), "halproto.GenericOpnRequestMsg")
	proto.RegisterType((*GenericOpnStatus)(nil), "halproto.GenericOpnStatus")
	proto.RegisterType((*GenericOpnResponse)(nil), "halproto.GenericOpnResponse")
	proto.RegisterType((*GenericOpnResponseMsg)(nil), "halproto.GenericOpnResponseMsg")
	proto.RegisterType((*RegisterRequest)(nil), "halproto.RegisterRequest")
	proto.RegisterType((*RegisterRequestMsg)(nil), "halproto.RegisterRequestMsg")
	proto.RegisterType((*RegisterResponse)(nil), "halproto.RegisterResponse")
	proto.RegisterType((*RegisterResponseMsg)(nil), "halproto.RegisterResponseMsg")
	proto.RegisterType((*MemoryRequest)(nil), "halproto.MemoryRequest")
	proto.RegisterType((*MemoryRequestMsg)(nil), "halproto.MemoryRequestMsg")
	proto.RegisterType((*MemoryResponse)(nil), "halproto.MemoryResponse")
	proto.RegisterType((*MemoryResponseMsg)(nil), "halproto.MemoryResponseMsg")
	proto.RegisterType((*MemoryRawRequest)(nil), "halproto.MemoryRawRequest")
	proto.RegisterType((*MemoryRawRequestMsg)(nil), "halproto.MemoryRawRequestMsg")
	proto.RegisterType((*MemoryRawResponse)(nil), "halproto.MemoryRawResponse")
	proto.RegisterType((*MemoryRawResponseMsg)(nil), "halproto.MemoryRawResponseMsg")
	proto.RegisterType((*MemoryRawUpdateRequest)(nil), "halproto.MemoryRawUpdateRequest")
	proto.RegisterType((*MemoryRawUpdateRequestMsg)(nil), "halproto.MemoryRawUpdateRequestMsg")
	proto.RegisterType((*MemoryRawUpdateResponse)(nil), "halproto.MemoryRawUpdateResponse")
	proto.RegisterType((*MemoryRawUpdateResponseMsg)(nil), "halproto.MemoryRawUpdateResponseMsg")
	proto.RegisterType((*RegisterData)(nil), "halproto.RegisterData")
	proto.RegisterType((*MemTrackSpec)(nil), "halproto.MemTrackSpec")
	proto.RegisterType((*MemTrackGetRequest)(nil), "halproto.MemTrackGetRequest")
	proto.RegisterType((*MemTrackGetRequestMsg)(nil), "halproto.MemTrackGetRequestMsg")
	proto.RegisterType((*MemTrackStatus)(nil), "halproto.MemTrackStatus")
	proto.RegisterType((*MemTrackStats)(nil), "halproto.MemTrackStats")
	proto.RegisterType((*MemTrackGetResponse)(nil), "halproto.MemTrackGetResponse")
	proto.RegisterType((*MemTrackGetResponseMsg)(nil), "halproto.MemTrackGetResponseMsg")
	proto.RegisterType((*SlabSpec)(nil), "halproto.SlabSpec")
	proto.RegisterType((*SlabStatus)(nil), "halproto.SlabStatus")
	proto.RegisterType((*SlabStats)(nil), "halproto.SlabStats")
	proto.RegisterType((*SlabGetRequest)(nil), "halproto.SlabGetRequest")
	proto.RegisterType((*SlabGetRequestMsg)(nil), "halproto.SlabGetRequestMsg")
	proto.RegisterType((*SlabGetResponse)(nil), "halproto.SlabGetResponse")
	proto.RegisterType((*SlabGetResponseMsg)(nil), "halproto.SlabGetResponseMsg")
	proto.RegisterType((*HashTableSpec)(nil), "halproto.HashTableSpec")
	proto.RegisterType((*HashTableStatus)(nil), "halproto.HashTableStatus")
	proto.RegisterType((*HashTableStats)(nil), "halproto.HashTableStats")
	proto.RegisterType((*HashTableGetResponse)(nil), "halproto.HashTableGetResponse")
	proto.RegisterType((*HashTableGetResponseMsg)(nil), "halproto.HashTableGetResponseMsg")
	proto.RegisterType((*ThreadSpec)(nil), "halproto.ThreadSpec")
	proto.RegisterType((*ThreadStatus)(nil), "halproto.ThreadStatus")
	proto.RegisterType((*ThreadStats)(nil), "halproto.ThreadStats")
	proto.RegisterType((*ThreadResponse)(nil), "halproto.ThreadResponse")
	proto.RegisterType((*ThreadResponseMsg)(nil), "halproto.ThreadResponseMsg")
	proto.RegisterType((*TraceSpec)(nil), "halproto.TraceSpec")
	proto.RegisterType((*TraceRequestMsg)(nil), "halproto.TraceRequestMsg")
	proto.RegisterType((*TraceResponse)(nil), "halproto.TraceResponse")
	proto.RegisterType((*TraceResponseMsg)(nil), "halproto.TraceResponseMsg")
	proto.RegisterType((*MpuTraceSpec)(nil), "halproto.MpuTraceSpec")
	proto.RegisterType((*MpuTraceRequest)(nil), "halproto.MpuTraceRequest")
	proto.RegisterType((*MpuTraceRequestMsg)(nil), "halproto.MpuTraceRequestMsg")
	proto.RegisterType((*MpuTraceResponse)(nil), "halproto.MpuTraceResponse")
	proto.RegisterType((*MpuTraceResponseMsg)(nil), "halproto.MpuTraceResponseMsg")
	proto.RegisterType((*FlushLogsResponse)(nil), "halproto.FlushLogsResponse")
	proto.RegisterType((*FlushLogsResponseMsg)(nil), "halproto.FlushLogsResponseMsg")
	proto.RegisterType((*ClockSpec)(nil), "halproto.ClockSpec")
	proto.RegisterType((*ClockStatus)(nil), "halproto.ClockStatus")
	proto.RegisterType((*ClockStats)(nil), "halproto.ClockStats")
	proto.RegisterType((*ClockResponse)(nil), "halproto.ClockResponse")
	proto.RegisterType((*Bandwidth)(nil), "halproto.Bandwidth")
	proto.RegisterType((*HbmBwGetRequest)(nil), "halproto.HbmBwGetRequest")
	proto.RegisterType((*HbmBwGetRequestMsg)(nil), "halproto.HbmBwGetRequestMsg")
	proto.RegisterType((*HbmBwGetResponse)(nil), "halproto.HbmBwGetResponse")
	proto.RegisterType((*HbmBwGetResponseMsg)(nil), "halproto.HbmBwGetResponseMsg")
	proto.RegisterType((*LlcSetupRequest)(nil), "halproto.LlcSetupRequest")
	proto.RegisterType((*LlcSetupRequestMsg)(nil), "halproto.LlcSetupRequestMsg")
	proto.RegisterType((*LlcSetupResponse)(nil), "halproto.LlcSetupResponse")
	proto.RegisterType((*LlcSetupResponseMsg)(nil), "halproto.LlcSetupResponseMsg")
	proto.RegisterType((*LlcGetResponse)(nil), "halproto.LlcGetResponse")
	proto.RegisterType((*LlcGetResponseMsg)(nil), "halproto.LlcGetResponseMsg")
	proto.RegisterType((*HbmCacheSram)(nil), "halproto.HbmCacheSram")
	proto.RegisterType((*HbmCacheLlc)(nil), "halproto.HbmCacheLlc")
	proto.RegisterType((*HbmCacheRequest)(nil), "halproto.HbmCacheRequest")
	proto.RegisterType((*HbmCacheRequestMsg)(nil), "halproto.HbmCacheRequestMsg")
	proto.RegisterType((*HbmCacheResponse)(nil), "halproto.HbmCacheResponse")
	proto.RegisterType((*HbmCacheResponseMsg)(nil), "halproto.HbmCacheResponseMsg")
	proto.RegisterType((*CosStats)(nil), "halproto.CosStats")
	proto.RegisterType((*SchedulerStatsResponse)(nil), "halproto.SchedulerStatsResponse")
	proto.RegisterType((*SchedulerStatsResponseMsg)(nil), "halproto.SchedulerStatsResponseMsg")
	proto.RegisterType((*QRange)(nil), "halproto.QRange")
	proto.RegisterType((*QRanges)(nil), "halproto.QRanges")
	proto.RegisterType((*SchedulerActiveQRequest)(nil), "halproto.SchedulerActiveQRequest")
	proto.RegisterType((*SchedulerActiveQRequestMsg)(nil), "halproto.SchedulerActiveQRequestMsg")
	proto.RegisterType((*SchedulerActiveQResponse)(nil), "halproto.SchedulerActiveQResponse")
	proto.RegisterType((*SchedulerActiveQResponseMsg)(nil), "halproto.SchedulerActiveQResponseMsg")
	proto.RegisterEnum("halproto.SchedPolicy", SchedPolicy_name, SchedPolicy_value)
	proto.RegisterEnum("halproto.ThreadRole", ThreadRole_name, ThreadRole_value)
	proto.RegisterEnum("halproto.TraceLevel", TraceLevel_name, TraceLevel_value)
	proto.RegisterEnum("halproto.MpuTracePipelineType", MpuTracePipelineType_name, MpuTracePipelineType_value)
	proto.RegisterEnum("halproto.CapriBlock", CapriBlock_name, CapriBlock_value)
	proto.RegisterEnum("halproto.LlcCounterType", LlcCounterType_name, LlcCounterType_value)
	proto.RegisterEnum("halproto.HbmSramType", HbmSramType_name, HbmSramType_value)
}

func init() { proto.RegisterFile("debug.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 4160 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x5b, 0xcd, 0x6f, 0xe3, 0x48,
	0x76, 0x37, 0x25, 0xd9, 0x96, 0x9e, 0x24, 0x9b, 0x2e, 0xdb, 0x6d, 0xd9, 0x9e, 0x9e, 0xf6, 0x70,
	0xb7, 0x67, 0x3c, 0x9e, 0x59, 0x67, 0xd6, 0xdd, 0x93, 0xdd, 0xec, 0x57, 0x56, 0x96, 0xe4, 0x96,
	0x66, 0x64, 0x5b, 0x4d, 0xa9, 0x3b, 0x33, 0x13, 0x20, 0x04, 0x2d, 0x96, 0x64, 0xc2, 0x14, 0xc9,
	0x26, 0x29, 0xbb, 0x3d, 0xb9, 0x04, 0xc8, 0x2d, 0x41, 0xee, 0xc9, 0x2d, 0x40, 0x72, 0x48, 0x80,
	0xfc, 0x03, 0x01, 0x12, 0x04, 0x41, 0x80, 0xdc, 0x13, 0xec, 0x2d, 0x40, 0x80, 0x3d, 0xe4, 0x96,
	0x53, 0x4e, 0x39, 0x06, 0xf5, 0xc5, 0x4f, 0x49, 0xbd, 0x58, 0x78, 0x73, 0xb2, 0xea, 0xbd, 0x5f,
	0xbd, 0x7a, 0x5f, 0xf5, 0xea, 0x83, 0x65, 0x28, 0x1b, 0xf8, 0x6a, 0x3a, 0x3e, 0x76, 0x3d, 0x27,
	0x70, 0xd0, 0x32, 0x6d, 0xec, 0x95, 0x83, 0x7b, 0x17, 0xfb, 0x8c, 0xb6, 0x57, 0xbc, 0xb9, 0xe6,
	0xbf, 0xd6, 0x4d, 0x3b, 0xc0, 0xde, 0x48, 0x1f, 0x62, 0x46, 0x50, 0x7e, 0x59, 0x80, 0xb5, 0xb3,
	0x00, 0xf7, 0x5d, 0xdd, 0x56, 0xf1, 0x9b, 0x29, 0xf6, 0x03, 0xb4, 0x07, 0x45, 0x1f, 0x5b, 0x78,
	0x18, 0x38, 0x5e, 0x4d, 0x3a, 0x90, 0x0e, 0xab, 0x6a, 0xd8, 0x46, 0xfb, 0x50, 0xf2, 0xbd, 0xa1,
	0x66, 0xb9, 0x8e, 0x17, 0xd4, 0x72, 0x9c, 0xe9, 0x0d, 0xbb, 0xa4, 0x4d, 0x98, 0x86, 0x1f, 0x70,
	0x66, 0x9e, 0x31, 0x0d, 0x3f, 0x60, 0xcc, 0x27, 0x50, 0x36, 0x3c, 0xc7, 0xd5, 0x3c, 0xac, 0xfb,
	0x8e, 0x5d, 0x2b, 0x50, 0x36, 0x10, 0x92, 0x4a, 0x29, 0x48, 0x81, 0xea, 0xc8, 0x72, 0xee, 0x34,
	0xeb, 0x66, 0xea, 0x6a, 0x86, 0xe9, 0xd5, 0x96, 0x29, 0xa4, 0x4c, 0x88, 0xdd, 0x9b, 0xa9, 0xdb,
	0x34, 0x3d, 0xf4, 0x5d, 0x58, 0x8b, 0x30, 0xc4, 0xc2, 0xda, 0x0a, 0x05, 0x55, 0x04, 0x68, 0x70,
	0xef, 0xe2, 0xa4, 0xa4, 0x5b, 0x6f, 0x54, 0x5b, 0x4d, 0x4a, 0x7a, 0xed, 0x8d, 0xd0, 0xf3, 0x38,
	0xc6, 0xf7, 0x86, 0xb5, 0xe2, 0x81, 0x74, 0x58, 0x3e, 0x91, 0x8f, 0x99, 0xdf, 0x3a, 0xbd, 0xba,
	0x61, 0x78, 0xd8, 0xf7, 0xa3, 0x5e, 0x7d, 0x6f, 0x98, 0xec, 0x65, 0xf8, 0x41, 0xad, 0xf4, 0xae,
	0x5e, 0x4d, 0x3f, 0x40, 0x1f, 0xc2, 0x7a, 0xd4, 0x8b, 0xba, 0xbd, 0x06, 0x54, 0xa3, 0xaa, 0x40,
	0xf5, 0x68, 0xe8, 0x12, 0x38, 0x9f, 0x7a, 0xb1, 0x9c, 0xc4, 0xf5, 0xa9, 0x2b, 0x13, 0x38, 0x83,
	0xe2, 0x2a, 0x49, 0x5c, 0x93, 0xe2, 0x76, 0xa1, 0x88, 0x83, 0x6b, 0xcd, 0x98, 0xe8, 0xc3, 0x5a,
	0xf5, 0x40, 0x3a, 0x2c, 0xa8, 0xab, 0x38, 0xb8, 0x6e, 0x4e, 0xf4, 0x21, 0x61, 0x8d, 0x3c, 0x67,
	0xa2, 0x0d, 0xdd, 0x69, 0x6d, 0xed, 0x40, 0x3a, 0x2c, 0xaa, 0xab, 0xa4, 0xdd, 0x70, 0xa7, 0x24,
	0x8a, 0xa6, 0xaf, 0xe1, 0x31, 0xb1, 0xa3, 0xb6, 0x4e, 0x79, 0x45, 0xd3, 0x6f, 0xd1, 0x36, 0x7a,
	0x06, 0x25, 0xc6, 0xd1, 0xcc, 0x51, 0x4d, 0xa6, 0xc6, 0x3f, 0x3a, 0xbe, 0xb9, 0x3e, 0xee, 0x88,
	0xb4, 0xfa, 0x12, 0xdf, 0xb7, 0x75, 0xdb, 0xb0, 0xb0, 0x5a, 0x64, 0xc0, 0xce, 0x48, 0x69, 0xc2,
	0x46, 0x32, 0xc5, 0xce, 0xfd, 0x31, 0xfa, 0x2d, 0x58, 0xf5, 0x58, 0xab, 0x26, 0x1d, 0xe4, 0x0f,
	0xcb, 0x27, 0xdb, 0xc7, 0x2c, 0x8d, 0x93, 0x50, 0x55, 0xa0, 0x94, 0x3f, 0x91, 0x60, 0x3d, 0xe4,
	0xf9, 0xae, 0x63, 0xfb, 0x18, 0x9d, 0x01, 0xe8, 0xae, 0xa9, 0xf9, 0x81, 0x1e, 0x4c, 0x7d, 0x9a,
	0xac, 0x6b, 0x61, 0x30, 0xea, 0xae, 0xd9, 0xa7, 0xf4, 0xd3, 0xed, 0xff, 0xf9, 0xcf, 0x27, 0x1b,
	0xb7, 0xd8, 0x36, 0x87, 0xf8, 0x47, 0x11, 0x5c, 0x2d, 0xe9, 0x02, 0x11, 0x57, 0x26, 0x47, 0x8d,
	0x7a, 0x97, 0x32, 0x6d, 0x40, 0x29, 0x5d, 0x88, 0x4d, 0x27, 0x50, 0xf4, 0x78, 0x93, 0x1b, 0xf5,
	0x28, 0x2d, 0x87, 0x71, 0xd5, 0x10, 0xa7, 0x4c, 0x61, 0xe3, 0x05, 0xb6, 0xb1, 0x67, 0x0e, 0x2f,
	0xdd, 0x70, 0x0a, 0xca, 0x90, 0x77, 0x5c, 0x9b, 0xcf, 0x3e, 0xf2, 0x13, 0x21, 0x28, 0xdc, 0xea,
	0xd6, 0xf7, 0xa9, 0x7a, 0x05, 0x95, 0xfe, 0xe6, 0xb4, 0x13, 0x3a, 0xd5, 0x18, 0xed, 0x84, 0xd3,
	0x9e, 0xd1, 0xf9, 0xc5, 0x68, 0xcf, 0x38, 0xed, 0x39, 0x9d, 0x50, 0x8c, 0xf6, 0x5c, 0xf9, 0x02,
	0xb6, 0x32, 0xc3, 0x32, 0x13, 0x52, 0x61, 0xa9, 0x71, 0x0b, 0x32, 0xe8, 0xc8, 0x19, 0x57, 0x20,
	0x47, 0x5c, 0xee, 0x51, 0xa1, 0xaf, 0x34, 0x43, 0xdf, 0xdc, 0x0c, 0x7d, 0xf3, 0x33, 0xf4, 0x2d,
	0xc4, 0xf4, 0xfd, 0x33, 0x09, 0x50, 0x5c, 0x85, 0x07, 0x4f, 0x80, 0x15, 0x2e, 0x83, 0xc5, 0x7f,
	0x27, 0x63, 0x35, 0x03, 0xaa, 0x1c, 0xa6, 0x5c, 0xc0, 0x76, 0x56, 0x1d, 0xe2, 0xc0, 0xcf, 0x33,
	0x39, 0xb0, 0x3b, 0xc3, 0x83, 0x99, 0x34, 0xf8, 0x2b, 0x09, 0xd6, 0x55, 0x3c, 0x36, 0xfd, 0x00,
	0x7b, 0x22, 0x0b, 0x76, 0x60, 0xc5, 0xc3, 0x63, 0xcd, 0x34, 0xa8, 0x61, 0xab, 0xed, 0x25, 0x75,
	0xd9, 0xc3, 0xe3, 0x8e, 0x81, 0xf6, 0xc9, 0x18, 0x63, 0xcd, 0xd6, 0x27, 0x98, 0xea, 0x5b, 0x6a,
	0x2f, 0x91, 0x68, 0x8c, 0x2f, 0xf4, 0x09, 0x46, 0x8f, 0x01, 0xae, 0x2c, 0x67, 0x78, 0xc3, 0xd8,
	0xc4, 0xaf, 0x25, 0xb5, 0x44, 0x29, 0x94, 0x8d, 0xa0, 0xa0, 0x1b, 0x86, 0x27, 0x9c, 0x4b, 0x7e,
	0x93, 0x6a, 0x40, 0xe4, 0x19, 0x7a, 0xa0, 0xf3, 0xaa, 0x4b, 0xa4, 0x35, 0xf5, 0x40, 0x3f, 0xad,
	0x00, 0x98, 0x86, 0xe6, 0x78, 0x54, 0x9a, 0x72, 0x06, 0x28, 0xa5, 0x24, 0x31, 0xf9, 0xb3, 0x74,
	0xce, 0x88, 0xac, 0x4f, 0x61, 0xa3, 0x8c, 0xf9, 0x63, 0x09, 0xe4, 0x88, 0xf9, 0xc0, 0xb1, 0xfc,
	0x08, 0x0a, 0xd4, 0x12, 0x16, 0xc9, 0xcd, 0x94, 0x2e, 0xc4, 0x2a, 0x95, 0x02, 0x94, 0x2f, 0x60,
	0x33, 0xad, 0x04, 0x31, 0xe7, 0x59, 0x26, 0x82, 0x3b, 0x19, 0x7b, 0x32, 0xf1, 0xfb, 0x57, 0x09,
	0xaa, 0xe7, 0x78, 0xe2, 0x78, 0xf7, 0x22, 0x7a, 0xfb, 0x50, 0x0c, 0xf4, 0x2b, 0x0b, 0xc7, 0xe3,
	0xb7, 0x4a, 0x29, 0x1d, 0x03, 0x3d, 0x01, 0x60, 0xcc, 0x44, 0x0c, 0x4b, 0x94, 0x46, 0xc3, 0xb4,
	0x05, 0xcb, 0xa6, 0x6d, 0xe0, 0xb7, 0x7c, 0x1d, 0x65, 0x0d, 0x42, 0xf5, 0xef, 0x6e, 0xf0, 0x3d,
	0x8d, 0x5e, 0x45, 0x65, 0x0d, 0x12, 0x71, 0xfa, 0x43, 0x9b, 0xe8, 0xfe, 0x0d, 0x0d, 0x60, 0x45,
	0x2d, 0x51, 0xca, 0xb9, 0xee, 0xdf, 0xa0, 0xf7, 0x01, 0xf4, 0x61, 0x60, 0x3a, 0x36, 0xf5, 0xca,
	0x0a, 0x65, 0xc7, 0x28, 0xa9, 0x10, 0x9f, 0x82, 0x9c, 0xb0, 0x83, 0x78, 0xe4, 0x38, 0x1d, 0xe0,
	0x2d, 0xee, 0x90, 0x04, 0x32, 0x0a, 0xef, 0xbf, 0x48, 0xb0, 0x26, 0x58, 0x0f, 0x1c, 0xdc, 0xd0,
	0x2f, 0xb9, 0x99, 0x7e, 0xc9, 0xcf, 0xf7, 0x4b, 0x61, 0xb1, 0x5f, 0x96, 0xd3, 0x7e, 0x51, 0xce,
	0x60, 0x23, 0x69, 0x04, 0x71, 0xc5, 0xf7, 0x33, 0xc9, 0xb1, 0x9d, 0xf2, 0x45, 0x26, 0x35, 0x7e,
	0x16, 0x7a, 0x54, 0xbf, 0x13, 0xc9, 0x51, 0x83, 0x55, 0x9d, 0x6d, 0x15, 0x78, 0x85, 0x14, 0x4d,
	0x52, 0xfa, 0x2d, 0x6c, 0x73, 0xf3, 0xc8, 0x4f, 0xa5, 0x0d, 0x9b, 0xe9, 0xfe, 0x4c, 0x93, 0x54,
	0x50, 0x76, 0x92, 0x8a, 0x84, 0xe0, 0x28, 0x2e, 0x7f, 0x18, 0x5a, 0x44, 0x98, 0x0f, 0x1c, 0x99,
	0xa4, 0x3b, 0x73, 0x19, 0x77, 0x76, 0x61, 0x2b, 0x33, 0x38, 0xb1, 0xe3, 0x79, 0xc6, 0xa3, 0xb5,
	0xac, 0x21, 0x19, 0xa7, 0x1a, 0xf0, 0x28, 0x64, 0xbf, 0x72, 0x0d, 0x3d, 0xc0, 0xef, 0x76, 0xed,
	0x3b, 0x34, 0x14, 0xae, 0xcf, 0x47, 0xae, 0x1f, 0xc0, 0xee, 0xec, 0x51, 0x88, 0xe2, 0x3f, 0x48,
	0x07, 0xe0, 0x71, 0x5a, 0xef, 0x44, 0x97, 0x28, 0x0c, 0x3a, 0xec, 0x64, 0x20, 0x0f, 0x1b, 0x0c,
	0xe5, 0x2b, 0xd8, 0x9b, 0x33, 0x04, 0xd1, 0xfc, 0x47, 0x19, 0x97, 0xbf, 0x3f, 0x4f, 0xf5, 0x8c,
	0xe3, 0xbf, 0x86, 0x4a, 0xbc, 0x94, 0x8a, 0xb5, 0x83, 0xd6, 0x31, 0x89, 0x2e, 0x36, 0xe1, 0x4a,
	0x14, 0x8b, 0x44, 0x8e, 0x71, 0x44, 0x24, 0xb6, 0x60, 0xf9, 0x56, 0xb7, 0xa6, 0x62, 0x79, 0x62,
	0x0d, 0xe5, 0x63, 0xa8, 0x9c, 0xe3, 0xc9, 0xc0, 0xd3, 0x87, 0x37, 0x7d, 0x17, 0xd3, 0x4d, 0xaa,
	0x6e, 0x59, 0xce, 0x50, 0x54, 0xd0, 0xaa, 0xba, 0x4a, 0xdb, 0x1d, 0x43, 0xf9, 0x29, 0x20, 0x01,
	0x7d, 0x81, 0x03, 0x11, 0xfa, 0x8f, 0xa0, 0xe0, 0xbb, 0x78, 0x48, 0xc1, 0x51, 0xe5, 0x8f, 0xcb,
	0x54, 0x29, 0x40, 0xe9, 0xc2, 0x76, 0xb6, 0x3b, 0xab, 0xfd, 0xa9, 0x98, 0xee, 0xa6, 0x84, 0x44,
	0xf0, 0x28, 0x9e, 0x32, 0xad, 0x76, 0x6c, 0x0c, 0xe6, 0xfe, 0x2f, 0xe9, 0x62, 0x10, 0x52, 0x7c,
	0x52, 0x8a, 0xec, 0xe9, 0x44, 0xa3, 0xea, 0xfb, 0xdc, 0x98, 0x92, 0x3d, 0x9d, 0xd4, 0x29, 0x81,
	0xec, 0xb9, 0x09, 0x7b, 0xe4, 0x61, 0xec, 0x8b, 0x63, 0x95, 0x3d, 0x9d, 0x9c, 0x91, 0xb6, 0xf2,
	0x4b, 0x89, 0x16, 0x80, 0x68, 0xf8, 0x87, 0x5f, 0x2f, 0xa9, 0xd7, 0x72, 0xef, 0xf0, 0x1a, 0xfa,
	0x5e, 0xb8, 0x49, 0xca, 0x27, 0x36, 0xc9, 0x49, 0xe3, 0xc5, 0x16, 0x09, 0x1d, 0xc1, 0x32, 0xf9,
	0xe5, 0xd3, 0xca, 0x9b, 0x58, 0x33, 0x22, 0xc7, 0xa8, 0x0c, 0xa2, 0xf4, 0xe8, 0x74, 0x4e, 0x9b,
	0x48, 0x22, 0xf2, 0xdb, 0x99, 0x5c, 0xdd, 0x9b, 0x15, 0x92, 0x4c, 0x9e, 0xfe, 0x63, 0x0e, 0x8a,
	0x7d, 0x4b, 0xbf, 0xa2, 0x99, 0x84, 0xa0, 0x10, 0x4b, 0x50, 0xfa, 0x1b, 0xad, 0x41, 0xce, 0x34,
	0xb8, 0xb3, 0x73, 0xa6, 0x81, 0x3e, 0x80, 0x0a, 0xb6, 0xf0, 0x04, 0xdb, 0x81, 0xe6, 0x9b, 0xdf,
	0x62, 0x5e, 0x06, 0xca, 0x9c, 0xd6, 0x37, 0xbf, 0xc5, 0xe8, 0x53, 0x40, 0xbc, 0xe9, 0x6b, 0x2e,
	0xf6, 0x34, 0xba, 0xab, 0xe2, 0x47, 0x59, 0x59, 0x70, 0x7a, 0xd8, 0x3b, 0x25, 0x74, 0x72, 0xe2,
	0x0d, 0xae, 0x3d, 0xac, 0x1b, 0x9a, 0xaf, 0x8f, 0x30, 0x5d, 0x60, 0x8a, 0x2a, 0x30, 0x52, 0x5f,
	0x1f, 0x61, 0x72, 0x9a, 0x1d, 0x7b, 0xce, 0x9d, 0xe6, 0xd8, 0x9a, 0x81, 0x27, 0xba, 0x6d, 0xd0,
	0xc5, 0xb9, 0xa8, 0x56, 0x08, 0xf5, 0xd2, 0x6e, 0x52, 0x1a, 0xd1, 0xcb, 0xc0, 0x96, 0x7e, 0xaf,
	0x19, 0xd8, 0xc2, 0x01, 0xa6, 0x87, 0xd9, 0xa2, 0x5a, 0xa6, 0xb4, 0x26, 0x25, 0x11, 0xbd, 0xbe,
	0xc5, 0x9e, 0x43, 0x04, 0xd1, 0x0c, 0xd3, 0x49, 0x49, 0xa3, 0x27, 0xda, 0xa2, 0x2a, 0x13, 0xce,
	0xa5, 0x5d, 0x0f, 0xe9, 0x64, 0x58, 0x4f, 0xbf, 0x63, 0xca, 0x33, 0x53, 0x4b, 0xec, 0x10, 0xed,
	0xe9, 0x77, 0x54, 0x73, 0x62, 0xab, 0x52, 0x01, 0xa0, 0xee, 0x63, 0x09, 0xfd, 0x4f, 0x12, 0x94,
	0x44, 0xd3, 0x47, 0xdf, 0x83, 0x4d, 0x92, 0xae, 0xa1, 0x2f, 0x4c, 0x5b, 0x9b, 0xfa, 0x98, 0xa7,
	0xb5, 0x6c, 0x4f, 0x27, 0x2d, 0xce, 0xe9, 0xd8, 0xaf, 0x7c, 0x9c, 0x4a, 0xfe, 0xdc, 0xc2, 0xe4,
	0xcf, 0x27, 0x93, 0x1f, 0x1d, 0x82, 0x1c, 0xf6, 0xd5, 0xb0, 0xe7, 0x39, 0x9e, 0xcf, 0x1d, 0xbe,
	0x26, 0x24, 0xb4, 0x28, 0x55, 0x8c, 0x42, 0xcd, 0xf2, 0xf9, 0x36, 0x96, 0x08, 0xa6, 0x26, 0xf9,
	0xca, 0x01, 0xac, 0x11, 0x03, 0x62, 0xd5, 0x82, 0x25, 0x80, 0x24, 0x12, 0x80, 0x1c, 0x53, 0x93,
	0x88, 0x85, 0xc7, 0xd4, 0x24, 0x34, 0x2a, 0x06, 0xff, 0x26, 0xc1, 0x7a, 0xc8, 0x7b, 0xe0, 0x99,
	0xfa, 0x9d, 0xc4, 0x4c, 0x5d, 0x8f, 0x69, 0x12, 0x9b, 0xa5, 0x1f, 0xa7, 0x66, 0xe9, 0x46, 0x1c,
	0x96, 0x9c, 0xa1, 0x1f, 0x26, 0x67, 0xa8, 0x9c, 0x42, 0x86, 0xb3, 0xb3, 0x0d, 0x28, 0x65, 0xd2,
	0xe2, 0xd3, 0x6e, 0x0a, 0x1c, 0x9b, 0x95, 0x7f, 0x2f, 0x41, 0xb5, 0xad, 0xfb, 0xd7, 0x03, 0xb2,
	0xd1, 0x9d, 0x3b, 0x35, 0x9f, 0x40, 0x99, 0x86, 0x72, 0x3a, 0xbc, 0xc1, 0x81, 0xc8, 0x18, 0x12,
	0xdd, 0x53, 0x46, 0x49, 0x4f, 0xad, 0x7c, 0x66, 0x6a, 0x1d, 0x82, 0x3c, 0xd1, 0xdf, 0x72, 0x09,
	0x9a, 0x81, 0xdd, 0xe0, 0x5a, 0xa4, 0xcd, 0x44, 0x7f, 0xcb, 0xc4, 0x34, 0x09, 0x95, 0x20, 0xf5,
	0xdb, 0x71, 0x12, 0xc9, 0x92, 0x67, 0x4d, 0xbf, 0x1d, 0xc7, 0x90, 0xca, 0x06, 0xac, 0x47, 0xaa,
	0xb3, 0x69, 0xf1, 0xdf, 0x12, 0xac, 0x25, 0x68, 0xbe, 0xd0, 0x1d, 0xdb, 0x81, 0x67, 0x62, 0x51,
	0xea, 0x89, 0xee, 0x2d, 0x46, 0x11, 0x00, 0xd3, 0xf6, 0xb1, 0x97, 0x30, 0xae, 0xc3, 0x28, 0xe8,
	0x08, 0x36, 0x22, 0x80, 0xc8, 0x79, 0x36, 0x2f, 0xd6, 0x43, 0x18, 0x4f, 0x7a, 0x2e, 0x8c, 0x95,
	0x06, 0x31, 0x33, 0x88, 0x30, 0x56, 0x19, 0x42, 0x61, 0x0c, 0x20, 0x84, 0x2d, 0x87, 0xc2, 0x18,
	0x2c, 0x29, 0xcc, 0x72, 0x9c, 0x9b, 0xa9, 0xeb, 0xf3, 0xab, 0x35, 0x22, 0xac, 0xcb, 0x28, 0xca,
	0x7f, 0x49, 0xb0, 0x15, 0x9a, 0xfb, 0x9b, 0x48, 0xf0, 0xc3, 0x44, 0x82, 0x8b, 0x15, 0x23, 0x91,
	0x30, 0x3c, 0xcb, 0x8f, 0x53, 0x59, 0xfe, 0x28, 0x83, 0x4d, 0xa6, 0xfa, 0x27, 0xc9, 0x54, 0xdf,
	0x9e, 0x05, 0x0f, 0xf3, 0x5d, 0x85, 0x9d, 0x59, 0x66, 0xb2, 0x4d, 0x5f, 0x3a, 0xe9, 0xf7, 0xd3,
	0xa2, 0x66, 0x67, 0xfe, 0xff, 0x4a, 0x00, 0x03, 0x96, 0xa0, 0xbf, 0xea, 0x8a, 0xf4, 0x18, 0xc0,
	0xe5, 0x69, 0x6e, 0x1a, 0x3c, 0x03, 0x4a, 0x9c, 0xd2, 0x31, 0x88, 0x08, 0xd7, 0x33, 0x1d, 0x6a,
	0xd1, 0xb2, 0x4a, 0x7f, 0xa3, 0xcf, 0xa1, 0xe2, 0x0f, 0xaf, 0xb1, 0xa1, 0xb9, 0x8e, 0x65, 0x0e,
	0xef, 0x69, 0xa4, 0xd7, 0x4e, 0x90, 0x98, 0x97, 0x84, 0xd5, 0xa3, 0x1c, 0xb5, 0xec, 0x47, 0x0d,
	0xb2, 0x53, 0xf3, 0xa6, 0xb6, 0x6d, 0xda, 0x63, 0xbe, 0x04, 0x89, 0x26, 0x7a, 0x0a, 0x05, 0xcf,
	0xb1, 0xd8, 0xaa, 0xb3, 0x16, 0xd6, 0x12, 0x66, 0x88, 0xea, 0x58, 0x58, 0xa5, 0x6c, 0x52, 0xc3,
	0x87, 0x8e, 0x87, 0xd9, 0x49, 0xab, 0x48, 0xb7, 0xdd, 0x45, 0x42, 0x20, 0x07, 0x2d, 0xe5, 0x23,
	0xa8, 0x70, 0xcb, 0x59, 0x2c, 0x76, 0x60, 0xd5, 0xd2, 0xfd, 0x40, 0xbb, 0xbe, 0xe2, 0x3b, 0xf4,
	0x15, 0xd2, 0x6c, 0x5f, 0x29, 0x55, 0x28, 0x47, 0x40, 0x5f, 0xf9, 0x9b, 0x1c, 0xac, 0xf1, 0x91,
	0x1e, 0x3a, 0xd1, 0x8e, 0x60, 0x63, 0xe8, 0xd8, 0x81, 0xe7, 0x58, 0x5a, 0xa4, 0x37, 0xbb, 0x97,
	0x5a, 0xe7, 0x8c, 0x06, 0x57, 0x9f, 0xac, 0x97, 0xe4, 0x78, 0x10, 0x03, 0xb2, 0xcb, 0xaa, 0x0a,
	0xa1, 0x86, 0xa8, 0xa7, 0x3c, 0x75, 0x0b, 0x89, 0xa2, 0x1b, 0x45, 0x9c, 0xe7, 0xed, 0x27, 0x61,
	0xde, 0x2e, 0x27, 0xb6, 0x5b, 0x71, 0x07, 0x85, 0x49, 0x7b, 0x28, 0x92, 0x76, 0x85, 0x62, 0x51,
	0x06, 0x1b, 0x66, 0xec, 0x19, 0x6c, 0x24, 0x3d, 0xb5, 0xf8, 0xac, 0x9a, 0xc4, 0xc6, 0xb2, 0xf4,
	0x77, 0xa1, 0x44, 0xf6, 0x54, 0xac, 0x34, 0x9f, 0x40, 0x39, 0x20, 0x0d, 0xcd, 0xc2, 0xb7, 0xd8,
	0xe2, 0xde, 0x0e, 0x2d, 0x23, 0x9c, 0x2e, 0x61, 0xa8, 0x10, 0x84, 0xbf, 0x95, 0x9f, 0xc2, 0x3a,
	0xe5, 0xc4, 0x96, 0xd0, 0xa3, 0xf4, 0x12, 0x2a, 0xc7, 0x45, 0x50, 0xdf, 0x84, 0xab, 0xe7, 0x9f,
	0x4a, 0x50, 0xe5, 0xfd, 0x1f, 0x38, 0xe2, 0x29, 0x63, 0x72, 0xbf, 0x8a, 0x31, 0x4d, 0x90, 0x13,
	0xca, 0xb0, 0xcb, 0xae, 0xb4, 0x53, 0xb7, 0xe2, 0x42, 0x66, 0xf8, 0xf4, 0x9f, 0x73, 0x50, 0x39,
	0x77, 0xa7, 0x91, 0x5f, 0x1f, 0xc1, 0x0a, 0xb6, 0x49, 0xa5, 0xa0, 0xe6, 0x14, 0x55, 0xde, 0x22,
	0x3b, 0x3d, 0xa6, 0x22, 0xe7, 0xe6, 0xd8, 0x4e, 0x8f, 0xd2, 0x5a, 0x0c, 0xb2, 0x0f, 0x25, 0xf7,
	0xfa, 0x56, 0xa3, 0x03, 0xf2, 0x65, 0xaf, 0xe8, 0x5e, 0xdf, 0x36, 0x49, 0x5b, 0x30, 0x69, 0x91,
	0xa7, 0x79, 0xc8, 0x98, 0xb4, 0xba, 0x93, 0xc3, 0xd4, 0x9d, 0x1e, 0x0c, 0xaf, 0x35, 0x77, 0xc8,
	0x2f, 0x82, 0x57, 0x69, 0xbb, 0x37, 0x24, 0xfd, 0xae, 0x74, 0x1f, 0x6b, 0xf4, 0x5e, 0x70, 0x85,
	0x4d, 0x5e, 0x42, 0xa8, 0xf3, 0xbb, 0xc1, 0xab, 0xe9, 0x88, 0xed, 0x13, 0xd9, 0x77, 0x94, 0xd5,
	0xab, 0xe9, 0x88, 0x6e, 0x87, 0xf7, 0x81, 0x5d, 0x58, 0x69, 0x37, 0xf8, 0x9e, 0xef, 0x36, 0xd9,
	0x95, 0xd7, 0x97, 0xf8, 0x1e, 0x29, 0x50, 0x31, 0x6d, 0x3f, 0xf0, 0xa6, 0xf4, 0x7c, 0xed, 0xd3,
	0x3d, 0x66, 0x51, 0x4d, 0xd0, 0x48, 0x05, 0xbb, 0xf3, 0x74, 0x97, 0x7e, 0x0d, 0x29, 0xaa, 0xf4,
	0x37, 0x39, 0x1a, 0x7a, 0xd8, 0xc7, 0xec, 0xd3, 0x47, 0x51, 0x65, 0x0d, 0xe5, 0x6f, 0x25, 0x58,
	0x17, 0x3e, 0x14, 0xfb, 0xb7, 0x9f, 0x43, 0xd5, 0x35, 0x5d, 0x6c, 0x99, 0x36, 0x66, 0xdf, 0x82,
	0x58, 0x72, 0x88, 0x7a, 0x2c, 0xe0, 0x3d, 0x8e, 0x19, 0xdc, 0xbb, 0x58, 0xad, 0xb8, 0xb1, 0x16,
	0xb1, 0xcd, 0x0f, 0xf4, 0x31, 0xbd, 0xa2, 0x63, 0x65, 0x77, 0x95, 0xb6, 0x3b, 0x06, 0x92, 0x21,
	0x3f, 0x71, 0xa7, 0xe2, 0x2e, 0x60, 0xe2, 0x4e, 0xc3, 0x63, 0x52, 0x21, 0x79, 0x4c, 0x8a, 0x05,
	0x96, 0x1f, 0x2e, 0xcf, 0x00, 0xa5, 0x54, 0x5d, 0x78, 0x49, 0x9a, 0xc2, 0x46, 0x73, 0xe1, 0xaf,
	0x25, 0x90, 0x23, 0xe6, 0xff, 0xcf, 0xa1, 0x2f, 0x63, 0x0d, 0xfd, 0x6e, 0x47, 0x78, 0x5a, 0xfc,
	0x3a, 0x12, 0x28, 0xa9, 0x43, 0x28, 0xca, 0x17, 0xb0, 0x99, 0xd6, 0x72, 0xf1, 0x2d, 0x6a, 0x1a,
	0x1d, 0x9b, 0x2a, 0xbf, 0x0f, 0x1b, 0x67, 0xd6, 0xd4, 0xbf, 0xee, 0x3a, 0x63, 0xff, 0xc1, 0xef,
	0x44, 0xba, 0xb0, 0x95, 0x11, 0xbe, 0xf8, 0x02, 0x2a, 0x03, 0x8f, 0xa9, 0xfa, 0x47, 0x12, 0x94,
	0x1a, 0xf4, 0xb4, 0x44, 0xbc, 0xf4, 0x14, 0xd6, 0xae, 0x75, 0xcf, 0xb8, 0xd3, 0x3d, 0xac, 0x0d,
	0xe9, 0xa9, 0x90, 0xad, 0x6c, 0x55, 0x41, 0xa5, 0x50, 0x02, 0xf3, 0x9d, 0x51, 0x40, 0x61, 0x06,
	0xb6, 0xf8, 0x2d, 0x54, 0x41, 0xad, 0x0a, 0x6a, 0x93, 0x10, 0x13, 0x30, 0x26, 0x2d, 0x9f, 0x84,
	0x51, 0x69, 0x64, 0xb9, 0x64, 0x1a, 0x30, 0xfb, 0x2a, 0x00, 0x61, 0xd3, 0x57, 0xfe, 0x5d, 0x82,
	0x2a, 0x6d, 0x3e, 0x78, 0xea, 0x7c, 0x37, 0x91, 0x3a, 0xa2, 0x98, 0x87, 0xbe, 0xe0, 0x79, 0x73,
	0x94, 0xda, 0xa0, 0xa1, 0x04, 0x2e, 0xb9, 0xce, 0x7d, 0x94, 0xdc, 0x9c, 0x6d, 0xa4, 0xa1, 0xe1,
	0x32, 0xf7, 0x39, 0x94, 0x4e, 0x75, 0xdb, 0xb8, 0x33, 0x8d, 0xe0, 0x9a, 0x54, 0x0f, 0xb2, 0x8a,
	0x51, 0x4b, 0x24, 0x95, 0xfe, 0x26, 0xd5, 0xe3, 0xce, 0x33, 0x03, 0x56, 0x3b, 0x25, 0x95, 0x35,
	0x94, 0xaf, 0x61, 0xbd, 0x7d, 0x35, 0x39, 0xbd, 0x8b, 0x1d, 0xfe, 0xf8, 0x5e, 0xd7, 0xd7, 0x27,
	0xae, 0x95, 0xd8, 0xa6, 0xf7, 0x19, 0x85, 0xc6, 0xc0, 0xc2, 0xd8, 0xd5, 0xe8, 0x17, 0xf3, 0x5b,
	0xdd, 0xe2, 0x15, 0xa2, 0x4a, 0xa9, 0x1d, 0x4e, 0x24, 0x93, 0x3d, 0x25, 0x7a, 0xe1, 0x64, 0x4f,
	0x61, 0xa3, 0xc9, 0xfe, 0x77, 0x12, 0xc8, 0x11, 0x93, 0x47, 0xec, 0x29, 0x14, 0x62, 0x85, 0x2d,
	0x74, 0x8b, 0xee, 0x7a, 0x26, 0x3d, 0xd5, 0xaa, 0x94, 0x4d, 0x16, 0x58, 0xfd, 0x16, 0x7b, 0xfa,
	0x18, 0xa7, 0x62, 0x12, 0xfa, 0x4a, 0x15, 0x00, 0x82, 0x9d, 0xe8, 0x6f, 0xcd, 0xc9, 0x74, 0xc2,
	0xe3, 0x32, 0x03, 0xcb, 0x01, 0xa4, 0x3c, 0x0e, 0xad, 0x1b, 0xcd, 0x30, 0x47, 0x23, 0xfe, 0xb9,
	0x68, 0x75, 0x68, 0xdd, 0x34, 0xcd, 0xd1, 0x88, 0x4c, 0xfa, 0xb4, 0xb6, 0x8b, 0x27, 0x7d, 0x1a,
	0x1d, 0x9b, 0x49, 0x3f, 0x81, 0xf5, 0xae, 0x35, 0xec, 0xe3, 0x60, 0xea, 0x8a, 0xe8, 0x7c, 0x9c,
	0x30, 0x5c, 0xec, 0x5a, 0xba, 0xd6, 0xb0, 0xe1, 0x4c, 0x89, 0xe7, 0x69, 0x2d, 0xa7, 0x10, 0x12,
	0x80, 0x54, 0xef, 0x85, 0x01, 0x48, 0x61, 0xa3, 0x00, 0x7c, 0x03, 0x72, 0xc4, 0x7b, 0xe0, 0xca,
	0xf3, 0x05, 0x6c, 0xa6, 0x65, 0x2f, 0xf6, 0x56, 0x1a, 0x1d, 0xf3, 0xd6, 0x5f, 0x48, 0xb0, 0xd6,
	0xb5, 0x86, 0xbf, 0x89, 0xd3, 0x97, 0xf0, 0x7a, 0xee, 0x9d, 0x5e, 0x27, 0xf3, 0x6c, 0x48, 0x88,
	0xb5, 0xfc, 0x41, 0xfe, 0xb0, 0xaa, 0xb2, 0x06, 0xd9, 0x85, 0x26, 0x55, 0x5b, 0xbc, 0x0b, 0x4d,
	0x62, 0x63, 0x36, 0x5e, 0x40, 0xa5, 0x7d, 0x35, 0x69, 0xe8, 0xc3, 0x6b, 0xdc, 0xf7, 0xf4, 0x09,
	0xfa, 0x30, 0x91, 0x0e, 0x28, 0x4a, 0x29, 0xc2, 0x8d, 0x69, 0x15, 0x6d, 0xac, 0x72, 0xf1, 0x8d,
	0x95, 0xf2, 0x14, 0xca, 0x42, 0x5e, 0xd7, 0x9a, 0xbb, 0xff, 0x52, 0xa6, 0xb4, 0x4c, 0x50, 0x58,
	0x2c, 0x11, 0x7d, 0x4f, 0x9f, 0xa4, 0x6e, 0x94, 0xe3, 0xca, 0xb5, 0x97, 0x54, 0x0a, 0x41, 0x1f,
	0x42, 0xde, 0xb2, 0x44, 0x55, 0x44, 0x29, 0x64, 0xd7, 0x1a, 0xb6, 0x97, 0x54, 0x02, 0x38, 0x5d,
	0x87, 0xea, 0x90, 0x90, 0x34, 0x0f, 0x8f, 0xc9, 0x2e, 0x88, 0x97, 0x90, 0xf8, 0xb0, 0xef, 0x2a,
	0x21, 0x71, 0x6c, 0x22, 0x83, 0x23, 0xde, 0xc3, 0x67, 0x70, 0x5a, 0xf6, 0x3b, 0xe7, 0x7b, 0x02,
	0x1d, 0x8b, 0xee, 0x15, 0x14, 0x1b, 0x8e, 0xcf, 0x6e, 0x4b, 0x64, 0xc8, 0x0f, 0x1d, 0x51, 0x7e,
	0xc9, 0x4f, 0x52, 0x77, 0x0d, 0xc7, 0xf1, 0xae, 0xb0, 0x45, 0x8e, 0x66, 0x24, 0xc5, 0x78, 0xdd,
	0x15, 0x54, 0x9a, 0x8c, 0xe4, 0x6c, 0xfc, 0xd6, 0xb1, 0xb5, 0xd8, 0x12, 0x53, 0x54, 0x4b, 0x6f,
	0x1d, 0xfe, 0x99, 0x5e, 0xf9, 0x45, 0x0e, 0x1e, 0xd1, 0xd3, 0xee, 0xd4, 0xc2, 0x1e, 0x5b, 0x42,
	0x1e, 0x7a, 0xb6, 0x7c, 0x0a, 0x28, 0x54, 0xd4, 0xc7, 0x41, 0x42, 0x59, 0x59, 0x70, 0xfa, 0x38,
	0x60, 0xfa, 0x7e, 0x06, 0x5b, 0x91, 0x59, 0x16, 0xd6, 0x3d, 0x4d, 0xcc, 0x1f, 0x82, 0x0f, 0x25,
	0x35, 0x08, 0x8b, 0xf5, 0x38, 0x81, 0x6d, 0x4f, 0x0f, 0xb0, 0x65, 0x4e, 0xcc, 0x80, 0x0c, 0xef,
	0x89, 0x21, 0xd8, 0x25, 0xcf, 0x66, 0xc8, 0xec, 0x13, 0x5e, 0x38, 0x4a, 0xbc, 0x8f, 0xe3, 0xf2,
	0x2e, 0xec, 0xc2, 0x07, 0xc5, 0xba, 0x38, 0x2e, 0xeb, 0xf1, 0x29, 0x39, 0xb8, 0xfb, 0xf4, 0xba,
	0xea, 0xbe, 0xb6, 0x42, 0x43, 0x28, 0xee, 0x15, 0x45, 0x90, 0xc8, 0x49, 0xde, 0x6f, 0x11, 0x80,
	0xf2, 0x1a, 0x76, 0x67, 0x7b, 0x95, 0x24, 0xc3, 0xef, 0x64, 0x92, 0xe1, 0x71, 0xfc, 0xde, 0x21,
	0xd3, 0x27, 0x96, 0x12, 0x27, 0xb0, 0xf2, 0x52, 0xd5, 0xed, 0x31, 0x46, 0x9b, 0xb0, 0xfc, 0x46,
	0xbb, 0xc2, 0x63, 0x9e, 0x12, 0x85, 0x37, 0xa7, 0x78, 0xcc, 0x88, 0xd8, 0x16, 0x9b, 0xf4, 0xc2,
	0x9b, 0x96, 0x6d, 0x28, 0xc7, 0xb0, 0xca, 0xfa, 0xf8, 0xe8, 0x3b, 0xb0, 0xec, 0x91, 0x5f, 0x7c,
	0xd8, 0x2a, 0x1f, 0x96, 0xb1, 0x55, 0xc6, 0x53, 0xfe, 0x43, 0x82, 0x9d, 0x50, 0x91, 0xfa, 0x30,
	0x30, 0x6f, 0xf1, 0x4b, 0x31, 0xcd, 0x15, 0xc8, 0x5b, 0xe6, 0x88, 0xcf, 0x72, 0xf9, 0xf8, 0xe6,
	0xfa, 0xb8, 0x6b, 0x8e, 0xa2, 0xa7, 0x4c, 0x84, 0x89, 0x0e, 0x61, 0xe5, 0x8d, 0x16, 0xab, 0x8f,
	0x1b, 0xc7, 0xa6, 0x1d, 0x8c, 0x08, 0xf0, 0x65, 0x6f, 0xea, 0xb9, 0x8e, 0x8f, 0xd5, 0xe5, 0x37,
	0xf4, 0x58, 0xb1, 0x4d, 0xd4, 0xb5, 0xf9, 0x0a, 0x5b, 0x25, 0x05, 0xe2, 0xcd, 0xc5, 0x74, 0x82,
	0x3e, 0x81, 0xe2, 0x1b, 0x8d, 0xea, 0x22, 0x36, 0x3a, 0x6b, 0x09, 0x45, 0xfd, 0xf6, 0x92, 0xba,
	0xfa, 0x86, 0x9b, 0xf4, 0x18, 0xc0, 0x75, 0xc2, 0x29, 0xc0, 0x6f, 0xb3, 0x09, 0x85, 0x86, 0x8d,
	0x14, 0x11, 0xb2, 0x7d, 0x71, 0x3c, 0x2e, 0x50, 0x79, 0x0d, 0x7b, 0x73, 0x8c, 0x23, 0xa1, 0xf9,
	0x61, 0xba, 0x98, 0xbc, 0x9f, 0x8e, 0x4c, 0xb2, 0x4f, 0x54, 0x54, 0x7e, 0x02, 0xb5, 0x2c, 0x86,
	0xcf, 0xa4, 0x03, 0xa8, 0xe8, 0x94, 0xa4, 0x31, 0x73, 0x25, 0xba, 0x16, 0x00, 0xa3, 0xbd, 0xbc,
	0x98, 0x4e, 0x94, 0x6f, 0x60, 0x7f, 0x5e, 0x6f, 0xa2, 0xd6, 0x8f, 0x33, 0x19, 0xf3, 0x64, 0xae,
	0x5e, 0xe9, 0x9c, 0x39, 0x7a, 0x09, 0xe5, 0xd8, 0x7d, 0x16, 0x7a, 0x04, 0xa8, 0xdf, 0x68, 0xb7,
	0x9a, 0x5a, 0xef, 0xb2, 0xdb, 0x69, 0x7c, 0xad, 0x5d, 0x0e, 0xda, 0x2d, 0x55, 0x5e, 0x42, 0xdb,
	0xb0, 0x91, 0xa0, 0x9f, 0x75, 0xce, 0x2e, 0x65, 0x09, 0x6d, 0xc2, 0x7a, 0x82, 0xac, 0xaa, 0x72,
	0xee, 0xe8, 0xc7, 0xe2, 0x8a, 0x4e, 0x75, 0x2c, 0x8c, 0x76, 0x60, 0x73, 0xd0, 0x56, 0x5b, 0xf5,
	0xa6, 0xa6, 0x5e, 0x76, 0x5b, 0x5a, 0xe3, 0xf2, 0x62, 0xa0, 0x5e, 0x76, 0xe5, 0x25, 0xb4, 0x05,
	0x72, 0x9c, 0xd1, 0xac, 0x0f, 0xea, 0xb2, 0x74, 0xd4, 0x03, 0x88, 0xae, 0x11, 0x28, 0x46, 0xad,
	0x37, 0x5a, 0x5a, 0xb7, 0xf5, 0xba, 0xd5, 0xd5, 0x2e, 0x2e, 0x2f, 0x5a, 0x4c, 0x99, 0x38, 0xb5,
	0xa5, 0xaa, 0x97, 0xaa, 0x2c, 0xa5, 0xc9, 0xcd, 0xd6, 0xe9, 0xab, 0x17, 0x72, 0xee, 0xe8, 0x1f,
	0x24, 0xd8, 0x9a, 0x75, 0x8a, 0x45, 0xfb, 0xb0, 0x73, 0xde, 0x7b, 0xa5, 0xb1, 0x3e, 0xbd, 0x4e,
	0xaf, 0xd5, 0xed, 0x5c, 0xb4, 0xc4, 0x18, 0x1f, 0xc0, 0xe3, 0x19, 0xcc, 0xde, 0x73, 0xad, 0x73,
	0xf1, 0x42, 0x6d, 0xf5, 0xfb, 0xb2, 0x84, 0x0e, 0xe0, 0xbd, 0xd9, 0x90, 0x16, 0x43, 0xe4, 0xe6,
	0x22, 0x7a, 0x9a, 0xfa, 0x55, 0xf3, 0xbc, 0x2e, 0xe7, 0x17, 0x20, 0x06, 0x14, 0x51, 0x38, 0x7a,
	0x0b, 0x10, 0x6d, 0x55, 0x11, 0x82, 0xb5, 0x46, 0xbd, 0xa7, 0x76, 0xb4, 0xd3, 0xee, 0x65, 0xe3,
	0x4b, 0xad, 0x77, 0xca, 0xdc, 0x11, 0xa7, 0xb1, 0x8e, 0x52, 0x9a, 0xcc, 0x46, 0xcc, 0xa5, 0x25,
	0x9c, 0xf7, 0xe5, 0x3c, 0x71, 0x73, 0x42, 0x6a, 0xa3, 0xd3, 0x92, 0x0b, 0x47, 0xbf, 0xc8, 0xd1,
	0x3d, 0x52, 0x6c, 0xdb, 0x82, 0xf6, 0xe0, 0x51, 0xb7, 0xdb, 0xd0, 0x1a, 0x97, 0xaf, 0x2e, 0x06,
	0x2d, 0x55, 0x6b, 0xd4, 0x1b, 0xed, 0xd0, 0x63, 0x33, 0x79, 0x24, 0xbe, 0xb2, 0x44, 0x5c, 0x9d,
	0xe5, 0xfd, 0x9e, 0xda, 0x19, 0xb4, 0xe4, 0x1c, 0x71, 0x75, 0x9c, 0xd9, 0x6f, 0xa8, 0xf5, 0x41,
	0xa3, 0xdd, 0xab, 0x37, 0xb5, 0x7a, 0xa3, 0x41, 0x1c, 0x99, 0x47, 0xbb, 0xb0, 0x9d, 0xed, 0xdf,
	0xee, 0x0c, 0xe4, 0xc2, 0xec, 0x61, 0xcf, 0x3b, 0xfd, 0xbe, 0xbc, 0x8c, 0x1e, 0xc3, 0x6e, 0x9c,
	0xd7, 0xab, 0xab, 0x83, 0x4e, 0xbd, 0xcb, 0x07, 0x5e, 0x41, 0xef, 0xc3, 0xde, 0x8c, 0xae, 0xf5,
	0xce, 0xc5, 0x40, 0xbb, 0xec, 0xc9, 0xab, 0xa8, 0x06, 0x5b, 0x71, 0x7e, 0xeb, 0x75, 0xa7, 0x31,
	0xe8, 0x5c, 0x5e, 0xc8, 0x45, 0xf4, 0x1e, 0xd4, 0xe2, 0x1c, 0xb5, 0x35, 0x50, 0xbf, 0xd6, 0x2e,
	0x5a, 0xad, 0x66, 0xab, 0x29, 0x97, 0x66, 0x73, 0xb9, 0x2d, 0x70, 0xf4, 0xe7, 0x12, 0xdd, 0x47,
	0x89, 0x4d, 0x17, 0x9d, 0x43, 0x6a, 0xfd, 0x3c, 0x9e, 0x5b, 0x4b, 0x24, 0x4a, 0x82, 0xd8, 0x12,
	0xf9, 0xb6, 0x0e, 0x65, 0x41, 0xab, 0x77, 0xbb, 0x72, 0x8e, 0x4e, 0x4a, 0x46, 0xe8, 0x75, 0x5f,
	0xf5, 0xc3, 0x9c, 0x4a, 0x91, 0x79, 0x22, 0xc5, 0xc6, 0xa1, 0x64, 0x22, 0x62, 0x19, 0x55, 0xa0,
	0x48, 0x89, 0xa4, 0xb5, 0x72, 0xf2, 0x97, 0x55, 0x58, 0x66, 0x97, 0x60, 0x67, 0x50, 0x16, 0xef,
	0x13, 0x5e, 0xe0, 0x00, 0xed, 0xce, 0x7e, 0x8a, 0x76, 0xee, 0x8f, 0xf7, 0xf6, 0xe6, 0xbc, 0xea,
	0x3a, 0xf7, 0xc7, 0xca, 0x12, 0xea, 0xc0, 0x9a, 0x60, 0xb0, 0xb7, 0x10, 0xbf, 0xbe, 0xa8, 0x9f,
	0x43, 0x89, 0xbd, 0xab, 0x20, 0x0a, 0xed, 0xcc, 0x7a, 0x3a, 0x45, 0x64, 0xd4, 0x66, 0xbe, 0x23,
	0x62, 0x12, 0x1a, 0xf4, 0x65, 0x84, 0xe3, 0xdd, 0x73, 0x55, 0x7e, 0x2d, 0x21, 0x1d, 0x21, 0x44,
	0xd5, 0xc9, 0x49, 0x0c, 0xed, 0xcd, 0x79, 0x2f, 0x44, 0xe4, 0xec, 0xcf, 0x7b, 0x82, 0xc3, 0x44,
	0x7d, 0x05, 0xeb, 0xa9, 0x97, 0x22, 0xe8, 0x60, 0xe1, 0xe3, 0x17, 0x22, 0xf3, 0x83, 0xc5, 0x6f,
	0x4c, 0x42, 0xb7, 0x8b, 0x92, 0x97, 0x72, 0x7b, 0xf6, 0x4e, 0x2d, 0x74, 0xfb, 0x8c, 0xfb, 0x27,
	0x65, 0x09, 0x75, 0xa1, 0x1c, 0x7b, 0x22, 0x80, 0xde, 0x9b, 0xfb, 0x92, 0x83, 0x88, 0x7a, 0x3c,
	0xff, 0x51, 0x81, 0x08, 0xe2, 0x2a, 0xff, 0xac, 0x89, 0x6a, 0x33, 0x3f, 0x01, 0x13, 0x29, 0xbb,
	0xb3, 0x3f, 0x80, 0x32, 0x09, 0x3f, 0x83, 0x4a, 0xfc, 0x1b, 0x11, 0xaa, 0xf0, 0x4d, 0x67, 0x6b,
	0xe2, 0x06, 0xf7, 0x7b, 0xef, 0x2f, 0xf8, 0x8c, 0x24, 0x34, 0x28, 0xc7, 0xfd, 0xf2, 0x28, 0x79,
	0xed, 0x1c, 0xea, 0xb0, 0x33, 0xeb, 0x3a, 0x9a, 0x49, 0x78, 0x06, 0x45, 0x4a, 0xcd, 0x8e, 0xbe,
	0xa0, 0xd3, 0xe7, 0x50, 0x62, 0x8b, 0x62, 0xb6, 0x57, 0x6d, 0xe6, 0xe7, 0x04, 0xd6, 0xed, 0x33,
	0x28, 0xd2, 0xfb, 0x9b, 0x6c, 0xaf, 0xad, 0xf8, 0xf5, 0x8e, 0xe8, 0xa4, 0x2c, 0xa1, 0x1f, 0x42,
	0x29, 0xbc, 0x70, 0x4b, 0x75, 0xd9, 0x9f, 0x77, 0x21, 0x27, 0x92, 0x06, 0xa2, 0xc7, 0xb5, 0x68,
	0x7f, 0xde, 0x8b, 0x65, 0xe2, 0x9d, 0xf7, 0xe6, 0x3e, 0xc6, 0x65, 0xa2, 0x7e, 0x00, 0xc0, 0xdf,
	0x6a, 0x67, 0x15, 0xdf, 0x9d, 0xfd, 0x98, 0x9b, 0x75, 0x3c, 0x83, 0x2a, 0xa7, 0xf3, 0xf8, 0xd4,
	0x66, 0x3e, 0x21, 0x8f, 0x67, 0xc9, 0x4c, 0x39, 0x0d, 0x28, 0x8a, 0xbb, 0x92, 0x30, 0xf5, 0xb3,
	0x37, 0x4c, 0x61, 0xea, 0xcf, 0xb8, 0x85, 0x51, 0x96, 0xd0, 0x21, 0x14, 0xc9, 0xfa, 0x47, 0x0e,
	0x13, 0x29, 0x1b, 0x12, 0x2d, 0x36, 0x9c, 0xb8, 0x6c, 0x08, 0x87, 0xcb, 0xde, 0xa7, 0x84, 0xc3,
	0xcd, 0xb8, 0xc6, 0x50, 0x96, 0xd0, 0x09, 0xac, 0xb0, 0xb3, 0xfc, 0x9c, 0xfc, 0xc8, 0x5c, 0x0a,
	0x28, 0x4b, 0xa8, 0x0d, 0xd5, 0xf0, 0x18, 0x9d, 0x18, 0x3d, 0x7b, 0x16, 0x8e, 0x1b, 0x9b, 0x3e,
	0x82, 0x2a, 0x4b, 0xa8, 0x05, 0x1b, 0xc9, 0x03, 0x46, 0x56, 0x91, 0x83, 0x85, 0x07, 0x11, 0x26,
	0xe6, 0x0f, 0x60, 0x33, 0xbd, 0xeb, 0x24, 0x82, 0x3e, 0x58, 0xbc, 0x53, 0x26, 0xea, 0x29, 0xef,
	0xd8, 0xb4, 0x52, 0xf9, 0xa7, 0xf0, 0x4d, 0xf1, 0x5a, 0xb7, 0xe8, 0xbf, 0x7f, 0x5c, 0xad, 0xd0,
	0x3f, 0xcf, 0xfe, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xb6, 0x8e, 0x20, 0xba, 0xba, 0x33, 0x00, 0x00,
}
