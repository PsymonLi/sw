// Code generated by MockGen. DO NOT EDIT.
// Source: descriptor_aol.pb.go

// Package halproto is a generated GoMock package.
package halproto

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// MockDescrAolClient is a mock of DescrAolClient interface
type MockDescrAolClient struct {
	ctrl     *gomock.Controller
	recorder *MockDescrAolClientMockRecorder
}

// MockDescrAolClientMockRecorder is the mock recorder for MockDescrAolClient
type MockDescrAolClientMockRecorder struct {
	mock *MockDescrAolClient
}

// NewMockDescrAolClient creates a new mock instance
func NewMockDescrAolClient(ctrl *gomock.Controller) *MockDescrAolClient {
	mock := &MockDescrAolClient{ctrl: ctrl}
	mock.recorder = &MockDescrAolClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDescrAolClient) EXPECT() *MockDescrAolClientMockRecorder {
	return m.recorder
}

// DescrAolGet mocks base method
func (m *MockDescrAolClient) DescrAolGet(ctx context.Context, in *DescrAolRequestMsg, opts ...grpc.CallOption) (*DescrAolResponseMsg, error) {
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescrAolGet", varargs...)
	ret0, _ := ret[0].(*DescrAolResponseMsg)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescrAolGet indicates an expected call of DescrAolGet
func (mr *MockDescrAolClientMockRecorder) DescrAolGet(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescrAolGet", reflect.TypeOf((*MockDescrAolClient)(nil).DescrAolGet), varargs...)
}

// MockDescrAolServer is a mock of DescrAolServer interface
type MockDescrAolServer struct {
	ctrl     *gomock.Controller
	recorder *MockDescrAolServerMockRecorder
}

// MockDescrAolServerMockRecorder is the mock recorder for MockDescrAolServer
type MockDescrAolServerMockRecorder struct {
	mock *MockDescrAolServer
}

// NewMockDescrAolServer creates a new mock instance
func NewMockDescrAolServer(ctrl *gomock.Controller) *MockDescrAolServer {
	mock := &MockDescrAolServer{ctrl: ctrl}
	mock.recorder = &MockDescrAolServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDescrAolServer) EXPECT() *MockDescrAolServerMockRecorder {
	return m.recorder
}

// DescrAolGet mocks base method
func (m *MockDescrAolServer) DescrAolGet(arg0 context.Context, arg1 *DescrAolRequestMsg) (*DescrAolResponseMsg, error) {
	ret := m.ctrl.Call(m, "DescrAolGet", arg0, arg1)
	ret0, _ := ret[0].(*DescrAolResponseMsg)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescrAolGet indicates an expected call of DescrAolGet
func (mr *MockDescrAolServerMockRecorder) DescrAolGet(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescrAolGet", reflect.TypeOf((*MockDescrAolServer)(nil).DescrAolGet), arg0, arg1)
}
