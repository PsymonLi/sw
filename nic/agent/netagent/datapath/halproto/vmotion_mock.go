// Code generated by MockGen. DO NOT EDIT.
// Source: vmotion.pb.go

// Package halproto is a generated GoMock package.
package halproto

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockisVmotionMessage_Msg is a mock of isVmotionMessage_Msg interface
type MockisVmotionMessage_Msg struct {
	ctrl     *gomock.Controller
	recorder *MockisVmotionMessage_MsgMockRecorder
}

// MockisVmotionMessage_MsgMockRecorder is the mock recorder for MockisVmotionMessage_Msg
type MockisVmotionMessage_MsgMockRecorder struct {
	mock *MockisVmotionMessage_Msg
}

// NewMockisVmotionMessage_Msg creates a new mock instance
func NewMockisVmotionMessage_Msg(ctrl *gomock.Controller) *MockisVmotionMessage_Msg {
	mock := &MockisVmotionMessage_Msg{ctrl: ctrl}
	mock.recorder = &MockisVmotionMessage_MsgMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockisVmotionMessage_Msg) EXPECT() *MockisVmotionMessage_MsgMockRecorder {
	return m.recorder
}

// isVmotionMessage_Msg mocks base method
func (m *MockisVmotionMessage_Msg) isVmotionMessage_Msg() {
	m.ctrl.Call(m, "isVmotionMessage_Msg")
}

// isVmotionMessage_Msg indicates an expected call of isVmotionMessage_Msg
func (mr *MockisVmotionMessage_MsgMockRecorder) isVmotionMessage_Msg() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "isVmotionMessage_Msg", reflect.TypeOf((*MockisVmotionMessage_Msg)(nil).isVmotionMessage_Msg))
}

// MarshalTo mocks base method
func (m *MockisVmotionMessage_Msg) MarshalTo(arg0 []byte) (int, error) {
	ret := m.ctrl.Call(m, "MarshalTo", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MarshalTo indicates an expected call of MarshalTo
func (mr *MockisVmotionMessage_MsgMockRecorder) MarshalTo(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MarshalTo", reflect.TypeOf((*MockisVmotionMessage_Msg)(nil).MarshalTo), arg0)
}

// Size mocks base method
func (m *MockisVmotionMessage_Msg) Size() int {
	ret := m.ctrl.Call(m, "Size")
	ret0, _ := ret[0].(int)
	return ret0
}

// Size indicates an expected call of Size
func (mr *MockisVmotionMessage_MsgMockRecorder) Size() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Size", reflect.TypeOf((*MockisVmotionMessage_Msg)(nil).Size))
}
