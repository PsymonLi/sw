// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nic/proto/hal/descriptor_aol.proto

package halproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DescrAolRequest struct {
	Meta           *ObjectMeta `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	DescrAolHandle uint64      `protobuf:"fixed64,2,opt,name=descr_aol_handle,json=descrAolHandle" json:"descr_aol_handle,omitempty"`
}

func (m *DescrAolRequest) Reset()                    { *m = DescrAolRequest{} }
func (m *DescrAolRequest) String() string            { return proto.CompactTextString(m) }
func (*DescrAolRequest) ProtoMessage()               {}
func (*DescrAolRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *DescrAolRequest) GetMeta() *ObjectMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *DescrAolRequest) GetDescrAolHandle() uint64 {
	if m != nil {
		return m.DescrAolHandle
	}
	return 0
}

type DescrAolRequestMsg struct {
	Request []*DescrAolRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
}

func (m *DescrAolRequestMsg) Reset()                    { *m = DescrAolRequestMsg{} }
func (m *DescrAolRequestMsg) String() string            { return proto.CompactTextString(m) }
func (*DescrAolRequestMsg) ProtoMessage()               {}
func (*DescrAolRequestMsg) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *DescrAolRequestMsg) GetRequest() []*DescrAolRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type DescrAolSpec struct {
	ApiStatus          ApiStatus   `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	Meta               *ObjectMeta `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
	DescrAolHandle     uint64      `protobuf:"fixed64,3,opt,name=descr_aol_handle,json=descrAolHandle" json:"descr_aol_handle,omitempty"`
	Address1           uint64      `protobuf:"fixed64,4,opt,name=Address1" json:"Address1,omitempty"`
	Offset1            uint32      `protobuf:"fixed32,5,opt,name=Offset1" json:"Offset1,omitempty"`
	Length1            uint32      `protobuf:"fixed32,6,opt,name=Length1" json:"Length1,omitempty"`
	Address2           uint64      `protobuf:"fixed64,7,opt,name=Address2" json:"Address2,omitempty"`
	Offset2            uint32      `protobuf:"fixed32,8,opt,name=Offset2" json:"Offset2,omitempty"`
	Length2            uint32      `protobuf:"fixed32,9,opt,name=Length2" json:"Length2,omitempty"`
	Address3           uint64      `protobuf:"fixed64,10,opt,name=Address3" json:"Address3,omitempty"`
	Offset3            uint32      `protobuf:"fixed32,11,opt,name=Offset3" json:"Offset3,omitempty"`
	Length3            uint32      `protobuf:"fixed32,12,opt,name=Length3" json:"Length3,omitempty"`
	NextDescrAolHandle uint64      `protobuf:"fixed64,13,opt,name=next_descr_aol_handle,json=nextDescrAolHandle" json:"next_descr_aol_handle,omitempty"`
}

func (m *DescrAolSpec) Reset()                    { *m = DescrAolSpec{} }
func (m *DescrAolSpec) String() string            { return proto.CompactTextString(m) }
func (*DescrAolSpec) ProtoMessage()               {}
func (*DescrAolSpec) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *DescrAolSpec) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *DescrAolSpec) GetMeta() *ObjectMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *DescrAolSpec) GetDescrAolHandle() uint64 {
	if m != nil {
		return m.DescrAolHandle
	}
	return 0
}

func (m *DescrAolSpec) GetAddress1() uint64 {
	if m != nil {
		return m.Address1
	}
	return 0
}

func (m *DescrAolSpec) GetOffset1() uint32 {
	if m != nil {
		return m.Offset1
	}
	return 0
}

func (m *DescrAolSpec) GetLength1() uint32 {
	if m != nil {
		return m.Length1
	}
	return 0
}

func (m *DescrAolSpec) GetAddress2() uint64 {
	if m != nil {
		return m.Address2
	}
	return 0
}

func (m *DescrAolSpec) GetOffset2() uint32 {
	if m != nil {
		return m.Offset2
	}
	return 0
}

func (m *DescrAolSpec) GetLength2() uint32 {
	if m != nil {
		return m.Length2
	}
	return 0
}

func (m *DescrAolSpec) GetAddress3() uint64 {
	if m != nil {
		return m.Address3
	}
	return 0
}

func (m *DescrAolSpec) GetOffset3() uint32 {
	if m != nil {
		return m.Offset3
	}
	return 0
}

func (m *DescrAolSpec) GetLength3() uint32 {
	if m != nil {
		return m.Length3
	}
	return 0
}

func (m *DescrAolSpec) GetNextDescrAolHandle() uint64 {
	if m != nil {
		return m.NextDescrAolHandle
	}
	return 0
}

type DescrAolResponseMsg struct {
	Response []*DescrAolSpec `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *DescrAolResponseMsg) Reset()                    { *m = DescrAolResponseMsg{} }
func (m *DescrAolResponseMsg) String() string            { return proto.CompactTextString(m) }
func (*DescrAolResponseMsg) ProtoMessage()               {}
func (*DescrAolResponseMsg) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *DescrAolResponseMsg) GetResponse() []*DescrAolSpec {
	if m != nil {
		return m.Response
	}
	return nil
}

func init() {
	proto.RegisterType((*DescrAolRequest)(nil), "descraol.DescrAolRequest")
	proto.RegisterType((*DescrAolRequestMsg)(nil), "descraol.DescrAolRequestMsg")
	proto.RegisterType((*DescrAolSpec)(nil), "descraol.DescrAolSpec")
	proto.RegisterType((*DescrAolResponseMsg)(nil), "descraol.DescrAolResponseMsg")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DescrAol service

type DescrAolClient interface {
	DescrAolGet(ctx context.Context, in *DescrAolRequestMsg, opts ...grpc.CallOption) (*DescrAolResponseMsg, error)
}

type descrAolClient struct {
	cc *grpc.ClientConn
}

func NewDescrAolClient(cc *grpc.ClientConn) DescrAolClient {
	return &descrAolClient{cc}
}

func (c *descrAolClient) DescrAolGet(ctx context.Context, in *DescrAolRequestMsg, opts ...grpc.CallOption) (*DescrAolResponseMsg, error) {
	out := new(DescrAolResponseMsg)
	err := grpc.Invoke(ctx, "/descraol.DescrAol/DescrAolGet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DescrAol service

type DescrAolServer interface {
	DescrAolGet(context.Context, *DescrAolRequestMsg) (*DescrAolResponseMsg, error)
}

func RegisterDescrAolServer(s *grpc.Server, srv DescrAolServer) {
	s.RegisterService(&_DescrAol_serviceDesc, srv)
}

func _DescrAol_DescrAolGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescrAolRequestMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DescrAolServer).DescrAolGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/descraol.DescrAol/DescrAolGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DescrAolServer).DescrAolGet(ctx, req.(*DescrAolRequestMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _DescrAol_serviceDesc = grpc.ServiceDesc{
	ServiceName: "descraol.DescrAol",
	HandlerType: (*DescrAolServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DescrAolGet",
			Handler:    _DescrAol_DescrAolGet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nic/proto/hal/descriptor_aol.proto",
}

func init() { proto.RegisterFile("nic/proto/hal/descriptor_aol.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xdd, 0xaa, 0xd3, 0x40,
	0x14, 0x85, 0xcd, 0xe9, 0xb1, 0xc9, 0xd9, 0x39, 0x1e, 0xeb, 0x48, 0x65, 0x2c, 0x0a, 0x21, 0x20,
	0xe4, 0x2a, 0x21, 0x33, 0x4f, 0x50, 0x29, 0xa8, 0xd0, 0x52, 0x48, 0x6f, 0xc4, 0x9b, 0x30, 0x4d,
	0xa6, 0x4d, 0x24, 0x26, 0x31, 0x33, 0x05, 0x7d, 0x2e, 0x5f, 0x50, 0x32, 0xf9, 0xed, 0x8f, 0x17,
	0x5e, 0x75, 0xf6, 0x5e, 0x8b, 0x6f, 0xf6, 0xee, 0xac, 0x80, 0x9d, 0xa7, 0x91, 0x57, 0x56, 0x85,
	0x2c, 0xbc, 0x84, 0x65, 0x5e, 0xcc, 0x45, 0x54, 0xa5, 0xa5, 0x2c, 0xaa, 0x90, 0x15, 0x99, 0xab,
	0x04, 0x64, 0xa8, 0x2e, 0x2b, 0xb2, 0xc5, 0x7c, 0x70, 0xcb, 0xdf, 0x25, 0x17, 0x8d, 0xc1, 0xde,
	0xc3, 0xcb, 0x55, 0x6d, 0x59, 0x16, 0x59, 0xc0, 0x7f, 0x9e, 0xb8, 0x90, 0xe8, 0x03, 0xdc, 0xff,
	0xe0, 0x92, 0x61, 0xcd, 0xd2, 0x1c, 0x93, 0xbc, 0x72, 0x1b, 0xfb, 0x76, 0xff, 0x9d, 0x47, 0x72,
	0xc3, 0x25, 0x0b, 0x94, 0x8c, 0x1c, 0x98, 0x29, 0x78, 0x7d, 0x5b, 0x98, 0xb0, 0x3c, 0xce, 0x38,
	0xbe, 0xb3, 0x34, 0x67, 0x1a, 0x3c, 0xc5, 0x2d, 0xf1, 0xb3, 0xea, 0xda, 0x5f, 0x00, 0x5d, 0xdc,
	0xb1, 0x11, 0x47, 0x44, 0x41, 0xaf, 0x9a, 0x0a, 0x6b, 0xd6, 0xc4, 0x31, 0xc9, 0x5b, 0xb7, 0x1b,
	0xd6, 0xbd, 0xb0, 0x07, 0x9d, 0xd3, 0xfe, 0x33, 0x81, 0xc7, 0x4e, 0xdc, 0x95, 0x3c, 0x42, 0x1e,
	0x00, 0x2b, 0xd3, 0x50, 0x48, 0x26, 0x4f, 0x42, 0x8d, 0xfc, 0x44, 0x66, 0xed, 0xc8, 0xcb, 0x32,
	0xdd, 0xa9, 0x7e, 0xf0, 0xc0, 0xba, 0x63, 0xbf, 0xdd, 0xdd, 0xff, 0x6f, 0x37, 0xb9, 0xb5, 0x1d,
	0x5a, 0x80, 0xb1, 0x8c, 0xe3, 0x8a, 0x0b, 0xe1, 0xe3, 0x7b, 0xe5, 0xe8, 0x6b, 0x84, 0x41, 0xdf,
	0x1e, 0x0e, 0x82, 0x4b, 0x1f, 0x3f, 0xb7, 0x34, 0x47, 0x0f, 0xba, 0xb2, 0x56, 0xd6, 0x3c, 0x3f,
	0xca, 0xc4, 0xc7, 0xd3, 0x46, 0x69, 0xcb, 0x11, 0x8f, 0x60, 0xfd, 0x8c, 0x47, 0x06, 0x1e, 0xc1,
	0xc6, 0x98, 0x47, 0x06, 0x1e, 0xc1, 0x0f, 0x63, 0x1e, 0x19, 0xf1, 0x28, 0x86, 0x33, 0x1e, 0x1d,
	0x78, 0x14, 0x9b, 0x63, 0x1e, 0x1d, 0x78, 0x14, 0x3f, 0x8e, 0x79, 0x14, 0xf9, 0x30, 0xcf, 0xf9,
	0x2f, 0x19, 0x5e, 0xfd, 0x3d, 0x2f, 0x14, 0x1c, 0xd5, 0xe2, 0xea, 0x32, 0x00, 0xaf, 0x87, 0x17,
	0x15, 0x65, 0x91, 0x0b, 0x5e, 0x27, 0x80, 0x80, 0x51, 0xb5, 0x65, 0x1b, 0x81, 0x37, 0xd7, 0x11,
	0xa8, 0x5f, 0x39, 0xe8, 0x7d, 0xe4, 0x2b, 0x18, 0x9d, 0x82, 0xd6, 0x60, 0x76, 0xe7, 0x4f, 0x5c,
	0xa2, 0x77, 0xff, 0xcc, 0xcf, 0x46, 0x1c, 0x17, 0xef, 0x6f, 0xa9, 0xfd, 0x2c, 0xf6, 0xb3, 0x8f,
	0xf0, 0xcd, 0x48, 0x58, 0xa6, 0xbe, 0x8a, 0xfd, 0x54, 0xfd, 0xd0, 0xbf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x83, 0x30, 0xc2, 0x79, 0x63, 0x03, 0x00, 0x00,
}
