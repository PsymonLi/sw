// Code generated by MockGen. DO NOT EDIT.
// Source: barco_rings.pb.go

// Package halproto is a generated GoMock package.
package halproto

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// MockisBarcoGetReqDescrEntryResponse_ReqDescrMsg is a mock of isBarcoGetReqDescrEntryResponse_ReqDescrMsg interface
type MockisBarcoGetReqDescrEntryResponse_ReqDescrMsg struct {
	ctrl     *gomock.Controller
	recorder *MockisBarcoGetReqDescrEntryResponse_ReqDescrMsgMockRecorder
}

// MockisBarcoGetReqDescrEntryResponse_ReqDescrMsgMockRecorder is the mock recorder for MockisBarcoGetReqDescrEntryResponse_ReqDescrMsg
type MockisBarcoGetReqDescrEntryResponse_ReqDescrMsgMockRecorder struct {
	mock *MockisBarcoGetReqDescrEntryResponse_ReqDescrMsg
}

// NewMockisBarcoGetReqDescrEntryResponse_ReqDescrMsg creates a new mock instance
func NewMockisBarcoGetReqDescrEntryResponse_ReqDescrMsg(ctrl *gomock.Controller) *MockisBarcoGetReqDescrEntryResponse_ReqDescrMsg {
	mock := &MockisBarcoGetReqDescrEntryResponse_ReqDescrMsg{ctrl: ctrl}
	mock.recorder = &MockisBarcoGetReqDescrEntryResponse_ReqDescrMsgMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockisBarcoGetReqDescrEntryResponse_ReqDescrMsg) EXPECT() *MockisBarcoGetReqDescrEntryResponse_ReqDescrMsgMockRecorder {
	return m.recorder
}

// isBarcoGetReqDescrEntryResponse_ReqDescrMsg mocks base method
func (m *MockisBarcoGetReqDescrEntryResponse_ReqDescrMsg) isBarcoGetReqDescrEntryResponse_ReqDescrMsg() {
	m.ctrl.Call(m, "isBarcoGetReqDescrEntryResponse_ReqDescrMsg")
}

// isBarcoGetReqDescrEntryResponse_ReqDescrMsg indicates an expected call of isBarcoGetReqDescrEntryResponse_ReqDescrMsg
func (mr *MockisBarcoGetReqDescrEntryResponse_ReqDescrMsgMockRecorder) isBarcoGetReqDescrEntryResponse_ReqDescrMsg() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "isBarcoGetReqDescrEntryResponse_ReqDescrMsg", reflect.TypeOf((*MockisBarcoGetReqDescrEntryResponse_ReqDescrMsg)(nil).isBarcoGetReqDescrEntryResponse_ReqDescrMsg))
}

// MarshalTo mocks base method
func (m *MockisBarcoGetReqDescrEntryResponse_ReqDescrMsg) MarshalTo(arg0 []byte) (int, error) {
	ret := m.ctrl.Call(m, "MarshalTo", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MarshalTo indicates an expected call of MarshalTo
func (mr *MockisBarcoGetReqDescrEntryResponse_ReqDescrMsgMockRecorder) MarshalTo(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MarshalTo", reflect.TypeOf((*MockisBarcoGetReqDescrEntryResponse_ReqDescrMsg)(nil).MarshalTo), arg0)
}

// Size mocks base method
func (m *MockisBarcoGetReqDescrEntryResponse_ReqDescrMsg) Size() int {
	ret := m.ctrl.Call(m, "Size")
	ret0, _ := ret[0].(int)
	return ret0
}

// Size indicates an expected call of Size
func (mr *MockisBarcoGetReqDescrEntryResponse_ReqDescrMsgMockRecorder) Size() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Size", reflect.TypeOf((*MockisBarcoGetReqDescrEntryResponse_ReqDescrMsg)(nil).Size))
}

// MockBarcoRingsClient is a mock of BarcoRingsClient interface
type MockBarcoRingsClient struct {
	ctrl     *gomock.Controller
	recorder *MockBarcoRingsClientMockRecorder
}

// MockBarcoRingsClientMockRecorder is the mock recorder for MockBarcoRingsClient
type MockBarcoRingsClientMockRecorder struct {
	mock *MockBarcoRingsClient
}

// NewMockBarcoRingsClient creates a new mock instance
func NewMockBarcoRingsClient(ctrl *gomock.Controller) *MockBarcoRingsClient {
	mock := &MockBarcoRingsClient{ctrl: ctrl}
	mock.recorder = &MockBarcoRingsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBarcoRingsClient) EXPECT() *MockBarcoRingsClientMockRecorder {
	return m.recorder
}

// GetOpaqueTagAddr mocks base method
func (m *MockBarcoRingsClient) GetOpaqueTagAddr(ctx context.Context, in *GetOpaqueTagAddrRequestMsg, opts ...grpc.CallOption) (*GetOpaqueTagAddrResponseMsg, error) {
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetOpaqueTagAddr", varargs...)
	ret0, _ := ret[0].(*GetOpaqueTagAddrResponseMsg)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOpaqueTagAddr indicates an expected call of GetOpaqueTagAddr
func (mr *MockBarcoRingsClientMockRecorder) GetOpaqueTagAddr(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOpaqueTagAddr", reflect.TypeOf((*MockBarcoRingsClient)(nil).GetOpaqueTagAddr), varargs...)
}

// BarcoGetReqDescrEntry mocks base method
func (m *MockBarcoRingsClient) BarcoGetReqDescrEntry(ctx context.Context, in *BarcoGetReqDescrEntryRequestMsg, opts ...grpc.CallOption) (*BarcoGetReqDescrEntryResponseMsg, error) {
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "BarcoGetReqDescrEntry", varargs...)
	ret0, _ := ret[0].(*BarcoGetReqDescrEntryResponseMsg)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BarcoGetReqDescrEntry indicates an expected call of BarcoGetReqDescrEntry
func (mr *MockBarcoRingsClientMockRecorder) BarcoGetReqDescrEntry(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BarcoGetReqDescrEntry", reflect.TypeOf((*MockBarcoRingsClient)(nil).BarcoGetReqDescrEntry), varargs...)
}

// BarcoGetRingMeta mocks base method
func (m *MockBarcoRingsClient) BarcoGetRingMeta(ctx context.Context, in *BarcoGetRingMetaRequestMsg, opts ...grpc.CallOption) (*BarcoGetRingMetaResponseMsg, error) {
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "BarcoGetRingMeta", varargs...)
	ret0, _ := ret[0].(*BarcoGetRingMetaResponseMsg)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BarcoGetRingMeta indicates an expected call of BarcoGetRingMeta
func (mr *MockBarcoRingsClientMockRecorder) BarcoGetRingMeta(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BarcoGetRingMeta", reflect.TypeOf((*MockBarcoRingsClient)(nil).BarcoGetRingMeta), varargs...)
}

// MockBarcoRingsServer is a mock of BarcoRingsServer interface
type MockBarcoRingsServer struct {
	ctrl     *gomock.Controller
	recorder *MockBarcoRingsServerMockRecorder
}

// MockBarcoRingsServerMockRecorder is the mock recorder for MockBarcoRingsServer
type MockBarcoRingsServerMockRecorder struct {
	mock *MockBarcoRingsServer
}

// NewMockBarcoRingsServer creates a new mock instance
func NewMockBarcoRingsServer(ctrl *gomock.Controller) *MockBarcoRingsServer {
	mock := &MockBarcoRingsServer{ctrl: ctrl}
	mock.recorder = &MockBarcoRingsServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBarcoRingsServer) EXPECT() *MockBarcoRingsServerMockRecorder {
	return m.recorder
}

// GetOpaqueTagAddr mocks base method
func (m *MockBarcoRingsServer) GetOpaqueTagAddr(arg0 context.Context, arg1 *GetOpaqueTagAddrRequestMsg) (*GetOpaqueTagAddrResponseMsg, error) {
	ret := m.ctrl.Call(m, "GetOpaqueTagAddr", arg0, arg1)
	ret0, _ := ret[0].(*GetOpaqueTagAddrResponseMsg)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOpaqueTagAddr indicates an expected call of GetOpaqueTagAddr
func (mr *MockBarcoRingsServerMockRecorder) GetOpaqueTagAddr(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOpaqueTagAddr", reflect.TypeOf((*MockBarcoRingsServer)(nil).GetOpaqueTagAddr), arg0, arg1)
}

// BarcoGetReqDescrEntry mocks base method
func (m *MockBarcoRingsServer) BarcoGetReqDescrEntry(arg0 context.Context, arg1 *BarcoGetReqDescrEntryRequestMsg) (*BarcoGetReqDescrEntryResponseMsg, error) {
	ret := m.ctrl.Call(m, "BarcoGetReqDescrEntry", arg0, arg1)
	ret0, _ := ret[0].(*BarcoGetReqDescrEntryResponseMsg)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BarcoGetReqDescrEntry indicates an expected call of BarcoGetReqDescrEntry
func (mr *MockBarcoRingsServerMockRecorder) BarcoGetReqDescrEntry(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BarcoGetReqDescrEntry", reflect.TypeOf((*MockBarcoRingsServer)(nil).BarcoGetReqDescrEntry), arg0, arg1)
}

// BarcoGetRingMeta mocks base method
func (m *MockBarcoRingsServer) BarcoGetRingMeta(arg0 context.Context, arg1 *BarcoGetRingMetaRequestMsg) (*BarcoGetRingMetaResponseMsg, error) {
	ret := m.ctrl.Call(m, "BarcoGetRingMeta", arg0, arg1)
	ret0, _ := ret[0].(*BarcoGetRingMetaResponseMsg)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BarcoGetRingMeta indicates an expected call of BarcoGetRingMeta
func (mr *MockBarcoRingsServerMockRecorder) BarcoGetRingMeta(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BarcoGetRingMeta", reflect.TypeOf((*MockBarcoRingsServer)(nil).BarcoGetRingMeta), arg0, arg1)
}
