// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nic/proto/hal/system.proto

package halproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Global system object
type SystemResponse struct {
	ApiStatus ApiStatus `protobuf:"varint,1,opt,name=api_status,json=apiStatus,enum=types.ApiStatus" json:"api_status,omitempty"`
	Stats     *Stats    `protobuf:"bytes,2,opt,name=stats" json:"stats,omitempty"`
}

func (m *SystemResponse) Reset()                    { *m = SystemResponse{} }
func (m *SystemResponse) String() string            { return proto.CompactTextString(m) }
func (*SystemResponse) ProtoMessage()               {}
func (*SystemResponse) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{0} }

func (m *SystemResponse) GetApiStatus() ApiStatus {
	if m != nil {
		return m.ApiStatus
	}
	return ApiStatus_API_STATUS_OK
}

func (m *SystemResponse) GetStats() *Stats {
	if m != nil {
		return m.Stats
	}
	return nil
}

// Stats object
type Stats struct {
	DropStats *DropStats `protobuf:"bytes,1,opt,name=drop_stats,json=dropStats" json:"drop_stats,omitempty"`
}

func (m *Stats) Reset()                    { *m = Stats{} }
func (m *Stats) String() string            { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()               {}
func (*Stats) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{1} }

func (m *Stats) GetDropStats() *DropStats {
	if m != nil {
		return m.DropStats
	}
	return nil
}

// Drop Stats object
type DropStats struct {
	DropEntries []*DropStatsEntry `protobuf:"bytes,1,rep,name=drop_entries,json=dropEntries" json:"drop_entries,omitempty"`
}

func (m *DropStats) Reset()                    { *m = DropStats{} }
func (m *DropStats) String() string            { return proto.CompactTextString(m) }
func (*DropStats) ProtoMessage()               {}
func (*DropStats) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{2} }

func (m *DropStats) GetDropEntries() []*DropStatsEntry {
	if m != nil {
		return m.DropEntries
	}
	return nil
}

// Please revisit. May be we can make this as enum and put an instance of
// that enum in this.
type DropStatsEntry struct {
	DropInputMapping                bool   `protobuf:"varint,1,opt,name=drop_input_mapping,json=dropInputMapping" json:"drop_input_mapping,omitempty"`
	DropInputMappingDejavu          bool   `protobuf:"varint,2,opt,name=drop_input_mapping_dejavu,json=dropInputMappingDejavu" json:"drop_input_mapping_dejavu,omitempty"`
	DropFlowHit                     bool   `protobuf:"varint,3,opt,name=drop_flow_hit,json=dropFlowHit" json:"drop_flow_hit,omitempty"`
	DropFlowMiss                    bool   `protobuf:"varint,4,opt,name=drop_flow_miss,json=dropFlowMiss" json:"drop_flow_miss,omitempty"`
	DropIpsg                        bool   `protobuf:"varint,5,opt,name=drop_ipsg,json=dropIpsg" json:"drop_ipsg,omitempty"`
	DropIngressPolicer              bool   `protobuf:"varint,6,opt,name=drop_ingress_policer,json=dropIngressPolicer" json:"drop_ingress_policer,omitempty"`
	DropEgressPolicer               bool   `protobuf:"varint,7,opt,name=drop_egress_policer,json=dropEgressPolicer" json:"drop_egress_policer,omitempty"`
	DropNacl                        bool   `protobuf:"varint,8,opt,name=drop_nacl,json=dropNacl" json:"drop_nacl,omitempty"`
	DropMalformedPkt                bool   `protobuf:"varint,9,opt,name=drop_malformed_pkt,json=dropMalformedPkt" json:"drop_malformed_pkt,omitempty"`
	DropPingOfDeath                 bool   `protobuf:"varint,10,opt,name=drop_ping_of_death,json=dropPingOfDeath" json:"drop_ping_of_death,omitempty"`
	DropFragmentTooSmall            bool   `protobuf:"varint,11,opt,name=drop_fragment_too_small,json=dropFragmentTooSmall" json:"drop_fragment_too_small,omitempty"`
	DropIpNormalization             bool   `protobuf:"varint,12,opt,name=drop_ip_normalization,json=dropIpNormalization" json:"drop_ip_normalization,omitempty"`
	DropTcpNormalization            bool   `protobuf:"varint,13,opt,name=drop_tcp_normalization,json=dropTcpNormalization" json:"drop_tcp_normalization,omitempty"`
	DropTcpXmasTreePkt              bool   `protobuf:"varint,14,opt,name=drop_tcp_xmas_tree_pkt,json=dropTcpXmasTreePkt" json:"drop_tcp_xmas_tree_pkt,omitempty"`
	DropTcpNonSynFirstPkt           bool   `protobuf:"varint,15,opt,name=drop_tcp_non_syn_first_pkt,json=dropTcpNonSynFirstPkt" json:"drop_tcp_non_syn_first_pkt,omitempty"`
	DropIcmpNormalization           bool   `protobuf:"varint,16,opt,name=drop_icmp_normalization,json=dropIcmpNormalization" json:"drop_icmp_normalization,omitempty"`
	DropIcmpSrcQuenchMsg            bool   `protobuf:"varint,17,opt,name=drop_icmp_src_quench_msg,json=dropIcmpSrcQuenchMsg" json:"drop_icmp_src_quench_msg,omitempty"`
	DropIcmpRedirectMsg             bool   `protobuf:"varint,18,opt,name=drop_icmp_redirect_msg,json=dropIcmpRedirectMsg" json:"drop_icmp_redirect_msg,omitempty"`
	DropIcmpInfoReqMsg              bool   `protobuf:"varint,19,opt,name=drop_icmp_info_req_msg,json=dropIcmpInfoReqMsg" json:"drop_icmp_info_req_msg,omitempty"`
	DropIcmpAddrReqMsg              bool   `protobuf:"varint,20,opt,name=drop_icmp_addr_req_msg,json=dropIcmpAddrReqMsg" json:"drop_icmp_addr_req_msg,omitempty"`
	DropIcmpTracerouteMsg           bool   `protobuf:"varint,21,opt,name=drop_icmp_traceroute_msg,json=dropIcmpTracerouteMsg" json:"drop_icmp_traceroute_msg,omitempty"`
	DropIcmpRsvdTypeMsg             bool   `protobuf:"varint,22,opt,name=drop_icmp_rsvd_type_msg,json=dropIcmpRsvdTypeMsg" json:"drop_icmp_rsvd_type_msg,omitempty"`
	DropInputPropertiesMiss         bool   `protobuf:"varint,23,opt,name=drop_input_properties_miss,json=dropInputPropertiesMiss" json:"drop_input_properties_miss,omitempty"`
	DropTcpOutOfWindow              bool   `protobuf:"varint,24,opt,name=drop_tcp_out_of_window,json=dropTcpOutOfWindow" json:"drop_tcp_out_of_window,omitempty"`
	DropTcpSplitHandshake           bool   `protobuf:"varint,25,opt,name=drop_tcp_split_handshake,json=dropTcpSplitHandshake" json:"drop_tcp_split_handshake,omitempty"`
	DropTcpWinZeroDrop              bool   `protobuf:"varint,26,opt,name=drop_tcp_win_zero_drop,json=dropTcpWinZeroDrop" json:"drop_tcp_win_zero_drop,omitempty"`
	DropTcpAckErr                   bool   `protobuf:"varint,27,opt,name=drop_tcp_ack_err,json=dropTcpAckErr" json:"drop_tcp_ack_err,omitempty"`
	DropTcpDataAfterFin             bool   `protobuf:"varint,28,opt,name=drop_tcp_data_after_fin,json=dropTcpDataAfterFin" json:"drop_tcp_data_after_fin,omitempty"`
	DropTcpNonRstPktAfterRst        bool   `protobuf:"varint,29,opt,name=drop_tcp_non_rst_pkt_after_rst,json=dropTcpNonRstPktAfterRst" json:"drop_tcp_non_rst_pkt_after_rst,omitempty"`
	DropTcpInvalidResponderFirstPkt bool   `protobuf:"varint,30,opt,name=drop_tcp_invalid_responder_first_pkt,json=dropTcpInvalidResponderFirstPkt" json:"drop_tcp_invalid_responder_first_pkt,omitempty"`
	DropTcpUnexpectedSyn            bool   `protobuf:"varint,31,opt,name=drop_tcp_unexpected_syn,json=dropTcpUnexpectedSyn" json:"drop_tcp_unexpected_syn,omitempty"`
	DropCount                       uint64 `protobuf:"varint,32,opt,name=drop_count,json=dropCount" json:"drop_count,omitempty"`
}

func (m *DropStatsEntry) Reset()                    { *m = DropStatsEntry{} }
func (m *DropStatsEntry) String() string            { return proto.CompactTextString(m) }
func (*DropStatsEntry) ProtoMessage()               {}
func (*DropStatsEntry) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{3} }

func (m *DropStatsEntry) GetDropInputMapping() bool {
	if m != nil {
		return m.DropInputMapping
	}
	return false
}

func (m *DropStatsEntry) GetDropInputMappingDejavu() bool {
	if m != nil {
		return m.DropInputMappingDejavu
	}
	return false
}

func (m *DropStatsEntry) GetDropFlowHit() bool {
	if m != nil {
		return m.DropFlowHit
	}
	return false
}

func (m *DropStatsEntry) GetDropFlowMiss() bool {
	if m != nil {
		return m.DropFlowMiss
	}
	return false
}

func (m *DropStatsEntry) GetDropIpsg() bool {
	if m != nil {
		return m.DropIpsg
	}
	return false
}

func (m *DropStatsEntry) GetDropIngressPolicer() bool {
	if m != nil {
		return m.DropIngressPolicer
	}
	return false
}

func (m *DropStatsEntry) GetDropEgressPolicer() bool {
	if m != nil {
		return m.DropEgressPolicer
	}
	return false
}

func (m *DropStatsEntry) GetDropNacl() bool {
	if m != nil {
		return m.DropNacl
	}
	return false
}

func (m *DropStatsEntry) GetDropMalformedPkt() bool {
	if m != nil {
		return m.DropMalformedPkt
	}
	return false
}

func (m *DropStatsEntry) GetDropPingOfDeath() bool {
	if m != nil {
		return m.DropPingOfDeath
	}
	return false
}

func (m *DropStatsEntry) GetDropFragmentTooSmall() bool {
	if m != nil {
		return m.DropFragmentTooSmall
	}
	return false
}

func (m *DropStatsEntry) GetDropIpNormalization() bool {
	if m != nil {
		return m.DropIpNormalization
	}
	return false
}

func (m *DropStatsEntry) GetDropTcpNormalization() bool {
	if m != nil {
		return m.DropTcpNormalization
	}
	return false
}

func (m *DropStatsEntry) GetDropTcpXmasTreePkt() bool {
	if m != nil {
		return m.DropTcpXmasTreePkt
	}
	return false
}

func (m *DropStatsEntry) GetDropTcpNonSynFirstPkt() bool {
	if m != nil {
		return m.DropTcpNonSynFirstPkt
	}
	return false
}

func (m *DropStatsEntry) GetDropIcmpNormalization() bool {
	if m != nil {
		return m.DropIcmpNormalization
	}
	return false
}

func (m *DropStatsEntry) GetDropIcmpSrcQuenchMsg() bool {
	if m != nil {
		return m.DropIcmpSrcQuenchMsg
	}
	return false
}

func (m *DropStatsEntry) GetDropIcmpRedirectMsg() bool {
	if m != nil {
		return m.DropIcmpRedirectMsg
	}
	return false
}

func (m *DropStatsEntry) GetDropIcmpInfoReqMsg() bool {
	if m != nil {
		return m.DropIcmpInfoReqMsg
	}
	return false
}

func (m *DropStatsEntry) GetDropIcmpAddrReqMsg() bool {
	if m != nil {
		return m.DropIcmpAddrReqMsg
	}
	return false
}

func (m *DropStatsEntry) GetDropIcmpTracerouteMsg() bool {
	if m != nil {
		return m.DropIcmpTracerouteMsg
	}
	return false
}

func (m *DropStatsEntry) GetDropIcmpRsvdTypeMsg() bool {
	if m != nil {
		return m.DropIcmpRsvdTypeMsg
	}
	return false
}

func (m *DropStatsEntry) GetDropInputPropertiesMiss() bool {
	if m != nil {
		return m.DropInputPropertiesMiss
	}
	return false
}

func (m *DropStatsEntry) GetDropTcpOutOfWindow() bool {
	if m != nil {
		return m.DropTcpOutOfWindow
	}
	return false
}

func (m *DropStatsEntry) GetDropTcpSplitHandshake() bool {
	if m != nil {
		return m.DropTcpSplitHandshake
	}
	return false
}

func (m *DropStatsEntry) GetDropTcpWinZeroDrop() bool {
	if m != nil {
		return m.DropTcpWinZeroDrop
	}
	return false
}

func (m *DropStatsEntry) GetDropTcpAckErr() bool {
	if m != nil {
		return m.DropTcpAckErr
	}
	return false
}

func (m *DropStatsEntry) GetDropTcpDataAfterFin() bool {
	if m != nil {
		return m.DropTcpDataAfterFin
	}
	return false
}

func (m *DropStatsEntry) GetDropTcpNonRstPktAfterRst() bool {
	if m != nil {
		return m.DropTcpNonRstPktAfterRst
	}
	return false
}

func (m *DropStatsEntry) GetDropTcpInvalidResponderFirstPkt() bool {
	if m != nil {
		return m.DropTcpInvalidResponderFirstPkt
	}
	return false
}

func (m *DropStatsEntry) GetDropTcpUnexpectedSyn() bool {
	if m != nil {
		return m.DropTcpUnexpectedSyn
	}
	return false
}

func (m *DropStatsEntry) GetDropCount() uint64 {
	if m != nil {
		return m.DropCount
	}
	return 0
}

func init() {
	proto.RegisterType((*SystemResponse)(nil), "sys.SystemResponse")
	proto.RegisterType((*Stats)(nil), "sys.Stats")
	proto.RegisterType((*DropStats)(nil), "sys.DropStats")
	proto.RegisterType((*DropStatsEntry)(nil), "sys.DropStatsEntry")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for System service

type SystemClient interface {
	// System related APIs
	SystemGet(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SystemResponse, error)
}

type systemClient struct {
	cc *grpc.ClientConn
}

func NewSystemClient(cc *grpc.ClientConn) SystemClient {
	return &systemClient{cc}
}

func (c *systemClient) SystemGet(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SystemResponse, error) {
	out := new(SystemResponse)
	err := grpc.Invoke(ctx, "/sys.System/SystemGet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for System service

type SystemServer interface {
	// System related APIs
	SystemGet(context.Context, *Empty) (*SystemResponse, error)
}

func RegisterSystemServer(s *grpc.Server, srv SystemServer) {
	s.RegisterService(&_System_serviceDesc, srv)
}

func _System_SystemGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemServer).SystemGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sys.System/SystemGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemServer).SystemGet(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _System_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sys.System",
	HandlerType: (*SystemServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SystemGet",
			Handler:    _System_SystemGet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nic/proto/hal/system.proto",
}

func init() { proto.RegisterFile("nic/proto/hal/system.proto", fileDescriptor18) }

var fileDescriptor18 = []byte{
	// 960 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x95, 0x5f, 0x53, 0x1b, 0x37,
	0x17, 0xc6, 0x5f, 0x5e, 0x02, 0xc5, 0x02, 0x1c, 0x22, 0x42, 0x50, 0x48, 0x93, 0x30, 0x9e, 0xcc,
	0x94, 0x99, 0xb6, 0x90, 0x71, 0x12, 0x3a, 0x69, 0x6f, 0x4a, 0x03, 0x34, 0x5c, 0x10, 0xe8, 0xda,
	0x9d, 0x74, 0x72, 0xa3, 0x51, 0xb5, 0xb2, 0xad, 0xb2, 0x2b, 0x09, 0x49, 0xc6, 0xd9, 0x7c, 0xe4,
	0x7e, 0x8a, 0x8e, 0x8e, 0xd6, 0xfb, 0xc7, 0xb9, 0x62, 0xd1, 0xf3, 0xfc, 0x74, 0x74, 0x8e, 0x8f,
	0x74, 0xd0, 0x9e, 0x92, 0xfc, 0xc8, 0x58, 0xed, 0xf5, 0xd1, 0x84, 0x65, 0x47, 0xae, 0x70, 0x5e,
	0xe4, 0x87, 0xb0, 0x80, 0x97, 0x5d, 0xe1, 0xf6, 0x76, 0x6a, 0x83, 0x2f, 0x8c, 0x70, 0x51, 0xeb,
	0x71, 0xd4, 0x1d, 0x80, 0x37, 0x11, 0xce, 0x68, 0xe5, 0x04, 0x3e, 0x42, 0x88, 0x19, 0x49, 0x9d,
	0x67, 0x7e, 0xea, 0xc8, 0xd2, 0xfe, 0xd2, 0x41, 0xb7, 0xbf, 0x75, 0x18, 0x99, 0x13, 0x23, 0x07,
	0xb0, 0x9e, 0x74, 0xd8, 0xfc, 0x13, 0xef, 0xa3, 0x95, 0x60, 0x76, 0xe4, 0xff, 0xfb, 0x4b, 0x07,
	0xeb, 0x7d, 0x74, 0xe8, 0x0a, 0x77, 0x18, 0x34, 0x97, 0x44, 0xa1, 0x77, 0x8c, 0x56, 0xe0, 0x7f,
	0xfc, 0x23, 0x42, 0xa9, 0xd5, 0x86, 0x46, 0xff, 0x12, 0xf8, 0xbb, 0xe0, 0x3f, 0xb5, 0xda, 0x44,
	0xa6, 0x93, 0xce, 0x3f, 0x7b, 0xef, 0x50, 0xa7, 0x5a, 0xc7, 0xc7, 0x68, 0x03, 0x58, 0xa1, 0xbc,
	0x95, 0x22, 0xd0, 0xcb, 0x07, 0xeb, 0xfd, 0xed, 0x36, 0x7d, 0xa6, 0xbc, 0x2d, 0x92, 0xf5, 0x60,
	0x3c, 0x8b, 0xbe, 0xde, 0xbf, 0x1b, 0xa8, 0xdb, 0xd6, 0xf1, 0x0f, 0x08, 0xc3, 0x56, 0x52, 0x99,
	0xa9, 0xa7, 0x39, 0x33, 0x46, 0xaa, 0x31, 0x1c, 0x67, 0x2d, 0xd9, 0x0a, 0xca, 0x45, 0x10, 0x2e,
	0xe3, 0x3a, 0x7e, 0x8b, 0x1e, 0x7f, 0xed, 0xa6, 0xa9, 0xf8, 0x87, 0xdd, 0x4d, 0x21, 0xe7, 0xb5,
	0xe4, 0xd1, 0x22, 0x74, 0x0a, 0x2a, 0xee, 0xa1, 0x4d, 0x40, 0x47, 0x99, 0x9e, 0xd1, 0x89, 0xf4,
	0x64, 0x19, 0xec, 0x70, 0xbe, 0xf3, 0x4c, 0xcf, 0xde, 0x4b, 0x8f, 0x5f, 0xa0, 0x6e, 0xed, 0xc9,
	0xa5, 0x73, 0xe4, 0x1e, 0x98, 0x36, 0xe6, 0xa6, 0x4b, 0xe9, 0x1c, 0x7e, 0x82, 0x3a, 0xf1, 0x10,
	0xc6, 0x8d, 0xc9, 0x0a, 0x18, 0xd6, 0x20, 0xa8, 0x71, 0x63, 0xfc, 0x12, 0x3d, 0x2c, 0x4f, 0x38,
	0xb6, 0xc2, 0x39, 0x6a, 0x74, 0x26, 0xb9, 0xb0, 0x64, 0x15, 0x7c, 0x38, 0x1e, 0x0e, 0xa4, 0xeb,
	0xa8, 0xe0, 0x43, 0xb4, 0x1d, 0x8b, 0xd9, 0x06, 0xbe, 0x01, 0xe0, 0x01, 0x94, 0xaf, 0xe5, 0x9f,
	0x87, 0x57, 0x8c, 0x67, 0x64, 0xad, 0x0e, 0xff, 0x81, 0xf1, 0xac, 0x2a, 0x67, 0xce, 0xb2, 0x91,
	0xb6, 0xb9, 0x48, 0xa9, 0xb9, 0xf1, 0xa4, 0x53, 0x97, 0xf3, 0x72, 0x2e, 0x5c, 0xdf, 0x78, 0xfc,
	0x7d, 0xe9, 0x86, 0x2a, 0xea, 0x11, 0x4d, 0x05, 0xf3, 0x13, 0x82, 0xc0, 0x7d, 0x3f, 0x28, 0xd7,
	0x52, 0x8d, 0xaf, 0x46, 0xa7, 0x61, 0x19, 0xbf, 0x41, 0xbb, 0xb1, 0x38, 0x96, 0x8d, 0x73, 0xa1,
	0x3c, 0xf5, 0x5a, 0x53, 0x97, 0xb3, 0x2c, 0x23, 0xeb, 0x40, 0x40, 0xe2, 0xe7, 0xa5, 0x3a, 0xd4,
	0x7a, 0x10, 0x34, 0xdc, 0x47, 0x3b, 0x65, 0xb5, 0xa8, 0xd2, 0x36, 0x67, 0x99, 0xfc, 0xc2, 0xbc,
	0xd4, 0x8a, 0x6c, 0x00, 0xb4, 0x1d, 0x2b, 0xf7, 0xa1, 0x29, 0xe1, 0xd7, 0x08, 0x7e, 0x45, 0xea,
	0xf9, 0x22, 0xb4, 0x59, 0x47, 0x1a, 0xf2, 0x05, 0xaa, 0xdf, 0xa0, 0x3e, 0xe7, 0xcc, 0x51, 0x6f,
	0x85, 0x80, 0xfc, 0xbb, 0x75, 0xf1, 0x87, 0xdc, 0xfc, 0x95, 0x33, 0x37, 0xb4, 0x42, 0x84, 0x0a,
	0xbc, 0x45, 0x7b, 0x8d, 0x48, 0x8a, 0xba, 0x42, 0xd1, 0x91, 0xb4, 0xce, 0x03, 0x77, 0x1f, 0xb8,
	0x9d, 0x2a, 0x9a, 0x1a, 0x14, 0xea, 0x3c, 0xa8, 0x01, 0x3d, 0x2e, 0xeb, 0x21, 0x79, 0xbe, 0x78,
	0xca, 0xad, 0x9a, 0xbb, 0xe0, 0xf9, 0xc2, 0x31, 0x8f, 0x11, 0xa9, 0x39, 0x67, 0x39, 0xbd, 0x9d,
	0x0a, 0xc5, 0x27, 0x34, 0x77, 0x63, 0xf2, 0xa0, 0x4e, 0x2f, 0x80, 0x03, 0xcb, 0xff, 0x00, 0xf1,
	0xd2, 0x8d, 0xf1, 0xab, 0x32, 0x3d, 0xe0, 0xac, 0x48, 0xa5, 0x15, 0xdc, 0x03, 0x85, 0x1b, 0x95,
	0xe4, 0xb9, 0x49, 0x4a, 0x2d, 0x40, 0xfd, 0x26, 0x24, 0xd5, 0x48, 0x53, 0x2b, 0x6e, 0x01, 0xda,
	0x6e, 0x34, 0x24, 0xcf, 0xcd, 0x85, 0x1a, 0xe9, 0x44, 0xdc, 0x7e, 0xc5, 0xb0, 0x34, 0xb5, 0x15,
	0xf3, 0xb0, 0xcd, 0x9c, 0xa4, 0xa9, 0x2d, 0x99, 0x9f, 0x9a, 0x49, 0x79, 0xcb, 0xb8, 0xb0, 0x7a,
	0xea, 0x05, 0x50, 0x3b, 0xed, 0x6a, 0x0c, 0x2b, 0x35, 0x80, 0xaf, 0x9b, 0x55, 0xb4, 0xee, 0x2e,
	0xa5, 0xe1, 0x79, 0x03, 0xee, 0xd1, 0x42, 0x5a, 0xee, 0x2e, 0x1d, 0x16, 0x06, 0xa8, 0x5f, 0xca,
	0x9f, 0x2d, 0xbe, 0x03, 0xc6, 0x6a, 0x23, 0xac, 0x97, 0xc2, 0xc5, 0x4b, 0xbb, 0x0b, 0xe0, 0x6e,
	0xf5, 0x10, 0x5c, 0x57, 0x3a, 0xdc, 0xdf, 0x66, 0x9f, 0xe8, 0xa9, 0x0f, 0x8d, 0x3f, 0x93, 0x2a,
	0xd5, 0x33, 0x42, 0x5a, 0x7d, 0x72, 0x35, 0xf5, 0x57, 0xa3, 0x8f, 0xa0, 0x54, 0xf9, 0x05, 0xc6,
	0x99, 0x4c, 0x7a, 0x3a, 0x61, 0x2a, 0x75, 0x13, 0x76, 0x23, 0xc8, 0xe3, 0x56, 0x97, 0x0c, 0x82,
	0xfa, 0x7e, 0x2e, 0xb6, 0x82, 0xcd, 0xa4, 0xa2, 0x5f, 0x84, 0xd5, 0x34, 0xac, 0x90, 0xbd, 0x56,
	0xb0, 0x8f, 0x52, 0x7d, 0x12, 0x56, 0x87, 0xd7, 0x11, 0x7f, 0x87, 0xb6, 0x2a, 0x86, 0xf1, 0x1b,
	0x2a, 0xac, 0x25, 0x4f, 0xc0, 0xbd, 0x59, 0xba, 0x4f, 0xf8, 0xcd, 0x99, 0xb5, 0x55, 0xf1, 0x82,
	0x31, 0x65, 0x9e, 0x51, 0x36, 0xf2, 0xc2, 0xd2, 0x91, 0x54, 0xe4, 0xdb, 0xba, 0x78, 0x43, 0x6e,
	0x4e, 0x99, 0x67, 0x27, 0x41, 0x3b, 0x97, 0x0a, 0xff, 0x8a, 0x9e, 0xb5, 0x7a, 0xbe, 0xec, 0xf6,
	0x12, 0xb6, 0xce, 0x93, 0xa7, 0x00, 0x93, 0xba, 0xef, 0x13, 0x68, 0x79, 0xd8, 0x21, 0x71, 0x1e,
	0x5f, 0xa2, 0x17, 0xd5, 0x0e, 0x52, 0xdd, 0xb1, 0x4c, 0xa6, 0xd4, 0xc2, 0xd0, 0x4a, 0x21, 0xfc,
	0xfc, 0xfe, 0x3c, 0x83, 0x7d, 0x9e, 0x97, 0xfb, 0x5c, 0x44, 0x67, 0x32, 0x37, 0x56, 0x37, 0xe9,
	0x4d, 0x23, 0x8d, 0xa9, 0x12, 0x9f, 0x8d, 0xe0, 0x5e, 0xa4, 0xe1, 0x2e, 0x92, 0xe7, 0xad, 0xfb,
	0xfe, 0x67, 0x25, 0x0e, 0x0a, 0x85, 0x9f, 0x96, 0x13, 0x8c, 0xeb, 0xa9, 0xf2, 0x64, 0x7f, 0x7f,
	0xe9, 0xe0, 0x5e, 0x9c, 0x58, 0xef, 0xc2, 0x42, 0xff, 0x67, 0xb4, 0x1a, 0xc7, 0x29, 0x7e, 0x89,
	0x3a, 0xf1, 0xeb, 0x77, 0xe1, 0xf1, 0x46, 0x39, 0x3f, 0xcf, 0x72, 0xe3, 0x8b, 0xbd, 0x38, 0xb3,
	0xda, 0x63, 0xb7, 0xf7, 0xbf, 0xdf, 0xd0, 0xa7, 0xb5, 0x09, 0xcb, 0x60, 0x2c, 0xff, 0xbd, 0x0a,
	0x7f, 0x5e, 0xfd, 0x17, 0x00, 0x00, 0xff, 0xff, 0x1d, 0xa8, 0x8f, 0xa4, 0xd7, 0x07, 0x00, 0x00,
}
