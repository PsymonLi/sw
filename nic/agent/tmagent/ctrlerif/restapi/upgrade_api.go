// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.
/*
 * Package restapi is a auto generated package.
 * Input file: github.com/pensando/sw/nic/upgrade_manager/upgrade/upgrade.proto
 */

package restapi

import (
	"fmt"
	"net/http"

	"github.com/gorilla/mux"

	"github.com/pensando/sw/nic/agent/httputils"
	upgrade "github.com/pensando/sw/nic/agent/tmagent/metrics/protos"
	delphi "github.com/pensando/sw/nic/delphi/proto/delphi"
	"github.com/pensando/sw/venice/utils/log"
)

func init() {
	name := "/telemetry/v1/metrics/upgrademetrics/"
	prefixRoutes[name] = addUpgradeMetricsAPIRoutes
}

// addUpgradeMetricsAPIRoutes adds routes for UpgradeMetrics
func addUpgradeMetricsAPIRoutes(r *mux.Router, srv *RestServer) {
	r.Methods("GET").Subrouter().HandleFunc("/{Meta.Tenant}/{Meta.Name}/", httputils.MakeHTTPHandler(srv.runUpgradeMetricsGetHandler))
	r.Methods("GET").Subrouter().HandleFunc("/", httputils.MakeHTTPHandler(srv.runUpgradeMetricsListHandler))
}

// runUpgradeMetricsListHandler is the List Handler for UpgradeMetrics
func (s *RestServer) runUpgradeMetricsListHandler(r *http.Request) (interface{}, error) {
	log.Infof("Got GET LIST request")
	res := fmt.Sprintf("Got GET LIST request")
	return res, nil
}

// runUpgradeMetricsGetHandler is the Get Handler for UpgradeMetrics
func (s *RestServer) runUpgradeMetricsGetHandler(r *http.Request) (interface{}, error) {
	o := upgrade.UpgradeMetrics{
		Meta: &delphi.ObjectMeta{
			Kind: "UpgradeMetrics",
			Key:  mux.Vars(r)["Meta.Name"],
		},
	}
	o.Meta = new(delphi.ObjectMeta)
	o.Meta.Kind = "UpgradeMetrics"
	o.Meta.Key = mux.Vars(r)["Meta.Name"]
	log.Infof("Got GET request %s/%s", o.Meta.Kind, o.Meta.Key)
	res := fmt.Sprintf("Got GET request %s/%s", o.Meta.Kind, o.Meta.Key)
	return res, nil
}
