// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.
 /*
 * Package restapi is a auto generated package.
 * Input file: {{.Name}}
 */
 {{$pkgName := .Package}}
package restapi
import (
	"github.com/gorilla/mux"
	{{$pkgName}} "github.com/pensando/sw/nic/agent/tmagent/metrics/protos"
)

 {{$msgs := .Messages}}
 {{range $msgs}}
    {{if (HasSuffix .GetName "Metrics")}}
	func init() {
		name := "/telemetry/v1/metrics/{{ToLower .GetName}}/"
		prefixRoutes[name] = add{{.GetName}}APIRoutes
	}

	// add{{.GetName}}APIRoutes adds routes for {{.GetName}}
	func add{{.GetName}}APIRoutes(r *mux.Router, srv *RestServer){
		r.Methods("GET").Subrouter().HandleFunc("/{Meta.Tenant}/{Meta.Name}/", httputils.MakeHTTPHandler(srv.run{{.GetName}}GetHandler))
		r.Methods("GET").Subrouter().HandleFunc("/", httputils.MakeHTTPHandler(srv.run{{.GetName}}ListHandler))
	}

	// run{{.GetName}}ListHandler is the List Handler for {{.GetName}}
	func (s *RestServer) run{{.GetName}}ListHandler(r *http.Request) (interface{}, error){
		log.Infof("Got GET LIST request")
		res := fmt.Sprintf("Got GET LIST request")
		return res, nil
	}

	// run{{.GetName}}GetHandler is the Get Handler for {{.GetName}}
	func (s *RestServer) run{{.GetName}}GetHandler(r *http.Request) (interface{}, error){
		o := {{$pkgName}}.{{.GetName}} {
			Meta: &delphi.ObjectMeta{
				Kind: "{{.GetName}}",
				Key: mux.Vars(r)["Meta.Name"],
			},
		}
		o.Meta.Kind = "{{.GetName}}"
		o.Meta.Key = mux.Vars(r)["Meta.Name"]
		log.Infof("Got GET request %s/%s", o.Meta.Kind, o.Meta.Key)
		res := fmt.Sprintf("Got GET request %s/%s", o.Meta.Kind, o.Meta.Key)
		return res, nil
	}
    {{end}}
{{end}}
