// Code generated by MockGen. DO NOT EDIT.
// Source: ../types.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	protos "github.com/pensando/sw/nic/agent/protos/tpmprotos"
)

// MockCtrlerIntf is a mock of CtrlerIntf interface
type MockCtrlerIntf struct {
	ctrl     *gomock.Controller
	recorder *MockCtrlerIntfMockRecorder
}

// MockCtrlerIntfMockRecorder is the mock recorder for MockCtrlerIntf
type MockCtrlerIntfMockRecorder struct {
	mock *MockCtrlerIntf
}

// NewMockCtrlerIntf creates a new mock instance
func NewMockCtrlerIntf(ctrl *gomock.Controller) *MockCtrlerIntf {
	mock := &MockCtrlerIntf{ctrl: ctrl}
	mock.recorder = &MockCtrlerIntfMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCtrlerIntf) EXPECT() *MockCtrlerIntfMockRecorder {
	return m.recorder
}

// CreateFlowExportPolicy mocks base method
func (m *MockCtrlerIntf) CreateFlowExportPolicy(ctx context.Context, p *protos.FlowExportPolicy) error {
	ret := m.ctrl.Call(m, "CreateFlowExportPolicy", ctx, p)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateFlowExportPolicy indicates an expected call of CreateFlowExportPolicy
func (mr *MockCtrlerIntfMockRecorder) CreateFlowExportPolicy(ctx, p interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFlowExportPolicy", reflect.TypeOf((*MockCtrlerIntf)(nil).CreateFlowExportPolicy), ctx, p)
}

// GetFlowExportPolicy mocks base method
func (m *MockCtrlerIntf) GetFlowExportPolicy(tx context.Context, p *protos.FlowExportPolicy) (*protos.FlowExportPolicy, error) {
	ret := m.ctrl.Call(m, "GetFlowExportPolicy", tx, p)
	ret0, _ := ret[0].(*protos.FlowExportPolicy)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFlowExportPolicy indicates an expected call of GetFlowExportPolicy
func (mr *MockCtrlerIntfMockRecorder) GetFlowExportPolicy(tx, p interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFlowExportPolicy", reflect.TypeOf((*MockCtrlerIntf)(nil).GetFlowExportPolicy), tx, p)
}

// ListFlowExportPolicy mocks base method
func (m *MockCtrlerIntf) ListFlowExportPolicy(tx context.Context) ([]*protos.FlowExportPolicy, error) {
	ret := m.ctrl.Call(m, "ListFlowExportPolicy", tx)
	ret0, _ := ret[0].([]*protos.FlowExportPolicy)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListFlowExportPolicy indicates an expected call of ListFlowExportPolicy
func (mr *MockCtrlerIntfMockRecorder) ListFlowExportPolicy(tx interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListFlowExportPolicy", reflect.TypeOf((*MockCtrlerIntf)(nil).ListFlowExportPolicy), tx)
}

// UpdateFlowExportPolicy mocks base method
func (m *MockCtrlerIntf) UpdateFlowExportPolicy(ctx context.Context, p *protos.FlowExportPolicy) error {
	ret := m.ctrl.Call(m, "UpdateFlowExportPolicy", ctx, p)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateFlowExportPolicy indicates an expected call of UpdateFlowExportPolicy
func (mr *MockCtrlerIntfMockRecorder) UpdateFlowExportPolicy(ctx, p interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateFlowExportPolicy", reflect.TypeOf((*MockCtrlerIntf)(nil).UpdateFlowExportPolicy), ctx, p)
}

// DeleteFlowExportPolicy mocks base method
func (m *MockCtrlerIntf) DeleteFlowExportPolicy(ctx context.Context, p *protos.FlowExportPolicy) error {
	ret := m.ctrl.Call(m, "DeleteFlowExportPolicy", ctx, p)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteFlowExportPolicy indicates an expected call of DeleteFlowExportPolicy
func (mr *MockCtrlerIntfMockRecorder) DeleteFlowExportPolicy(ctx, p interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFlowExportPolicy", reflect.TypeOf((*MockCtrlerIntf)(nil).DeleteFlowExportPolicy), ctx, p)
}

// CreateFwlogPolicy mocks base method
func (m *MockCtrlerIntf) CreateFwlogPolicy(ctx context.Context, p *protos.FwlogPolicy) error {
	ret := m.ctrl.Call(m, "CreateFwlogPolicy", ctx, p)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateFwlogPolicy indicates an expected call of CreateFwlogPolicy
func (mr *MockCtrlerIntfMockRecorder) CreateFwlogPolicy(ctx, p interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFwlogPolicy", reflect.TypeOf((*MockCtrlerIntf)(nil).CreateFwlogPolicy), ctx, p)
}

// GetFwlogPolicy mocks base method
func (m *MockCtrlerIntf) GetFwlogPolicy(tx context.Context, p *protos.FwlogPolicy) (*protos.FwlogPolicy, error) {
	ret := m.ctrl.Call(m, "GetFwlogPolicy", tx, p)
	ret0, _ := ret[0].(*protos.FwlogPolicy)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFwlogPolicy indicates an expected call of GetFwlogPolicy
func (mr *MockCtrlerIntfMockRecorder) GetFwlogPolicy(tx, p interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFwlogPolicy", reflect.TypeOf((*MockCtrlerIntf)(nil).GetFwlogPolicy), tx, p)
}

// ListFwlogPolicy mocks base method
func (m *MockCtrlerIntf) ListFwlogPolicy(tx context.Context) ([]*protos.FwlogPolicy, error) {
	ret := m.ctrl.Call(m, "ListFwlogPolicy", tx)
	ret0, _ := ret[0].([]*protos.FwlogPolicy)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListFwlogPolicy indicates an expected call of ListFwlogPolicy
func (mr *MockCtrlerIntfMockRecorder) ListFwlogPolicy(tx interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListFwlogPolicy", reflect.TypeOf((*MockCtrlerIntf)(nil).ListFwlogPolicy), tx)
}

// UpdateFwlogPolicy mocks base method
func (m *MockCtrlerIntf) UpdateFwlogPolicy(ctx context.Context, p *protos.FwlogPolicy) error {
	ret := m.ctrl.Call(m, "UpdateFwlogPolicy", ctx, p)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateFwlogPolicy indicates an expected call of UpdateFwlogPolicy
func (mr *MockCtrlerIntfMockRecorder) UpdateFwlogPolicy(ctx, p interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateFwlogPolicy", reflect.TypeOf((*MockCtrlerIntf)(nil).UpdateFwlogPolicy), ctx, p)
}

// DeleteFwlogPolicy mocks base method
func (m *MockCtrlerIntf) DeleteFwlogPolicy(ctx context.Context, p *protos.FwlogPolicy) error {
	ret := m.ctrl.Call(m, "DeleteFwlogPolicy", ctx, p)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteFwlogPolicy indicates an expected call of DeleteFwlogPolicy
func (mr *MockCtrlerIntfMockRecorder) DeleteFwlogPolicy(ctx, p interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFwlogPolicy", reflect.TypeOf((*MockCtrlerIntf)(nil).DeleteFwlogPolicy), ctx, p)
}

// Debug mocks base method
func (m *MockCtrlerIntf) Debug(r *http.Request) (interface{}, error) {
	ret := m.ctrl.Call(m, "Debug", r)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Debug indicates an expected call of Debug
func (mr *MockCtrlerIntfMockRecorder) Debug(r interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Debug", reflect.TypeOf((*MockCtrlerIntf)(nil).Debug), r)
}
