//------------------------------------------------------------------------------
// {C} Copyright 2019 Pensando Systems Inc. All rights reserved
//
// protobuf specification for private network object
//------------------------------------------------------------------------------

syntax = "proto3";
package tpc;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "api/meta.proto";
import "api/types.proto";

// PNet type
enum PNetType {
  PNET_TYPE_NONE      = 0;
  PNET_TYPE_TENANT    = 1;
  PNET_TYPE_SUBSTRATE = 2;
}

message PNetStatus {
  // Private Network ID allocated locally by agent
  uint64 PNetID = 1 [(gogoproto.jsontag) = "id,omitempty"]; // PNet identifier
}

// PNetSpec captures all the private network configuration
message PNetSpec {
  PNetType     Type   = 1;
  api.IPPrefix Prefix = 2;  // IP prefix of this private network
}

message PNet {
  api.TypeMeta   TypeMeta   = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = ",inline"];
  api.ObjectMeta ObjectMeta = 2 [(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = "meta,omitempty"];
  PNetSpec       Spec       = 3 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "spec,omitempty"];
  PNetStatus     Status     = 4 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "status,omitempty"];
}

message PNetList {
  repeated PNet    pnets = 1;
}

// PNet API
service PNetApi {
  // options for auto generating REST endpoints
  //option(venice.naplesRestService) = {
    //Object: "PNet",
    //Method: ["list", "post", "delete", "put"],
    //Pattern: "/{ObjectMeta.Name}",
    //Prefix:"api/pnets",
  //};

  rpc GetPNet (api.ObjectMeta) returns (PNet) {};
  rpc ListPNets (api.ObjectMeta) returns (PNetList) {};
}
