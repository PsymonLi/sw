// {C} Copyright 2019 Pensando Systems Inc. All rights reserved.

syntax = "proto3";
// Service name
package nmd;

import "google/api/annotations.proto";
import  public "github.com/pensando/sw/venice/utils/apigen/annotations/includes.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

message ImageInfo {
    string BuildDate = 1[(gogoproto.jsontag) = "build_date,omitempty"];
    string BuildUser = 2[(gogoproto.jsontag) = "build_user,omitempty"];
    string BaseVersion = 3[(gogoproto.jsontag) = "base_version,omitempty"];
    string SoftwareVersion = 4[(gogoproto.jsontag) = "software_version,omitempty"];
    string NicmgrCompatVersion = 5[(gogoproto.jsontag) = "nicmgr_compat_version,omitempty"];
    string KernelCompatVersion = 6[(gogoproto.jsontag) = "kernel_compat_version,omitempty"];
    string PcieCompatVersion = 7[(gogoproto.jsontag) = "pcie_compat_version,omitempty"];
    string DevConfCompatVersion = 8[(gogoproto.jsontag) = "dev_conf_compat_version,omitempty"];
    // Field needed for Boot0 added in release A
    int32 ImageVersion = 9[(gogoproto.jsontag) = "image_version,omitempty"];
}

message UbootFw {
   ImageInfo Image = 1[(gogoproto.jsontag) = "image,omitempty"];
}

message GoldFw {
   ImageInfo Image = 1[(gogoproto.jsontag) = "kernel_fit,omitempty"];
   ImageInfo Uboot = 2[(gogoproto.jsontag) = "uboot,omitempty"];
}

message FwVersion {
    ImageInfo SystemImage = 1[(gogoproto.jsontag) = "system_image,omitempty"];
    ImageInfo KernelFit = 2[(gogoproto.jsontag) = "kernel_fit,omitempty"];
    ImageInfo Uboot = 3[(gogoproto.jsontag) = "uboot,omitempty"];
}

// DSC Software object
message DSCInstalledSoftware {
    UbootFw Uboot = 1 [(gogoproto.jsontag) = "uboot,omitempty"];
    FwVersion MainFwA = 2 [(gogoproto.jsontag) = "mainfwa,omitempty"];
    FwVersion MainFwB = 3 [(gogoproto.jsontag) = "mainfwb,omitempty"];
    GoldFw GoldFw = 4 [(gogoproto.jsontag) = "goldfw,omitempty"];
    FwVersion DiagFw = 5 [(gogoproto.jsontag) = "diagfw,omitempty"];
    // Needed for release A
    UbootFw Boot0 = 6 [(gogoproto.jsontag) = "boot0,omitempty"];
}

message DSCRunningSoftware {
    UbootFw Uboot = 1 [(gogoproto.jsontag) = "uboot,omitempty"];
    FwVersion MainFwA = 2 [(gogoproto.jsontag) = "mainfwa,omitempty"];
    FwVersion MainFwB = 3 [(gogoproto.jsontag) = "mainfwb,omitempty"];
    UbootFw Boot0 = 4 [(gogoproto.jsontag) = "boot0,omitempty"];
}

message DSCSoftwareVersionInfo {
    string RunningFw            = 1 [(gogoproto.jsontag) = "running-fw,omitempty"];
    string RunningFwVersion     = 2 [(gogoproto.jsontag) = "running-fw-version,omitempty"];
    string StartupFw            = 3 [(gogoproto.jsontag) = "startup-fw,omitempty"];
    string StartupFwVersion     = 4 [(gogoproto.jsontag) = "startup-fw-version,omitempty"];
    string RunningUbootVersion  = 6 [(gogoproto.jsontag) = "running-uboot,omitempty"];
    string StartupUbootVersion  = 7 [(gogoproto.jsontag) = "startup-uboot,omitempty"];

    DSCInstalledSoftware InstalledImages = 8 [(gogoproto.jsontag) = "all-installed-fw,omitempty"];
}
