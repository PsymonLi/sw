// {C} Copyright 2017 Pensando Systems Inc. All rights reserved.

syntax = "proto3";
// Service name
package nmd;

import "google/api/annotations.proto";
import  public "github.com/pensando/sw/venice/utils/apigen/annotations/includes.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/pensando/sw/api/meta.proto";

enum PortAdminState {
  PORT_ADMIN_STATE_ENABLE   = 0;
  PORT_ADMIN_STATE_DISABLE  = 1;
}

enum SupportedProfiles {
  // Only following are supported after v2
  FEATURE_PROFILE_BASE = 0;
  FEATURE_PROFILE_STORAGE = 1;
  FEATURE_PROFILE_SRIOV = 2;
  FEATURE_PROFILE_VIRTUALIZED = 3;
  FEATURE_PROFILE_PROXY = 4;
  FEATURE_PROFILE_DEVELOPER = 5;
}

// DSC config object
message DSCProfile {

    option (venice.objectPrefix) = {Collection: "config"};

    api.TypeMeta T               = 1 [(gogoproto.embed) = true,
                                      (gogoproto.nullable) = false,
                                      (gogoproto.jsontag) = ",inline"];

    api.ObjectMeta O             = 2 [(gogoproto.embed) = true,
                                      (gogoproto.nullable) = false,
                                      (gogoproto.jsontag) = "meta,omitempty"];

    // Spec contains the configuration of the NIC.
    DSCProfileSpec Spec           = 3 [(gogoproto.nullable) = false,
                                      (gogoproto.jsontag) = "spec,omitempty"];

    // Status contains the current state of the NIC.
    DSCProfileStatus Status   = 4 [(gogoproto.nullable) = false,
                                      (gogoproto.jsontag) = "status,omitempty"];
}


// DSCSpec contains initial bootstrap configuration of the DSC I/O subsystem
message DSCProfileSpec {
    // Num Lifs contains the number of LIFs on the ETH Device. Supports either 1 or 16
    int32 NumLifs = 1 [(gogoproto.jsontag) = "num-lifs,omitempty"];

    string DefaultPortAdmin = 4 [(gogoproto.jsontag) = "default-port-admin"];
}

// DSCStatus contains current status of a DSC I/O subsystem
message DSCProfileStatus {
}
