// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package {{.GoPkg.Name}} is a auto generated package.
Input file: {{.Name}}
*/
package restapi


import (
	"expvar"
	"net"
	"net/http"
	"net/http/pprof"

	"github.com/gorilla/mux"

	"github.com/pensando/sw/nic/agent/netagent/state/types"
	tpa "github.com/pensando/sw/nic/agent/tpa/state/types"
	"github.com/pensando/sw/api"
	troubleshooting "github.com/pensando/sw/nic/agent/troubleshooting/state/types"
	debugStats "github.com/pensando/sw/venice/utils/debug/stats"
	"github.com/pensando/sw/venice/utils/log"
)

// this package contains the REST API provided by the agent

// RestServer is the REST api server
type RestServer struct {
	listenURL  string                     // URL where http server is listening
	agent      types.CtrlerIntf           // net Agent API
}

// Response captures the HTTP Response sent by Agent REST Server
type Response struct {
	StatusCode int      `json:"status-code,omitempty"`
	Error      string   `json:"error,omitempty"`
	References []string `json:"references,omitempty"`
}

// MakeErrorResponse generates error response for MakeHTTPHandler() API
func MakeErrorResponse(code int, err error) (*Response, error) {
	res := &Response{
		StatusCode: code,
	}

	if err != nil {
		res.Error = err.Error()
	}

	return res, err
}

// NewRestServer creates a new HTTP server servicg REST api
func NewRestServer(agent types.CtrlerIntf, listenURL string) (*RestServer, error) {
	// create server instance
	srv := RestServer{
		listenURL: listenURL,
		agent:     agent,
	}

	return &srv, nil
}

