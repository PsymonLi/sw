// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package netprotoApiServer is a auto generated package.
Input file: secprofile.proto
*/
package netproto

import (
	"reflect"

	"github.com/pensando/sw/api"
	"github.com/pensando/sw/venice/utils/runtime"
)

var typesMapSecprofile = map[string]*api.Struct{

	"netproto.RateLimits": &api.Struct{
		Kind: "", APIGroup: "", Scopes: []string{}, GetTypeFn: func() reflect.Type { return reflect.TypeOf(RateLimits{}) },
		Fields: map[string]api.Field{
			"TcpHalfOpenSessionLimit": api.Field{Name: "TcpHalfOpenSessionLimit", CLITag: api.CLIInfo{ID: "tcp-half-open-session-limit", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "tcp-half-open-session-limit", Pointer: true, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_UINT32"},

			"UdpActiveSessionLimit": api.Field{Name: "UdpActiveSessionLimit", CLITag: api.CLIInfo{ID: "udp-active-session-limit", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "udp-active-session-limit", Pointer: true, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_UINT32"},

			"IcmpActiveSessionLimit": api.Field{Name: "IcmpActiveSessionLimit", CLITag: api.CLIInfo{ID: "icmp-active-session-limit", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "icmp-active-session-limit", Pointer: true, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_UINT32"},

			"OtherActiveSessionLimit": api.Field{Name: "OtherActiveSessionLimit", CLITag: api.CLIInfo{ID: "other-active-session-limit", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "other-active-session-limit", Pointer: true, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_UINT32"},
		},
	},
	"netproto.SecurityProfile": &api.Struct{
		Kind: "", APIGroup: "", Scopes: []string{}, GetTypeFn: func() reflect.Type { return reflect.TypeOf(SecurityProfile{}) },
		Fields: map[string]api.Field{
			"TypeMeta": api.Field{Name: "TypeMeta", CLITag: api.CLIInfo{ID: "TypeMeta", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: false, Slice: false, Mutable: true, Map: false, Inline: true, FromInline: false, KeyType: "", Type: "api.TypeMeta"},

			"ObjectMeta": api.Field{Name: "ObjectMeta", CLITag: api.CLIInfo{ID: "meta", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "meta", Pointer: false, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "api.ObjectMeta"},

			"Spec": api.Field{Name: "Spec", CLITag: api.CLIInfo{ID: "spec", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "spec", Pointer: false, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "netproto.SecurityProfileSpec"},

			"Status": api.Field{Name: "Status", CLITag: api.CLIInfo{ID: "status", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "status", Pointer: false, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "netproto.SecurityProfileStatus"},

			"Kind": api.Field{Name: "Kind", CLITag: api.CLIInfo{ID: "kind", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "kind", Pointer: false, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: true, KeyType: "", Type: "TYPE_STRING"},

			"APIVersion": api.Field{Name: "APIVersion", CLITag: api.CLIInfo{ID: "api-version", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "api-version", Pointer: false, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: true, KeyType: "", Type: "TYPE_STRING"},

			"Name": api.Field{Name: "Name", CLITag: api.CLIInfo{ID: "name", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "name", Pointer: false, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: true, KeyType: "", Type: "TYPE_STRING"},

			"Tenant": api.Field{Name: "Tenant", CLITag: api.CLIInfo{ID: "tenant", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "tenant", Pointer: false, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: true, KeyType: "", Type: "TYPE_STRING"},

			"Namespace": api.Field{Name: "Namespace", CLITag: api.CLIInfo{ID: "namespace", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "namespace", Pointer: false, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: true, KeyType: "", Type: "TYPE_STRING"},

			"GenerationID": api.Field{Name: "GenerationID", CLITag: api.CLIInfo{ID: "generation-id", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "generation-id", Pointer: false, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: true, KeyType: "", Type: "TYPE_STRING"},

			"ResourceVersion": api.Field{Name: "ResourceVersion", CLITag: api.CLIInfo{ID: "resource-version", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "resource-version", Pointer: false, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: true, KeyType: "", Type: "TYPE_STRING"},

			"UUID": api.Field{Name: "UUID", CLITag: api.CLIInfo{ID: "uuid", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "uuid", Pointer: false, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: true, KeyType: "", Type: "TYPE_STRING"},

			"Labels": api.Field{Name: "Labels", CLITag: api.CLIInfo{ID: "labels", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "labels", Pointer: true, Slice: false, Mutable: true, Map: true, Inline: false, FromInline: true, KeyType: "TYPE_STRING", Type: "TYPE_STRING"},

			"CreationTime": api.Field{Name: "CreationTime", CLITag: api.CLIInfo{ID: "creation-time", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "creation-time", Pointer: false, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: true, KeyType: "", Type: "api.Timestamp"},

			"ModTime": api.Field{Name: "ModTime", CLITag: api.CLIInfo{ID: "mod-time", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "mod-time", Pointer: false, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: true, KeyType: "", Type: "api.Timestamp"},

			"SelfLink": api.Field{Name: "SelfLink", CLITag: api.CLIInfo{ID: "self-link", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "self-link", Pointer: false, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: true, KeyType: "", Type: "TYPE_STRING"},
		},

		CLITags: map[string]api.CLIInfo{
			"api-version":                 api.CLIInfo{Path: "APIVersion", Skip: false, Insert: "", Help: ""},
			"attach-vrfs":                 api.CLIInfo{Path: "Spec.AttachVrfs", Skip: false, Insert: "", Help: ""},
			"drop":                        api.CLIInfo{Path: "Spec.Timeouts.Drop", Skip: false, Insert: "", Help: ""},
			"generation-id":               api.CLIInfo{Path: "GenerationID", Skip: false, Insert: "", Help: ""},
			"icmp":                        api.CLIInfo{Path: "Spec.Timeouts.ICMP", Skip: false, Insert: "", Help: ""},
			"icmp-active-session-limit":   api.CLIInfo{Path: "Spec.RateLimits.IcmpActiveSessionLimit", Skip: false, Insert: "", Help: ""},
			"icmp-drop":                   api.CLIInfo{Path: "Spec.Timeouts.ICMPDrop", Skip: false, Insert: "", Help: ""},
			"id":                          api.CLIInfo{Path: "Status.SecurityProfileID", Skip: false, Insert: "", Help: ""},
			"kind":                        api.CLIInfo{Path: "Kind", Skip: false, Insert: "", Help: ""},
			"labels":                      api.CLIInfo{Path: "Labels", Skip: false, Insert: "", Help: ""},
			"name":                        api.CLIInfo{Path: "Name", Skip: false, Insert: "", Help: ""},
			"namespace":                   api.CLIInfo{Path: "Namespace", Skip: false, Insert: "", Help: ""},
			"other-active-session-limit":  api.CLIInfo{Path: "Spec.RateLimits.OtherActiveSessionLimit", Skip: false, Insert: "", Help: ""},
			"resource-version":            api.CLIInfo{Path: "ResourceVersion", Skip: false, Insert: "", Help: ""},
			"self-link":                   api.CLIInfo{Path: "SelfLink", Skip: false, Insert: "", Help: ""},
			"session-idle":                api.CLIInfo{Path: "Spec.Timeouts.SessionIdle", Skip: false, Insert: "", Help: ""},
			"tcp":                         api.CLIInfo{Path: "Spec.Timeouts.TCP", Skip: false, Insert: "", Help: ""},
			"tcp-close":                   api.CLIInfo{Path: "Spec.Timeouts.TCPClose", Skip: false, Insert: "", Help: ""},
			"tcp-connection-setup":        api.CLIInfo{Path: "Spec.Timeouts.TCPConnectionSetup", Skip: false, Insert: "", Help: ""},
			"tcp-drop":                    api.CLIInfo{Path: "Spec.Timeouts.TCPDrop", Skip: false, Insert: "", Help: ""},
			"tcp-half-close":              api.CLIInfo{Path: "Spec.Timeouts.TCPHalfClose", Skip: false, Insert: "", Help: ""},
			"tcp-half-open-session-limit": api.CLIInfo{Path: "Spec.RateLimits.TcpHalfOpenSessionLimit", Skip: false, Insert: "", Help: ""},
			"tenant":                      api.CLIInfo{Path: "Tenant", Skip: false, Insert: "", Help: ""},
			"udp":                         api.CLIInfo{Path: "Spec.Timeouts.UDP", Skip: false, Insert: "", Help: ""},
			"udp-active-session-limit":    api.CLIInfo{Path: "Spec.RateLimits.UdpActiveSessionLimit", Skip: false, Insert: "", Help: ""},
			"udp-drop":                    api.CLIInfo{Path: "Spec.Timeouts.UDPDrop", Skip: false, Insert: "", Help: ""},
			"uuid":                        api.CLIInfo{Path: "UUID", Skip: false, Insert: "", Help: ""},
		},
	},
	"netproto.SecurityProfileEvent": &api.Struct{
		Kind: "", APIGroup: "", Scopes: []string{}, GetTypeFn: func() reflect.Type { return reflect.TypeOf(SecurityProfileEvent{}) },
		Fields: map[string]api.Field{
			"EventType": api.Field{Name: "EventType", CLITag: api.CLIInfo{ID: "event-type", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "event-type", Pointer: false, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_ENUM"},

			"SecurityProfile": api.Field{Name: "SecurityProfile", CLITag: api.CLIInfo{ID: "sg-profile", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "sg-profile", Pointer: false, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "netproto.SecurityProfile"},
		},
	},
	"netproto.SecurityProfileEventList": &api.Struct{
		Kind: "", APIGroup: "", Scopes: []string{}, GetTypeFn: func() reflect.Type { return reflect.TypeOf(SecurityProfileEventList{}) },
		Fields: map[string]api.Field{
			"SecurityProfileEvents": api.Field{Name: "SecurityProfileEvents", CLITag: api.CLIInfo{ID: "SecurityProfileEvents", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: true, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "netproto.SecurityProfileEvent"},
		},
	},
	"netproto.SecurityProfileList": &api.Struct{
		Kind: "", APIGroup: "", Scopes: []string{}, GetTypeFn: func() reflect.Type { return reflect.TypeOf(SecurityProfileList{}) },
		Fields: map[string]api.Field{
			"SecurityProfiles": api.Field{Name: "SecurityProfiles", CLITag: api.CLIInfo{ID: "SecurityProfiles", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: true, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "netproto.SecurityProfile"},
		},
	},
	"netproto.SecurityProfileSpec": &api.Struct{
		Kind: "", APIGroup: "", Scopes: []string{}, GetTypeFn: func() reflect.Type { return reflect.TypeOf(SecurityProfileSpec{}) },
		Fields: map[string]api.Field{
			"AttachVrfs": api.Field{Name: "AttachVrfs", CLITag: api.CLIInfo{ID: "attach-vrfs", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "attach-vrfs", Pointer: true, Slice: true, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_STRING"},

			"Timeouts": api.Field{Name: "Timeouts", CLITag: api.CLIInfo{ID: "timeouts", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "timeouts", Pointer: true, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "netproto.Timeouts"},

			"RateLimits": api.Field{Name: "RateLimits", CLITag: api.CLIInfo{ID: "rate-limits", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "rate-limits", Pointer: true, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "netproto.RateLimits"},
		},
	},
	"netproto.SecurityProfileStatus": &api.Struct{
		Kind: "", APIGroup: "", Scopes: []string{}, GetTypeFn: func() reflect.Type { return reflect.TypeOf(SecurityProfileStatus{}) },
		Fields: map[string]api.Field{
			"SecurityProfileID": api.Field{Name: "SecurityProfileID", CLITag: api.CLIInfo{ID: "id", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "id", Pointer: false, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_UINT64"},
		},
	},
	"netproto.Timeouts": &api.Struct{
		Kind: "", APIGroup: "", Scopes: []string{}, GetTypeFn: func() reflect.Type { return reflect.TypeOf(Timeouts{}) },
		Fields: map[string]api.Field{
			"SessionIdle": api.Field{Name: "SessionIdle", CLITag: api.CLIInfo{ID: "session-idle", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "session-idle", Pointer: true, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_STRING"},

			"TCP": api.Field{Name: "TCP", CLITag: api.CLIInfo{ID: "tcp", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "tcp", Pointer: true, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_STRING"},

			"TCPDrop": api.Field{Name: "TCPDrop", CLITag: api.CLIInfo{ID: "tcp-drop", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "tcp-drop", Pointer: true, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_STRING"},

			"TCPConnectionSetup": api.Field{Name: "TCPConnectionSetup", CLITag: api.CLIInfo{ID: "tcp-connection-setup", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "tcp-connection-setup", Pointer: true, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_STRING"},

			"TCPClose": api.Field{Name: "TCPClose", CLITag: api.CLIInfo{ID: "tcp-close", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "tcp-close", Pointer: true, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_STRING"},

			"TCPHalfClose": api.Field{Name: "TCPHalfClose", CLITag: api.CLIInfo{ID: "tcp-half-close", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "tcp-half-close", Pointer: true, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_STRING"},

			"Drop": api.Field{Name: "Drop", CLITag: api.CLIInfo{ID: "drop", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "drop", Pointer: true, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_STRING"},

			"UDP": api.Field{Name: "UDP", CLITag: api.CLIInfo{ID: "udp", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "udp", Pointer: true, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_STRING"},

			"UDPDrop": api.Field{Name: "UDPDrop", CLITag: api.CLIInfo{ID: "udp-drop", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "udp-drop", Pointer: true, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_STRING"},

			"ICMP": api.Field{Name: "ICMP", CLITag: api.CLIInfo{ID: "icmp", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "icmp", Pointer: true, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_STRING"},

			"ICMPDrop": api.Field{Name: "ICMPDrop", CLITag: api.CLIInfo{ID: "icmp-drop", Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "icmp-drop", Pointer: true, Slice: false, Mutable: true, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_STRING"},
		},
	},
}

var keyMapSecprofile = map[string][]api.PathsMap{}

func init() {
	schema := runtime.GetDefaultScheme()
	schema.AddSchema(typesMapSecprofile)
	schema.AddPaths(keyMapSecprofile)
}
