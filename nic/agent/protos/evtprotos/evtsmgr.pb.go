// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: evtsmgr.proto

/*
	Package evtsmgrprotos is a generated protocol buffer package.

	It is generated from these files:
		evtsmgr.proto

	It has these top-level messages:
*/
package evtsmgrprotos

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import api "github.com/pensando/sw/api"
import _ "github.com/pensando/sw/venice/utils/apigen/annotations"
import _ "github.com/gogo/protobuf/gogoproto"
import events "github.com/pensando/sw/api/generated/events"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for EvtsMgrAPI service

type EvtsMgrAPIClient interface {
	// any component can use this method to generate an event
	SendEvents(ctx context.Context, in *events.EventList, opts ...grpc.CallOption) (*api.Empty, error)
}

type evtsMgrAPIClient struct {
	cc *grpc.ClientConn
}

func NewEvtsMgrAPIClient(cc *grpc.ClientConn) EvtsMgrAPIClient {
	return &evtsMgrAPIClient{cc}
}

func (c *evtsMgrAPIClient) SendEvents(ctx context.Context, in *events.EventList, opts ...grpc.CallOption) (*api.Empty, error) {
	out := new(api.Empty)
	err := grpc.Invoke(ctx, "/evtsmgrprotos.EvtsMgrAPI/SendEvents", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for EvtsMgrAPI service

type EvtsMgrAPIServer interface {
	// any component can use this method to generate an event
	SendEvents(context.Context, *events.EventList) (*api.Empty, error)
}

func RegisterEvtsMgrAPIServer(s *grpc.Server, srv EvtsMgrAPIServer) {
	s.RegisterService(&_EvtsMgrAPI_serviceDesc, srv)
}

func _EvtsMgrAPI_SendEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(events.EventList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EvtsMgrAPIServer).SendEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/evtsmgrprotos.EvtsMgrAPI/SendEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EvtsMgrAPIServer).SendEvents(ctx, req.(*events.EventList))
	}
	return interceptor(ctx, in, info, handler)
}

var _EvtsMgrAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "evtsmgrprotos.EvtsMgrAPI",
	HandlerType: (*EvtsMgrAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendEvents",
			Handler:    _EvtsMgrAPI_SendEvents_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "evtsmgr.proto",
}

func init() { proto.RegisterFile("evtsmgr.proto", fileDescriptorEvtsmgr) }

var fileDescriptorEvtsmgr = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x8f, 0xb1, 0x4a, 0xc4, 0x40,
	0x10, 0x86, 0x8d, 0x85, 0xc5, 0xa2, 0x85, 0x29, 0x83, 0xa4, 0xb0, 0xb1, 0xba, 0x5d, 0xd0, 0xd2,
	0x4a, 0x21, 0x85, 0xa0, 0x70, 0xe0, 0x13, 0x6c, 0x92, 0x71, 0x5d, 0xc8, 0xce, 0x2c, 0x99, 0x49,
	0xc4, 0x37, 0xb4, 0xf4, 0x11, 0x24, 0x4f, 0x22, 0xce, 0xe5, 0xe0, 0x1a, 0xaf, 0xdb, 0x6f, 0xf9,
	0xe6, 0xff, 0x67, 0xcc, 0x05, 0xcc, 0xc2, 0x29, 0x8c, 0x36, 0x8f, 0x24, 0x54, 0xee, 0x51, 0x89,
	0xab, 0xab, 0x40, 0x14, 0x06, 0x70, 0x3e, 0x47, 0xe7, 0x11, 0x49, 0xbc, 0x44, 0x42, 0xde, 0xc9,
	0xd5, 0x4d, 0x88, 0xf2, 0x3e, 0xb5, 0xb6, 0xa3, 0xe4, 0x32, 0x20, 0x7b, 0xec, 0xc9, 0xf1, 0x87,
	0xda, 0x1d, 0xa5, 0x44, 0xb8, 0x8a, 0xcd, 0x3f, 0xe2, 0x0c, 0x18, 0x3b, 0x70, 0x93, 0xc4, 0x81,
	0xff, 0xa6, 0x02, 0xe0, 0x61, 0x8d, 0x8b, 0xd8, 0x0d, 0x53, 0x0f, 0xfb, 0xbe, 0xcd, 0x41, 0x4c,
	0xa0, 0x40, 0x4e, 0xbf, 0xdb, 0xe9, 0x4d, 0x49, 0x41, 0x5f, 0xab, 0x6e, 0x8f, 0xac, 0xb7, 0xbb,
	0xcf, 0xc1, 0x0c, 0x28, 0x6b, 0xfc, 0xed, 0xbd, 0x31, 0xcd, 0x2c, 0xfc, 0x12, 0xc6, 0x87, 0xed,
	0x53, 0xb9, 0x31, 0xe6, 0x15, 0xb0, 0x6f, 0xd4, 0x28, 0x2f, 0xed, 0xaa, 0x2a, 0x3f, 0x47, 0x96,
	0xca, 0x58, 0x9f, 0xa3, 0x6d, 0x52, 0x96, 0xcf, 0xeb, 0x93, 0xc7, 0xf3, 0xaf, 0xa5, 0x2e, 0xbe,
	0x97, 0xba, 0xf8, 0x59, 0xea, 0x62, 0x7b, 0xda, 0x9e, 0x69, 0xe6, 0xdd, 0x6f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x0a, 0x33, 0xee, 0x12, 0x60, 0x01, 0x00, 0x00,
}
