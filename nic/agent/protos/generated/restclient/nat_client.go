// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package netproto is a auto generated package.
Input file: nat.proto
*/
package restclient

import (
	"github.com/pensando/sw/nic/agent/protos/netproto"
	"github.com/pensando/sw/venice/utils/netutils"
)

// NatBindingList lists all NatBinding objects
func (cl *AgentClient) NatBindingList() ([]netproto.NatBinding, error) {
	var natbindingList []netproto.NatBinding

	err := netutils.HTTPGet("http://"+cl.agentURL+"/api/nat/bindings/", &natbindingList)

	return natbindingList, err
}

// NatBindingPost creates NatBinding object
func (cl *AgentClient) NatBindingCreate(postData netproto.NatBinding) error {
	var resp Response

	err := netutils.HTTPPost("http://"+cl.agentURL+"/api/nat/bindings/", &postData, &resp)

	return err

}

// NatBindingPut updates NatBinding object
func (cl *AgentClient) NatBindingUpdate(putData netproto.NatBinding) error {
	var resp Response

	err := netutils.HTTPPut("http://"+cl.agentURL+"/api/nat/bindings/default/default/preCreatedNatBinding", &putData, &resp)

	return err
}

// NatBindingDelete deletes NatBinding object
func (cl *AgentClient) NatBindingDelete(deleteData netproto.NatBinding) error {
	var resp Response

	err := netutils.HTTPDelete("http://"+cl.agentURL+"/api/nat/bindings/default/default/testDeleteNatBinding", &deleteData, &resp)

	return err
}

// NatPolicyList lists all NatPolicy objects
func (cl *AgentClient) NatPolicyList() ([]netproto.NatPolicy, error) {
	var natpolicyList []netproto.NatPolicy

	err := netutils.HTTPGet("http://"+cl.agentURL+"/api/nat/policies/", &natpolicyList)

	return natpolicyList, err
}

// NatPolicyPost creates NatPolicy object
func (cl *AgentClient) NatPolicyCreate(postData netproto.NatPolicy) error {
	var resp Response

	err := netutils.HTTPPost("http://"+cl.agentURL+"/api/nat/policies/", &postData, &resp)

	return err

}

// NatPolicyPut updates NatPolicy object
func (cl *AgentClient) NatPolicyUpdate(putData netproto.NatPolicy) error {
	var resp Response

	err := netutils.HTTPPut("http://"+cl.agentURL+"/api/nat/policies/default/default/preCreatedNatPolicy", &putData, &resp)

	return err
}

// NatPolicyDelete deletes NatPolicy object
func (cl *AgentClient) NatPolicyDelete(deleteData netproto.NatPolicy) error {
	var resp Response

	err := netutils.HTTPDelete("http://"+cl.agentURL+"/api/nat/policies/default/default/testDeleteNatPolicy", &deleteData, &resp)

	return err
}

// NatPoolList lists all NatPool objects
func (cl *AgentClient) NatPoolList() ([]netproto.NatPool, error) {
	var natpoolList []netproto.NatPool

	err := netutils.HTTPGet("http://"+cl.agentURL+"/api/nat/pools/", &natpoolList)

	return natpoolList, err
}

// NatPoolPost creates NatPool object
func (cl *AgentClient) NatPoolCreate(postData netproto.NatPool) error {
	var resp Response

	err := netutils.HTTPPost("http://"+cl.agentURL+"/api/nat/pools/", &postData, &resp)

	return err

}

// NatPoolPut updates NatPool object
func (cl *AgentClient) NatPoolUpdate(putData netproto.NatPool) error {
	var resp Response

	err := netutils.HTTPPut("http://"+cl.agentURL+"/api/nat/pools/default/default/preCreatedNatPool", &putData, &resp)

	return err
}

// NatPoolDelete deletes NatPool object
func (cl *AgentClient) NatPoolDelete(deleteData netproto.NatPool) error {
	var resp Response

	err := netutils.HTTPDelete("http://"+cl.agentURL+"/api/nat/pools/default/default/testDeleteNatPool", &deleteData, &resp)

	return err
}
