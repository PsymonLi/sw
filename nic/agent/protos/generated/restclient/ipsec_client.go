// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package netproto is a auto generated package.
Input file: ipsec.proto
*/
package restclient

import (
	"github.com/pensando/sw/nic/agent/protos/netproto"
	"github.com/pensando/sw/venice/utils/netutils"
)

// IPSecPolicyList lists all IPSecPolicy objects
func (cl *AgentClient) IPSecPolicyList() ([]netproto.IPSecPolicy, error) {
	var ipsecpolicyList []netproto.IPSecPolicy

	err := netutils.HTTPGet("http://"+cl.agentURL+"/api/ipsec/policies/", &ipsecpolicyList)

	return ipsecpolicyList, err
}

// IPSecPolicyPost creates IPSecPolicy object
func (cl *AgentClient) IPSecPolicyCreate(postData netproto.IPSecPolicy) error {
	var resp Response

	err := netutils.HTTPPost("http://"+cl.agentURL+"/api/ipsec/policies/", &postData, &resp)

	return err

}

// IPSecPolicyPut updates IPSecPolicy object
func (cl *AgentClient) IPSecPolicyUpdate(putData netproto.IPSecPolicy) error {
	var resp Response

	err := netutils.HTTPPut("http://"+cl.agentURL+"/api/ipsec/policies/default/default/preCreatedIPSecPolicy", &putData, &resp)

	return err
}

// IPSecPolicyDelete deletes IPSecPolicy object
func (cl *AgentClient) IPSecPolicyDelete(deleteData netproto.IPSecPolicy) error {
	var resp Response

	err := netutils.HTTPDelete("http://"+cl.agentURL+"/api/ipsec/policies/default/default/testDeleteIPSecPolicy", &deleteData, &resp)

	return err
}

// IPSecSADecryptList lists all IPSecSADecrypt objects
func (cl *AgentClient) IPSecSADecryptList() ([]netproto.IPSecSADecrypt, error) {
	var ipsecsadecryptList []netproto.IPSecSADecrypt

	err := netutils.HTTPGet("http://"+cl.agentURL+"/api/ipsec/decryption/", &ipsecsadecryptList)

	return ipsecsadecryptList, err
}

// IPSecSADecryptPost creates IPSecSADecrypt object
func (cl *AgentClient) IPSecSADecryptCreate(postData netproto.IPSecSADecrypt) error {
	var resp Response

	err := netutils.HTTPPost("http://"+cl.agentURL+"/api/ipsec/decryption/", &postData, &resp)

	return err

}

// IPSecSADecryptPut updates IPSecSADecrypt object
func (cl *AgentClient) IPSecSADecryptUpdate(putData netproto.IPSecSADecrypt) error {
	var resp Response

	err := netutils.HTTPPut("http://"+cl.agentURL+"/api/ipsec/decryption/default/default/preCreatedIPSecSADecrypt", &putData, &resp)

	return err
}

// IPSecSADecryptDelete deletes IPSecSADecrypt object
func (cl *AgentClient) IPSecSADecryptDelete(deleteData netproto.IPSecSADecrypt) error {
	var resp Response

	err := netutils.HTTPDelete("http://"+cl.agentURL+"/api/ipsec/decryption/default/default/testDeleteIPSecSADecrypt", &deleteData, &resp)

	return err
}

// IPSecSAEncryptList lists all IPSecSAEncrypt objects
func (cl *AgentClient) IPSecSAEncryptList() ([]netproto.IPSecSAEncrypt, error) {
	var ipsecsaencryptList []netproto.IPSecSAEncrypt

	err := netutils.HTTPGet("http://"+cl.agentURL+"/api/ipsec/encryption/", &ipsecsaencryptList)

	return ipsecsaencryptList, err
}

// IPSecSAEncryptPost creates IPSecSAEncrypt object
func (cl *AgentClient) IPSecSAEncryptCreate(postData netproto.IPSecSAEncrypt) error {
	var resp Response

	err := netutils.HTTPPost("http://"+cl.agentURL+"/api/ipsec/encryption/", &postData, &resp)

	return err

}

// IPSecSAEncryptPut updates IPSecSAEncrypt object
func (cl *AgentClient) IPSecSAEncryptUpdate(putData netproto.IPSecSAEncrypt) error {
	var resp Response

	err := netutils.HTTPPut("http://"+cl.agentURL+"/api/ipsec/encryption/default/default/preCreatedIPSecSAEncrypt", &putData, &resp)

	return err
}

// IPSecSAEncryptDelete deletes IPSecSAEncrypt object
func (cl *AgentClient) IPSecSAEncryptDelete(deleteData netproto.IPSecSAEncrypt) error {
	var resp Response

	err := netutils.HTTPDelete("http://"+cl.agentURL+"/api/ipsec/encryption/default/default/testDeleteIPSecSAEncrypt", &deleteData, &resp)

	return err
}
