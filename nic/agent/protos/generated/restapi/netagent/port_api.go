// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package netproto is a auto generated package.
Input file: port.proto
*/
package restapi

import (
	"encoding/json"
	"io/ioutil"
	"net/http"
	"time"

	"github.com/gogo/protobuf/types"
	"github.com/gorilla/mux"

	"github.com/pensando/sw/api"
	"github.com/pensando/sw/nic/agent/httputils"
	"github.com/pensando/sw/nic/agent/protos/netproto"
)

// AddPortAPIRoutes adds Port routes
func (s *RestServer) AddPortAPIRoutes(r *mux.Router) {

	r.Methods("GET").Subrouter().HandleFunc("/", httputils.MakeHTTPHandler(s.listPortHandler))

	r.Methods("PUT").Subrouter().HandleFunc("/{ObjectMeta.Tenant}/{ObjectMeta.Namespace}/{ObjectMeta.Name}", httputils.MakeHTTPHandler(s.putPortHandler))

}

func (s *RestServer) listPortHandler(r *http.Request) (interface{}, error) {
	return s.agent.ListPort(), nil
}

func (s *RestServer) putPortHandler(r *http.Request) (interface{}, error) {
	var res Response

	var o netproto.Port
	b, _ := ioutil.ReadAll(r.Body)
	err := json.Unmarshal(b, &o)
	if err != nil {
		return nil, err
	}
	m, _ := types.TimestampProto(time.Now())
	o.ModTime = api.Timestamp{
		Timestamp: *m,
	}
	err = s.agent.UpdatePort(&o)

	res.References = []string{r.RequestURI}

	if err != nil {
		res.StatusCode = http.StatusInternalServerError
		res.Error = err.Error()

		return res, err
	}

	res.StatusCode = http.StatusOK
	return res, err
}
