//------------------------------------------------------------------------------
// {C} Copyright 2019 Pensando Systems Inc. All rights reserved
// protobuf specification for Control Plane Inteface Configuration
//------------------------------------------------------------------------------
syntax = "proto3";
package pds;

import "pdsa.proto";
import "meta/meta.proto";
import "types.proto";

// CPInterface service definition
service CPInterfaceSvc
{
  rpc CPInterfaceSpecCreate (CPInterfaceRequest) returns (CPInterfaceResponse) {}
  rpc CPInterfaceSpecUpdate (CPInterfaceRequest) returns (CPInterfaceResponse) {}
  rpc CPInterfaceSpecDelete (CPInterfaceRequest) returns (CPInterfaceResponse) {}
  rpc CPInterfaceAddrSpecCreate (CPInterfaceAddrRequest) returns (CPInterfaceResponse) {}
  rpc CPInterfaceAddrSpecUpdate (CPInterfaceAddrRequest) returns (CPInterfaceResponse) {}
  rpc CPInterfaceAddrSpecDelete (CPInterfaceAddrRequest) returns (CPInterfaceResponse) {}
}

enum CPIntfType {
  CP_IF_TYPE_NONE     = 0;
  CP_IF_TYPE_ETH      = 1;
  CP_IF_TYPE_LIF      = 2;
  CP_IF_TYPE_LOOPBACK = 3;
  CP_IF_TYPE_IRB      = 4;
};

message CPInterfaceAddrSpec {
  option (venice.pdsaSetGlobOpts) = {
    OidLen: "AMB_LIM_L3_ADDRESS_OID_LEN",
    Mib:    "limL3InterfaceAddressTable"
    FillFn: "lim_intf_addr_fill_func"
  };

  bytes           Id        = 1; // spec UUID key
  CPIntfType      IfType    = 2; // Interface Type should be converted to MS interface type/subtype, cannot be autogen.
  uint32          IfId      = 3; // Interface ID should be converted to MS interface Index, cannot be Autogen. Filling if_index as part of FillFn
  types.IPAddress IPAddr    = 4 [(venice.pdsaFields) = {Field:"ipaddress"}];
  uint32          PrefixLen = 5 [(venice.pdsaFields) = {Field:"prefix_len"}];
}

// This spec should be used to create only LIF and Loopback interfaces.
// If at all there is a need to create other types of interfaces, another spec should be defined with relevent Mib
message CPInterfaceSpec {
  option (venice.pdsaSetGlobOpts) = {
    OidLen: "AMB_LIM_SOFTWIF_OID_LEN",
    Mib:    "limSoftwareInterfaceTable"
    FillFn: "lim_sw_intf_fill_func"
  };

  bytes      Id     = 1; // spec UUID key
  CPIntfType IfType = 2; // interface Type should be converted to MS interface type/subtype, cannot be autogen
  uint32     IfId   = 3 [(venice.pdsaFields) = {Field:"index", SetKeyOidIndex: "AMB_LIM_SOFTWIF_INDEX"}];
}

// CRUD request messages
message CPInterfaceRequest {
  option (venice.pdsaSetGlobOpts) = {
    Mib:    "limSoftwareInterfaceTable"
  };

  repeated CPInterfaceSpec request = 1;
}

message CPInterfaceAddrRequest {
  option (venice.pdsaSetGlobOpts) = {
    Mib:    "limL3InterfaceAddressTable"
  };

  repeated CPInterfaceAddrSpec request = 1;
}

// response message
message CPInterfaceResponse {
  types.ApiStatus       ApiStatus = 1;
}
