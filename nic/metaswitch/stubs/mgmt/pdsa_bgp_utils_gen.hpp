// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.
 /*
 * This is an auto generated package.
 * Input file: bgp.proto
 */
#ifndef __PDSA_BGP_UTILS_GEN_HPP__
#define __PDSA_BGP_UTILS_GEN_HPP__
#include <nbase.h>
extern "C" {
#include <a0spec.h>
#include <o0mac.h>
#include <a0cust.h>
#include <a0glob.h>
#include <a0mib.h>
#include <ambips.h>
#include <a0stubs.h>
#include <a0cpif.h>
#include "smsiincl.h"
#include "smsincl.h"
}
#include "include/sdk/ip.hpp"
#include "nic/metaswitch/stubs/mgmt/pdsa_config.hpp"
#include "nic/metaswitch/stubs/mgmt/pdsa_ctm.hpp"
#include "nic/metaswitch/stubs/mgmt/svc/bgp_gen.hpp"
#include "qb0mib.h"

 



  
  
  
    
    
    
    
    
    
    /*===== Set helpers for MS Table: AMB_BGP_RM_ENT =====*/
    NBB_VOID pdsa_set_amb_bgp_rm_ent_oid(pds::BGPGlobalSpec &req,
                                       NBB_ULONG *oid);
    NBB_VOID pdsa_fill_amb_bgp_rm_ent_fields(pds::BGPGlobalSpec &req,
                                             AMB_GEN_IPS *mib_msg,
                                             AMB_BGP_RM_ENT *v_amb_bgp_rm_ent,
                                             NBB_LONG row_status);
    NBB_VOID pdsa_set_amb_bgp_rm_ent(pds::BGPGlobalSpec &req, NBB_LONG row_status);

    /*===== Get helpers for MS Table: AMB_BGP_RM_ENT =====*/
    NBB_VOID pdsa_check_get_amb_bgp_rm_ent(NBB_CXT_T NBB_CXT);
    NBB_VOID pdsa_get_amb_bgp_rm_ent_oid(pds::BGPGlobalSpec &req,
                                       NBB_ULONG *oid  NBB_CCXT_T NBB_CXT);
    NBB_VOID pdsa_get_amb_bgp_rm_ent(pds::BGPGlobalSpec &req);
    
  

  
  
  

  
  
  
    
    
    
    
    
    
    /*===== Set helpers for MS Table: AMB_BGP_PEER_AFI_SAFI =====*/
    NBB_VOID pdsa_set_amb_bgp_peer_afi_safi_oid(pds::BGPPeerAf &req,
                                       NBB_ULONG *oid);
    NBB_VOID pdsa_fill_amb_bgp_peer_afi_safi_fields(pds::BGPPeerAf &req,
                                             AMB_GEN_IPS *mib_msg,
                                             AMB_BGP_PEER_AFI_SAFI *v_amb_bgp_peer_afi_safi,
                                             NBB_LONG row_status);
    NBB_VOID pdsa_set_amb_bgp_peer_afi_safi(pds::BGPPeerAf &req, NBB_LONG row_status);

    /*===== Get helpers for MS Table: AMB_BGP_PEER_AFI_SAFI =====*/
    NBB_VOID pdsa_check_get_amb_bgp_peer_afi_safi(NBB_CXT_T NBB_CXT);
    NBB_VOID pdsa_get_amb_bgp_peer_afi_safi_oid(pds::BGPPeerAf &req,
                                       NBB_ULONG *oid  NBB_CCXT_T NBB_CXT);
    NBB_VOID pdsa_get_amb_bgp_peer_afi_safi(pds::BGPPeerAf &req);
    
  

  
  
  
    
    
    
    
    
    
  

  
  
  

  
  
  
    
    
    
    
    
    
  

  
  
  
    
    
    
    
    
    
    /*===== Set helpers for MS Table: AMB_BGP_PEER =====*/
    NBB_VOID pdsa_set_amb_bgp_peer_oid(pds::BGPPeerSpec &req,
                                       NBB_ULONG *oid);
    NBB_VOID pdsa_fill_amb_bgp_peer_fields(pds::BGPPeerSpec &req,
                                             AMB_GEN_IPS *mib_msg,
                                             AMB_BGP_PEER *v_amb_bgp_peer,
                                             NBB_LONG row_status);
    NBB_VOID pdsa_set_amb_bgp_peer(pds::BGPPeerSpec &req, NBB_LONG row_status);

    /*===== Get helpers for MS Table: AMB_BGP_PEER =====*/
    NBB_VOID pdsa_check_get_amb_bgp_peer(NBB_CXT_T NBB_CXT);
    NBB_VOID pdsa_get_amb_bgp_peer_oid(pds::BGPPeerSpec &req,
                                       NBB_ULONG *oid  NBB_CCXT_T NBB_CXT);
    NBB_VOID pdsa_get_amb_bgp_peer(pds::BGPPeerSpec &req);
    
  

  
  
  

  
  
  
    
    
    
    
    
    
  

  
  
  

  
  
  

#endif /* __PDSA_BGP_UTILS_GEN_HPP__  */
