// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.
 /*
 * This is an auto generated package.
 * Input file: {{.Name}}
 */
{{$pkgName := .Package}}
{{$fileName := .GetName}}
{{$extFileName := "" }}
{{if (HasPrefix .GetName "internal_") }}
  {{$extFileName = TrimPrefix .GetName "internal_" }}
  {{$pkgName = "pds"}}
{{end}}

#ifndef __{{TrimSuffix .GetName ".proto" | ToUpper}}_GEN_HPP__
#define __{{TrimSuffix .GetName ".proto" | ToUpper}}_GEN_HPP__
#include "grpc++/grpc++.h"
#include "gen/proto/types.pb.h"
#include "gen/proto/meta/meta.pb.h"
{{if not (eq $extFileName "")}} 
#include "gen/proto/{{TrimSuffix $extFileName ".proto" | ToLower}}.grpc.pb.h"
{{end}}
#include "gen/proto/{{TrimSuffix .GetName ".proto" | ToLower}}.grpc.pb.h"

using grpc::Status;
using grpc::ServerContext;

{{range .Services}}
{{$svcname := .Name}}
using {{$pkgName}}::{{$svcname}};
{{range .Methods}}
{{$rpc := .Name}}
  {{if not (HasSuffix .RequestType.Name "Empty")}}
using {{$pkgName}}::{{.RequestType.Name}};
  {{end}}
using {{$pkgName}}::{{.ResponseType.Name}};
{{end}}
{{end}}

{{range .Services}}
{{$svcname := .Name}}
class {{$svcname}}Impl final : public {{$svcname}}::Service {
public:
{{range .Methods}}
{{$rpc := .Name}}
    Status
    {{$rpc}}(ServerContext *context,
               const {{$pkgName}}::{{.RequestType.Name}} *req,
               {{$pkgName}}::{{.ResponseType.Name}} *resp) override;
{{end}}
};
{{end}}

#endif //__{{TrimSuffix .GetName ".proto" | ToUpper}}_GEN_HPP__ 
