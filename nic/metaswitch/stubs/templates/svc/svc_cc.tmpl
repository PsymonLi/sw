// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.
 /*
 * Package cmd is a auto generated package.
 * Input file: {{.Name}}
 */
{{$cam := getMetaswitchMibTablesInfo}}
{{$pkgName := .Package}}
{{$fileName := .GetName}}
#include "nic/metaswitch/stubs/mgmt/pds_ms_ctm.hpp"
#include "nic/apollo/agent/svc/specs.hpp"
#include "nic/metaswitch/stubs/mgmt/gen/svc/{{TrimSuffix $fileName ".proto"}}_gen.hpp"
#include "nic/metaswitch/stubs/mgmt/gen/mgmt/pds_ms_{{TrimSuffix $fileName ".proto"}}_utils_gen.hpp"
#include "nic/metaswitch/stubs/mgmt/pds_ms_common.hpp"
#include "nic/metaswitch/stubs/mgmt/pds_ms_mgmt_utils.hpp"
#include "nic/metaswitch/stubs/mgmt/pds_ms_mgmt_state.hpp"

{{range .Services}}
{{$svcname := .Name}}
{{range .Methods}}
{{$rpc := .Name}}
{{$requestTypeName := .RequestType.Name}}
{{$responseTypeName := .ResponseType.Name}}

Status
{{$svcname}}Impl::{{$rpc}}(ServerContext *context,
                              const {{$pkgName}}::{{.RequestType.Name}} *req,
                              {{$pkgName}}::{{.ResponseType.Name}} *resp) {
    if (req == NULL) {
        resp->set_apistatus(types::ApiStatus::API_STATUS_INVALID_ARG);
        return Status::CANCELLED;
    }
  {{if (HasSuffix $rpc "Delete")}}
    //Delete request
  {{end}}
  {{if (HasSuffix $rpc "Get")}}
    PDS_MS_GET_SHARED_START();
    //Get request
    {{if hasExtension "venice.pdsaGetGlobOpts" .RequestType }}
      {{$param := (getPdsaGetGlobalOpts .RequestType $cam)}}
      {{$struct := $param.Struct}}
    for (int i = 0; i < req->request_size(); i ++) {
        auto proto_spec = req->request(i);
        pds_ms_get_{{$struct | ToLower}}(proto_spec, resp);
    }
    {{end}}
    PDS_MS_GET_SHARED_END();
  {{end}}
  {{if (HasSuffix $rpc "GetAll")}}
    PDS_MS_GET_SHARED_START();
    //Getall request
    {{if hasExtension "venice.pdsaGetGlobOpts" .RequestType }}
      {{$param := (getPdsaGetGlobalOpts .RequestType $cam)}}
      {{$struct := $param.Struct}}
    for (int i = 0; i < req->request_size(); i ++) {
        auto proto_spec = req->request(i);
        pds_ms_getall_{{$struct | ToLower}}(proto_spec, resp);
    }
    {{end}}
    PDS_MS_GET_SHARED_END();
  {{end}}
  {{if or (HasSuffix $rpc "Create") (HasSuffix $rpc "Update")}}
    uint correlator = PDS_MS_CTM_GRPC_CORRELATOR;
    PDS_MS_START_TXN(correlator);
    //Create/Update request
    {{if hasExtension "venice.pdsaSetGlobOpts" .RequestType }}
      {{$param := (getPdsaSetGlobalOpts .RequestType $cam)}}
      {{$struct := $param.Struct}}
    for (int i = 0; i < req->request_size(); i ++) {
        auto proto_spec = req->request(i);
        pds_ms_pre_set_{{$struct | ToLower}}(proto_spec, AMB_ROW_ACTIVE, correlator);
        pds_ms_set_{{$struct | ToLower}}(proto_spec, AMB_ROW_ACTIVE, correlator);
        pds_ms_post_set_{{$struct | ToLower}}(proto_spec, AMB_ROW_ACTIVE, correlator);
    }
    {{end}}
    PDS_MS_END_TXN(correlator);
  {{end}}
    resp->set_apistatus(pds_ms::mgmt_state_t::ms_response_wait());
    return Status::OK;
} 

{{end}}
{{end}}
