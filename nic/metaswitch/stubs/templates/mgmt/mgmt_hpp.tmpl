// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.
 /*
 * This is an auto generated package.
 * Input file: {{.Name}}
 */
#ifndef __PDS_MS_{{TrimSuffix .GetName ".proto" | ToUpper}}_UTILS_GEN_HPP__
#define __PDS_MS_{{TrimSuffix .GetName ".proto" | ToUpper}}_UTILS_GEN_HPP__
#include <nbase.h>
extern "C" {
#include <a0spec.h>
#include <o0mac.h>
#include <a0cust.h>
#include <a0glob.h>
#include <a0mib.h>
#include <ambips.h>
#include <a0stubs.h>
#include <a0cpif.h>
#include "smsiincl.h"
#include "smsincl.h"
}
#include "include/sdk/ip.hpp"
#include "nic/metaswitch/stubs/mgmt/pds_ms_ctm.hpp"
#include "nic/metaswitch/stubs/mgmt/gen/svc/{{TrimSuffix .GetName ".proto" | ToLower}}_gen.hpp"
#include "qb0mib.h"
#include "qb0user.h"

{{$cam := getMetaswitchMibTablesInfo}} 

{{$file := .}}
{{$fileName := .GetName}}
{{$pkgName := .Package}}
{{$pkg := addStr "." $pkgName}}
{{$pkg := addStr $pkg "."}}
{{$extPkgName := "pds"}}
{{$msgs := .Messages}}
{{range $msgs}}
  {{$msgName := .GetName}}
  {{$msg := .}}
    NBB_VOID pds_ms_dump_{{$msgName | ToLower}}({{$pkgName}}::{{$msgName}} &req);
  {{if not (or (HasSuffix .GetName "KeyHandle") (HasSuffix .GetName "Key"))}}
    {{if hasExtension "venice.pdsaSetGlobOpts" . }}
      {{$param := (getPdsaSetGlobalOpts . $cam)}}
      {{$oidLen := $param.OidLen}}
      {{$oidFam := $param.OidFam}}
      {{$struct := $param.Struct}}
      {{$mib    := $param.Mib}}
      {{if not (eq $oidLen "")}}
    /*===== Set helpers for MS Table: {{$struct}} =====*/
    NBB_VOID pds_ms_validate_{{$msgName | ToLower}}({{$pkgName}}::{{$msgName}} &req);
    typedef void (*pre_set_{{$msgName | ToLower}}_{{$struct | ToLower}}_func_type)({{$pkgName}}::{{$msgName}} &req, NBB_LONG row_status, NBB_ULONG correlator, NBB_VOID* kh, bool);
    typedef void (*post_set_{{$msgName | ToLower}}_{{$struct | ToLower}}_func_type)({{$pkgName}}::{{$msgName}} &req, NBB_LONG row_status, NBB_ULONG correlator, NBB_VOID* kh, bool);
    NBB_VOID pds_ms_set_{{$msgName | ToLower}}_{{$struct | ToLower}}_oid({{$pkgName}}::{{$msgName}} &req,
                                       NBB_ULONG *oid);
    NBB_VOID pds_ms_fill_{{$msgName | ToLower}}_{{$struct | ToLower}}_fields({{$pkgName}}::{{$msgName}} &req,
                                             AMB_GEN_IPS *mib_msg,
                                             {{$struct}} *v_{{$struct | ToLower}},
                                             NBB_LONG row_status);
    NBB_VOID pds_ms_reg_pre_set_{{$msgName | ToLower}}_{{$struct | ToLower}}(pre_set_{{$msgName | ToLower}}_{{$struct | ToLower}}_func_type);
    NBB_VOID pds_ms_reg_post_set_{{$msgName | ToLower}}_{{$struct | ToLower}}(post_set_{{$msgName | ToLower}}_{{$struct | ToLower}}_func_type);
    NBB_VOID pds_ms_pre_set_{{$msgName | ToLower}}_{{$struct | ToLower}}({{$pkgName}}::{{$msgName}} &req, NBB_LONG row_status, NBB_ULONG correlator, NBB_VOID* kh, bool op_update=false);
    NBB_VOID pds_ms_set_{{$msgName | ToLower}}_{{$struct | ToLower}}({{$pkgName}}::{{$msgName}} &req, NBB_LONG row_status, NBB_ULONG correlator, bool skip_fill, bool op_update=false);
    NBB_VOID pds_ms_post_set_{{$msgName | ToLower}}_{{$struct | ToLower}}({{$pkgName}}::{{$msgName}} &req, NBB_LONG row_status, NBB_ULONG correlator, NBB_VOID* kh, bool op_update=false);
      {{end}}
    {{end}}
    {{if hasExtension "venice.pdsaGetGlobOpts" . }}
      {{$param := (getPdsaGetGlobalOpts . $cam)}}
      {{$oidLen := $param.OidLen}}
      {{$oidFam := $param.OidFam}}
      {{$struct := $param.Struct}}
      {{$mib    := $param.Mib}}
      {{$specMsgName := $param.SpecMsg}}
      {{if (eq $specMsgName "")}}
        {{$specMsgName = $msgName}}
      {{end}}
      {{if not (eq $oidLen "")}}
        {{$rootMsg := getResponseRootMsg $file $pkgName $msg}}
        {{$msgnamepfx := TrimSuffix $rootMsg.GetName "Response"}}
        {{$reqRootMsgName := addStr $msgnamepfx "Request"}}
        {{$reqRootMsg := (getMsg $file $pkg $reqRootMsgName)}}
    /*===== Get helpers for MS Table: {{$struct}} =====*/
    typedef void (*pre_get_{{$msgName | ToLower}}_{{$struct | ToLower}}_func_type)({{$pkgName}}::{{$specMsgName}} &req, {{$pkgName}}::{{$rootMsg.GetName}}* resp, NBB_VOID* kh);
    typedef void (*post_get_{{$msgName | ToLower}}_{{$struct | ToLower}}_func_type)({{$pkgName}}::{{$specMsgName}} &req, {{$pkgName}}::{{$rootMsg.GetName}}* resp, NBB_VOID* kh);
    typedef void (*pre_getall_{{$msgName | ToLower}}_{{$struct | ToLower}}_func_type)({{$pkgName}}::{{$rootMsg.GetName}}* resp);
    typedef void (*post_getall_{{$msgName | ToLower}}_{{$struct | ToLower}}_func_type)(const {{$pkgName}}::{{$reqRootMsg.GetName}}* req, {{$pkgName}}::{{$rootMsg.GetName}}* resp);
    typedef bool (*pre_fill_get_{{$msgName | ToLower}}_{{$struct | ToLower}}_func_type)({{$struct | ToLower}}* v_{{$struct | ToLower}});
    NBB_VOID pds_ms_check_get_{{$msgName | ToLower}}_{{$struct | ToLower}}(NBB_CXT_T NBB_CXT);
    NBB_VOID pds_ms_get_{{$msgName | ToLower}}_{{$struct | ToLower}}_oid({{$pkgName}}::{{$specMsgName}} &req,
                                       NBB_ULONG *oid  NBB_CCXT_T NBB_CXT);
    NBB_VOID pds_ms_reg_pre_fill_get_{{$msgName | ToLower}}_{{$struct | ToLower}}(pre_fill_get_{{$msgName | ToLower}}_{{$struct | ToLower}}_func_type);
    bool     pds_ms_pre_fill_get_{{$msgName | ToLower}}_{{$struct | ToLower}}({{$struct | ToLower}} *v_{{$struct | ToLower}});
    NBB_VOID pds_ms_reg_pre_get_{{$msgName | ToLower}}_{{$struct | ToLower}}(pre_get_{{$msgName | ToLower}}_{{$struct | ToLower}}_func_type);
    NBB_VOID pds_ms_reg_post_get_{{$msgName | ToLower}}_{{$struct | ToLower}}(post_get_{{$msgName | ToLower}}_{{$struct | ToLower}}_func_type);
    NBB_VOID pds_ms_pre_get_{{$msgName | ToLower}}_{{$struct | ToLower}}({{$pkgName}}::{{$specMsgName}} &req, {{$pkgName}}::{{$rootMsg.GetName}}* resp, NBB_VOID* kh);
    NBB_VOID pds_ms_get_{{$msgName | ToLower}}_{{$struct | ToLower}}({{$pkgName}}::{{$specMsgName}} &req, {{$pkgName}}::{{$rootMsg.GetName}}* resp);
    NBB_VOID pds_ms_post_get_{{$msgName | ToLower}}_{{$struct | ToLower}}({{$pkgName}}::{{$specMsgName}} &req, {{$pkgName}}::{{$rootMsg.GetName}}* resp, NBB_VOID* kh);

    NBB_VOID pds_ms_reg_pre_getall_{{$msgName | ToLower}}_{{$struct | ToLower}}(pre_getall_{{$msgName | ToLower}}_{{$struct | ToLower}}_func_type);
    NBB_VOID pds_ms_reg_post_getall_{{$msgName | ToLower}}_{{$struct | ToLower}}(post_getall_{{$msgName | ToLower}}_{{$struct | ToLower}}_func_type);
    NBB_VOID pds_ms_getall_{{$msgName | ToLower}}_{{$struct | ToLower}}_oid(NBB_ULONG *oid  NBB_CCXT_T NBB_CXT);
    NBB_VOID pds_ms_pre_getall_{{$msgName | ToLower}}_{{$struct | ToLower}}({{$pkgName}}::{{$rootMsg.GetName}}* resp);
    NBB_VOID pds_ms_getall_{{$msgName | ToLower}}_{{$struct | ToLower}}(const {{$pkgName}}::{{$reqRootMsg.GetName}}* req, {{$pkgName}}::{{$rootMsg.GetName}}* resp);
    NBB_VOID pds_ms_post_getall_{{$msgName | ToLower}}_{{$struct | ToLower}}(const {{$pkgName}}::{{$reqRootMsg.GetName}}* req, {{$pkgName}}::{{$rootMsg.GetName}}* resp);
      {{end}}
    {{end}}
    {{if  (HasPrefix $fileName "internal_")}}
      {{if hasExtension "venice.pdsaSetGlobOpts" . }}
    /*===== convsersion APIs between external and internal protos =====*/
    NBB_VOID pds_ms_ext_to_int_{{$msgName | ToLower}}({{$extPkgName}}::{{$msgName}} in, {{$pkgName}}::{{$msgName}}& out);
    NBB_VOID pds_ms_int_to_ext_{{$msgName | ToLower}}({{$pkgName}}::{{$msgName}}& in, {{$extPkgName}}::{{$msgName}}& out);
      {{else}}
        {{if hasExtension "venice.pdsaGetGlobOpts" . }}
    /*===== convsersion APIs between external and internal protos =====*/
    NBB_VOID pds_ms_ext_to_int_{{$msgName | ToLower}}({{$extPkgName}}::{{$msgName}} in, {{$pkgName}}::{{$msgName}}& out);
    NBB_VOID pds_ms_int_to_ext_{{$msgName | ToLower}}({{$pkgName}}::{{$msgName}}& in, {{$extPkgName}}::{{$msgName}}& out);
        {{end}}
      {{end}}
      {{if (HasSuffix .GetName "GetResponse") }}
    /*===== convsersion APIs between external and internal protos =====*/
    NBB_VOID pds_ms_convert_{{$msgName | ToLower}}_ext_response({{$pkgName}}::{{$msgName}}& in, {{$extPkgName}}::{{$msgName}} *out);
      {{end}}
    {{end}}
  {{else}}
    {{if (HasSuffix .GetName "KeyHandle")}}
      {{if hasExtension "venice.pdsaSetGlobOpts" . }}
        {{$param := (getPdsaSetGlobalOpts . $cam)}}
        {{$specMsg := $param.SpecMsg}}
        {{if (eq $param.SkipExtToInt true)}}
          {{$extPkgName = "pds_ms"}}
        {{end}}
    // Helper to convert {{.GetName}} to {{$specMsg}} 
    NBB_VOID pds_ms_get_{{$specMsg | ToLower}}_from_{{.GetName | ToLower}}({{$extPkgName}}::{{.GetName}} in, {{$pkgName}}::{{$specMsg}} &out);
      {{else}}
        {{if hasExtension "venice.pdsaGetGlobOpts" . }}
          {{$param := (getPdsaGetGlobalOpts . $cam)}}
          {{$specMsg := $param.SpecMsg}}
          {{if (eq $param.SkipExtToInt true)}}
            {{$extPkgName = "pds_ms"}}
          {{end}}
    // Helper to convert {{.GetName}} to {{$specMsg}}
    NBB_VOID pds_ms_get_{{$specMsg | ToLower}}_from_{{.GetName | ToLower}}({{$extPkgName}}::{{.GetName}} in, {{$pkgName}}::{{$specMsg}} &out);
        {{end}}
      {{end}}
    {{end}}
  {{end}}
{{end}}
#endif /* __PDS_MS_{{TrimSuffix .GetName ".proto" | ToUpper}}_UTILS_GEN_HPP__  */
