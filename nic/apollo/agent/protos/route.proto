//------------------------------------------------------------------------------
// {C} Copyright 2019 Pensando Systems Inc. All rights reserved
//
// protobuf specification for routing
//------------------------------------------------------------------------------

syntax = "proto3";
package pds;

import "gogo.proto";
import "meta/meta.proto";
import "types.proto";

service RouteSvc {
  rpc RouteTableCreate (RouteTableRequest) returns (RouteTableResponse) {}
  rpc RouteTableUpdate (RouteTableRequest) returns (RouteTableResponse) {}
  rpc RouteTableGet (RouteTableGetRequest) returns (RouteTableGetResponse) {}
  rpc RouteTableDelete (RouteTableDeleteRequest) returns (RouteTableDeleteResponse) {}
}

// route object
message Route {
  types.IPPrefix      Prefix    = 1;
  // route either points to a Nexthop ID or peer-VPC in case of VPC peering
  oneof Nh {
      types.IPAddress NextHop   = 2;
      uint32          NexthopId = 3;
      uint32          VPCId     = 4;
  }
}

// route table specification
// NOTE: any time a route table's route(s) changes, client is expected to send
//       full new route table (i.e., no incremental route add/del/upd is
//       supported)
message RouteTableSpec {
  // unique route table id (this id is not scoped under VPC or subnet)
  uint32         Id     = 1 [(gogoproto.moretags) = "meta:mandatory"];
  // IP address family
  types.IPAF     Af     = 2 [(gogoproto.moretags) = "meta:mandatory"];
  // routes in this route table
  repeated Route Routes = 3;
}

// operational status of the route table, if any
message RouteTableStatus {
}

// stats of the route table, if any
message RouteTableStats {
}

// route table object
message RouteTable {
  meta.TypeMeta     TypeMeta = 1 [(gogoproto.embed) = true, (gogoproto.jsontag) = ",inline"];
  meta.ObjMeta      ObjMeta  = 2 [(gogoproto.embed) = true, (gogoproto.jsontag) = "meta,omitempty"];
  RouteTableSpec    Spec     = 3 [(gogoproto.jsontag) = "spec,omitempty"];
  RouteTableStatus  Status   = 4 [(gogoproto.jsontag) = "status,omitempty"];
  RouteTableStats   Stats    = 5 [(gogoproto.jsontag) = "stats,omitempty"];
}

// route table create and update request
message RouteTableRequest {
  repeated RouteTableSpec Request = 1; // batched request
}

// route table create and update response
message RouteTableResponse {
  types.ApiStatus           ApiStatus = 1;
  repeated RouteTableStatus Response  = 2;
}

// route table get request
message RouteTableGetRequest {
  repeated uint32 Id = 1; // batched request
}

// route table get response
message RouteTableGetResponse {
  types.ApiStatus     ApiStatus = 1;
  repeated RouteTable Response  = 2;
}

// route table delete request
message RouteTableDeleteRequest {
  repeated uint32 Id = 1; // batched request
}

// route table delete response
message RouteTableDeleteResponse {
  repeated types.ApiStatus ApiStatus = 1;
}
