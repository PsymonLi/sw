//------------------------------------------------------------------------------
// {C} Copyright 2019 Pensando Systems Inc. All rights reserved
//
// protobuf specification for BGP
//
// NOTE: This is the netagent interface for BGP protocol configurations. This is
// a limited subset of configurations required for current deployments
//
//    This model supports the following BGP configuration level
//    hierarchy:
//
//      BGP
//        |
//        +-> [ global BGP configuration ]
//        +-> neighbor
//          +-> [ neighbor config ]
//          +-> AFI / SAFI [ per-AFI overrides ]";
//
//------------------------------------------------------------------------------

syntax = "proto3";
package pds;

import "meta/meta.proto";
import "types.proto";

// The bgp service definition
service BGP {
  rpc BGPGlobalSpecCreate (BGPGlobalSpec) returns (BGPGlobalSpecResponseMsg) {}
  rpc BGPGlobalSpecUpdate (BGPGlobalSpec) returns (BGPGlobalSpecResponseMsg) {}
  rpc BGPGlobalSpecDelete (BGPGlobalSpec) returns (BGPGlobalSpecResponseMsg) {}
  rpc BGPGlobalSpecGet (BGPGlobalSpec) returns (BGPGlobalSpecResponseMsg) {}
}

// Global status for BGP
message BGPGlobalSpecResponseMsg {
  // API status code
  types.ApiStatus api_status= 1 [(gogoproto.moretags) = "venice:api_status"];
}

// Global configuration for BGP
message BGPGlobalSpec {
  // Local 4-byte (32-bit) AS number
  uint32  LocalASN = 1 [(gogoproto.moretags) = "mandatory"];
  // VRF id for this bgp instance
  uint32  VRFId    = 2 [(gogoproto.moretags) = "mandatory"];
  // Router ID for this bgp instance
  fixed32 RouterId = 3;
}

// BGP Peer configurations
message BGPPeerSpec {
  // Local 4-byte (32-bit) AS number
  uint32             LocalASN    = 1 [(gogoproto.moretags) = "mandatory"];
  // VRF id for this bgp instance
  uint32             VRFId       = 2 [(gogoproto.moretags) = "mandatory"];
  // Whether BGP peer is enabled ? If peer is not enabled then
  // local router must not initiate connections to the neighbor
  // and must not respond to TCP connections attempts from
  // neighbor
  bool               AdminEn     = 3;
  // BGP Peer IP Address
  types.Address      PeerAddr    = 4;
  // Remote 4-byte (32-bit) AS number
  uint32             RemoteASN   = 5;
  // Send regular community attributes to neighbor
  bool               SendComm    = 6 [(gogoproto.moretags) = "default=false"];
  // Send extended community attributes to neighbor
  bool               SendExtComm = 7 [(gogoproto.moretags) = "default=false"];
  // Peer is a route reflector client
  bool               RRClient    = 8 [(gogoproto.moretags) = "default=false"];
  // Update source address for peering
  types.Address      UpdateSrc   = 9;
  // BGP timers
  BGPTimers          Timers      = 10;
  // Active address families for this peer
  repeated BGPPeerAf Af          = 11;
}

// BGP PeerAF configurations
message BGPPeerAf {
  // BGP Address family
  types.BGPAF Af          = 1;
  // Enforce this router to set self as next-hop for advertised routes
  bool        NHself      = 2;
  // Originate a default route to this peer
  bool        DefaultOrig = 3;
}

// BGP timers configuration
message BGPTimers {
  // BGP session connect-retry timer in seconds
  uint32 ConnectRetry = 1 [(gogoproto.moretags) = "range:1-65535"];
  // BGP session holdtime timer in seconds
  uint32 HoldTime     = 2 [(gogoproto.moretags) = "range:0-0, 3-65535"];
  // BGP session keepalive timer in seconds
  uint32 KeepAlive    = 3 [(gogoproto.moretags) = "range:0-65535"];
}

