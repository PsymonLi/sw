//------------------------------------------------------------------------------
// {C} Copyright 2019 Pensando Systems Inc. All rights reserved
//
// protobuf specification for the top level device object
//------------------------------------------------------------------------------

syntax = "proto3";
package pds;

import "gogo.proto";
import "meta/meta.proto";
import "types.proto";

service DebugSvc {
  rpc ClockFrequencyUpdate (ClockFrequencyRequest) returns (ClockFrequencyResponse) {}
  rpc SystemTemperatureGet (types.Empty) returns (SystemTemperatureGetResponse) {}
  rpc SystemPowerGet (types.Empty) returns (SystemPowerGetResponse) {}
  rpc TraceUpdate (TraceRequest) returns (TraceResponse) {}
}

enum TraceLevel {
  TRACE_LEVEL_NONE  = 0;    // no tracing at all
  TRACE_LEVEL_ERROR = 1;    // enable tracing only for error messages
  TRACE_LEVEL_DEBUG = 2;    // enable tracing only for debug messages
}

message TraceRequest {
  TraceLevel trace_level = 1;    // trace level to set to
}

message TraceResponse {
  types.ApiStatus ApiStatus  = 1;
  TraceLevel      TraceLevel = 2;    // current trace level
}

message SystemTemperatureGetResponse {
  types.ApiStatus ApiStatus = 1;
  uint32          DieTemp   = 2;
  uint32          LocalTemp = 3;
  uint32          HbmTemp   = 4;
}

message SystemPowerGetResponse {
  types.ApiStatus ApiStatus = 1;
  uint32          Pin       = 2;
  uint32          Pout1     = 3;
  uint32          Pout2     = 4;
}

message ClockFrequencyRequest {
  meta.TypeMeta TypeMeta       = 1 [(gogoproto.embed) = true, (gogoproto.jsontag) = ",inline"];
  meta.ObjMeta  ObjMeta        = 2 [(gogoproto.embed) = true, (gogoproto.jsontag) = "meta,omitempty"];
  uint32        ClockFrequency = 3; 
}

message ClockFrequencyResponse {
  types.ApiStatus ApiStatus = 1;
}
