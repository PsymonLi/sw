//------------------------------------------------------------------------------
// {C} Copyright 2019 Pensando Systems Inc. All rights reserved
//
// protobuf specification for the top level device object
//------------------------------------------------------------------------------

syntax = "proto3";
package pds;

import "gogo.proto";
import "meta/meta.proto";
import "types.proto";

service DebugSvc {
  rpc ClockFrequencyUpdate (ClockFrequencyRequest) returns (ClockFrequencyResponse) {}
  rpc SystemTemperatureGet (types.Empty) returns (SystemTemperatureGetResponse) {}
  rpc SystemPowerGet (types.Empty) returns (SystemPowerGetResponse) {}
  rpc TraceUpdate (TraceRequest) returns (TraceResponse) {}
  rpc TableStatsGet (types.Empty) returns (TableStatsGetResponse) {}
  rpc LlcSetup (LlcSetupRequest) returns (LlcSetupResponse) {}
  rpc LlcStatsGet (types.Empty) returns (LlcStatsGetResponse) {}
}

enum TraceLevel {
  TRACE_LEVEL_NONE    = 0;    // no tracing at all
  TRACE_LEVEL_ERROR   = 1;    // enable tracing only for error messages
  TRACE_LEVEL_DEBUG   = 2;    // enable tracing only for debug messages
  TRACE_LEVEL_WARN    = 3;    // enable tracing only for warn messages
  TRACE_LEVEL_INFO    = 4;    // enable tracing only for info messages
  TRACE_LEVEL_VERBOSE = 5;    // enable tracing only for verbose messages
}

message TraceRequest {
  TraceLevel trace_level = 1;    // trace level to set to
}

message TraceResponse {
  types.ApiStatus ApiStatus  = 1;
  TraceLevel      TraceLevel = 2;    // current trace level
}

message SystemTemperatureGetResponse {
  types.ApiStatus ApiStatus = 1;
  uint32          DieTemp   = 2;
  uint32          LocalTemp = 3;
  uint32          HbmTemp   = 4;
}

message SystemPowerGetResponse {
  types.ApiStatus ApiStatus = 1;
  uint32          Pin       = 2;
  uint32          Pout1     = 3;
  uint32          Pout2     = 4;
}

message ClockFrequencyRequest {
  meta.TypeMeta TypeMeta       = 1 [(gogoproto.embed) = true, (gogoproto.jsontag) = ",inline"];
  meta.ObjMeta  ObjMeta        = 2 [(gogoproto.embed) = true, (gogoproto.jsontag) = "meta,omitempty"];
  uint32        ClockFrequency = 3;
}

message ClockFrequencyResponse {
  types.ApiStatus ApiStatus = 1;
}

enum TableApiStatsType {
  TABLE_API_STATS_INSERT           = 0;
  TABLE_API_STATS_INSERT_DUPLICATE = 1;
  TABLE_API_STATS_INSERT_FAIL      = 2;
  TABLE_API_STATS_REMOVE           = 3;
  TABLE_API_STATS_REMOVE_NOT_FOUND = 4;
  TABLE_API_STATS_REMOVE_FAIL      = 5;
  TABLE_API_STATS_UPDATE           = 6;
  TABLE_API_STATS_UPDATE_FAIL      = 7;
  TABLE_API_STATS_GET              = 8;
  TABLE_API_STATS_GET_FAIL         = 9;
  TABLE_API_STATS_RESERVE          = 10;
  TABLE_API_STATS_RESERVE_FAIL     = 11;
  TABLE_API_STATS_RELEASE          = 12;
  TABLE_API_STATS_RELEASE_FAIL     = 13;
}

message TableApiStatsEntry {
  TableApiStatsType Type  = 1;
  uint32            Count = 2;
}

message TableApiStats {
  repeated TableApiStatsEntry Entry = 1;
}

enum TableStatsType {
  TABLE_STATS_ENTRIES    = 0;
  TABLE_STATS_COLLISIONS = 1;
}

message TableStatsEntry {
  TableStatsType Type  = 1;
  uint32         Count = 2;
}

message TableStats {
  repeated TableStatsEntry Entry = 1;
}

message TableStatsResponse {
  string        TableName  = 1;
  TableApiStats ApiStats   = 2;
  TableStats    TableStats = 3;
}

message TableStatsGetResponse {
  types.ApiStatus             ApiStatus = 1;
  repeated TableStatsResponse Response  = 2;
}

enum LlcCounterType {
  LLC_COUNTER_CACHE_NONE        = 0;
  LLC_COUNTER_CACHE_READ        = 1;
  LLC_COUNTER_CACHE_WRITE       = 2;
  LLC_COUNTER_SCRATCHPAD_ACCESS = 3;
  LLC_COUNTER_CACHE_HIT         = 4;
  LLC_COUNTER_CACHE_MISS        = 5;
  LLC_COUNTER_PARTIAL_WRITE     = 6;
  LLC_COUNTER_CACHE_MAINT_OP    = 7;
  LLC_COUNTER_EVICTION          = 8;
  LLC_COUNTER_RETRY_NEEDED      = 9;
  LLC_COUNTER_RETRY_ACCESS      = 10;
}

message LlcSetupRequest {
  LlcCounterType Type = 1;
}

message LlcSetupResponse {
  types.ApiStatus ApiStatus = 1;
}

message LlcStats {
  LlcCounterType  Type  = 1;
  repeated uint32 Count = 2;
}

message LlcStatsGetResponse {
  types.ApiStatus ApiStatus = 1;
  LlcStats        Stats     = 2;
}
