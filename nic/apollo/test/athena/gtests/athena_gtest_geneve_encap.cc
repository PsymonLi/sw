#ifndef P4_14
#include <stdint.h>
#include <vector>
#include "nic/include/base.hpp"
#include "nic/sdk/include/sdk/ip.hpp"
#include "nic/apollo/api/include/athena/pds_vnic.h"
#include "nic/apollo/api/include/athena/pds_flow_cache.h"
#include "nic/apollo/api/include/athena/pds_l2_flow_cache.h"
#include "nic/apollo/api/include/athena/pds_flow_session_info.h"
#include "nic/apollo/api/include/athena//pds_flow_session_rewrite.h"

#include "athena_gtest.hpp"

static uint16_t    g_tcp_vnic_id = VNIC_ID_GENEVE_ENCAP;
static uint32_t    g_h2s_tcp_vlan = VLAN_ID_GENEVE_ENCAP;

/*
 * Normalized key for TCP flow
 */
static uint32_t    g_h2s_sip = 0x02000001;
static uint32_t    g_h2s_dip = 0xc0000201;
static uint8_t     g_h2s_proto = 0x6;
static uint16_t    g_h2s_sport = 0x03e8;
static uint16_t    g_h2s_dport = 0x2710;

/*
 * Normalized IPv6 key for TCP flow
 */
static ipv6_addr_t  g_h2s_sipv6 = 
                                {
                                    0x02, 0x00, 0x00, 0x00,
                                    0x00, 0x00, 0x00, 0x00,
                                    0x00, 0x00, 0x00, 0x00,
                                    0x00, 0x00, 0x00, 0x01,
                                };
static ipv6_addr_t  g_h2s_dipv6 = 
                                {
                                    0x0c, 0x00, 0x00, 0x00,
                                    0x00, 0x00, 0x00, 0x00,
                                    0x00, 0x00, 0x00, 0x00,
                                    0x00, 0x00, 0x02, 0x01,
                                };

/*
 * Session info rewrite - S2H
 */
static mac_addr_t  ep_smac = {0x00, 0x00, 0xF1, 0xD0, 0xD1, 0xD0};
static mac_addr_t  ep_dmac = {0x00, 0x00, 0x00, 0x40, 0x08, 0x01};

/*
 * Session into rewrite - H2S
 */
static mac_addr_t  substrate_smac = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05};
static mac_addr_t  substrate_dmac = {0x00, 0x06, 0x07, 0x08, 0x09, 0x0a};
static uint16_t    substrate_vlan = 0x02;
static uint32_t    substrate_sip = 0x04030201;
static uint32_t    substrate_dip = 0x01020304;

static uint32_t    vni = 0xa0b0c0;
static uint32_t    source_slot_id = 0x102030;
static uint32_t    destination_slot_id = GENEVE_DST_SLOT_ID_GENEVE_ENCAP;
static uint32_t    sg_id1 = 0x0;
static uint32_t    sg_id2 = 0x0;
static uint32_t    sg_id3 = 0x0;
static uint32_t    sg_id4 = 0x0;
static uint32_t    sg_id5 = 0x0;
static uint32_t    sg_id6 = 0x0;
static uint32_t    originator_physical_ip = 0x0;

static sdk_ret_t
setup_l2_flow_v4_geneve_encap(uint8_t test_case)
{
    sdk_ret_t       ret = SDK_RET_OK;
    mac_addr_t      host_mac;
    uint8_t         vnic_stats_mask[PDS_FLOW_STATS_MASK_LEN];
    uint32_t        s2h_session_rewrite_id;
    uint32_t        h2s_session_rewrite_id;
    pds_vnic_type_t vnic_type = VNIC_TYPE_L2;
    uint32_t        s2h_session_rewrite_encap_id;
    uint32_t        h2s_session_rewrite_encap_id;
    
    uint32_t sg_id1_local = sg_id1;
    uint32_t sg_id2_local = sg_id2;
    uint32_t sg_id3_local = sg_id3;
    uint32_t sg_id4_local = sg_id4;
    uint32_t sg_id5_local = sg_id5;
    uint32_t sg_id6_local = sg_id6;
    uint32_t originator_physical_ip_local = originator_physical_ip;
    uint32_t g_h2s_sip_local = g_h2s_sip + test_case;

    mac_addr_t  ep_smac_local = {0x00, 0x00, 0xF1, 0xD0, 0xD1, 0xD0};
    mac_addr_t  ep_dmac_local = {0x00, 0x00, 0x00, 0x40, 0x08, 0x01};
    
    uint8_t ep_smac_lsb = 0xD0 + test_case;
    uint8_t ep_dmac_lsb = 0x01 + test_case;

    ep_smac_local[5] = ep_smac_lsb;
    ep_dmac_local[5] = ep_dmac_lsb;

    //setup genve option
    switch (test_case) {
    case 1: {sg_id1_local = 0xaaaa; break;}
    case 2: {sg_id1_local = 0xaaaa; sg_id2_local = 0xbbbb; break;}
    case 3: {sg_id1_local = 0xaaaa; sg_id2_local = 0xbbbb;
	sg_id3_local = 0xcccc; break;}
    case 4: {sg_id1_local = 0xaaaa; sg_id2_local = 0xbbbb;
	sg_id3_local = 0xcccc; sg_id4_local = 0xdddd; break;}
    case 5: {sg_id1_local = 0xaaaa; sg_id2_local = 0xbbbb;
	sg_id3_local = 0xcccc; sg_id4_local = 0xdddd;
	sg_id5_local = 0xeeee;
	break;}
    case 6: {sg_id1_local = 0xaaaa; sg_id2_local = 0xbbbb;
	sg_id3_local = 0xcccc; sg_id4_local = 0xdddd;
	sg_id5_local = 0xeeee; sg_id6_local = 0xffff;
	break;}
    case 7: {sg_id1_local = 0xaaaa; sg_id2_local = 0xbbbb;
	sg_id3_local = 0xcccc; sg_id4_local = 0xdddd;
	sg_id5_local = 0xeeee; sg_id6_local = 0xffff;
	originator_physical_ip_local = 0x11112222;
	break;}
      
    }

    // Setup VNIC Mappings
    ret = vlan_to_vnic_map(g_h2s_tcp_vlan, g_tcp_vnic_id, vnic_type);
    if (ret != SDK_RET_OK) {
        return ret;
    }

    // Setup VNIC Mappings
    ret = mpls_label_to_vnic_map(destination_slot_id, g_tcp_vnic_id, vnic_type);
    if (ret != SDK_RET_OK) {
        return ret;
    }

    s2h_session_rewrite_id = g_session_rewrite_index++;
    s2h_session_rewrite_encap_id = s2h_session_rewrite_id;

 
   ret = create_s2h_session_rewrite_insert_ctag(s2h_session_rewrite_id,  g_h2s_tcp_vlan);
    if (ret != SDK_RET_OK) {
        return ret;
    }

    h2s_session_rewrite_id = g_session_rewrite_index++;
    h2s_session_rewrite_encap_id = h2s_session_rewrite_id;

    ret = create_h2s_session_rewrite_geneve(h2s_session_rewrite_id,
        &substrate_dmac, &substrate_smac,
        substrate_vlan,
        substrate_sip, substrate_dip,
	vni,
        source_slot_id, destination_slot_id,
	sg_id1_local, sg_id2_local,
	sg_id3_local, sg_id4_local,
	sg_id5_local, sg_id6_local,
        originator_physical_ip_local);
    if (ret != SDK_RET_OK) {
        return ret;
    }


    memset(&host_mac, 0, sizeof(host_mac));
    ret = create_session_info_all(g_session_index, /*conntrack_id*/0,
                /*skip_flow_log*/ FALSE, /*host_mac*/ &host_mac,

                /*h2s_epoch_vnic*/ 0, /*h2s_epoch_vnic_id*/ 0,
                /*h2s_epoch_mapping*/0, /*h2s_epoch_mapping_id*/0,
                /*h2s_policer_bw1_id*/0, /*h2s_policer_bw2_id*/0,
                /*h2s_vnic_stats_id*/0, /*h2s_vnic_stats_mask*/ vnic_stats_mask,
                /*h2s_vnic_histogram_latency_id*/0, /*h2s_vnic_histogram_packet_len_id*/0,
                /*h2s_tcp_flags_bitmap*/0,
                /*h2s_session_rewrite_id*/ h2s_session_rewrite_id,
                /*h2s_allowed_flow_state_bitmask*/0,
                /*h2s_egress_action*/EGRESS_ACTION_NONE,

                /*s2h_epoch_vnic*/ 0, /*s2h_epoch_vnic_id*/ 0,
                /*s2h_epoch_mapping*/0, /*s2h_epoch_mapping_id*/0,
                /*s2h_policer_bw1_id*/0, /*s2h_policer_bw2_id*/0,
                /*s2h_vnic_stats_id*/0, /*s2h_vnic_stats_mask*/ vnic_stats_mask,
                /*s2h_vnic_histogram_latency_id*/0, /*s2h_vnic_histogram_packet_len_id*/0,
                /*s2h_tcp_flags_bitmap*/0,
                /*s2h_session_rewrite_id*/ s2h_session_rewrite_id,
                /*s2h_allowed_flow_state_bitmask*/0,
                /*s2h_egress_action*/EGRESS_ACTION_NONE
                );
    if (ret != SDK_RET_OK) {
        return ret;
    }

    // Setup Normalized Flow entry
    ret = create_flow_v4_tcp_udp(g_tcp_vnic_id, g_h2s_sip_local, g_h2s_dip,
            g_h2s_proto, g_h2s_sport, g_h2s_dport,
            PDS_FLOW_SPEC_INDEX_SESSION, g_session_index);
    g_session_index++;
    if (ret != SDK_RET_OK) {
        return ret;
    }


   ret = create_l2_flow (g_tcp_vnic_id, ep_dmac_local, s2h_session_rewrite_encap_id);
    if (ret != SDK_RET_OK) {
        return ret;
    }

    ret = create_l2_flow (g_tcp_vnic_id, ep_smac_local, h2s_session_rewrite_encap_id);
    if (ret != SDK_RET_OK) {
        return ret;
    }

 
    return ret;
}

sdk_ret_t
athena_gtest_setup_l2_flows_geneve_encap(uint8_t test_case)
{
    sdk_ret_t       ret = SDK_RET_OK;

    ret = setup_l2_flow_v4_geneve_encap(test_case);

    if (ret != SDK_RET_OK) {
        return ret;
    }

    return ret;

}

/*
 * Host to Switch TCP flow: Packet to be sent
 */
static uint8_t g_snd_pkt_ipv4_tcp_h2s[] = {
    0x00, 0x00, 0xF1, 0xD0, 0xD1, 0xD0, 0x00, 0x00,
    0x00, 0x40, 0x08, 0x01, 0x81, 0x00, 0x00, 0x0f,
    0x08, 0x00, 0x45, 0x00, 0x00, 0x5C, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x06, 0xB6, 0x9A, 0x02, 0x00,
    0x00, 0x01, 0xC0, 0x00, 0x02, 0x01, 0x03, 0xE8,
    0x27, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x50, 0x02, 0x20, 0x00, 0x83, 0x7D,
    0x00, 0x00, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66,
    0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B, 0x6D, 0x6E,
    0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76,
    0x77, 0x7A, 0x78, 0x79, 0x61, 0x62, 0x63, 0x64,
    0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B,
    0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,
    0x75, 0x76, 0x77, 0x7A, 0x78, 0x79
};

/*
 * Host to Switch TCP flow: Expected Packet
 */

static uint8_t g_rcv_pkt_ipv4_tcp_h2s[] = {
    0x00, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x00, 0x01,
    0x02, 0x03, 0x04, 0x05, 0x81, 0x00, 0x00, 0x02,
    0x08, 0x00, 0x45, 0x00, 0x00, 0x9E, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x11, 0x70, 0x46, 0x04, 0x03,
    0x02, 0x01, 0x01, 0x02, 0x03, 0x04, 0x00, 0x00,
    0x17, 0xC1, 0x00, 0x8A, 0x00, 0x00, 0x04, 0x00,
    0x65, 0x58, 0xA0, 0xB0, 0xC0, 0x00, 0x00, 0x00,
    0x21, 0x01, 0x00, 0x10, 0x20, 0x30, 0x00, 0x00,
    0x22, 0x01, 0x00, 0x01, 0x23, 0x51, 0x00, 0x00,
    0xF1, 0xD0, 0xD1, 0xD0, 0x00, 0x00, 0x00, 0x40,
    0x08, 0x01, 0x08, 0x00, 0x45, 0x00, 0x00, 0x5C,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x06, 0xB6, 0x9A,
    0x02, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x02, 0x01,
    0x03, 0xE8, 0x27, 0x10, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x50, 0x02, 0x20, 0x00,
    0x83, 0x7D, 0x00, 0x00, 0x61, 0x62, 0x63, 0x64,
    0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B,
    0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,
    0x75, 0x76, 0x77, 0x7A, 0x78, 0x79, 0x61, 0x62,
    0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A,
    0x6C, 0x6B, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72,
    0x73, 0x74, 0x75, 0x76, 0x77, 0x7A, 0x78, 0x79,
};


/*
 * Host to Switch TCP flow sgid1 : Packet to be sent
 */
static uint8_t g_snd_pkt_ipv4_tcp_sgid1_h2s[] = {
    0x00, 0x00, 0xF1, 0xD0, 0xD1, 0xD1, 0x00, 0x00,
    0x00, 0x40, 0x08, 0x02, 0x81, 0x00, 0x00, 0x0F,
    0x08, 0x00, 0x45, 0x00, 0x00, 0x5C, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x06, 0xB6, 0x99, 0x02, 0x00,
    0x00, 0x02, 0xC0, 0x00, 0x02, 0x01, 0x03, 0xE8,
    0x27, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x50, 0x02, 0x20, 0x00, 0x83, 0x7C,
    0x00, 0x00, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66,
    0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B, 0x6D, 0x6E,
    0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76,
    0x77, 0x7A, 0x78, 0x79, 0x61, 0x62, 0x63, 0x64,
    0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B,
    0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,
    0x75, 0x76, 0x77, 0x7A, 0x78, 0x79,
};

/*
 * Host to Switch TCP flow sgid1: Expected Packet
 */

static uint8_t g_rcv_pkt_ipv4_tcp_sgid1_h2s[] = {
    0x00, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x00, 0x01,
    0x02, 0x03, 0x04, 0x05, 0x81, 0x00, 0x00, 0x02,
    0x08, 0x00, 0x45, 0x00, 0x00, 0xA6, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x11, 0x70, 0x3E, 0x04, 0x03,
    0x02, 0x01, 0x01, 0x02, 0x03, 0x04, 0x00, 0x00,
    0x17, 0xC1, 0x00, 0x92, 0x00, 0x00, 0x06, 0x40,
    0x65, 0x58, 0xA0, 0xB0, 0xC0, 0x00, 0x00, 0x00,
    0x21, 0x01, 0x00, 0x10, 0x20, 0x30, 0x00, 0x00,
    0x22, 0x01, 0x00, 0x01, 0x23, 0x51, 0x00, 0x00,
    0xA1, 0x01, 0xAA, 0xAA, 0x00, 0x00, 0x00, 0x00,
    0xF1, 0xD0, 0xD1, 0xD1, 0x00, 0x00, 0x00, 0x40,
    0x08, 0x02, 0x08, 0x00, 0x45, 0x00, 0x00, 0x5C,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x06, 0xB6, 0x99,
    0x02, 0x00, 0x00, 0x02, 0xC0, 0x00, 0x02, 0x01,
    0x03, 0xE8, 0x27, 0x10, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x50, 0x02, 0x20, 0x00,
    0x83, 0x7C, 0x00, 0x00, 0x61, 0x62, 0x63, 0x64,
    0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B,
    0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,
    0x75, 0x76, 0x77, 0x7A, 0x78, 0x79, 0x61, 0x62,
    0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A,
    0x6C, 0x6B, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72,
    0x73, 0x74, 0x75, 0x76, 0x77, 0x7A, 0x78, 0x79,
};

/*
 * Host to Switch TCP flow sgid2 : Packet to be sent
 */
static uint8_t g_snd_pkt_ipv4_tcp_sgid2_h2s[] = {
    0x00, 0x00, 0xF1, 0xD0, 0xD1, 0xD2, 0x00, 0x00,
    0x00, 0x40, 0x08, 0x03, 0x81, 0x00, 0x00, 0x0F,
    0x08, 0x00, 0x45, 0x00, 0x00, 0x5C, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x06, 0xB6, 0x98, 0x02, 0x00,
    0x00, 0x03, 0xC0, 0x00, 0x02, 0x01, 0x03, 0xE8,
    0x27, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x50, 0x02, 0x20, 0x00, 0x83, 0x7B,
    0x00, 0x00, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66,
    0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B, 0x6D, 0x6E,
    0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76,
    0x77, 0x7A, 0x78, 0x79, 0x61, 0x62, 0x63, 0x64,
    0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B,
    0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,
    0x75, 0x76, 0x77, 0x7A, 0x78, 0x79,
 };

/*
 * Host to Switch TCP flow sgid2: Expected Packet
 */

static uint8_t g_rcv_pkt_ipv4_tcp_sgid2_h2s[] = {
    0x00, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x00, 0x01,
    0x02, 0x03, 0x04, 0x05, 0x81, 0x00, 0x00, 0x02,
    0x08, 0x00, 0x45, 0x00, 0x00, 0xA6, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x11, 0x70, 0x3E, 0x04, 0x03,
    0x02, 0x01, 0x01, 0x02, 0x03, 0x04, 0x00, 0x00,
    0x17, 0xC1, 0x00, 0x92, 0x00, 0x00, 0x06, 0x40,
    0x65, 0x58, 0xA0, 0xB0, 0xC0, 0x00, 0x00, 0x00,
    0x21, 0x01, 0x00, 0x10, 0x20, 0x30, 0x00, 0x00,
    0x22, 0x01, 0x00, 0x01, 0x23, 0x51, 0x00, 0x00,
    0xA0, 0x01, 0xAA, 0xAA, 0xBB, 0xBB, 0x00, 0x00,
    0xF1, 0xD0, 0xD1, 0xD2, 0x00, 0x00, 0x00, 0x40,
    0x08, 0x03, 0x08, 0x00, 0x45, 0x00, 0x00, 0x5C,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x06, 0xB6, 0x98,
    0x02, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x02, 0x01,
    0x03, 0xE8, 0x27, 0x10, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x50, 0x02, 0x20, 0x00,
    0x83, 0x7B, 0x00, 0x00, 0x61, 0x62, 0x63, 0x64,
    0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B,
    0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,
    0x75, 0x76, 0x77, 0x7A, 0x78, 0x79, 0x61, 0x62,
    0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A,
    0x6C, 0x6B, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72,
    0x73, 0x74, 0x75, 0x76, 0x77, 0x7A, 0x78, 0x79,
};

/*
 * Host to Switch TCP flow sgid3 : Packet to be sent
 */
static uint8_t g_snd_pkt_ipv4_tcp_sgid3_h2s[] = {
    0x00, 0x00, 0xF1, 0xD0, 0xD1, 0xD3, 0x00, 0x00,
    0x00, 0x40, 0x08, 0x04, 0x81, 0x00, 0x00, 0x0F,
    0x08, 0x00, 0x45, 0x00, 0x00, 0x5C, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x06, 0xB6, 0x97, 0x02, 0x00,
    0x00, 0x04, 0xC0, 0x00, 0x02, 0x01, 0x03, 0xE8,
    0x27, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x50, 0x02, 0x20, 0x00, 0x83, 0x7A,
    0x00, 0x00, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66,
    0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B, 0x6D, 0x6E,
    0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76,
    0x77, 0x7A, 0x78, 0x79, 0x61, 0x62, 0x63, 0x64,
    0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B,
    0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,
    0x75, 0x76, 0x77, 0x7A, 0x78, 0x79,
};

/*
 * Host to Switch TCP flow sgid3: Expected Packet
 */

static uint8_t g_rcv_pkt_ipv4_tcp_sgid3_h2s[] = {
    0x00, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x00, 0x01,
    0x02, 0x03, 0x04, 0x05, 0x81, 0x00, 0x00, 0x02,
    0x08, 0x00, 0x45, 0x00, 0x00, 0xAA, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x11, 0x70, 0x3A, 0x04, 0x03,
    0x02, 0x01, 0x01, 0x02, 0x03, 0x04, 0x00, 0x00,
    0x17, 0xC1, 0x00, 0x96, 0x00, 0x00, 0x07, 0x40,
    0x65, 0x58, 0xA0, 0xB0, 0xC0, 0x00, 0x00, 0x00,
    0x21, 0x01, 0x00, 0x10, 0x20, 0x30, 0x00, 0x00,
    0x22, 0x01, 0x00, 0x01, 0x23, 0x51, 0x00, 0x00,
    0xA1, 0x02, 0xAA, 0xAA, 0xBB, 0xBB, 0xCC, 0xCC,
    0x00, 0x00, 0x00, 0x00, 0xF1, 0xD0, 0xD1, 0xD3,
    0x00, 0x00, 0x00, 0x40, 0x08, 0x04, 0x08, 0x00,
    0x45, 0x00, 0x00, 0x5C, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x06, 0xB6, 0x97, 0x02, 0x00, 0x00, 0x04,
    0xC0, 0x00, 0x02, 0x01, 0x03, 0xE8, 0x27, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x50, 0x02, 0x20, 0x00, 0x83, 0x7A, 0x00, 0x00,
    0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,
    0x69, 0x6A, 0x6C, 0x6B, 0x6D, 0x6E, 0x6F, 0x70,
    0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x7A,
    0x78, 0x79, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66,
    0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B, 0x6D, 0x6E,
    0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76,
    0x77, 0x7A, 0x78, 0x79,
};

/*
 * Host to Switch TCP flow sgid4 : Packet to be sent
 */
static uint8_t g_snd_pkt_ipv4_tcp_sgid4_h2s[] = {
    0x00, 0x00, 0xF1, 0xD0, 0xD1, 0xD4, 0x00, 0x00,
    0x00, 0x40, 0x08, 0x05, 0x81, 0x00, 0x00, 0x0F,
    0x08, 0x00, 0x45, 0x00, 0x00, 0x5C, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x06, 0xB6, 0x96, 0x02, 0x00,
    0x00, 0x05, 0xC0, 0x00, 0x02, 0x01, 0x03, 0xE8,
    0x27, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x50, 0x02, 0x20, 0x00, 0x83, 0x79,
    0x00, 0x00, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66,
    0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B, 0x6D, 0x6E,
    0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76,
    0x77, 0x7A, 0x78, 0x79, 0x61, 0x62, 0x63, 0x64,
    0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B,
    0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,
    0x75, 0x76, 0x77, 0x7A, 0x78, 0x79,
};

/*
 * Host to Switch TCP flow sgid4: Expected Packet
 */

static uint8_t g_rcv_pkt_ipv4_tcp_sgid4_h2s[] = {
    0x00, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x00, 0x01,
    0x02, 0x03, 0x04, 0x05, 0x81, 0x00, 0x00, 0x02,
    0x08, 0x00, 0x45, 0x00, 0x00, 0xAA, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x11, 0x70, 0x3A, 0x04, 0x03,
    0x02, 0x01, 0x01, 0x02, 0x03, 0x04, 0x00, 0x00,
    0x17, 0xC1, 0x00, 0x96, 0x00, 0x00, 0x07, 0x40,
    0x65, 0x58, 0xA0, 0xB0, 0xC0, 0x00, 0x00, 0x00,
    0x21, 0x01, 0x00, 0x10, 0x20, 0x30, 0x00, 0x00,
    0x22, 0x01, 0x00, 0x01, 0x23, 0x51, 0x00, 0x00,
    0xA0, 0x02, 0xAA, 0xAA, 0xBB, 0xBB, 0xCC, 0xCC,
    0xDD, 0xDD, 0x00, 0x00, 0xF1, 0xD0, 0xD1, 0xD4,
    0x00, 0x00, 0x00, 0x40, 0x08, 0x05, 0x08, 0x00,
    0x45, 0x00, 0x00, 0x5C, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x06, 0xB6, 0x96, 0x02, 0x00, 0x00, 0x05,
    0xC0, 0x00, 0x02, 0x01, 0x03, 0xE8, 0x27, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x50, 0x02, 0x20, 0x00, 0x83, 0x79, 0x00, 0x00,
    0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,
    0x69, 0x6A, 0x6C, 0x6B, 0x6D, 0x6E, 0x6F, 0x70,
    0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x7A,
    0x78, 0x79, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66,
    0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B, 0x6D, 0x6E,
    0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76,
    0x77, 0x7A, 0x78, 0x79,
};

/*
 * Host to Switch TCP flow sgid5 : Packet to be sent
 */
static uint8_t g_snd_pkt_ipv4_tcp_sgid5_h2s[] = {
    0x00, 0x00, 0xF1, 0xD0, 0xD1, 0xD5, 0x00, 0x00,
    0x00, 0x40, 0x08, 0x06, 0x81, 0x00, 0x00, 0x0F,
    0x08, 0x00, 0x45, 0x00, 0x00, 0x5C, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x06, 0xB6, 0x95, 0x02, 0x00,
    0x00, 0x06, 0xC0, 0x00, 0x02, 0x01, 0x03, 0xE8,
    0x27, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x50, 0x02, 0x20, 0x00, 0x83, 0x78,
    0x00, 0x00, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66,
    0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B, 0x6D, 0x6E,
    0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76,
    0x77, 0x7A, 0x78, 0x79, 0x61, 0x62, 0x63, 0x64,
    0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B,
    0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,
    0x75, 0x76, 0x77, 0x7A, 0x78, 0x79,  
};

/*
 * Host to Switch TCP flow sgid5: Expected Packet
 */

static uint8_t g_rcv_pkt_ipv4_tcp_sgid5_h2s[] = {
    0x00, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x00, 0x01,
    0x02, 0x03, 0x04, 0x05, 0x81, 0x00, 0x00, 0x02,
    0x08, 0x00, 0x45, 0x00, 0x00, 0xAE, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x11, 0x70, 0x36, 0x04, 0x03,
    0x02, 0x01, 0x01, 0x02, 0x03, 0x04, 0x00, 0x00,
    0x17, 0xC1, 0x00, 0x9A, 0x00, 0x00, 0x08, 0x40,
    0x65, 0x58, 0xA0, 0xB0, 0xC0, 0x00, 0x00, 0x00,
    0x21, 0x01, 0x00, 0x10, 0x20, 0x30, 0x00, 0x00,
    0x22, 0x01, 0x00, 0x01, 0x23, 0x51, 0x00, 0x00,
    0xA1, 0x03, 0xAA, 0xAA, 0xBB, 0xBB, 0xCC, 0xCC,
    0xDD, 0xDD, 0xEE, 0xEE, 0x00, 0x00, 0x00, 0x00,
    0xF1, 0xD0, 0xD1, 0xD5, 0x00, 0x00, 0x00, 0x40,
    0x08, 0x06, 0x08, 0x00, 0x45, 0x00, 0x00, 0x5C,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x06, 0xB6, 0x95,
    0x02, 0x00, 0x00, 0x06, 0xC0, 0x00, 0x02, 0x01,
    0x03, 0xE8, 0x27, 0x10, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x50, 0x02, 0x20, 0x00,
    0x83, 0x78, 0x00, 0x00, 0x61, 0x62, 0x63, 0x64,
    0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B,
    0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,
    0x75, 0x76, 0x77, 0x7A, 0x78, 0x79, 0x61, 0x62,
    0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A,
    0x6C, 0x6B, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72,
    0x73, 0x74, 0x75, 0x76, 0x77, 0x7A, 0x78, 0x79,
};

/*
 * Host to Switch TCP flow sgid6 : Packet to be sent
 */
static uint8_t g_snd_pkt_ipv4_tcp_sgid6_h2s[] = {
    0x00, 0x00, 0xF1, 0xD0, 0xD1, 0xD6, 0x00, 0x00,
    0x00, 0x40, 0x08, 0x07, 0x81, 0x00, 0x00, 0x0F,
    0x08, 0x00, 0x45, 0x00, 0x00, 0x5C, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x06, 0xB6, 0x94, 0x02, 0x00,
    0x00, 0x07, 0xC0, 0x00, 0x02, 0x01, 0x03, 0xE8,
    0x27, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x50, 0x02, 0x20, 0x00, 0x83, 0x77,
    0x00, 0x00, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66,
    0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B, 0x6D, 0x6E,
    0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76,
    0x77, 0x7A, 0x78, 0x79, 0x61, 0x62, 0x63, 0x64,
    0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B,
    0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,
    0x75, 0x76, 0x77, 0x7A, 0x78, 0x79,
};

/*
 * Host to Switch TCP flow sgid6: Expected Packet
 */

static uint8_t g_rcv_pkt_ipv4_tcp_sgid6_h2s[] = {
    0x00, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x00, 0x01,
    0x02, 0x03, 0x04, 0x05, 0x81, 0x00, 0x00, 0x02,
    0x08, 0x00, 0x45, 0x00, 0x00, 0xAE, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x11, 0x70, 0x36, 0x04, 0x03,
    0x02, 0x01, 0x01, 0x02, 0x03, 0x04, 0x00, 0x00,
    0x17, 0xC1, 0x00, 0x9A, 0x00, 0x00, 0x08, 0x40,
    0x65, 0x58, 0xA0, 0xB0, 0xC0, 0x00, 0x00, 0x00,
    0x21, 0x01, 0x00, 0x10, 0x20, 0x30, 0x00, 0x00,
    0x22, 0x01, 0x00, 0x01, 0x23, 0x51, 0x00, 0x00,
    0xA0, 0x03, 0xAA, 0xAA, 0xBB, 0xBB, 0xCC, 0xCC,
    0xDD, 0xDD, 0xEE, 0xEE, 0xFF, 0xFF, 0x00, 0x00,
    0xF1, 0xD0, 0xD1, 0xD6, 0x00, 0x00, 0x00, 0x40,
    0x08, 0x07, 0x08, 0x00, 0x45, 0x00, 0x00, 0x5C,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x06, 0xB6, 0x94,
    0x02, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x02, 0x01,
    0x03, 0xE8, 0x27, 0x10, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x50, 0x02, 0x20, 0x00,
    0x83, 0x77, 0x00, 0x00, 0x61, 0x62, 0x63, 0x64,
    0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B,
    0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,
    0x75, 0x76, 0x77, 0x7A, 0x78, 0x79, 0x61, 0x62,
    0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A,
    0x6C, 0x6B, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72,
    0x73, 0x74, 0x75, 0x76, 0x77, 0x7A, 0x78, 0x79,
};

/*
 * Host to Switch TCP flow sgid7 : Packet to be sent
 */
static uint8_t g_snd_pkt_ipv4_tcp_sgid7_h2s[] = {
    0x00, 0x00, 0xF1, 0xD0, 0xD1, 0xD7, 0x00, 0x00,
    0x00, 0x40, 0x08, 0x08, 0x81, 0x00, 0x00, 0x0F,
    0x08, 0x00, 0x45, 0x00, 0x00, 0x5C, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x06, 0xB6, 0x93, 0x02, 0x00,
    0x00, 0x08, 0xC0, 0x00, 0x02, 0x01, 0x03, 0xE8,
    0x27, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x50, 0x02, 0x20, 0x00, 0x83, 0x76,
    0x00, 0x00, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66,
    0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B, 0x6D, 0x6E,
    0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76,
    0x77, 0x7A, 0x78, 0x79, 0x61, 0x62, 0x63, 0x64,
    0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B,
    0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,
    0x75, 0x76, 0x77, 0x7A, 0x78, 0x79,
};

/*
 * Host to Switch TCP flow sgid7: Expected Packet
 */

static uint8_t g_rcv_pkt_ipv4_tcp_sgid7_h2s[] = {
    0x00, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x00, 0x01,
    0x02, 0x03, 0x04, 0x05, 0x81, 0x00, 0x00, 0x02,
    0x08, 0x00, 0x45, 0x00, 0x00, 0xB6, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x11, 0x70, 0x2E, 0x04, 0x03,
    0x02, 0x01, 0x01, 0x02, 0x03, 0x04, 0x00, 0x00,
    0x17, 0xC1, 0x00, 0xA2, 0x00, 0x00, 0x0A, 0x40,
    0x65, 0x58, 0xA0, 0xB0, 0xC0, 0x00, 0x00, 0x00,
    0x21, 0x01, 0x00, 0x10, 0x20, 0x30, 0x00, 0x00,
    0x22, 0x01, 0x00, 0x01, 0x23, 0x51, 0x00, 0x00,
    0xA0, 0x03, 0xAA, 0xAA, 0xBB, 0xBB, 0xCC, 0xCC,
    0xDD, 0xDD, 0xEE, 0xEE, 0xFF, 0xFF, 0x00, 0x00,
    0x24, 0x01, 0x11, 0x11, 0x22, 0x22, 0x00, 0x00,
    0xF1, 0xD0, 0xD1, 0xD7, 0x00, 0x00, 0x00, 0x40,
    0x08, 0x08, 0x08, 0x00, 0x45, 0x00, 0x00, 0x5C,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x06, 0xB6, 0x93,
    0x02, 0x00, 0x00, 0x08, 0xC0, 0x00, 0x02, 0x01,
    0x03, 0xE8, 0x27, 0x10, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x50, 0x02, 0x20, 0x00,
    0x83, 0x76, 0x00, 0x00, 0x61, 0x62, 0x63, 0x64,
    0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B,
    0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,
    0x75, 0x76, 0x77, 0x7A, 0x78, 0x79, 0x61, 0x62,
    0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A,
    0x6C, 0x6B, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72,
    0x73, 0x74, 0x75, 0x76, 0x77, 0x7A, 0x78, 0x79
};


/*
 * Switch to Host TCP flow sgid7 : Packet to be sent
 */

static uint8_t g_snd_pkt_ipv4_tcp_sgid7_s2h[] = {
    0x00, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x00, 0x01,
    0x02, 0x03, 0x04, 0x05, 0x81, 0x00, 0x00, 0x02,
    0x08, 0x00, 0x45, 0x00, 0x00, 0xB6, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x11, 0x70, 0x2E, 0x04, 0x03,
    0x02, 0x01, 0x01, 0x02, 0x03, 0x04, 0x00, 0x00,
    0x17, 0xC1, 0x00, 0xA2, 0x00, 0x00, 0x0A, 0x00,
    0x65, 0x58, 0xA0, 0xB0, 0xC0, 0x00, 0x00, 0x00,
    0x21, 0x01, 0x00, 0x10, 0x20, 0x30, 0x00, 0x00,
    0x22, 0x01, 0x00, 0x01, 0x23, 0x51, 0x00, 0x00,
    0xA0, 0x03, 0xAA, 0xAA, 0xBB, 0xBB, 0xCC, 0xCC,
    0xDD, 0xDD, 0xEE, 0xEE, 0xFF, 0xFF, 0x00, 0x00,
    0x24, 0x01, 0x11, 0x11, 0x22, 0x22, 0x00, 0x00,
    0x00, 0x40, 0x08, 0x08, 0x00, 0x00, 0xF1, 0xD0,
    0xD1, 0xD7, 0x08, 0x00, 0x45, 0x00, 0x00, 0x5C,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x06, 0xB6, 0x93,
    0xC0, 0x00, 0x02, 0x01, 0x02, 0x00, 0x00, 0x08,
    0x27, 0x10, 0x03, 0xE8, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x50, 0x02, 0x20, 0x00,
    0x83, 0x76, 0x00, 0x00, 0x61, 0x62, 0x63, 0x64,
    0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B,
    0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,
    0x75, 0x76, 0x77, 0x7A, 0x78, 0x79, 0x61, 0x62,
    0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A,
    0x6C, 0x6B, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72,
    0x73, 0x74, 0x75, 0x76, 0x77, 0x7A, 0x78, 0x79,
};


/*
 * Switch to Host TCP flow sgid7_1 : Packet to be sent
 */

static uint8_t g_snd_pkt_ipv4_tcp_sgid7_1_s2h[] = {
    0x00, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x00, 0x01,
    0x02, 0x03, 0x04, 0x05, 0x81, 0x00, 0x00, 0x02,
    0x08, 0x00, 0x45, 0x00, 0x00, 0xB2, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x11, 0x70, 0x32, 0x04, 0x03,
    0x02, 0x01, 0x01, 0x02, 0x03, 0x04, 0x00, 0x00,
    0x17, 0xC1, 0x00, 0x9E, 0x00, 0x00, 0x09, 0x00,
    0x65, 0x58, 0xA0, 0xB0, 0xC0, 0x00, 0x00, 0x00,
    0x21, 0x01, 0x00, 0x10, 0x20, 0x30, 0x00, 0x00,
    0x22, 0x01, 0x00, 0x01, 0x23, 0x51, 0x00, 0x00,
    0xA0, 0x02, 0xAA, 0xAA, 0xBB, 0xBB, 0xCC, 0xCC,
    0xDD, 0xDD, 0x00, 0x00, 0x24, 0x01, 0x11, 0x11,
    0x22, 0x22, 0x00, 0x00, 0x00, 0x40, 0x08, 0x08,
    0x00, 0x00, 0xF1, 0xD0, 0xD1, 0xD7, 0x08, 0x00,
    0x45, 0x00, 0x00, 0x5C, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x06, 0xB6, 0x93, 0xC0, 0x00, 0x02, 0x01,
    0x02, 0x00, 0x00, 0x08, 0x27, 0x10, 0x03, 0xE8,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x50, 0x02, 0x20, 0x00, 0x83, 0x76, 0x00, 0x00,
    0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,
    0x69, 0x6A, 0x6C, 0x6B, 0x6D, 0x6E, 0x6F, 0x70,
    0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x7A,
    0x78, 0x79, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66,
    0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B, 0x6D, 0x6E,
    0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76,
    0x77, 0x7A, 0x78, 0x79,
};

/*
 * Switch to Host TCP flow sgid7_2 : Packet to be sent
 */
static uint8_t g_snd_pkt_ipv4_tcp_sgid7_2_s2h[] = {
    0x00, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x00, 0x01,
    0x02, 0x03, 0x04, 0x05, 0x81, 0x00, 0x00, 0x02,
    0x08, 0x00, 0x45, 0x00, 0x00, 0xA6, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x11, 0x70, 0x3E, 0x04, 0x03,
    0x02, 0x01, 0x01, 0x02, 0x03, 0x04, 0x00, 0x00,
    0x17, 0xC1, 0x00, 0x92, 0x00, 0x00, 0x06, 0x00,
    0x65, 0x58, 0xA0, 0xB0, 0xC0, 0x00, 0x00, 0x00,
    0x21, 0x01, 0x00, 0x10, 0x20, 0x30, 0x00, 0x00,
    0x22, 0x01, 0x00, 0x01, 0x23, 0x51, 0x00, 0x00,
    0x24, 0x01, 0x11, 0x11, 0x22, 0x22, 0x00, 0x00,
    0x00, 0x40, 0x08, 0x08, 0x00, 0x00, 0xF1, 0xD0,
    0xD1, 0xD7, 0x08, 0x00, 0x45, 0x00, 0x00, 0x5C,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x06, 0xB6, 0x93,
    0xC0, 0x00, 0x02, 0x01, 0x02, 0x00, 0x00, 0x08,
    0x27, 0x10, 0x03, 0xE8, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x50, 0x02, 0x20, 0x00,
    0x83, 0x76, 0x00, 0x00, 0x61, 0x62, 0x63, 0x64,
    0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B,
    0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,
    0x75, 0x76, 0x77, 0x7A, 0x78, 0x79, 0x61, 0x62,
    0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A,
    0x6C, 0x6B, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72,
    0x73, 0x74, 0x75, 0x76, 0x77, 0x7A, 0x78, 0x79,
};


/*
 * Switch to Host TCP flow sgid7_3 : Packet to be sent
 */
static uint8_t g_snd_pkt_ipv4_tcp_sgid7_3_s2h[] = {
    0x00, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x00, 0x01,
    0x02, 0x03, 0x04, 0x05, 0x81, 0x00, 0x00, 0x02,
    0x08, 0x00, 0x45, 0x00, 0x00, 0xA6, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x11, 0x70, 0x3E, 0x04, 0x03,
    0x02, 0x01, 0x01, 0x02, 0x03, 0x04, 0x00, 0x00,
    0x17, 0xC1, 0x00, 0x92, 0x00, 0x00, 0x06, 0x00,
    0x65, 0x58, 0xA0, 0xB0, 0xC0, 0x00, 0x00, 0x00,
    0x21, 0x01, 0x00, 0x10, 0x20, 0x30, 0x00, 0x00,
    0x22, 0x01, 0x00, 0x01, 0x23, 0x51, 0x00, 0x00,
    0xA0, 0x01, 0xAA, 0xAA, 0xBB, 0xBB, 0x00, 0x00,
    0x00, 0x40, 0x08, 0x08, 0x00, 0x00, 0xF1, 0xD0,
    0xD1, 0xD7, 0x08, 0x00, 0x45, 0x00, 0x00, 0x5C,
    0x00, 0x00, 0x00, 0x00, 0x40, 0x06, 0xB6, 0x93,
    0xC0, 0x00, 0x02, 0x01, 0x02, 0x00, 0x00, 0x08,
    0x27, 0x10, 0x03, 0xE8, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x50, 0x02, 0x20, 0x00,
    0x83, 0x76, 0x00, 0x00, 0x61, 0x62, 0x63, 0x64,
    0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B,
    0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,
    0x75, 0x76, 0x77, 0x7A, 0x78, 0x79, 0x61, 0x62,
    0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A,
    0x6C, 0x6B, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72,
    0x73, 0x74, 0x75, 0x76, 0x77, 0x7A, 0x78, 0x79,
};

/*
 * Switch to Host TCP flow sgid7_4 : Packet to be sent
 */
static uint8_t g_snd_pkt_ipv4_tcp_sgid7_4_s2h[] = {
    0x00, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x00, 0x01,
    0x02, 0x03, 0x04, 0x05, 0x81, 0x00, 0x00, 0x02,
    0x08, 0x00, 0x45, 0x00, 0x00, 0xB2, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x11, 0x70, 0x32, 0x04, 0x03,
    0x02, 0x01, 0x01, 0x02, 0x03, 0x04, 0x00, 0x00,
    0x17, 0xC1, 0x00, 0x9E, 0x00, 0x00, 0x09, 0x00,
    0x65, 0x58, 0xA0, 0xB0, 0xC0, 0x00, 0x00, 0x00,
    0x21, 0x01, 0x00, 0x10, 0x20, 0x30, 0x00, 0x00,
    0x22, 0x01, 0x00, 0x01, 0x23, 0x51, 0x00, 0x00,
    0x14, 0x02, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77,
    0x77, 0x77, 0x00, 0x00, 0x24, 0x01, 0x11, 0x11,
    0x22, 0x22, 0x00, 0x00, 0x00, 0x40, 0x08, 0x08,
    0x00, 0x00, 0xF1, 0xD0, 0xD1, 0xD7, 0x08, 0x00,
    0x45, 0x00, 0x00, 0x5C, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x06, 0xB6, 0x93, 0xC0, 0x00, 0x02, 0x01,
    0x02, 0x00, 0x00, 0x08, 0x27, 0x10, 0x03, 0xE8,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x50, 0x02, 0x20, 0x00, 0x83, 0x76, 0x00, 0x00,
    0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,
    0x69, 0x6A, 0x6C, 0x6B, 0x6D, 0x6E, 0x6F, 0x70,
    0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x7A,
    0x78, 0x79, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66,
    0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B, 0x6D, 0x6E,
    0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76,
    0x77, 0x7A, 0x78, 0x79,
};

/*
 * Switch to Host TCP flow sgid7: Expected Packet
 */

static uint8_t g_rcv_pkt_ipv4_tcp_sgid7_s2h[] = {
    0x00, 0x00, 0x00, 0x40, 0x08, 0x08, 0x00, 0x00,
    0xF1, 0xD0, 0xD1, 0xD7, 0x81, 0x00, 0x00, 0x0F,
    0x08, 0x00, 0x45, 0x00, 0x00, 0x5C, 0x00, 0x00,
    0x00, 0x00, 0x40, 0x06, 0xB6, 0x93, 0xC0, 0x00,
    0x02, 0x01, 0x02, 0x00, 0x00, 0x08, 0x27, 0x10,
    0x03, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x50, 0x02, 0x20, 0x00, 0x83, 0x76,
    0x00, 0x00, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66,
    0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B, 0x6D, 0x6E,
    0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76,
    0x77, 0x7A, 0x78, 0x79, 0x61, 0x62, 0x63, 0x64,
    0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6C, 0x6B,
    0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74,
    0x75, 0x76, 0x77, 0x7A, 0x78, 0x79,
} ;


sdk_ret_t
athena_gtest_test_l2_flows_geneve_encap(void)
{
    sdk_ret_t           ret = SDK_RET_OK;
    uint32_t             mask_start_pos = 38;

    ret = send_packet_wmask("TCP-L2-IPv4-Genece-Encap-0: h2s pkt", g_snd_pkt_ipv4_tcp_h2s,
            sizeof(g_snd_pkt_ipv4_tcp_h2s), g_h_port,
			    g_rcv_pkt_ipv4_tcp_h2s, sizeof(g_rcv_pkt_ipv4_tcp_h2s), g_s_port, mask_start_pos);
    if (ret != SDK_RET_OK) {
        return ret;
    }

    ret = send_packet_wmask("TCP-L2-IPv4-Genece-Encap-1: h2s pkt", g_snd_pkt_ipv4_tcp_sgid1_h2s,
            sizeof(g_snd_pkt_ipv4_tcp_sgid1_h2s), g_h_port,
			    g_rcv_pkt_ipv4_tcp_sgid1_h2s, sizeof(g_rcv_pkt_ipv4_tcp_sgid1_h2s), g_s_port, mask_start_pos);
    if (ret != SDK_RET_OK) {
        return ret;
    }

    ret = send_packet_wmask("TCP-L2-IPv4-Genece-Encap-2: h2s pkt", g_snd_pkt_ipv4_tcp_sgid2_h2s,
            sizeof(g_snd_pkt_ipv4_tcp_sgid2_h2s), g_h_port,
			    g_rcv_pkt_ipv4_tcp_sgid2_h2s, sizeof(g_rcv_pkt_ipv4_tcp_sgid2_h2s), g_s_port, mask_start_pos);
    if (ret != SDK_RET_OK) {
        return ret;
    }

    ret = send_packet_wmask("TCP-L2-IPv4-Genece-Encap-3: h2s pkt", g_snd_pkt_ipv4_tcp_sgid3_h2s,
            sizeof(g_snd_pkt_ipv4_tcp_sgid3_h2s), g_h_port,
			    g_rcv_pkt_ipv4_tcp_sgid3_h2s, sizeof(g_rcv_pkt_ipv4_tcp_sgid3_h2s), g_s_port, mask_start_pos);
    if (ret != SDK_RET_OK) {
        return ret;
    }

    ret = send_packet_wmask("TCP-L2-IPv4-Genece-Encap-4: h2s pkt", g_snd_pkt_ipv4_tcp_sgid4_h2s,
            sizeof(g_snd_pkt_ipv4_tcp_sgid4_h2s), g_h_port,
			    g_rcv_pkt_ipv4_tcp_sgid4_h2s, sizeof(g_rcv_pkt_ipv4_tcp_sgid4_h2s), g_s_port, mask_start_pos);
    if (ret != SDK_RET_OK) {
        return ret;
    }

    ret = send_packet_wmask("TCP-L2-IPv4-Genece-Encap-5: h2s pkt", g_snd_pkt_ipv4_tcp_sgid5_h2s,
            sizeof(g_snd_pkt_ipv4_tcp_sgid5_h2s), g_h_port,
			    g_rcv_pkt_ipv4_tcp_sgid5_h2s, sizeof(g_rcv_pkt_ipv4_tcp_sgid5_h2s), g_s_port, mask_start_pos);
    if (ret != SDK_RET_OK) {
        return ret;
    }

    ret = send_packet_wmask("TCP-L2-IPv4-Genece-Encap-6: h2s pkt", g_snd_pkt_ipv4_tcp_sgid6_h2s,
            sizeof(g_snd_pkt_ipv4_tcp_sgid6_h2s), g_h_port,
			    g_rcv_pkt_ipv4_tcp_sgid6_h2s, sizeof(g_rcv_pkt_ipv4_tcp_sgid6_h2s), g_s_port, mask_start_pos);
    if (ret != SDK_RET_OK) {
        return ret;
    }

    ret = send_packet_wmask("TCP-L2-IPv4-Genece-Encap-7: h2s pkt", g_snd_pkt_ipv4_tcp_sgid7_h2s,
            sizeof(g_snd_pkt_ipv4_tcp_sgid7_h2s), g_h_port,
			    g_rcv_pkt_ipv4_tcp_sgid7_h2s, sizeof(g_rcv_pkt_ipv4_tcp_sgid7_h2s), g_s_port, mask_start_pos);
    if (ret != SDK_RET_OK) {
        return ret;
    }

    ret = send_packet("TCP-L2-IPv4-Genece-Encap-7: s2h pkt", g_snd_pkt_ipv4_tcp_sgid7_s2h,
            sizeof(g_snd_pkt_ipv4_tcp_sgid7_s2h), g_s_port,
			    g_rcv_pkt_ipv4_tcp_sgid7_s2h, sizeof(g_rcv_pkt_ipv4_tcp_sgid7_s2h), g_h_port);
    if (ret != SDK_RET_OK) {
        return ret;
    }

    ret = send_packet("TCP-L2-IPv4-Genece-Encap-7-1: s2h pkt", g_snd_pkt_ipv4_tcp_sgid7_1_s2h,
            sizeof(g_snd_pkt_ipv4_tcp_sgid7_1_s2h), g_s_port,
			    g_rcv_pkt_ipv4_tcp_sgid7_s2h, sizeof(g_rcv_pkt_ipv4_tcp_sgid7_s2h), g_h_port);
    if (ret != SDK_RET_OK) {
        return ret;
    }

    ret = send_packet("TCP-L2-IPv4-Genece-Encap-7-2: s2h pkt", g_snd_pkt_ipv4_tcp_sgid7_2_s2h,
            sizeof(g_snd_pkt_ipv4_tcp_sgid7_2_s2h), g_s_port,
			    g_rcv_pkt_ipv4_tcp_sgid7_s2h, sizeof(g_rcv_pkt_ipv4_tcp_sgid7_s2h), g_h_port);
    if (ret != SDK_RET_OK) {
        return ret;
    }

    ret = send_packet("TCP-L2-IPv4-Genece-Encap-7-3: s2h pkt", g_snd_pkt_ipv4_tcp_sgid7_3_s2h,
            sizeof(g_snd_pkt_ipv4_tcp_sgid7_3_s2h), g_s_port,
			    g_rcv_pkt_ipv4_tcp_sgid7_s2h, sizeof(g_rcv_pkt_ipv4_tcp_sgid7_s2h), g_h_port);
    if (ret != SDK_RET_OK) {
        return ret;
    }

    ret = send_packet("TCP-L2-IPv4-Genece-Encap-7-4: s2h pkt", g_snd_pkt_ipv4_tcp_sgid7_4_s2h,
            sizeof(g_snd_pkt_ipv4_tcp_sgid7_4_s2h), g_s_port,
			    g_rcv_pkt_ipv4_tcp_sgid7_s2h, sizeof(g_rcv_pkt_ipv4_tcp_sgid7_s2h), g_h_port);
    if (ret != SDK_RET_OK) {
        return ret;
    }

    return ret;
}
#endif
