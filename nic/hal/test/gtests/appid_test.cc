#include <gtest/gtest.h>
#include <vector>

#include "nic/include/fte_ctx.hpp"
#include "nic/hal/plugins/app_redir/app_redir_headers.hpp"
#include "nic/hal/plugins/app_redir/app_redir_plugin.hpp"
#include "nic/hal/plugins/app_redir/app_redir_scanner.hpp"
#include "nic/include/hal_cfg.hpp"

using namespace std;
using namespace hal::app_redir;
using hal::appid_state_t;

#define APPID_DNS_TEST1 1
#define APPID_HTTP_TEST1 1

// external dependencies
namespace hal {
namespace app_redir {
  hal_ret_t exec_appid_start(fte::ctx_t& ctx);
  hal_ret_t exec_appid_continue(fte::ctx_t& ctx);

#if 0
  typedef struct {
      const char* sig;
      size_t sig_len;
      hal::appid_id_t id;
  } app_mapping_mock_t;

  app_mapping_mock_t app_mapping_mock[] = {
      { "GET ", 4, 80 },
      { "\xfeSMB", 4, 445 },
      { nullptr, 0, 0 }
  };

  hal::appid_state_t
  scan_wrapper(uint8_t *data, size_t data_len, hal::appid_id_t *app_id)
  {
    if (data && data_len) {
        // Return first appid from app_mapping_mock which matches
        for (app_mapping_mock_t *app_mock = app_mapping_mock; app_mock->sig_len; app_mock++) {
            if (data_len >= app_mock->sig_len) {
                if (memcmp(app_mock->sig, data, app_mock->sig_len) == 0) {
                    // Complete match
                    *app_id = app_mock->id;
		    return APPID_STATE_FOUND;
                }
            } else if (memcmp(app_mock->sig, data, data_len) == 0) {
                // Partial match
                *app_id = app_mock->id;
                return APPID_STATE_IN_PROGRESS;
            }
        }
    }

    *app_id = 0;
    return APPID_STATE_NOT_FOUND;
}
#endif

} // namespace app_redir
} // namespace hal

class appid_test;
void appid_test_ctrl_thread_run(appid_test* this_test);


class appid_test : public ::testing::Test {
public:
    void control_thread_exec() {
        scanner_init(hal::HAL_THREAD_ID_PERIODIC);
        for (int i = 0; i < 10; i++) {
            // TODO: tune this number
            // run the main loop enough times to finish initializing pkt threads
            scanner_run();
        }
        ctrl_mtx.unlock();
        this_thread::sleep_for(std::chrono::milliseconds{10});

        while(!pkt_done.load()) {
            scanner_run();
	    this_thread::sleep_for(std::chrono::milliseconds{10});
        }
        scanner_cleanup(hal::HAL_THREAD_ID_PERIODIC);
    }

protected:

    appid_test() {
        pkt_done.store(false);
        ctrl_thread = nullptr;
    }

    virtual ~appid_test() {
    }

    // will be called immediately after the constructor before each test
    virtual void SetUp() {
        pkt_done.store(false);
        ctrl_mtx.lock();
        ctrl_thread = new std::thread{appid_test_ctrl_thread_run, this};
        //this_thread::yield();
        ctrl_mtx.lock(); // not a typo, waiting for control thread to unlock
        scanner_init(hal::HAL_THREAD_ID_FTE_MIN);
    }

    // will be called immediately after each test before the destructor
    virtual void TearDown() {
        scanner_cleanup(hal::HAL_THREAD_ID_FTE_MIN);
        pkt_done.store(true);
        ctrl_thread->join();
        delete ctrl_thread;
        ctrl_thread = nullptr;

//        fte::unregister_features_and_pipelines();
    }

    atomic<bool> pkt_done;
    std::mutex ctrl_mtx;
    std::thread* ctrl_thread;
};

void appid_test_ctrl_thread_run(appid_test* this_test)
{
    this_test->control_thread_exec();
}

struct appid_test_packet_t {
    unsigned char* pkt;
    uint32_t pkt_len;
    bool is_resp;
    uint32_t expect_app_id;
};

struct appid_test_transaction_t {
    appid_test_packet_t pkts[10];
    uint32_t pkt_count;
    uint16_t sport;
    uint16_t dport;
};


#ifdef APPID_HTTP_TEST1

/* HTTP SYN */
static unsigned char http1_syn[78] = {
  0xa0, 0xe0, 0xaf, 0x14, 0xe8, 0xc1, 0x18, 0x65, /* .......e */
  0x90, 0xda, 0x71, 0xd9, 0x08, 0x00, 0x45, 0x00, /* ..q...E. */
  0x00, 0x40, 0x7a, 0x96, 0x40, 0x00, 0x40, 0x06, /* .N..@.@. */
  0xb3, 0x5c, 0xc0, 0xa8, 0x4a, 0x1a, 0xc0, 0x00, /* $>..J... */
  0x42, 0x02, 0xca, 0xb4, 0x00, 0x50, 0xc9, 0x24, /* B....P.$ */
  0xb8, 0x95, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x02, /* ....q]P. */
  0xff, 0xff, 0xe2, 0x03, 0x00, 0x00, 0x02, 0x04,
  0x05, 0xb4, 0x01, 0x03, 0x03, 0x05, 0x01, 0x01,
  0x08, 0x0a, 0x3d, 0xb0, 0xbd, 0xc4, 0x00, 0x00,
  0x00, 0x00, 0x04, 0x02, 0x00, 0x00
};

/* HTTP SYN-ACK */
static unsigned char http1_synack[66] = {
  0x18, 0x65, 0x90, 0xda, 0x71, 0xd9, 0xa0, 0xe0, /* .e..q... */
  0xaf, 0x14, 0xe8, 0xc1, 0x08, 0x00, 0x45, 0x00, /* ......E. */
  0x00, 0x34, 0x00, 0x00, 0x40, 0x00, 0x38, 0x06, /* .4..@.8. */
  0x35, 0xff, 0xc0, 0x00, 0x42, 0x02, 0xc0, 0xa8, /* 5...B... */
  0x4a, 0x1a, 0x00, 0x50, 0xca, 0xb4, 0xc2, 0x93, /* J..P.... */
  0x71, 0x5c, 0xc9, 0x24, 0xb8, 0x96, 0x80, 0x12, /* q\.$.... */
  0x72, 0x10, 0x6f, 0x79, 0x00, 0x00, 0x02, 0x04, /* r.oy.... */
  0x05, 0xb4, 0x01, 0x01, 0x04, 0x02, 0x01, 0x03, /* ........ */
  0x03, 0x09                                      /* .. */
};

/* HTTP ACK */
static unsigned char http1_ack[54] = {
  0xa0, 0xe0, 0xaf, 0x14, 0xe8, 0xc1, 0x18, 0x65, /* .......e */
  0x90, 0xda, 0x71, 0xd9, 0x08, 0x00, 0x45, 0x00, /* ..q...E. */
  0x00, 0x28, 0xf5, 0x88, 0x40, 0x00, 0x40, 0x06, /* .(..@.@. */
  0x38, 0x82, 0xc0, 0xa8, 0x4a, 0x1a, 0xc0, 0x00, /* 8...J... */
  0x42, 0x02, 0xca, 0xb4, 0x00, 0x50, 0xc9, 0x24, /* B....P.$ */
  0xb8, 0x96, 0xc2, 0x93, 0x71, 0x5d, 0x50, 0x10, /* ....q]P. */
  0x20, 0x00, 0x02, 0x5e, 0x00, 0x00              /*  ..^.. */
};

/* HTTP request */
static unsigned char http1_req[1116] = {
  0xa0, 0xe0, 0xaf, 0x14, 0xe8, 0xc1, 0x18, 0x65, /* .......e */
  0x90, 0xda, 0x71, 0xd9, 0x08, 0x00, 0x45, 0x00, /* ..q...E. */
  0x04, 0x4e, 0x05, 0xa7, 0x40, 0x00, 0x40, 0x06, /* .N..@.@. */
  0x24, 0x3e, 0xc0, 0xa8, 0x4a, 0x1a, 0xc0, 0x00, /* $>..J... */
  0x42, 0x02, 0xca, 0xb4, 0x00, 0x50, 0xc9, 0x24, /* B....P.$ */
  0xb8, 0x96, 0xc2, 0x93, 0x71, 0x5d, 0x50, 0x18, /* ....q]P. */
  0x20, 0x00, 0x2f, 0x14, 0x00, 0x00, 0x47, 0x45, /*  ./...GE */
  0x54, 0x20, 0x2f, 0x20, 0x48, 0x54, 0x54, 0x50, /* T / HTTP */
  0x2f, 0x31, 0x2e, 0x31, 0x0d, 0x0a, 0x48, 0x6f, /* /1.1..Ho */
  0x73, 0x74, 0x3a, 0x20, 0x77, 0x77, 0x77, 0x2e, /* st: www. */
  0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, 0x79, 0x6e, /* mercuryn */
  0x65, 0x77, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x0d, /* ews.com. */
  0x0a, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, /* .User-Ag */
  0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, /* ent: Moz */
  0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, /* illa/5.0 */
  0x20, 0x28, 0x4d, 0x61, 0x63, 0x69, 0x6e, 0x74, /*  (Macint */
  0x6f, 0x73, 0x68, 0x3b, 0x20, 0x49, 0x6e, 0x74, /* osh; Int */
  0x65, 0x6c, 0x20, 0x4d, 0x61, 0x63, 0x20, 0x4f, /* el Mac O */
  0x53, 0x20, 0x58, 0x20, 0x31, 0x30, 0x2e, 0x31, /* S X 10.1 */
  0x32, 0x3b, 0x20, 0x72, 0x76, 0x3a, 0x35, 0x35, /* 2; rv:55 */
  0x2e, 0x30, 0x29, 0x20, 0x47, 0x65, 0x63, 0x6b, /* .0) Geck */
  0x6f, 0x2f, 0x32, 0x30, 0x31, 0x30, 0x30, 0x31, /* o/201001 */
  0x30, 0x31, 0x20, 0x46, 0x69, 0x72, 0x65, 0x66, /* 01 Firef */
  0x6f, 0x78, 0x2f, 0x35, 0x35, 0x2e, 0x30, 0x0d, /* ox/55.0. */
  0x0a, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x3a, /* .Accept: */
  0x20, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x68, 0x74, /*  text/ht */
  0x6d, 0x6c, 0x2c, 0x61, 0x70, 0x70, 0x6c, 0x69, /* ml,appli */
  0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x78, /* cation/x */
  0x68, 0x74, 0x6d, 0x6c, 0x2b, 0x78, 0x6d, 0x6c, /* html+xml */
  0x2c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, /* ,applica */
  0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x78, 0x6d, 0x6c, /* tion/xml */
  0x3b, 0x71, 0x3d, 0x30, 0x2e, 0x39, 0x2c, 0x2a, /* ;q=0.9,. */
  0x2f, 0x2a, 0x3b, 0x71, 0x3d, 0x30, 0x2e, 0x38, /* /.;q=0.8 */
  0x0d, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, /* ..Accept */
  0x2d, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, /* -Languag */
  0x65, 0x3a, 0x20, 0x65, 0x6e, 0x2d, 0x55, 0x53, /* e: en-US */
  0x2c, 0x65, 0x6e, 0x3b, 0x71, 0x3d, 0x30, 0x2e, /* ,en;q=0. */
  0x35, 0x0d, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x70, /* 5..Accep */
  0x74, 0x2d, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, /* t-Encodi */
  0x6e, 0x67, 0x3a, 0x20, 0x67, 0x7a, 0x69, 0x70, /* ng: gzip */
  0x2c, 0x20, 0x64, 0x65, 0x66, 0x6c, 0x61, 0x74, /* , deflat */
  0x65, 0x0d, 0x0a, 0x43, 0x6f, 0x6f, 0x6b, 0x69, /* e..Cooki */
  0x65, 0x3a, 0x20, 0x6f, 0x70, 0x74, 0x69, 0x6d, /* e: optim */
  0x69, 0x7a, 0x65, 0x6c, 0x79, 0x45, 0x6e, 0x64, /* izelyEnd */
  0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x3d, 0x6f, /* UserId=o */
  0x65, 0x75, 0x31, 0x35, 0x30, 0x38, 0x31, 0x37, /* eu150817 */
  0x34, 0x34, 0x36, 0x30, 0x39, 0x35, 0x31, 0x72, /* 4460951r */
  0x30, 0x2e, 0x36, 0x39, 0x34, 0x34, 0x30, 0x35, /* 0.694405 */
  0x37, 0x33, 0x32, 0x34, 0x36, 0x33, 0x36, 0x37, /* 73246367 */
  0x33, 0x37, 0x3b, 0x20, 0x6f, 0x70, 0x74, 0x69, /* 37; opti */
  0x6d, 0x69, 0x7a, 0x65, 0x6c, 0x79, 0x53, 0x65, /* mizelySe */
  0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3d, 0x25, /* gments=% */
  0x37, 0x42, 0x25, 0x32, 0x32, 0x36, 0x37, 0x38, /* 7B%22678 */
  0x30, 0x31, 0x31, 0x31, 0x30, 0x31, 0x35, 0x25, /* 0111015% */
  0x32, 0x32, 0x25, 0x33, 0x41, 0x25, 0x32, 0x32, /* 22%3A%22 */
  0x66, 0x66, 0x25, 0x32, 0x32, 0x25, 0x32, 0x43, /* ff%22%2C */
  0x25, 0x32, 0x32, 0x36, 0x37, 0x39, 0x36, 0x33, /* %2267963 */
  0x30, 0x31, 0x30, 0x33, 0x39, 0x25, 0x32, 0x32, /* 01039%22 */
  0x25, 0x33, 0x41, 0x25, 0x32, 0x32, 0x65, 0x63, /* %3A%22ec */
  0x68, 0x6f, 0x62, 0x6f, 0x78, 0x25, 0x32, 0x32, /* hobox%22 */
  0x25, 0x32, 0x43, 0x25, 0x32, 0x32, 0x36, 0x37, /* %2C%2267 */
  0x38, 0x38, 0x30, 0x38, 0x31, 0x30, 0x37, 0x34, /* 88081074 */
  0x25, 0x32, 0x32, 0x25, 0x33, 0x41, 0x25, 0x32, /* %22%3A%2 */
  0x32, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x25, 0x32, /* 2false%2 */
  0x32, 0x25, 0x32, 0x43, 0x25, 0x32, 0x32, 0x36, /* 2%2C%226 */
  0x37, 0x38, 0x32, 0x32, 0x34, 0x32, 0x38, 0x34, /* 78224284 */
  0x35, 0x25, 0x32, 0x32, 0x25, 0x33, 0x41, 0x25, /* 5%22%3A% */
  0x32, 0x32, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, /* 22campai */
  0x67, 0x6e, 0x25, 0x32, 0x32, 0x25, 0x37, 0x44, /* gn%22%7D */
  0x3b, 0x20, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, /* ; optimi */
  0x7a, 0x65, 0x6c, 0x79, 0x42, 0x75, 0x63, 0x6b, /* zelyBuck */
  0x65, 0x74, 0x73, 0x3d, 0x25, 0x37, 0x42, 0x25, /* ets=%7B% */
  0x37, 0x44, 0x3b, 0x20, 0x5f, 0x67, 0x61, 0x3d, /* 7D; _ga= */
  0x47, 0x41, 0x31, 0x2e, 0x32, 0x2e, 0x31, 0x38, /* GA1.2.18 */
  0x33, 0x38, 0x36, 0x37, 0x37, 0x38, 0x30, 0x32, /* 38677802 */
  0x2e, 0x31, 0x35, 0x30, 0x38, 0x31, 0x37, 0x34, /* .1508174 */
  0x34, 0x36, 0x33, 0x3b, 0x20, 0x5f, 0x5f, 0x71, /* 463; __q */
  0x63, 0x61, 0x3d, 0x50, 0x30, 0x2d, 0x31, 0x36, /* ca=P0-16 */
  0x31, 0x36, 0x33, 0x31, 0x30, 0x36, 0x39, 0x34, /* 16310694 */
  0x2d, 0x31, 0x35, 0x30, 0x38, 0x31, 0x37, 0x34, /* -1508174 */
  0x34, 0x36, 0x33, 0x30, 0x32, 0x33, 0x3b, 0x20, /* 463023;  */
  0x5f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x6c, 0x79, /* _parsely */
  0x5f, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, /* _visitor */
  0x3d, 0x7b, 0x25, 0x32, 0x32, 0x69, 0x64, 0x25, /* ={%22id% */
  0x32, 0x32, 0x3a, 0x25, 0x32, 0x32, 0x31, 0x34, /* 22:%2214 */
  0x35, 0x33, 0x33, 0x64, 0x62, 0x30, 0x2d, 0x65, /* 533db0-e */
  0x38, 0x34, 0x62, 0x2d, 0x34, 0x35, 0x32, 0x61, /* 84b-452a */
  0x2d, 0x38, 0x64, 0x33, 0x39, 0x2d, 0x39, 0x32, /* -8d39-92 */
  0x34, 0x62, 0x62, 0x61, 0x65, 0x30, 0x30, 0x65, /* 4bbae00e */
  0x63, 0x66, 0x25, 0x32, 0x32, 0x25, 0x32, 0x43, /* cf%22%2C */
  0x25, 0x32, 0x32, 0x73, 0x65, 0x73, 0x73, 0x69, /* %22sessi */
  0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, /* on_count */
  0x25, 0x32, 0x32, 0x3a, 0x33, 0x25, 0x32, 0x43, /* %22:3%2C */
  0x25, 0x32, 0x32, 0x6c, 0x61, 0x73, 0x74, 0x5f, /* %22last_ */
  0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, /* session_ */
  0x74, 0x73, 0x25, 0x32, 0x32, 0x3a, 0x31, 0x35, /* ts%22:15 */
  0x30, 0x39, 0x36, 0x35, 0x32, 0x39, 0x38, 0x39, /* 09652989 */
  0x38, 0x35, 0x31, 0x7d, 0x3b, 0x20, 0x5f, 0x5f, /* 851}; __ */
  0x67, 0x61, 0x64, 0x73, 0x3d, 0x49, 0x44, 0x3d, /* gads=ID= */
  0x38, 0x66, 0x66, 0x33, 0x39, 0x32, 0x66, 0x37, /* 8ff392f7 */
  0x35, 0x37, 0x66, 0x63, 0x66, 0x31, 0x37, 0x37, /* 57fcf177 */
  0x3a, 0x54, 0x3d, 0x31, 0x35, 0x30, 0x38, 0x31, /* :T=15081 */
  0x37, 0x34, 0x34, 0x36, 0x33, 0x3a, 0x53, 0x3d, /* 74463:S= */
  0x41, 0x4c, 0x4e, 0x49, 0x5f, 0x4d, 0x62, 0x65, /* ALNI_Mbe */
  0x64, 0x71, 0x63, 0x35, 0x55, 0x47, 0x56, 0x69, /* dqc5UGVi */
  0x4d, 0x6c, 0x79, 0x4b, 0x2d, 0x53, 0x46, 0x6f, /* MlyK-SFo */
  0x63, 0x36, 0x57, 0x7a, 0x4f, 0x58, 0x68, 0x4d, /* c6WzOXhM */
  0x66, 0x51, 0x3b, 0x20, 0x5f, 0x63, 0x62, 0x5f, /* fQ; _cb_ */
  0x6c, 0x73, 0x3d, 0x31, 0x3b, 0x20, 0x5f, 0x63, /* ls=1; _c */
  0x62, 0x3d, 0x42, 0x59, 0x66, 0x58, 0x4d, 0x77, /* b=BYfXMw */
  0x42, 0x4e, 0x64, 0x53, 0x71, 0x5a, 0x42, 0x6f, /* BNdSqZBo */
  0x5a, 0x79, 0x70, 0x57, 0x3b, 0x20, 0x5f, 0x63, /* ZypW; _c */
  0x68, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, /* hartbeat */
  0x32, 0x3d, 0x2e, 0x31, 0x35, 0x30, 0x38, 0x31, /* 2=.15081 */
  0x37, 0x34, 0x34, 0x37, 0x35, 0x38, 0x31, 0x39, /* 74475819 */
  0x2e, 0x31, 0x35, 0x30, 0x39, 0x36, 0x35, 0x32, /* .1509652 */
  0x39, 0x38, 0x39, 0x32, 0x34, 0x35, 0x2e, 0x30, /* 989245.0 */
  0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, /* 00000000 */
  0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x2e, /* 0000001. */
  0x64, 0x68, 0x4c, 0x37, 0x2d, 0x44, 0x61, 0x50, /* dhL7-DaP */
  0x31, 0x58, 0x6f, 0x42, 0x6c, 0x58, 0x76, 0x70, /* 1XoBlXvp */
  0x55, 0x37, 0x55, 0x4b, 0x38, 0x66, 0x44, 0x69, /* U7UK8fDi */
  0x6d, 0x77, 0x65, 0x31, 0x3b, 0x20, 0x4f, 0x58, /* mwe1; OX */
  0x5f, 0x70, 0x6c, 0x67, 0x3d, 0x70, 0x6d, 0x3b, /* _plg=pm; */
  0x20, 0x6f, 0x70, 0x74, 0x69, 0x2d, 0x70, 0x6f, /*  opti-po */
  0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3d, 0x31, /* sition=1 */
  0x3b, 0x20, 0x6f, 0x70, 0x74, 0x69, 0x2d, 0x75, /* ; opti-u */
  0x73, 0x65, 0x72, 0x69, 0x64, 0x3d, 0x31, 0x66, /* serid=1f */
  0x37, 0x31, 0x31, 0x34, 0x63, 0x66, 0x2d, 0x36, /* 7114cf-6 */
  0x38, 0x35, 0x64, 0x2d, 0x34, 0x62, 0x32, 0x62, /* 85d-4b2b */
  0x2d, 0x39, 0x63, 0x39, 0x33, 0x2d, 0x65, 0x30, /* -9c93-e0 */
  0x38, 0x31, 0x62, 0x62, 0x61, 0x39, 0x65, 0x64, /* 81bba9ed */
  0x62, 0x33, 0x0d, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, /* b3..Conn */
  0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x20, /* ection:  */
  0x6b, 0x65, 0x65, 0x70, 0x2d, 0x61, 0x6c, 0x69, /* keep-ali */
  0x76, 0x65, 0x0d, 0x0a, 0x55, 0x70, 0x67, 0x72, /* ve..Upgr */
  0x61, 0x64, 0x65, 0x2d, 0x49, 0x6e, 0x73, 0x65, /* ade-Inse */
  0x63, 0x75, 0x72, 0x65, 0x2d, 0x52, 0x65, 0x71, /* cure-Req */
  0x75, 0x65, 0x73, 0x74, 0x73, 0x3a, 0x20, 0x31, /* uests: 1 */
  0x0d, 0x0a, 0x0d, 0x0a                          /* .... */
};

/* HTTP Req ACK */
static unsigned char http1_reqack[60] = {
  0x18, 0x65, 0x90, 0xda, 0x71, 0xd9, 0xa0, 0xe0, /* .e..q... */
  0xaf, 0x14, 0xe8, 0xc1, 0x08, 0x00, 0x45, 0x00, /* ......E. */
  0x00, 0x28, 0x09, 0x8c, 0x40, 0x00, 0x38, 0x06, /* .(..@.8. */
  0x2c, 0x7f, 0xc0, 0x00, 0x42, 0x02, 0xc0, 0xa8, /* ,...B... */
  0x4a, 0x1a, 0x00, 0x50, 0xca, 0xb4, 0xc2, 0x93, /* J..P.... */
  0x71, 0x5d, 0xc9, 0x24, 0xbc, 0xbc, 0x50, 0x10, /* q].$..P. */
  0x00, 0x3e, 0x1d, 0xfa, 0x00, 0x00, 0x00, 0x00, /* .>...... */
  0x00, 0x00, 0x00, 0x00                          /* .... */
};

/* HTTP Response */
static unsigned char http1_resp[1514] = {
  0x18, 0x65, 0x90, 0xda, 0x71, 0xd9, 0xa0, 0xe0, /* .e..q... */
  0xaf, 0x14, 0xe8, 0xc1, 0x08, 0x00, 0x45, 0x00, /* ......E. */
  0x05, 0xdc, 0x09, 0x8d, 0x40, 0x00, 0x38, 0x06, /* ....@.8. */
  0x26, 0xca, 0xc0, 0x00, 0x42, 0x02, 0xc0, 0xa8, /* &...B... */
  0x4a, 0x1a, 0x00, 0x50, 0xca, 0xb4, 0xc2, 0x93, /* J..P.... */
  0x71, 0x5d, 0xc9, 0x24, 0xbc, 0xbc, 0x50, 0x10, /* q].$..P. */
  0x00, 0x3e, 0x27, 0x0d, 0x00, 0x00, 0x48, 0x54, /* .>'...HT */
  0x54, 0x50, 0x2f, 0x31, 0x2e, 0x31, 0x20, 0x32, /* TP/1.1 2 */
  0x30, 0x30, 0x20, 0x4f, 0x4b, 0x0d, 0x0a, 0x53, /* 00 OK..S */
  0x65, 0x72, 0x76, 0x65, 0x72, 0x3a, 0x20, 0x6e, /* erver: n */
  0x67, 0x69, 0x6e, 0x78, 0x0d, 0x0a, 0x44, 0x61, /* ginx..Da */
  0x74, 0x65, 0x3a, 0x20, 0x54, 0x75, 0x65, 0x2c, /* te: Tue, */
  0x20, 0x30, 0x37, 0x20, 0x4e, 0x6f, 0x76, 0x20, /*  07 Nov  */
  0x32, 0x30, 0x31, 0x37, 0x20, 0x30, 0x32, 0x3a, /* 2017 02: */
  0x33, 0x39, 0x3a, 0x32, 0x33, 0x20, 0x47, 0x4d, /* 39:23 GM */
  0x54, 0x0d, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x65, /* T..Conte */
  0x6e, 0x74, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x3a, /* nt-Type: */
  0x20, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x68, 0x74, /*  text/ht */
  0x6d, 0x6c, 0x3b, 0x20, 0x63, 0x68, 0x61, 0x72, /* ml; char */
  0x73, 0x65, 0x74, 0x3d, 0x55, 0x54, 0x46, 0x2d, /* set=UTF- */
  0x38, 0x0d, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x65, /* 8..Conte */
  0x6e, 0x74, 0x2d, 0x4c, 0x65, 0x6e, 0x67, 0x74, /* nt-Lengt */
  0x68, 0x3a, 0x20, 0x36, 0x37, 0x34, 0x32, 0x37, /* h: 67427 */
  0x0d, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, /* ..Connec */
  0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x6b, 0x65, /* tion: ke */
  0x65, 0x70, 0x2d, 0x61, 0x6c, 0x69, 0x76, 0x65, /* ep-alive */
  0x0d, 0x0a, 0x58, 0x2d, 0x68, 0x61, 0x63, 0x6b, /* ..X-hack */
  0x65, 0x72, 0x3a, 0x20, 0x49, 0x66, 0x20, 0x79, /* er: If y */
  0x6f, 0x75, 0x27, 0x72, 0x65, 0x20, 0x72, 0x65, /* ou're re */
  0x61, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, /* ading th */
  0x69, 0x73, 0x2c, 0x20, 0x79, 0x6f, 0x75, 0x20, /* is, you  */
  0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x20, 0x76, /* should v */
  0x69, 0x73, 0x69, 0x74, 0x20, 0x61, 0x75, 0x74, /* isit aut */
  0x6f, 0x6d, 0x61, 0x74, 0x74, 0x69, 0x63, 0x2e, /* omattic. */
  0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x6f, 0x62, 0x73, /* com/jobs */
  0x20, 0x61, 0x6e, 0x64, 0x20, 0x61, 0x70, 0x70, /*  and app */
  0x6c, 0x79, 0x20, 0x74, 0x6f, 0x20, 0x6a, 0x6f, /* ly to jo */
  0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x66, /* in the f */
  0x75, 0x6e, 0x2c, 0x20, 0x6d, 0x65, 0x6e, 0x74, /* un, ment */
  0x69, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x69, 0x73, /* ion this */
  0x20, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, /*  header. */
  0x0d, 0x0a, 0x58, 0x2d, 0x50, 0x6f, 0x77, 0x65, /* ..X-Powe */
  0x72, 0x65, 0x64, 0x2d, 0x42, 0x79, 0x3a, 0x20, /* red-By:  */
  0x57, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x65, 0x73, /* WordPres */
  0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x20, 0x56, 0x49, /* s.com VI */
  0x50, 0x20, 0x3c, 0x68, 0x74, 0x74, 0x70, 0x73, /* P <https */
  0x3a, 0x2f, 0x2f, 0x76, 0x69, 0x70, 0x2e, 0x77, /* ://vip.w */
  0x6f, 0x72, 0x64, 0x70, 0x72, 0x65, 0x73, 0x73, /* ordpress */
  0x2e, 0x63, 0x6f, 0x6d, 0x3e, 0x0d, 0x0a, 0x4c, /* .com>..L */
  0x69, 0x6e, 0x6b, 0x3a, 0x20, 0x3c, 0x68, 0x74, /* ink: <ht */
  0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x77, 0x77, /* tps://ww */
  0x77, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x75, 0x72, /* w.mercur */
  0x79, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x63, 0x6f, /* ynews.co */
  0x6d, 0x2f, 0x77, 0x70, 0x2d, 0x6a, 0x73, 0x6f, /* m/wp-jso */
  0x6e, 0x2f, 0x3e, 0x3b, 0x20, 0x72, 0x65, 0x6c, /* n/>; rel */
  0x3d, 0x22, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, /* ="https: */
  0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x2e, /* //api.w. */
  0x6f, 0x72, 0x67, 0x2f, 0x22, 0x0d, 0x0a, 0x4c, /* org/"..L */
  0x69, 0x6e, 0x6b, 0x3a, 0x20, 0x3c, 0x68, 0x74, /* ink: <ht */
  0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x77, 0x70, 0x2e, /* tp://wp. */
  0x6d, 0x65, 0x2f, 0x37, 0x53, 0x68, 0x4a, 0x4a, /* me/7ShJJ */
  0x3e, 0x3b, 0x20, 0x72, 0x65, 0x6c, 0x3d, 0x73, /* >; rel=s */
  0x68, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x6e, 0x6b, /* hortlink */
  0x0d, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, /* ..Conten */
  0x74, 0x2d, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, /* t-Encodi */
  0x6e, 0x67, 0x3a, 0x20, 0x67, 0x7a, 0x69, 0x70, /* ng: gzip */
  0x0d, 0x0a, 0x58, 0x2d, 0x72, 0x71, 0x3a, 0x20, /* ..X-rq:  */
  0x73, 0x6a, 0x63, 0x31, 0x20, 0x38, 0x39, 0x20, /* sjc1 89  */
  0x31, 0x30, 0x34, 0x20, 0x33, 0x31, 0x33, 0x38, /* 104 3138 */
  0x0d, 0x0a, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2d, /* ..Cache- */
  0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x3a, /* Control: */
  0x20, 0x6d, 0x61, 0x78, 0x2d, 0x61, 0x67, 0x65, /*  max-age */
  0x3d, 0x33, 0x30, 0x30, 0x2c, 0x20, 0x6d, 0x75, /* =300, mu */
  0x73, 0x74, 0x2d, 0x72, 0x65, 0x76, 0x61, 0x6c, /* st-reval */
  0x69, 0x64, 0x61, 0x74, 0x65, 0x0d, 0x0a, 0x41, /* idate..A */
  0x67, 0x65, 0x3a, 0x20, 0x32, 0x35, 0x0d, 0x0a, /* ge: 25.. */
  0x58, 0x2d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x3a, /* X-Cache: */
  0x20, 0x68, 0x69, 0x74, 0x0d, 0x0a, 0x56, 0x61, /*  hit..Va */
  0x72, 0x79, 0x3a, 0x20, 0x41, 0x63, 0x63, 0x65, /* ry: Acce */
  0x70, 0x74, 0x2d, 0x45, 0x6e, 0x63, 0x6f, 0x64, /* pt-Encod */
  0x69, 0x6e, 0x67, 0x0d, 0x0a, 0x41, 0x63, 0x63, /* ing..Acc */
  0x65, 0x70, 0x74, 0x2d, 0x52, 0x61, 0x6e, 0x67, /* ept-Rang */
  0x65, 0x73, 0x3a, 0x20, 0x62, 0x79, 0x74, 0x65, /* es: byte */
  0x73, 0x0d, 0x0a, 0x0d, 0x0a, 0x1f, 0x8b, 0x08, /* s....... */
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xec, /* ........ */
  0xbd, 0x69, 0x97, 0xe2, 0xba, 0x92, 0x2e, 0xfc, /* .i...... */
  0xb9, 0xfb, 0x57, 0x64, 0xd7, 0x59, 0xbd, 0xce, /* ..Wd.Y.. */
  0xd9, 0x9d, 0x03, 0x66, 0x26, 0xab, 0xfa, 0xec, /* ...f&... */
  0x75, 0xe5, 0x09, 0x0c, 0x18, 0x30, 0x60, 0x48, /* u....0`H */
  0xe8, 0xee, 0xb7, 0x17, 0x18, 0x63, 0x9b, 0xc9, /* .....c.. */
  0x14, 0x90, 0x69, 0xa0, 0x56, 0xfd, 0xf7, 0x37, /* ..i.V..7 */
  0x42, 0xb6, 0xc1, 0x36, 0x66, 0xca, 0xaa, 0xd3, /* B..6f... */
  0x7d, 0x3f, 0xdc, 0xdc, 0x9b, 0xf2, 0x24, 0x85, /* }?....$. */
  0x42, 0xa1, 0x50, 0x28, 0x24, 0x3d, 0x92, 0xfe, /* B.P($=.. */
  0xe9, 0x9f, 0xfe, 0xe9, 0xdf, 0xff, 0x85, 0xaf, /* ........ */
  0x73, 0xed, 0x5e, 0x43, 0x78, 0x30, 0x37, 0xf3, /* s.^Cx07. */
  0xd9, 0x9f, 0xff, 0xfc, 0x4f, 0xf0, 0x0a, 0xef, /* ....O... */
  0x1e, 0x66, 0x83, 0x85, 0xf1, 0xf7, 0x2f, 0xfa, /* .f..../. */
  0xe2, 0x59, 0x6d, 0x7d, 0xf1, 0x5e, 0xeb, 0x83, /* .Ym}.^.. */
  0x11, 0xbd, 0xfb, 0xa7, 0x7f, 0x9f, 0xeb, 0x9b, /* ........ */
  0xc1, 0x83, 0x66, 0x0e, 0x56, 0x6b, 0x7d, 0xf3, /* ..f.Vk}. */
  0xf7, 0x2f, 0x6a, 0x5b, 0x7c, 0x2e, 0x7c, 0xf9, /* ./j[|.|. */
  0xd3, 0x7d, 0xbb, 0x18, 0xcc, 0xf5, 0xbf, 0x7f, /* .}...... */
  0x19, 0x2c, 0x97, 0x33, 0x4b, 0x1b, 0x6c, 0x2c, /* .,.3K.l, */
  0x7b, 0xf1, 0x8c, 0x6f, 0xbe, 0x3c, 0x58, 0x23, /* {..o.<X# */
  0xfa, 0xd6, 0x7b, 0xd2, 0xec, 0xc5, 0x46, 0x5f, /* ..{...F_ */
  0x40, 0xdc, 0x8d, 0xa9, 0xcf, 0xf5, 0x95, 0xf6, /* @....... */
  0xbe, 0xda, 0x2d, 0x74, 0x67, 0x1d, 0x26, 0xf2, /* ..-tg.&. */
  0x61, 0xe9, 0xce, 0xd2, 0x5e, 0x6d, 0x02, 0xc1, /* a...^m.. */
  0x1d, 0x6b, 0xb4, 0x31, 0xff, 0x3e, 0xd2, 0x3f, /* .k.1.>.? */
  0x2c, 0x4d, 0x7f, 0xa6, 0x0f, 0x4f, 0x0f, 0xd6, /* ,M...O.. */
  0xc2, 0xda, 0x58, 0x83, 0xd9, 0xf3, 0x5a, 0x1b, /* ..X...Z. */
  0xcc, 0xf4, 0xbf, 0x27, 0xbf, 0xfc, 0x79, 0xe0, /* ...'..y. */
  0xd0, 0x25, 0x33, 0x5f, 0x7f, 0x0c, 0x66, 0xd6, /* .%3_..f. */
  0x68, 0xb0, 0xd1, 0x5f, 0x98, 0x64, 0x80, 0x56, /* h.._.d.V */
  0x86, 0xcd, 0xa6, 0xb3, 0x62, 0x5e, 0x60, 0x53, /* ....b^`S */
  0xaf, 0xf9, 0x24, 0x9f, 0x14, 0x39, 0x96, 0x64, /* ..$..9.d */
  0xf9, 0x24, 0x9f, 0x16, 0xd2, 0x42, 0xea, 0x35, /* .$...B.5 */
  0xc5, 0xa5, 0xbf, 0x3c, 0x24, 0xdc, 0x8c, 0xaf, /* ...<$... */
  0xb5, 0x95, 0xb5, 0xdc, 0x3c, 0xac, 0x57, 0xda, /* ....<.W. */
  0xdf, 0xbf, 0x24, 0x12, 0xda, 0x68, 0xf1, 0x62, /* ..$..h.b */
  0x2f, 0x37, 0xd6, 0xdc, 0xda, 0xeb, 0xb3, 0xdd, /* /7...... */
  0x8b, 0x66, 0xcf, 0x13, 0x93, 0x75, 0x22, 0x97, /* .f...u". */
  0x2f, 0x30, 0xc9, 0x64, 0x92, 0x49, 0x66, 0x5e, /* /0.d.If^ */
  0x26, 0x98, 0x8d, 0x84, 0x1b, 0xe9, 0xcf, 0x7f, /* &....... */
  0xdf, 0x58, 0x9b, 0x99, 0xfe, 0x67, 0xdb, 0xd4, /* .X...g.. */
  0x1f, 0x64, 0x37, 0x9f, 0x0f, 0x35, 0xc8, 0xe8, /* .d7..5.. */
  0xc3, 0xf3, 0x03, 0x3b, 0xd8, 0x3d, 0x90, 0x95, /* ...;.=.. */
  0x0e, 0x5c, 0xc2, 0xf3, 0xd3, 0xc3, 0x1a, 0x73, /* .\.....s */
  0x0a, 0xd7, 0xe1, 0xfb, 0xda, 0x5a, 0xe8, 0x6b, /* .....Z.k */
  0xb8, 0x03, 0x26, 0xf5, 0xd5, 0x66, 0x60, 0x2d, /* ..&..f`- */
  0xe6, 0x70, 0xf7, 0xf4, 0x30, 0xb3, 0xc6, 0xfa, /* .p..0... */
  0x7a, 0xb3, 0x9b, 0xe9, 0x0f, 0x83, 0xc5, 0x08, /* z....... */
  0x72, 0x31, 0xc7, 0xd7, 0x83, 0xd5, 0xee, 0xdf, /* r1...... */
  0x13, 0x6e, 0x12, 0xff, 0xec, 0xf3, 0xb9, 0xd9, /* .n...... */
  0x2d, 0xf5, 0xbf, 0xff, 0x75, 0xa3, 0x6f, 0x37, /* -...u.o7 */
  0x89, 0xc9, 0xe0, 0x63, 0xe0, 0xbe, 0xfd, 0xeb, /* ...c.... */
  0x9f, 0xff, 0x9c, 0xf8, 0xb7, 0x87, 0x7f, 0xff, /* ........ */
  0x97, 0xff, 0xe0, 0x78, 0xd2, 0x26, 0xff, 0xf1, /* ...x.&.. */
  0xf0, 0x6f, 0x89, 0x7f, 0xfe, 0x18, 0xac, 0x1e, /* .o...... */
  0xdc, 0x8f, 0x25, 0x7d, 0xb6, 0xd4, 0x57, 0xeb, /* ..%}..W. */
  0x87, 0xbf, 0x3f, 0xfc, 0xf8, 0xb2, 0xde, 0x40, /* ..?....@ */
  0xa9, 0x69, 0x8d, 0xc1, 0xc6, 0xfc, 0xf2, 0xf5, /* .i...... */
  0x8b, 0xb9, 0xd9, 0x2c, 0xd7, 0x5f, 0xff, 0x33, /* ...,._.3 */
  0xf1, 0x9f, 0x89, 0xc1, 0x1a, 0x8a, 0x7a, 0xfd, /* ......z. */
  0x32, 0xb2, 0x0c, 0x6b, 0x33, 0x98, 0x8d, 0xad, /* 2..k3... */
  0xd5, 0x7a, 0x33, 0xd7, 0x47, 0xd6, 0x00, 0xf3, /* .z3.G... */
  0xff, 0x9f, 0x89, 0xe5, 0xca, 0x1e, 0xfd, 0x67, /* .......g */
  0xc2, 0x8d, 0xfa, 0xe5, 0xe7, 0x37, 0x4c, 0xea, /* .....7L. */
  0xbf, 0xfe, 0xeb, 0x4f, 0x4c, 0xe4, 0x20, 0x88, /* ...OL. . */
  0x7f, 0x46, 0x41, 0x22, 0xfb, 0x7f, 0xbe, 0x2c, /* .FA"..., */
  0x06, 0x1f, 0xcf, 0xcb, 0x95, 0x35, 0x07, 0xe6, /* .....5.. */
  0x21, 0x57, 0x2f, 0x03, 0x6d, 0x63, 0x7d, 0xe8, /* !W/.mc}. */
  0x2f, 0x40, 0x6d, 0x63, 0xaf, 0xd6, 0xcf, 0x4b, /* /@mc...K */
  0x4b, 0x9b, 0xae, 0x41, 0x4d, 0x3e, 0xfe, 0x1c, /* K..AM>.. */
  0x3c, 0x9d, 0x09, 0xba, 0x59, 0xe9, 0x8b, 0x91, /* <...Y... */
  0xb5, 0x30, 0xce, 0x84, 0x3a, 0xa1, 0xf4, 0xd5, /* .0..:... */
  0xb4, 0x3f, 0xf4, 0x55, 0x4c, 0xc8, 0x20, 0x21, /* .?.UL. ! */
  0x3f, 0xd0, 0x8f, 0xe1, 0x40, 0x9b, 0x1a, 0x2b, /* ?...@..+ */
  0xfb, 0x7d, 0x31, 0x7a, 0xd6, 0xec, 0x99, 0xbd, /* .}1z.... */
  0xfa, 0xfa, 0x97, 0xf1, 0x00, 0xff, 0xfb, 0xe6, /* ........ */
  0x3d, 0x65, 0x73, 0xc3, 0xfc, 0x38, 0xf5, 0xf3, /* =es..8.. */
  0xff, 0x8c, 0x41, 0x91, 0x9e, 0xc7, 0x03, 0x4d, /* ..A....M */
  0xff, 0xe1, 0xdd, 0xcd, 0xad, 0xd9, 0xee, 0xab, /* ........ */
  0x05, 0x02, 0xb1, 0xed, 0xc5, 0x37, 0xd0, 0x96, /* .....7.. */
  0xaf, 0xef, 0xab, 0xd9, 0xdf, 0x5e, 0x5e, 0x12, /* .....^^. */
  0xf8, 0x79, 0x9d, 0xf0, 0x3e, 0xbc, 0xe8, 0xf6, /* .y..>... */
  0xe6, 0x8f, 0x8b, 0x5f, 0xff, 0x62, 0xe9, 0x63, /* ..._.b.c */
  0x6b, 0xfb, 0xc7, 0xc3, 0xd8, 0x5e, 0xcd, 0x07, /* k....^.. */
  0x9b, 0xbf, 0x7d, 0xd1, 0xe7, 0x43, 0x7d, 0x34, /* ..}..C}4 */
  0xd2, 0x47, 0xcf, 0xf6, 0x12, 0x4a, 0x1c, 0x0a, /* .G...J.. */
  0xf7, 0xcb, 0x1f, 0x4f, 0x18, 0x17, 0x34, 0x7a, /* ...O..4z */
  0xf0, 0x15, 0x63, 0x27, 0x36, 0xab, 0x77, 0x1d, /* ..c'6.w. */
  0x3f, 0x7c, 0x1b, 0x0e, 0xd6, 0x7a, 0x2e, 0xf3, /* ?|...z.. */
  0x44, 0x88, 0x40, 0xe0, 0xaf, 0x4a, 0x24, 0xf8, /* D.@..J$. */
  0xd7, 0x21, 0x4e, 0x3b, 0x29, 0x7f, 0xc8, 0x46, /* .!N;)..F */
  0xa1, 0xc5, 0x6f, 0x7b, 0xf0, 0x82, 0x2b, 0xe0, /* ..o{..+. */
  0xc7, 0x5e, 0xb1, 0xb6, 0xe9, 0xbd, 0x71, 0xc2, /* .^....q. */
  0x48, 0x5d, 0x67, 0xe0, 0x91, 0x2d, 0xe1, 0x4b, /* H]g..-.K */
  0xb9, 0xb9, 0xe8, 0xbd, 0xd5, 0x1c, 0xbc, 0xa5, /* ........ */
  0x14, 0x74, 0xfc, 0x87, 0x48, 0xfd, 0xd4, 0x36, /* .t..H..6 */
  0xdb, 0x5f, 0x15, 0x94, 0xfd, 0x9c, 0x81, 0xc7, /* ._...... */
  0x92, 0x0d, 0xff, 0xf4, 0x8d, 0xa2, 0x39, 0xeb, /* ......9. */
  0x75, 0x95, 0xaa, 0xca, 0xf5, 0x39, 0x78, 0x1e, /* u....9x. */
  0x0e, 0x30, 0x24, 0xdf, 0xb7, 0x07, 0xc5, 0x8e, /* .0$..... */
  0xc9, 0xe6, 0x33, 0x7c, 0x16, 0xa8, 0x14, 0x73, /* ..3|...s */
  0x34, 0xfe, 0x74, 0x50, 0x4c, 0x32, 0xba, 0x34, /* 4.tPL2.4 */
  0x50, 0x39, 0x67, 0x0d, 0x29, 0x7d, 0x50, 0xd2, /* P9g.)}P. */
  0xf3, 0xe2, 0xf6, 0xa3, 0x97, 0x12, 0x07, 0x8a, /* ........ */
  0x58, 0xd3                                      /* X. */
};


static appid_test_transaction_t http_trans = {
  { { http1_syn, sizeof(http1_syn), 0, 0},
    { http1_synack, sizeof(http1_synack), 1, 0 },
    { http1_ack, sizeof(http1_ack), 0, 0 },
    { http1_req, sizeof(http1_req), 0, 0 },
    { http1_reqack, sizeof(http1_reqack), 1, 676 },
    { http1_resp, sizeof(http1_resp), 1, 676 },
  },
  6,      // pkt_count
  51892,  // sport
  80      // dport
};

#endif // APPID_HTTP_TEST1

#ifdef APPID_DNS_TEST1

/* DNS request, sport=65353, dport=53*/
static unsigned char dns_req1[79] = {
  0x00, 0x25, 0x90, 0x2e, 0x07, 0xf9, 0x18, 0x65, /* .%.....e */
  0x90, 0xda, 0x71, 0xd9, 0x08, 0x00, 0x45, 0x00, /* ..q...E. */
  0x00, 0x41, 0x1d, 0x6a, 0x00, 0x00, 0xff, 0x11, /* .A.j.... */
  0x8a, 0xd6, 0xc0, 0xa8, 0x4a, 0x18, 0xc0, 0xa8, /* ....J... */
  0x48, 0x02, 0xff, 0x49, 0x00, 0x35, 0x00, 0x2d, /* H..I.5.- */
  0xd2, 0x69, 0xfc, 0xd8, 0x01, 0x00, 0x00, 0x01, /* .i...... */
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x77, /* .......w */
  0x77, 0x77, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x75, /* ww.mercu */
  0x72, 0x79, 0x6e, 0x65, 0x77, 0x73, 0x03, 0x63, /* rynews.c */
  0x6f, 0x6d, 0x00, 0x00, 0x01, 0x00, 0x01        /* om..... */
};

/* DNS response */
static unsigned char dns_resp1[95] = {
  0x18, 0x65, 0x90, 0xda, 0x71, 0xd9, 0x00, 0x25, /* .e..q..% */
  0x90, 0x2e, 0x07, 0xf9, 0x08, 0x00, 0x45, 0x00, /* ......E. */
  0x00, 0x51, 0x64, 0x42, 0x40, 0x00, 0x40, 0x11, /* .QdB@.@. */
  0xc2, 0xee, 0xc0, 0xa8, 0x48, 0x02, 0xc0, 0xa8, /* ....H... */
  0x4a, 0x18, 0x00, 0x35, 0xff, 0x49, 0x00, 0x3d, /* J..5.I.= */
  0x35, 0x05, 0xfc, 0xd8, 0x81, 0x80, 0x00, 0x01, /* 5....... */
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x03, 0x77, /* .......w */
  0x77, 0x77, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x75, /* ww.mercu */
  0x72, 0x79, 0x6e, 0x65, 0x77, 0x73, 0x03, 0x63, /* rynews.c */
  0x6f, 0x6d, 0x00, 0x00, 0x01, 0x00, 0x01, 0xc0, /* om...... */
  0x0c, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x01, /* ........ */
  0x07, 0x00, 0x04, 0xc0, 0x00, 0x42, 0x02        /* .....B. */
};

static appid_test_transaction_t dns_trans = {
  { { dns_req1, sizeof(dns_req1), 0, 617 },
    { dns_resp1, sizeof(dns_resp1), 1, 617 },
  },
  2,      // pkt_count
  65353,  // sport
  53      // dport
};

#endif // APPID_DNS_TEST1

static void redir_headers_init(pen_app_redir_header_v1_full_t *headers, uint8_t* pkt)
{
    memset(headers, 0, PEN_RAW_REDIR_HEADER_V1_FULL_SIZE);

    // init MAC addrs from pkt
    for (int i = 0; i < 6; i++) {
        headers->app.h_dest[i] = pkt[i];
        headers->app.h_source[i] = pkt[i+6];
    }
    headers->app.h_proto = htons(PEN_APP_REDIR_ETHERTYPE);

    // raw format, not proxy
    headers->ver.hdr_len = htons(PEN_RAW_REDIR_HEADER_V1_FULL_SIZE -
                                 PEN_APP_REDIR_HEADER_SIZE);
    headers->ver.format = PEN_RAW_REDIR_V1_FORMAT;

    headers->raw.flow_id = htonl(1);
    headers->raw.flags = htons(PEN_APP_REDIR_L3_CSUM_CHECKED |
                               PEN_APP_REDIR_L4_CSUM_CHECKED);
    headers->raw.vrf = htons(0);
}

#if 0
static void flow_key_init(hal::flow_key_t* key, uint8_t* pkt, bool is_resp)
{
    memset(key, 0, sizeof(*key));
    key->flow_type = hal::FLOW_TYPE_V4;
    key->dir = is_resp ? 1 : 0;
    key->vrf_id = 0;
    for (int i = 0; i < 4; i++) {
        // TODO: endianness?
        key->sip.v6_addr.addr8[i] = pkt[i+26];
        key->dip.v6_addr.addr8[i] = pkt[i+30];
    }
    switch (pkt[23]) {
    case 6:
        key->proto = types::IPPROTO_TCP;
        key->sport = is_resp ? 80 : 51892;
        key->dport = is_resp ? 51892 : 80; // HTTP
        break;
    case 17:
        key->proto = types::IPPROTO_UDP;
        key->sport = is_resp ? 53 : 65353;
        key->dport = is_resp ? 65353 : 53; // DNS
        break;
    default:
        assert(0);
        break;
    }
}
#endif

static uint32_t flow_key_and_pkt_init(hal::flow_key_t* key, uint8_t* pkt,
                                      appid_test_packet_t &appid_pkt,
                                      uint16_t sport, uint16_t dport)
{
    // Initialize flow key
    memset(key, 0, sizeof(*key));
    key->flow_type = hal::FLOW_TYPE_V4;
    key->dir = appid_pkt.is_resp ? 1 : 0;
    key->vrf_id = 0;
    for (int i = 0; i < 4; i++) {
        key->sip.v6_addr.addr8[i] = appid_pkt.pkt[i+26];
        key->dip.v6_addr.addr8[i] = appid_pkt.pkt[i+30];
    }
    switch (appid_pkt.pkt[23]) {
    case 6:
        key->proto = types::IPPROTO_TCP;
        key->sport = appid_pkt.is_resp ? dport : sport;
        key->dport = appid_pkt.is_resp ? sport : dport;
        break;
    case 17:
        key->proto = types::IPPROTO_UDP;
        key->sport = appid_pkt.is_resp ? dport : sport;
        key->dport = appid_pkt.is_resp ? sport : dport;
        break;
    default:
        assert(0);
        break;
    }

    // Now fill the packet
    redir_headers_init((pen_app_redir_header_v1_full_t*)pkt, appid_pkt.pkt);
    memcpy(pkt+PEN_RAW_REDIR_HEADER_V1_FULL_SIZE, appid_pkt.pkt, appid_pkt.pkt_len);

    return appid_pkt.pkt_len + PEN_RAW_REDIR_HEADER_V1_FULL_SIZE;
}

#if 0
// execute flow miss pipeline
TEST_F(appid_test, execute_flow_miss) {
    hal_ret_t rc;
    fte::ctx_t ctx;
    fte::cpu_rxhdr_t rxhdr;
    hal::flow_key_t flow_key;

    flow_key_init(&flow_key, sample_syn1+PEN_RAW_REDIR_HEADER_V1_FULL_SIZE, false);
    redir_headers_init((pen_app_redir_header_v1_full_t*)sample_syn1,
                       sample_syn1+PEN_RAW_REDIR_HEADER_V1_FULL_SIZE);

//    hal::app_redir::init();
//    memset(&ctx, 0, sizeof(ctx));
    rxhdr.lif = hal::SERVICE_LIF_END; //hal::SERVICE_LIF_APP_REDIR;
    ctx.init(&rxhdr, (uint8_t*) sample_syn1, sample_syn1_size,
             nullptr, nullptr, nullptr, 0);
    ctx.set_key(flow_key);

//    ctx.set_appid_state(hal::APPID_STATE_NOT_NEEDED);
//    rc = hal::app_redir::exec_flow_miss(ctx);
//    EXPECT_EQ(rc, HAL_RET_OK);
//    EXPECT_EQ(ctx.appid_state(), hal::APPID_STATE_NOT_NEEDED);

    ctx.appid_info().state_ = hal::APPID_STATE_NEEDED;
    rc = hal::app_redir::exec_appid_start(ctx);
    EXPECT_EQ(rc, HAL_RET_OK);
    EXPECT_EQ(ctx.appid_info().state_, hal::APPID_STATE_IN_PROGRESS);
}

// execute L7 redirect pipeline
TEST_F(appid_test, execute_flow_hit) {
    hal_ret_t rc;
    fte::ctx_t ctx;
    fte::cpu_rxhdr_t rxhdr;
    hal::flow_key_t flow_key;

    flow_key_init(&flow_key, sample_req1+PEN_RAW_REDIR_HEADER_V1_FULL_SIZE, false);
    redir_headers_init((pen_app_redir_header_v1_full_t*)sample_req1,
                       sample_req1+PEN_RAW_REDIR_HEADER_V1_FULL_SIZE);

//    hal::app_redir::init();
//    memset(&ctx, 0, sizeof(ctx));
    rxhdr.lif = hal::SERVICE_LIF_END; //hal::SERVICE_LIF_APP_REDIR;
    ctx.init(&rxhdr, (uint8_t*) sample_req1, sample_req1_size,
             nullptr, nullptr, nullptr, 0);
    ctx.set_key(flow_key);

    ctx.appid_info().state_ = hal::APPID_STATE_IN_PROGRESS;
    rc = hal::app_redir::exec_appid_start(ctx);
    EXPECT_EQ(rc, HAL_RET_OK);
    EXPECT_EQ(ctx.appid_info().state_, hal::APPID_STATE_FOUND);
    EXPECT_EQ(fte::appid_info_id(ctx.appid_info()), 80);
    EXPECT_EQ(ctx.appid_info().id_count_, 1);
}

// execute full flow pipeline
TEST_F(appid_test, execute_flow_complete) {
    hal_ret_t rc;
    fte::ctx_t ctx;
    fte::cpu_rxhdr_t rxhdr;
    hal::flow_key_t flow_key;

//    hal::app_redir::init();
//    memset(&ctx, 0, sizeof(ctx));

    // SYN packet
    flow_key_init(&flow_key, sample_syn1+PEN_RAW_REDIR_HEADER_V1_FULL_SIZE, false);
    redir_headers_init((pen_app_redir_header_v1_full_t*)sample_syn1,
                       sample_syn1+PEN_RAW_REDIR_HEADER_V1_FULL_SIZE);
    rxhdr.lif = hal::SERVICE_LIF_END; //hal::SERVICE_LIF_APP_REDIR;
    ctx.init(&rxhdr, (uint8_t*) sample_syn1, sample_syn1_size,
             nullptr, nullptr, nullptr, 0);
    ctx.set_key(flow_key);

    ctx.appid_info().state_ = hal::APPID_STATE_NEEDED;
    rc = hal::app_redir::exec_appid_start(ctx);
    EXPECT_EQ(rc, HAL_RET_OK);
    EXPECT_EQ(ctx.appid_info().state_, hal::APPID_STATE_IN_PROGRESS);
    EXPECT_EQ(fte::appid_info_id(ctx.appid_info()), 0);
    EXPECT_EQ(ctx.appid_info().id_count_, 0);


    // Request packet
    flow_key_init(&flow_key, sample_req1+PEN_RAW_REDIR_HEADER_V1_FULL_SIZE, false);
    redir_headers_init((pen_app_redir_header_v1_full_t*)sample_req1,
                       sample_req1+PEN_RAW_REDIR_HEADER_V1_FULL_SIZE);
    rxhdr.lif = hal::SERVICE_LIF_END; //hal::SERVICE_LIF_APP_REDIR;
    ctx.init(&rxhdr, (uint8_t*) sample_req1, sample_req1_size,
             nullptr, nullptr, nullptr, 0);
    ctx.set_key(flow_key);

    rc = hal::app_redir::exec_appid_continue(ctx);
    EXPECT_EQ(rc, HAL_RET_OK);
    EXPECT_NE(ctx.appid_info().state_, hal::APPID_STATE_ABORT);
    EXPECT_EQ(fte::appid_info_id(ctx.appid_info()), 676); // HTTP
    EXPECT_GT(ctx.appid_info().id_count_, 0);

    // TODO: test PARTIAL app ids, and nested app ids
}

#endif

// execute full flow pipeline
void appid_test_transaction(appid_test_transaction_t& trans)
{
    hal_ret_t rc;
    fte::ctx_t ctx;
    fte::cpu_rxhdr_t rxhdr;
    hal::flow_key_t flow_key;
    unsigned char pkt[2000];

    rxhdr.lif = hal::SERVICE_LIF_END; //hal::SERVICE_LIF_APP_REDIR;

    for (uint32_t i = 0; i < trans.pkt_count; i++) {
        uint32_t pkt_len = flow_key_and_pkt_init(&flow_key, pkt, trans.pkts[i],
						 trans.sport, trans.dport);
        ctx.init(&rxhdr, pkt, pkt_len,
                 nullptr, nullptr, nullptr, 0);
        ctx.set_key(flow_key);

        if (i == 0) {
            // First packet
            ctx.appid_info().state_ = hal::APPID_STATE_NEEDED;
            rc = hal::app_redir::exec_appid_start(ctx);
        } else {
            rc = hal::app_redir::exec_appid_continue(ctx);
        }
        EXPECT_EQ(rc, HAL_RET_OK);
        EXPECT_NE(ctx.appid_info().state_, hal::APPID_STATE_ABORT);
        EXPECT_EQ(fte::appid_info_id(ctx.appid_info()), trans.pkts[i].expect_app_id);
        if (trans.pkts[i].expect_app_id == 0) {
            EXPECT_EQ(ctx.appid_info().id_count_, 0);
        } else {
            EXPECT_GT(ctx.appid_info().id_count_, 0);
        }
    }

    // TODO: test PARTIAL app ids, and nested app ids
}

TEST_F(appid_test, execute_full_transaction) {
#ifdef APPID_HTTP_TEST1
    appid_test_transaction(http_trans);
#endif
#ifdef APPID_DNS_TEST1
    appid_test_transaction(dns_trans);
#endif
}

#if 0
// execute flow miss pipeline for DNS
TEST_F(appid_test, execute_dns_flow) {
    hal_ret_t rc;
    fte::ctx_t ctx;
    fte::cpu_rxhdr_t rxhdr;
    hal::flow_key_t flow_key;

//    hal::app_redir::init();
//    memset(&ctx, 0, sizeof(ctx));

    // DNS req packet
    flow_key_init(&flow_key, dns_req1+PEN_RAW_REDIR_HEADER_V1_FULL_SIZE, false);
    redir_headers_init((pen_app_redir_header_v1_full_t*)dns_req1,
                       dns_req1+PEN_RAW_REDIR_HEADER_V1_FULL_SIZE);
    rxhdr.lif = hal::SERVICE_LIF_END; //hal::SERVICE_LIF_APP_REDIR;
    ctx.init(&rxhdr, (uint8_t*) dns_req1, dns_req1_size,
             nullptr, nullptr, nullptr, 0);
    ctx.set_key(flow_key);

    ctx.appid_info().state_ = hal::APPID_STATE_NEEDED;
    rc = hal::app_redir::exec_appid_start(ctx);
    EXPECT_EQ(rc, HAL_RET_OK);
    EXPECT_EQ(ctx.appid_info().state_, hal::APPID_STATE_IN_PROGRESS);
    EXPECT_EQ(fte::appid_info_id(ctx.appid_info()), 617); // DNS
    EXPECT_EQ(ctx.appid_info().id_count_, 1);

    // DNS resp packet
    flow_key_init(&flow_key, dns_resp1+PEN_RAW_REDIR_HEADER_V1_FULL_SIZE, true);
    flow_key.dir = 1; // response
    redir_headers_init((pen_app_redir_header_v1_full_t*)dns_resp1,
                       dns_resp1+PEN_RAW_REDIR_HEADER_V1_FULL_SIZE);
    rxhdr.lif = hal::SERVICE_LIF_END; //hal::SERVICE_LIF_APP_REDIR;
    ctx.init(&rxhdr, (uint8_t*) dns_resp1, dns_resp1_size,
             nullptr, nullptr, nullptr, 0);
    ctx.set_key(flow_key);

    ctx.appid_info().state_ = hal::APPID_STATE_IN_PROGRESS;
    rc = hal::app_redir::exec_appid_continue(ctx);
    EXPECT_EQ(rc, HAL_RET_OK);
    EXPECT_NE(ctx.appid_info().state_, hal::APPID_STATE_ABORT);
    EXPECT_EQ(fte::appid_info_id(ctx.appid_info()), 617); // DNS
    EXPECT_GT(ctx.appid_info().id_count_, 0);

    if (ctx.appid_info().cleanup_handle_) {
        scanner_cleanup_flow(ctx.appid_info().cleanup_handle_);
    }
}
#endif


int main(int argc, char **argv) {
    ::testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}
