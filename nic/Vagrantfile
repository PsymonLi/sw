# -*- mode: ruby -*-
# vi: set ft=ruby :

$num_nodes = 1
$base_ip = "192.168.50."
$node_box = "centos/7"
$node_box_ver = "0.1"
$pens_node_id = 0

# globals
$cluster_ip_nodes = ""
$node_ips = []
$node_names = ['devvm']

# main config logic
Vagrant.configure("2") do |config|
  config.vm.box = $node_box

  # getting node IPs
  $node_ips = $num_nodes.times.collect { |n| $base_ip + "#{n+11}" }
  $cluster_ip_nodes = $node_ips.join(",")
  # $node_names = $num_nodes.times.collect { |n| "node#{n+1}" }

  $num_nodes.times do |n|
    node_name = $node_names[n]
    node_addr = $node_ips[n]

    configure_node(config, n, node_name, node_addr)
  end 
end

# configure nodes
def configure_node(config, nid, node_name, node_addr)
  # config.vm.synced_folder "./Shared/", "/home/ubuntu/Shared/"
  config.vm.define node_name do |node|
    node.vm.box = $node_box

    # private Network
    node.vm.network :private_network, ip: node_addr, virtualbox__intnet: true

    node.vm.provider "virtualbox" do |v|
      v.name = node_name
      v.cpus = 6
      v.memory = 8192
      # v.linked_clone = true # use base image and clone from it. for multi-VM, saves space
    end

    node.vm.provision "shell" do |s|
      s.inline = $pens_vm_script
      s.args = [node_name, node_addr, $cluster_ip_nodes]
    end

    get_files_into_server(node)
    
  end
end

# configure and install all needed packages in the VM
$pens_vm_script = <<SCRIPT

# no Interactive input
export DEBIAN_FRONTEND=noninteractive

# set hostName
echo -n "$1" > /etc/hostname
hostname -F /etc/hostname

# install all base packages
yum -y install https://centos7.iuscommunity.org/ius-release.rpm
yum -y install python36u python36u-pip
ln -s /usr/bin/python3.6 /usr/bin/python3
ln -s /usr/bin/pip3.6 /usr/bin/pip3
yum install -y vim
yum install -y bison
yum install -y python36u-devel python-pip python-devel python-yaml 
yum install -y Judy-devel cmake git git gcc-c++ gcc-c++ wget autoconf automake libtool libtool make g++
yum install -y unzip pkg-config graphviz flex gmp-devel mpfr-devel mpc-devel libmpc-devel bzip2 which
yum install -y python-setuptools python-enum34 swig openssl-devel libpcap-devel
yum install -y cscope 
yum install -y ctags
yum install -y softhsm libtool-ltdl-devel
yum install -y nfs-utils nfs-utils-lib

# install golang
ln -s /usr/share/pkgconfig /usr/lib/pkgconfig
curl -sSL https://dl.google.com/go/go1.10.linux-amd64.tar.gz | tar xz -C /usr/local
go get github.com/golang/protobuf/... google.golang.org/grpc
go get golang.org/x/tools/cmd/goimports

# install gcc 6.1
cd /tmp
curl ftp://ftp.gnu.org/pub/gnu/gcc/gcc-6.1.0/gcc-6.1.0.tar.bz2 | tar xj
cd gcc-6.1.0
./configure --enable-languages=c,c++ --disable-multilib --prefix=/usr
make -j$(grep -c processor /proc/cpuinfo)
make install
ldconfig

# install zeromq
cd /tmp
wget https://github.com/zeromq/zeromq3-x/releases/download/v3.2.5/zeromq-3.2.5.tar.gz
tar zxf zeromq-3.2.5.tar.gz
cd zeromq-3.2.5
./configure --prefix=/usr
make -j$(grep -c processor /proc/cpuinfo)
make install

# install libtins
cd /tmp
git clone https://github.com/mfontanini/libtins.git
cd libtins
mkdir build
cd build
cmake ../ -DLIBTINS_ENABLE_CXX11=1
make
make install
ldconfig

# untar sknobs.tar.gz
cd /
tar xzf /home/vagrant/sknobs.tar.gz

# cleanup /tmp/ now
cd /tmp
# rm -rf *

# install all python3 packages
pip3 install --upgrade ruamel.yaml scapy-python3 google-api-python-client Tenjin enum34 protobuf grpcio zmq cmd2

# install all python2.7 packages
pip install --upgrade ply==3.9 cmd2

yum install -y kernel-devel kernel-headers dkms iproute2 net-tools zip zlib1g-dev
yum install -y gdb

# install bazel
cd /tmp
wget https://github.com/bazelbuild/bazel/releases/download/0.5.4/bazel-0.5.4-installer-linux-x86_64.sh
chmod +x bazel-0.5.4-installer-linux-x86_64.sh
./bazel-0.5.4-installer-linux-x86_64.sh
echo /usr/local/lib >>/etc/ld.so.conf
ldconfig -v

# turn off StrictHostKeyChecking
f='/home/ubuntu/.ssh/config'
mkdir -p /home/ubuntu/.ssh/ && touch $f
grep -q 'StrictHostKeyChecking' $f
echo 'StrictHostKeyChecking no' >> $f

# install valgrind
cd /tmp
mkdir valgrind
cd valgrind
wget ftp://sourceware.org/pub/valgrind/valgrind-3.11.0.tar.bz2
tar xvjf valgrind-3.11.0.tar.bz2
cd valgrind-3.11.0
./autogen.sh
./configure --prefix=...
make
make install

SCRIPT

# copy your environment
def get_files_into_server(node)
  node.vm.provision "file", source: "~/.ssh/id_rsa", destination: ".ssh/id_rsa"
  node.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: ".ssh/id_rsa.pub"
  node.vm.provision "file", source: "~/.bashrc", destination: ".bashrc"
  node.vm.provision "file", source: "~/.vimrc", destination: ".vimrc"
  node.vm.provision "file", source: "~/.gitconfig", destination: ".gitconfig"
  node.vm.provision "file", source: "~/.vim", destination: ".vim"
  node.vm.provision "file", source: "~/.vim_go_runtime", destination: ".vim_go_runtime"
  node.vm.provision "file", source: "~/.gdbinit", destination: ".gdbinit"
  node.vm.provision "file", source: "~/sknobs.tar.gz", destination: "sknobs.tar.gz"
end
