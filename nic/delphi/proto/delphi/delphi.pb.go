// Code generated by protoc-gen-go. DO NOT EDIT.
// source: delphi.proto

/*
Package delphi is a generated protocol buffer package.

It is generated from these files:
	delphi.proto

It has these top-level messages:
	ObjectMeta
	ReferList
*/
package delphi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// set/delete operations
type ObjectOperation int32

const (
	ObjectOperation_InvalidOp ObjectOperation = 0
	ObjectOperation_SetOp     ObjectOperation = 1
	ObjectOperation_DeleteOp  ObjectOperation = 2
)

var ObjectOperation_name = map[int32]string{
	0: "InvalidOp",
	1: "SetOp",
	2: "DeleteOp",
}
var ObjectOperation_value = map[string]int32{
	"InvalidOp": 0,
	"SetOp":     1,
	"DeleteOp":  2,
}

func (x ObjectOperation) String() string {
	return proto.EnumName(ObjectOperation_name, int32(x))
}
func (ObjectOperation) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// mount modes
type MountMode int32

const (
	MountMode_InvalidMode   MountMode = 0
	MountMode_ReadMode      MountMode = 1
	MountMode_ReadWriteMode MountMode = 2
)

var MountMode_name = map[int32]string{
	0: "InvalidMode",
	1: "ReadMode",
	2: "ReadWriteMode",
}
var MountMode_value = map[string]int32{
	"InvalidMode":   0,
	"ReadMode":      1,
	"ReadWriteMode": 2,
}

func (x MountMode) String() string {
	return proto.EnumName(MountMode_name, int32(x))
}
func (MountMode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// metadata present in all objects
type ObjectMeta struct {
	Kind   string `protobuf:"bytes,1,opt,name=Kind" json:"Kind,omitempty"`
	Path   string `protobuf:"bytes,2,opt,name=Path" json:"Path,omitempty"`
	Key    string `protobuf:"bytes,3,opt,name=Key" json:"Key,omitempty"`
	Handle uint64 `protobuf:"varint,4,opt,name=Handle" json:"Handle,omitempty"`
}

func (m *ObjectMeta) Reset()                    { *m = ObjectMeta{} }
func (m *ObjectMeta) String() string            { return proto.CompactTextString(m) }
func (*ObjectMeta) ProtoMessage()               {}
func (*ObjectMeta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ObjectMeta) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ObjectMeta) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ObjectMeta) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ObjectMeta) GetHandle() uint64 {
	if m != nil {
		return m.Handle
	}
	return 0
}

// ReferList is a list of object handles to be used for storing object references
type ReferList struct {
	Handles []uint64 `protobuf:"varint,1,rep,packed,name=Handles" json:"Handles,omitempty"`
}

func (m *ReferList) Reset()                    { *m = ReferList{} }
func (m *ReferList) String() string            { return proto.CompactTextString(m) }
func (*ReferList) ProtoMessage()               {}
func (*ReferList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ReferList) GetHandles() []uint64 {
	if m != nil {
		return m.Handles
	}
	return nil
}

var E_UpdateEvent = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70000,
	Name:          "delphi.update_event",
	Tag:           "varint,70000,opt,name=update_event,json=updateEvent",
	Filename:      "delphi.proto",
}

var E_Singleton = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70001,
	Name:          "delphi.singleton",
	Tag:           "varint,70001,opt,name=singleton",
	Filename:      "delphi.proto",
}

var E_Event = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70000,
	Name:          "delphi.event",
	Tag:           "varint,70000,opt,name=event",
	Filename:      "delphi.proto",
}

func init() {
	proto.RegisterType((*ObjectMeta)(nil), "delphi.ObjectMeta")
	proto.RegisterType((*ReferList)(nil), "delphi.ReferList")
	proto.RegisterEnum("delphi.ObjectOperation", ObjectOperation_name, ObjectOperation_value)
	proto.RegisterEnum("delphi.MountMode", MountMode_name, MountMode_value)
	proto.RegisterExtension(E_UpdateEvent)
	proto.RegisterExtension(E_Singleton)
	proto.RegisterExtension(E_Event)
}

func init() { proto.RegisterFile("delphi.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 343 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x41, 0x4b, 0xeb, 0x40,
	0x14, 0x85, 0x9b, 0x36, 0xed, 0x6b, 0x6e, 0x5b, 0x9a, 0x37, 0x8b, 0x47, 0x78, 0x20, 0x86, 0x82,
	0x50, 0xba, 0x48, 0x17, 0xe2, 0xc2, 0x82, 0xb8, 0xa9, 0xa2, 0xd4, 0x10, 0x89, 0x0b, 0x77, 0xca,
	0xb4, 0x73, 0x9b, 0x8e, 0x84, 0x99, 0x21, 0x33, 0x2d, 0xf8, 0x77, 0xfc, 0x85, 0xfa, 0x0f, 0x64,
	0x32, 0x2d, 0x82, 0x2e, 0xdc, 0x9d, 0xf3, 0x71, 0xce, 0xdc, 0x3b, 0x17, 0xfa, 0x0c, 0x4b, 0xb5,
	0xe1, 0x89, 0xaa, 0xa4, 0x91, 0xa4, 0xe3, 0xdc, 0xff, 0xb8, 0x90, 0xb2, 0x28, 0x71, 0x5a, 0xd3,
	0xe5, 0x76, 0x3d, 0x65, 0xa8, 0x57, 0x15, 0x57, 0x46, 0x56, 0x2e, 0x39, 0x7a, 0x02, 0xc8, 0x96,
	0x2f, 0xb8, 0x32, 0x29, 0x1a, 0x4a, 0x08, 0xf8, 0x0b, 0x2e, 0x58, 0xe4, 0xc5, 0xde, 0x38, 0xc8,
	0x6b, 0x6d, 0xd9, 0x3d, 0x35, 0x9b, 0xa8, 0xe9, 0x98, 0xd5, 0x24, 0x84, 0xd6, 0x02, 0x5f, 0xa3,
	0x56, 0x8d, 0xac, 0x24, 0xff, 0xa0, 0x73, 0x43, 0x05, 0x2b, 0x31, 0xf2, 0x63, 0x6f, 0xec, 0xe7,
	0x7b, 0x37, 0x3a, 0x81, 0x20, 0xc7, 0x35, 0x56, 0x77, 0x5c, 0x1b, 0x12, 0xc1, 0x1f, 0x87, 0x75,
	0xe4, 0xc5, 0xad, 0xb1, 0x9f, 0x1f, 0xec, 0xe4, 0x1c, 0x86, 0x6e, 0x8d, 0x4c, 0x61, 0x45, 0x0d,
	0x97, 0x82, 0x0c, 0x20, 0xb8, 0x15, 0x3b, 0x5a, 0x72, 0x96, 0xa9, 0xb0, 0x41, 0x02, 0x68, 0x3f,
	0xa0, 0xc9, 0x54, 0xe8, 0x91, 0x3e, 0x74, 0xe7, 0x58, 0xa2, 0xc1, 0x4c, 0x85, 0xcd, 0xc9, 0x05,
	0x04, 0xa9, 0xdc, 0x0a, 0x93, 0x4a, 0x86, 0x64, 0x08, 0xbd, 0x7d, 0xc9, 0xda, 0xb0, 0x61, 0xb3,
	0x39, 0x52, 0xe7, 0x3c, 0xf2, 0x17, 0x06, 0xd6, 0x3d, 0x56, 0xdc, 0x60, 0x8d, 0x9a, 0xb3, 0x39,
	0xf4, 0xb7, 0x8a, 0x51, 0x83, 0xcf, 0xb8, 0x43, 0x61, 0xc8, 0x71, 0xe2, 0x6e, 0x96, 0x1c, 0x6e,
	0x96, 0xa4, 0xa8, 0x35, 0x2d, 0x30, 0x53, 0x76, 0x2d, 0x1d, 0xbd, 0xbf, 0xd9, 0x1f, 0x76, 0xf3,
	0x9e, 0xab, 0x5d, 0xd9, 0xd6, 0xec, 0x12, 0x02, 0xcd, 0x45, 0x51, 0xa2, 0x91, 0xe2, 0xf7, 0x27,
	0x3e, 0xf6, 0x4f, 0x7c, 0x75, 0x66, 0x67, 0xd0, 0x76, 0xf3, 0x8f, 0x7e, 0x94, 0xaf, 0x39, 0x96,
	0xec, 0xfb, 0x74, 0x97, 0x5e, 0x76, 0xea, 0xd4, 0xe9, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x36,
	0xc4, 0xd3, 0xc0, 0xff, 0x01, 0x00, 0x00,
}
