/*                                                                         */
/* Generated by Semifore, Inc. csrCompile                                  */
/*    Version: 2018.12.01 Build: release Linux 64-bit                      */
/*    C Header output                                                      */
/*                                                                         */
/* Command Line:                                                           */
/*    csrCompile -w -c                                                     */
/*    /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/ctype.css -t h   */
/*    /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr        */
/*    -I/home/kinjal/pen_src/asic/elba/verif/common/csr_gen                */
/*    -I/home/kinjal/pen_src/asic/elba/design/common -O                    */
/*                                                                         */
/* Input files:                                                            */
/*    /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr        */
/*                                                                         */
/* Included files:                                                         */
/*    /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr          */
/*    /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr */
/*    /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr      */
/*                                                                         */
/* Configuration files:                                                    */
/*    /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/ctype.css        */
/*                                                                         */
/* Generated on: Fri Jul 12 22:18:38 2019                                  */
/*           by: kinjal                                                    */
/*                                                                         */

#ifndef _HESE_H_
#define _HESE_H_



/* ####################################################################### */
/*        ADDRESS MACROS                                                   */
/* ####################################################################### */

/* Address Space for Addressmap: elb_hese_csr                              */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 602 */
/* Memory: elb_hese_csr.dhs_crypto_ctl                                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_ADDRESS 0x0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_BYTE_ADDRESS 0x0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_key_array_base_w0            */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W0_ADDRESS 0x0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W0_BYTE_ADDRESS 0x0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_key_array_base_w1            */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W1_ADDRESS 0x1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W1_BYTE_ADDRESS 0x4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_key_array_size               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_SIZE_ADDRESS 0x2
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_SIZE_BYTE_ADDRESS 0x8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_axi_desc                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DESC_ADDRESS 0x3
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DESC_BYTE_ADDRESS 0xc
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_axi_data_read                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_READ_ADDRESS 0x4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_READ_BYTE_ADDRESS 0x10
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_axi_data_write               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_WRITE_ADDRESS 0x5
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_WRITE_BYTE_ADDRESS 0x14
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_axi_status                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_STATUS_ADDRESS 0x6
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_STATUS_BYTE_ADDRESS 0x18
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_axi_opaque_tag_write         */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_OPAQUE_TAG_WRITE_ADDRESS 0x7
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_OPAQUE_TAG_WRITE_BYTE_ADDRESS 0x1c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_axi_doorbell_write           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DOORBELL_WRITE_ADDRESS 0x8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DOORBELL_WRITE_BYTE_ADDRESS 0x20
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_key_array_base_w0            */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W0_ADDRESS 0x80
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W0_BYTE_ADDRESS 0x200
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_key_array_base_w1            */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W1_ADDRESS 0x81
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W1_BYTE_ADDRESS 0x204
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_key_array_size               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_SIZE_ADDRESS 0x82
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_SIZE_BYTE_ADDRESS 0x208
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_axi_desc                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DESC_ADDRESS 0x83
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DESC_BYTE_ADDRESS 0x20c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_axi_data_read                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_READ_ADDRESS 0x84
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_READ_BYTE_ADDRESS 0x210
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_axi_data_write               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_WRITE_ADDRESS 0x85
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_WRITE_BYTE_ADDRESS 0x214
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_axi_status                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_STATUS_ADDRESS 0x86
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_STATUS_BYTE_ADDRESS 0x218
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_axi_opaque_tag_write         */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_OPAQUE_TAG_WRITE_ADDRESS 0x87
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_OPAQUE_TAG_WRITE_BYTE_ADDRESS 0x21c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_axi_doorbell_write           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DOORBELL_WRITE_ADDRESS 0x88
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DOORBELL_WRITE_BYTE_ADDRESS 0x220
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_key_array_base_w0            */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W0_ADDRESS 0x100
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W0_BYTE_ADDRESS 0x400
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_key_array_base_w1            */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W1_ADDRESS 0x101
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W1_BYTE_ADDRESS 0x404
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_key_array_size               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_SIZE_ADDRESS 0x102
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_SIZE_BYTE_ADDRESS 0x408
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_axi_desc                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DESC_ADDRESS 0x103
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DESC_BYTE_ADDRESS 0x40c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_axi_data_read                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_READ_ADDRESS 0x104
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_READ_BYTE_ADDRESS 0x410
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_axi_data_write               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_WRITE_ADDRESS 0x105
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_WRITE_BYTE_ADDRESS 0x414
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_axi_status                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_STATUS_ADDRESS 0x106
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_STATUS_BYTE_ADDRESS 0x418
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_axi_opaque_tag_write         */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_OPAQUE_TAG_WRITE_ADDRESS 0x107
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_OPAQUE_TAG_WRITE_BYTE_ADDRESS 0x41c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_axi_doorbell_write           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DOORBELL_WRITE_ADDRESS 0x108
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DOORBELL_WRITE_BYTE_ADDRESS 0x420
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_key_array_base_w0            */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W0_ADDRESS 0x180
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W0_BYTE_ADDRESS 0x600
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_key_array_base_w1            */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W1_ADDRESS 0x181
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W1_BYTE_ADDRESS 0x604
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_key_array_size               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_SIZE_ADDRESS 0x182
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_SIZE_BYTE_ADDRESS 0x608
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_axi_desc                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DESC_ADDRESS 0x183
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DESC_BYTE_ADDRESS 0x60c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_axi_data_read                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_READ_ADDRESS 0x184
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_READ_BYTE_ADDRESS 0x610
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_axi_data_write               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_WRITE_ADDRESS 0x185
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_WRITE_BYTE_ADDRESS 0x614
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_axi_status                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_STATUS_ADDRESS 0x186
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_STATUS_BYTE_ADDRESS 0x618
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_axi_opaque_tag_write         */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_OPAQUE_TAG_WRITE_ADDRESS 0x187
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_OPAQUE_TAG_WRITE_BYTE_ADDRESS 0x61c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_axi_doorbell_write           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DOORBELL_WRITE_ADDRESS 0x188
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DOORBELL_WRITE_BYTE_ADDRESS 0x620
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_key_array_base_w0             */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W0_ADDRESS 0x200
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W0_BYTE_ADDRESS 0x800
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_key_array_base_w1             */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W1_ADDRESS 0x201
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W1_BYTE_ADDRESS 0x804
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_key_array_size                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_SIZE_ADDRESS 0x202
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_SIZE_BYTE_ADDRESS 0x808
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_axi_desc                      */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DESC_ADDRESS 0x203
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DESC_BYTE_ADDRESS 0x80c
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_axi_data_read                 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_READ_ADDRESS 0x204
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_READ_BYTE_ADDRESS 0x810
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_axi_data_write                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_WRITE_ADDRESS 0x205
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_WRITE_BYTE_ADDRESS 0x814
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_axi_status                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_STATUS_ADDRESS 0x206
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_STATUS_BYTE_ADDRESS 0x818
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_axi_opaque_tag_write          */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_OPAQUE_TAG_WRITE_ADDRESS 0x207
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_OPAQUE_TAG_WRITE_BYTE_ADDRESS 0x81c
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_axi_doorbell_write            */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DOORBELL_WRITE_ADDRESS 0x208
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DOORBELL_WRITE_BYTE_ADDRESS 0x820
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_key_array_base_w0             */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W0_ADDRESS 0x280
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W0_BYTE_ADDRESS 0xa00
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_key_array_base_w1             */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W1_ADDRESS 0x281
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W1_BYTE_ADDRESS 0xa04
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_key_array_size                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_SIZE_ADDRESS 0x282
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_SIZE_BYTE_ADDRESS 0xa08
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_axi_desc                      */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DESC_ADDRESS 0x283
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DESC_BYTE_ADDRESS 0xa0c
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_axi_data_read                 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_READ_ADDRESS 0x284
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_READ_BYTE_ADDRESS 0xa10
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_axi_data_write                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_WRITE_ADDRESS 0x285
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_WRITE_BYTE_ADDRESS 0xa14
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_axi_status                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_STATUS_ADDRESS 0x286
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_STATUS_BYTE_ADDRESS 0xa18
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_axi_opaque_tag_write          */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_OPAQUE_TAG_WRITE_ADDRESS 0x287
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_OPAQUE_TAG_WRITE_BYTE_ADDRESS 0xa1c
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_axi_doorbell_write            */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DOORBELL_WRITE_ADDRESS 0x288
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DOORBELL_WRITE_BYTE_ADDRESS 0xa20
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_ring_base_w0                  */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W0_ADDRESS 0x580
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W0_BYTE_ADDRESS 0x1600
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_ring_base_w1                  */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W1_ADDRESS 0x581
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W1_BYTE_ADDRESS 0x1604
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_ring_size                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_SIZE_ADDRESS 0x582
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_SIZE_BYTE_ADDRESS 0x1608
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_producer_idx                  */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_PRODUCER_IDX_ADDRESS 0x583
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_PRODUCER_IDX_BYTE_ADDRESS 0x160c
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_soft_rst                      */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_SOFT_RST_ADDRESS 0x5a0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_SOFT_RST_BYTE_ADDRESS 0x1680
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_ci_addr_w0                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W0_ADDRESS 0x5a4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W0_BYTE_ADDRESS 0x1690
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_ci_addr_w1                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W1_ADDRESS 0x5a5
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W1_BYTE_ADDRESS 0x1694
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_opa_tag_addr_w0               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W0_ADDRESS 0x5a6
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W0_BYTE_ADDRESS 0x1698
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_opa_tag_addr_w1               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W1_ADDRESS 0x5a7
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W1_BYTE_ADDRESS 0x169c
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_consumer_idx                  */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CONSUMER_IDX_ADDRESS 0x5a8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CONSUMER_IDX_BYTE_ADDRESS 0x16a0
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_ring0_comp_cnt                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING0_COMP_CNT_ADDRESS 0x5b0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING0_COMP_CNT_BYTE_ADDRESS 0x16c0
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_status                        */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_STATUS_ADDRESS 0x5b8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_STATUS_BYTE_ADDRESS 0x16e0
/* Register: elb_hese_csr.dhs_crypto_ctl.pk0_error_idx                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_ERROR_IDX_ADDRESS 0x5b9
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_ERROR_IDX_BYTE_ADDRESS 0x16e4
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_ring_base_w0                  */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W0_ADDRESS 0x600
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W0_BYTE_ADDRESS 0x1800
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_ring_base_w1                  */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W1_ADDRESS 0x601
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W1_BYTE_ADDRESS 0x1804
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_ring_size                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_SIZE_ADDRESS 0x602
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_SIZE_BYTE_ADDRESS 0x1808
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_producer_idx                  */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_PRODUCER_IDX_ADDRESS 0x603
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_PRODUCER_IDX_BYTE_ADDRESS 0x180c
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_soft_rst                      */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_SOFT_RST_ADDRESS 0x620
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_SOFT_RST_BYTE_ADDRESS 0x1880
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_ci_addr_w0                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W0_ADDRESS 0x624
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W0_BYTE_ADDRESS 0x1890
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_ci_addr_w1                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W1_ADDRESS 0x625
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W1_BYTE_ADDRESS 0x1894
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_opa_tag_addr_w0               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W0_ADDRESS 0x626
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W0_BYTE_ADDRESS 0x1898
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_opa_tag_addr_w1               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W1_ADDRESS 0x627
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W1_BYTE_ADDRESS 0x189c
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_consumer_idx                  */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CONSUMER_IDX_ADDRESS 0x628
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CONSUMER_IDX_BYTE_ADDRESS 0x18a0
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_ring0_comp_cnt                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING0_COMP_CNT_ADDRESS 0x630
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING0_COMP_CNT_BYTE_ADDRESS 0x18c0
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_status                        */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_STATUS_ADDRESS 0x638
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_STATUS_BYTE_ADDRESS 0x18e0
/* Register: elb_hese_csr.dhs_crypto_ctl.pk1_error_idx                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_ERROR_IDX_ADDRESS 0x639
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_ERROR_IDX_BYTE_ADDRESS 0x18e4
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg0_cryptoram_random_num0    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_ADDRESS 0x800
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_BYTE_ADDRESS 0x2000
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_ARRAY_COUNT 0x80
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_ARRAY_INDEX_MAX 0x7f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_ARRAY_INDEX_MIN 0x0
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg0_cryptoram_random_num1    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_ADDRESS 0x880
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_BYTE_ADDRESS 0x2200
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_ARRAY_COUNT 0x80
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_ARRAY_INDEX_MAX 0x7f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_ARRAY_INDEX_MIN 0x0
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg0_cryptoram_psnl_str_p     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_ADDRESS 0x900
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_BYTE_ADDRESS 0x2400
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_ARRAY_COUNT 0x8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_ARRAY_INDEX_MAX 0x7
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_ARRAY_INDEX_MIN 0x0
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg0_cryptoram_entropy_inst   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_ADDRESS 0x910
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_BYTE_ADDRESS 0x2440
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_ARRAY_COUNT 0xc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_ARRAY_INDEX_MAX 0xb
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_ARRAY_INDEX_MIN 0x0
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg0_cryptoram_entropy_reseed */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_ADDRESS 0x920
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_BYTE_ADDRESS 0x2480
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_ARRAY_COUNT 0x8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_ARRAY_INDEX_MAX 0x7
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_ARRAY_INDEX_MIN 0x0
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg0_isr                      */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ISR_ADDRESS 0x940
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ISR_BYTE_ADDRESS 0x2500
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg0_msk                      */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_MSK_ADDRESS 0x941
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_MSK_BYTE_ADDRESS 0x2504
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg0_icr                      */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ICR_ADDRESS 0x942
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ICR_BYTE_ADDRESS 0x2508
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg0_ver                      */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_VER_ADDRESS 0x943
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_VER_BYTE_ADDRESS 0x250c
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg0_gct                      */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GCT_ADDRESS 0x944
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GCT_BYTE_ADDRESS 0x2510
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg0_rsvr0                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR0_ADDRESS 0x945
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR0_BYTE_ADDRESS 0x2514
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg0_gs                       */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GS_ADDRESS 0x946
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GS_BYTE_ADDRESS 0x2518
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg0_rsvr1                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR1_ADDRESS 0x947
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR1_BYTE_ADDRESS 0x251c
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg0_rng                      */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RNG_ADDRESS 0x948
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RNG_BYTE_ADDRESS 0x2520
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg0_drnge                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_DRNGE_ADDRESS 0x949
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_DRNGE_BYTE_ADDRESS 0x2524
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_controlreg               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CONTROLREG_ADDRESS 0x980
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CONTROLREG_BYTE_ADDRESS 0x2600
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_fifolevel                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOLEVEL_ADDRESS 0x981
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOLEVEL_BYTE_ADDRESS 0x2604
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_fifothresh               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOTHRESH_ADDRESS 0x982
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOTHRESH_BYTE_ADDRESS 0x2608
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_fifodepth                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFODEPTH_ADDRESS 0x983
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFODEPTH_BYTE_ADDRESS 0x260c
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_key0                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY0_ADDRESS 0x984
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY0_BYTE_ADDRESS 0x2610
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_key1                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY1_ADDRESS 0x985
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY1_BYTE_ADDRESS 0x2614
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_key2                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY2_ADDRESS 0x986
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY2_BYTE_ADDRESS 0x2618
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_key3                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY3_ADDRESS 0x987
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY3_BYTE_ADDRESS 0x261c
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_testdata                 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_TESTDATA_ADDRESS 0x988
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_TESTDATA_BYTE_ADDRESS 0x2620
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_repthresh                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_REPTHRESH_ADDRESS 0x989
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_REPTHRESH_BYTE_ADDRESS 0x2624
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_prop1                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP1_ADDRESS 0x98a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP1_BYTE_ADDRESS 0x2628
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_prop2                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP2_ADDRESS 0x98b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP2_BYTE_ADDRESS 0x262c
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_status                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_STATUS_ADDRESS 0x98c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_STATUS_BYTE_ADDRESS 0x2630
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_initwaitval              */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_INITWAITVAL_ADDRESS 0x98d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_INITWAITVAL_BYTE_ADDRESS 0x2634
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_disableosc0              */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC0_ADDRESS 0x98e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC0_BYTE_ADDRESS 0x2638
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_disableosc1              */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC1_ADDRESS 0x98f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC1_BYTE_ADDRESS 0x263c
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_swofftmrval              */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_SWOFFTMRVAL_ADDRESS 0x990
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_SWOFFTMRVAL_BYTE_ADDRESS 0x2640
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_clkdiv                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CLKDIV_ADDRESS 0x991
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CLKDIV_BYTE_ADDRESS 0x2644
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_ais31conf0               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF0_ADDRESS 0x992
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF0_BYTE_ADDRESS 0x2648
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_ais31conf1               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF1_ADDRESS 0x993
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF1_BYTE_ADDRESS 0x264c
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_ais31conf2               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF2_ADDRESS 0x994
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF2_BYTE_ADDRESS 0x2650
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng0_ais31status              */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31STATUS_ADDRESS 0x995
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31STATUS_BYTE_ADDRESS 0x2654
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg1_cryptoram_random_num0    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_ADDRESS 0xc00
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_BYTE_ADDRESS 0x3000
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_ARRAY_COUNT 0x80
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_ARRAY_INDEX_MAX 0x7f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_ARRAY_INDEX_MIN 0x0
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg1_cryptoram_random_num1    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_ADDRESS 0xc80
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_BYTE_ADDRESS 0x3200
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_ARRAY_COUNT 0x80
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_ARRAY_INDEX_MAX 0x7f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_ARRAY_INDEX_MIN 0x0
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg1_cryptoram_psnl_str_p     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_ADDRESS 0xd00
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_BYTE_ADDRESS 0x3400
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_ARRAY_COUNT 0x8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_ARRAY_INDEX_MAX 0x7
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_ARRAY_INDEX_MIN 0x0
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg1_cryptoram_entropy_inst   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_ADDRESS 0xd10
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_BYTE_ADDRESS 0x3440
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_ARRAY_COUNT 0xc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_ARRAY_INDEX_MAX 0xb
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_ARRAY_INDEX_MIN 0x0
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg1_cryptoram_entropy_reseed */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_ADDRESS 0xd20
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_BYTE_ADDRESS 0x3480
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_ARRAY_COUNT 0x8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_ARRAY_INDEX_MAX 0x7
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_ARRAY_INDEX_MIN 0x0
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg1_isr                      */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ISR_ADDRESS 0xd40
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ISR_BYTE_ADDRESS 0x3500
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg1_msk                      */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_MSK_ADDRESS 0xd41
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_MSK_BYTE_ADDRESS 0x3504
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg1_icr                      */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ICR_ADDRESS 0xd42
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ICR_BYTE_ADDRESS 0x3508
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg1_ver                      */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_VER_ADDRESS 0xd43
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_VER_BYTE_ADDRESS 0x350c
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg1_gct                      */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GCT_ADDRESS 0xd44
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GCT_BYTE_ADDRESS 0x3510
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg1_rsvr0                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR0_ADDRESS 0xd45
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR0_BYTE_ADDRESS 0x3514
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg1_gs                       */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GS_ADDRESS 0xd46
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GS_BYTE_ADDRESS 0x3518
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg1_rsvr1                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR1_ADDRESS 0xd47
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR1_BYTE_ADDRESS 0x351c
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg1_rng                      */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RNG_ADDRESS 0xd48
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RNG_BYTE_ADDRESS 0x3520
/* Register: elb_hese_csr.dhs_crypto_ctl.md_drbg1_drnge                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_DRNGE_ADDRESS 0xd49
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_DRNGE_BYTE_ADDRESS 0x3524
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_controlreg               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CONTROLREG_ADDRESS 0xd80
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CONTROLREG_BYTE_ADDRESS 0x3600
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_fifolevel                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOLEVEL_ADDRESS 0xd81
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOLEVEL_BYTE_ADDRESS 0x3604
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_fifothresh               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOTHRESH_ADDRESS 0xd82
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOTHRESH_BYTE_ADDRESS 0x3608
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_fifodepth                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFODEPTH_ADDRESS 0xd83
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFODEPTH_BYTE_ADDRESS 0x360c
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_key0                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY0_ADDRESS 0xd84
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY0_BYTE_ADDRESS 0x3610
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_key1                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY1_ADDRESS 0xd85
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY1_BYTE_ADDRESS 0x3614
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_key2                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY2_ADDRESS 0xd86
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY2_BYTE_ADDRESS 0x3618
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_key3                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY3_ADDRESS 0xd87
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY3_BYTE_ADDRESS 0x361c
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_testdata                 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_TESTDATA_ADDRESS 0xd88
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_TESTDATA_BYTE_ADDRESS 0x3620
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_repthresh                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_REPTHRESH_ADDRESS 0xd89
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_REPTHRESH_BYTE_ADDRESS 0x3624
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_prop1                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP1_ADDRESS 0xd8a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP1_BYTE_ADDRESS 0x3628
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_prop2                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP2_ADDRESS 0xd8b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP2_BYTE_ADDRESS 0x362c
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_status                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_STATUS_ADDRESS 0xd8c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_STATUS_BYTE_ADDRESS 0x3630
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_initwaitval              */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_INITWAITVAL_ADDRESS 0xd8d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_INITWAITVAL_BYTE_ADDRESS 0x3634
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_disableosc0              */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC0_ADDRESS 0xd8e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC0_BYTE_ADDRESS 0x3638
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_disableosc1              */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC1_ADDRESS 0xd8f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC1_BYTE_ADDRESS 0x363c
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_swofftmrval              */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_SWOFFTMRVAL_ADDRESS 0xd90
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_SWOFFTMRVAL_BYTE_ADDRESS 0x3640
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_clkdiv                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CLKDIV_ADDRESS 0xd91
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CLKDIV_BYTE_ADDRESS 0x3644
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_ais31conf0               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF0_ADDRESS 0xd92
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF0_BYTE_ADDRESS 0x3648
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_ais31conf1               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF1_ADDRESS 0xd93
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF1_BYTE_ADDRESS 0x364c
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_ais31conf2               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF2_ADDRESS 0xd94
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF2_BYTE_ADDRESS 0x3650
/* Register: elb_hese_csr.dhs_crypto_ctl.md_trng1_ais31status              */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31STATUS_ADDRESS 0xd95
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31STATUS_BYTE_ADDRESS 0x3654
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring0_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W0_ADDRESS 0x1000
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W0_BYTE_ADDRESS 0x4000
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring0_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W1_ADDRESS 0x1001
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W1_BYTE_ADDRESS 0x4004
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring0_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_SIZE_ADDRESS 0x1002
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_SIZE_BYTE_ADDRESS 0x4008
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring0_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_PRODUCER_IDX_ADDRESS 0x1003
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_PRODUCER_IDX_BYTE_ADDRESS 0x400c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring1_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W0_ADDRESS 0x1004
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W0_BYTE_ADDRESS 0x4010
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring1_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W1_ADDRESS 0x1005
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W1_BYTE_ADDRESS 0x4014
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring1_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_SIZE_ADDRESS 0x1006
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_SIZE_BYTE_ADDRESS 0x4018
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring1_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_PRODUCER_IDX_ADDRESS 0x1007
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_PRODUCER_IDX_BYTE_ADDRESS 0x401c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring2_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W0_ADDRESS 0x1008
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W0_BYTE_ADDRESS 0x4020
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring2_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W1_ADDRESS 0x1009
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W1_BYTE_ADDRESS 0x4024
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring2_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_SIZE_ADDRESS 0x100a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_SIZE_BYTE_ADDRESS 0x4028
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring2_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_PRODUCER_IDX_ADDRESS 0x100b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_PRODUCER_IDX_BYTE_ADDRESS 0x402c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring3_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W0_ADDRESS 0x100c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W0_BYTE_ADDRESS 0x4030
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring3_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W1_ADDRESS 0x100d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W1_BYTE_ADDRESS 0x4034
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring3_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_SIZE_ADDRESS 0x100e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_SIZE_BYTE_ADDRESS 0x4038
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring3_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_PRODUCER_IDX_ADDRESS 0x100f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_PRODUCER_IDX_BYTE_ADDRESS 0x403c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring4_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W0_ADDRESS 0x1010
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W0_BYTE_ADDRESS 0x4040
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring4_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W1_ADDRESS 0x1011
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W1_BYTE_ADDRESS 0x4044
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring4_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_SIZE_ADDRESS 0x1012
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_SIZE_BYTE_ADDRESS 0x4048
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring4_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_PRODUCER_IDX_ADDRESS 0x1013
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_PRODUCER_IDX_BYTE_ADDRESS 0x404c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring5_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W0_ADDRESS 0x1014
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W0_BYTE_ADDRESS 0x4050
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring5_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W1_ADDRESS 0x1015
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W1_BYTE_ADDRESS 0x4054
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring5_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_SIZE_ADDRESS 0x1016
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_SIZE_BYTE_ADDRESS 0x4058
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring5_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_PRODUCER_IDX_ADDRESS 0x1017
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_PRODUCER_IDX_BYTE_ADDRESS 0x405c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring6_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W0_ADDRESS 0x1018
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W0_BYTE_ADDRESS 0x4060
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring6_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W1_ADDRESS 0x1019
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W1_BYTE_ADDRESS 0x4064
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring6_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_SIZE_ADDRESS 0x101a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_SIZE_BYTE_ADDRESS 0x4068
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring6_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_PRODUCER_IDX_ADDRESS 0x101b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_PRODUCER_IDX_BYTE_ADDRESS 0x406c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring7_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W0_ADDRESS 0x101c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W0_BYTE_ADDRESS 0x4070
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring7_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W1_ADDRESS 0x101d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W1_BYTE_ADDRESS 0x4074
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring7_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_SIZE_ADDRESS 0x101e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_SIZE_BYTE_ADDRESS 0x4078
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring7_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_PRODUCER_IDX_ADDRESS 0x101f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_PRODUCER_IDX_BYTE_ADDRESS 0x407c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_soft_rst                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_SOFT_RST_ADDRESS 0x1020
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_SOFT_RST_BYTE_ADDRESS 0x4080
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_wrr_credit                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_WRR_CREDIT_ADDRESS 0x1021
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_WRR_CREDIT_BYTE_ADDRESS 0x4084
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_abs_priority                 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ABS_PRIORITY_ADDRESS 0x1022
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ABS_PRIORITY_BYTE_ADDRESS 0x4088
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring0_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_CONSUMER_IDX_ADDRESS 0x1028
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_CONSUMER_IDX_BYTE_ADDRESS 0x40a0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring1_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_CONSUMER_IDX_ADDRESS 0x1029
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_CONSUMER_IDX_BYTE_ADDRESS 0x40a4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring2_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_CONSUMER_IDX_ADDRESS 0x102a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_CONSUMER_IDX_BYTE_ADDRESS 0x40a8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring3_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_CONSUMER_IDX_ADDRESS 0x102b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_CONSUMER_IDX_BYTE_ADDRESS 0x40ac
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring4_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_CONSUMER_IDX_ADDRESS 0x102c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_CONSUMER_IDX_BYTE_ADDRESS 0x40b0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring5_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_CONSUMER_IDX_ADDRESS 0x102d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_CONSUMER_IDX_BYTE_ADDRESS 0x40b4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring6_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_CONSUMER_IDX_ADDRESS 0x102e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_CONSUMER_IDX_BYTE_ADDRESS 0x40b8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring7_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_CONSUMER_IDX_ADDRESS 0x102f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_CONSUMER_IDX_BYTE_ADDRESS 0x40bc
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring0_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_COMP_CNT_ADDRESS 0x1030
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_COMP_CNT_BYTE_ADDRESS 0x40c0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring1_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_COMP_CNT_ADDRESS 0x1031
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_COMP_CNT_BYTE_ADDRESS 0x40c4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring2_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_COMP_CNT_ADDRESS 0x1032
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_COMP_CNT_BYTE_ADDRESS 0x40c8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring3_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_COMP_CNT_ADDRESS 0x1033
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_COMP_CNT_BYTE_ADDRESS 0x40cc
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring4_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_COMP_CNT_ADDRESS 0x1034
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_COMP_CNT_BYTE_ADDRESS 0x40d0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring5_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_COMP_CNT_ADDRESS 0x1035
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_COMP_CNT_BYTE_ADDRESS 0x40d4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring6_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_COMP_CNT_ADDRESS 0x1036
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_COMP_CNT_BYTE_ADDRESS 0x40d8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_ring7_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_COMP_CNT_ADDRESS 0x1037
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_COMP_CNT_BYTE_ADDRESS 0x40dc
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_status                       */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_STATUS_ADDRESS 0x1038
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_STATUS_BYTE_ADDRESS 0x40e0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_error_idx                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_IDX_ADDRESS 0x1039
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_IDX_BYTE_ADDRESS 0x40e4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_error_queue                  */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_QUEUE_ADDRESS 0x103a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_QUEUE_BYTE_ADDRESS 0x40e8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_dbg_stream                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_STREAM_ADDRESS 0x103b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_STREAM_BYTE_ADDRESS 0x40ec
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_dbg_fsm1                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM1_ADDRESS 0x103c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM1_BYTE_ADDRESS 0x40f0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_dbg_fsm2                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM2_ADDRESS 0x103d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM2_BYTE_ADDRESS 0x40f4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_dbg_fsm3                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM3_ADDRESS 0x103e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM3_BYTE_ADDRESS 0x40f8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym0_dbg_fsm4                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM4_ADDRESS 0x103f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM4_BYTE_ADDRESS 0x40fc
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring0_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W0_ADDRESS 0x1080
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W0_BYTE_ADDRESS 0x4200
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring0_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W1_ADDRESS 0x1081
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W1_BYTE_ADDRESS 0x4204
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring0_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_SIZE_ADDRESS 0x1082
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_SIZE_BYTE_ADDRESS 0x4208
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring0_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_PRODUCER_IDX_ADDRESS 0x1083
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_PRODUCER_IDX_BYTE_ADDRESS 0x420c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring1_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W0_ADDRESS 0x1084
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W0_BYTE_ADDRESS 0x4210
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring1_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W1_ADDRESS 0x1085
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W1_BYTE_ADDRESS 0x4214
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring1_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_SIZE_ADDRESS 0x1086
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_SIZE_BYTE_ADDRESS 0x4218
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring1_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_PRODUCER_IDX_ADDRESS 0x1087
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_PRODUCER_IDX_BYTE_ADDRESS 0x421c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring2_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W0_ADDRESS 0x1088
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W0_BYTE_ADDRESS 0x4220
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring2_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W1_ADDRESS 0x1089
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W1_BYTE_ADDRESS 0x4224
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring2_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_SIZE_ADDRESS 0x108a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_SIZE_BYTE_ADDRESS 0x4228
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring2_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_PRODUCER_IDX_ADDRESS 0x108b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_PRODUCER_IDX_BYTE_ADDRESS 0x422c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring3_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W0_ADDRESS 0x108c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W0_BYTE_ADDRESS 0x4230
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring3_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W1_ADDRESS 0x108d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W1_BYTE_ADDRESS 0x4234
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring3_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_SIZE_ADDRESS 0x108e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_SIZE_BYTE_ADDRESS 0x4238
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring3_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_PRODUCER_IDX_ADDRESS 0x108f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_PRODUCER_IDX_BYTE_ADDRESS 0x423c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring4_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W0_ADDRESS 0x1090
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W0_BYTE_ADDRESS 0x4240
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring4_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W1_ADDRESS 0x1091
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W1_BYTE_ADDRESS 0x4244
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring4_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_SIZE_ADDRESS 0x1092
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_SIZE_BYTE_ADDRESS 0x4248
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring4_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_PRODUCER_IDX_ADDRESS 0x1093
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_PRODUCER_IDX_BYTE_ADDRESS 0x424c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring5_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W0_ADDRESS 0x1094
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W0_BYTE_ADDRESS 0x4250
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring5_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W1_ADDRESS 0x1095
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W1_BYTE_ADDRESS 0x4254
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring5_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_SIZE_ADDRESS 0x1096
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_SIZE_BYTE_ADDRESS 0x4258
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring5_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_PRODUCER_IDX_ADDRESS 0x1097
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_PRODUCER_IDX_BYTE_ADDRESS 0x425c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring6_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W0_ADDRESS 0x1098
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W0_BYTE_ADDRESS 0x4260
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring6_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W1_ADDRESS 0x1099
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W1_BYTE_ADDRESS 0x4264
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring6_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_SIZE_ADDRESS 0x109a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_SIZE_BYTE_ADDRESS 0x4268
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring6_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_PRODUCER_IDX_ADDRESS 0x109b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_PRODUCER_IDX_BYTE_ADDRESS 0x426c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring7_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W0_ADDRESS 0x109c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W0_BYTE_ADDRESS 0x4270
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring7_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W1_ADDRESS 0x109d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W1_BYTE_ADDRESS 0x4274
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring7_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_SIZE_ADDRESS 0x109e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_SIZE_BYTE_ADDRESS 0x4278
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring7_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_PRODUCER_IDX_ADDRESS 0x109f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_PRODUCER_IDX_BYTE_ADDRESS 0x427c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_soft_rst                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_SOFT_RST_ADDRESS 0x10a0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_SOFT_RST_BYTE_ADDRESS 0x4280
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_wrr_credit                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_WRR_CREDIT_ADDRESS 0x10a1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_WRR_CREDIT_BYTE_ADDRESS 0x4284
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_abs_priority                 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ABS_PRIORITY_ADDRESS 0x10a2
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ABS_PRIORITY_BYTE_ADDRESS 0x4288
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring0_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_CONSUMER_IDX_ADDRESS 0x10a8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_CONSUMER_IDX_BYTE_ADDRESS 0x42a0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring1_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_CONSUMER_IDX_ADDRESS 0x10a9
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_CONSUMER_IDX_BYTE_ADDRESS 0x42a4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring2_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_CONSUMER_IDX_ADDRESS 0x10aa
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_CONSUMER_IDX_BYTE_ADDRESS 0x42a8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring3_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_CONSUMER_IDX_ADDRESS 0x10ab
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_CONSUMER_IDX_BYTE_ADDRESS 0x42ac
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring4_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_CONSUMER_IDX_ADDRESS 0x10ac
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_CONSUMER_IDX_BYTE_ADDRESS 0x42b0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring5_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_CONSUMER_IDX_ADDRESS 0x10ad
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_CONSUMER_IDX_BYTE_ADDRESS 0x42b4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring6_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_CONSUMER_IDX_ADDRESS 0x10ae
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_CONSUMER_IDX_BYTE_ADDRESS 0x42b8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring7_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_CONSUMER_IDX_ADDRESS 0x10af
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_CONSUMER_IDX_BYTE_ADDRESS 0x42bc
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring0_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_COMP_CNT_ADDRESS 0x10b0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_COMP_CNT_BYTE_ADDRESS 0x42c0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring1_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_COMP_CNT_ADDRESS 0x10b1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_COMP_CNT_BYTE_ADDRESS 0x42c4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring2_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_COMP_CNT_ADDRESS 0x10b2
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_COMP_CNT_BYTE_ADDRESS 0x42c8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring3_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_COMP_CNT_ADDRESS 0x10b3
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_COMP_CNT_BYTE_ADDRESS 0x42cc
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring4_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_COMP_CNT_ADDRESS 0x10b4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_COMP_CNT_BYTE_ADDRESS 0x42d0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring5_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_COMP_CNT_ADDRESS 0x10b5
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_COMP_CNT_BYTE_ADDRESS 0x42d4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring6_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_COMP_CNT_ADDRESS 0x10b6
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_COMP_CNT_BYTE_ADDRESS 0x42d8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_ring7_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_COMP_CNT_ADDRESS 0x10b7
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_COMP_CNT_BYTE_ADDRESS 0x42dc
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_status                       */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_STATUS_ADDRESS 0x10b8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_STATUS_BYTE_ADDRESS 0x42e0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_error_idx                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_IDX_ADDRESS 0x10b9
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_IDX_BYTE_ADDRESS 0x42e4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_error_queue                  */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_QUEUE_ADDRESS 0x10ba
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_QUEUE_BYTE_ADDRESS 0x42e8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_dbg_stream                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_STREAM_ADDRESS 0x10bb
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_STREAM_BYTE_ADDRESS 0x42ec
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_dbg_fsm1                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM1_ADDRESS 0x10bc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM1_BYTE_ADDRESS 0x42f0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_dbg_fsm2                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM2_ADDRESS 0x10bd
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM2_BYTE_ADDRESS 0x42f4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_dbg_fsm3                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM3_ADDRESS 0x10be
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM3_BYTE_ADDRESS 0x42f8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym1_dbg_fsm4                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM4_ADDRESS 0x10bf
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM4_BYTE_ADDRESS 0x42fc
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring0_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W0_ADDRESS 0x1100
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W0_BYTE_ADDRESS 0x4400
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring0_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W1_ADDRESS 0x1101
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W1_BYTE_ADDRESS 0x4404
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring0_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_SIZE_ADDRESS 0x1102
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_SIZE_BYTE_ADDRESS 0x4408
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring0_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_PRODUCER_IDX_ADDRESS 0x1103
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_PRODUCER_IDX_BYTE_ADDRESS 0x440c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring1_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W0_ADDRESS 0x1104
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W0_BYTE_ADDRESS 0x4410
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring1_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W1_ADDRESS 0x1105
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W1_BYTE_ADDRESS 0x4414
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring1_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_SIZE_ADDRESS 0x1106
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_SIZE_BYTE_ADDRESS 0x4418
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring1_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_PRODUCER_IDX_ADDRESS 0x1107
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_PRODUCER_IDX_BYTE_ADDRESS 0x441c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring2_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W0_ADDRESS 0x1108
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W0_BYTE_ADDRESS 0x4420
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring2_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W1_ADDRESS 0x1109
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W1_BYTE_ADDRESS 0x4424
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring2_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_SIZE_ADDRESS 0x110a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_SIZE_BYTE_ADDRESS 0x4428
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring2_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_PRODUCER_IDX_ADDRESS 0x110b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_PRODUCER_IDX_BYTE_ADDRESS 0x442c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring3_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W0_ADDRESS 0x110c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W0_BYTE_ADDRESS 0x4430
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring3_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W1_ADDRESS 0x110d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W1_BYTE_ADDRESS 0x4434
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring3_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_SIZE_ADDRESS 0x110e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_SIZE_BYTE_ADDRESS 0x4438
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring3_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_PRODUCER_IDX_ADDRESS 0x110f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_PRODUCER_IDX_BYTE_ADDRESS 0x443c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring4_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W0_ADDRESS 0x1110
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W0_BYTE_ADDRESS 0x4440
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring4_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W1_ADDRESS 0x1111
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W1_BYTE_ADDRESS 0x4444
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring4_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_SIZE_ADDRESS 0x1112
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_SIZE_BYTE_ADDRESS 0x4448
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring4_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_PRODUCER_IDX_ADDRESS 0x1113
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_PRODUCER_IDX_BYTE_ADDRESS 0x444c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring5_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W0_ADDRESS 0x1114
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W0_BYTE_ADDRESS 0x4450
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring5_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W1_ADDRESS 0x1115
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W1_BYTE_ADDRESS 0x4454
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring5_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_SIZE_ADDRESS 0x1116
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_SIZE_BYTE_ADDRESS 0x4458
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring5_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_PRODUCER_IDX_ADDRESS 0x1117
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_PRODUCER_IDX_BYTE_ADDRESS 0x445c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring6_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W0_ADDRESS 0x1118
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W0_BYTE_ADDRESS 0x4460
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring6_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W1_ADDRESS 0x1119
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W1_BYTE_ADDRESS 0x4464
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring6_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_SIZE_ADDRESS 0x111a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_SIZE_BYTE_ADDRESS 0x4468
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring6_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_PRODUCER_IDX_ADDRESS 0x111b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_PRODUCER_IDX_BYTE_ADDRESS 0x446c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring7_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W0_ADDRESS 0x111c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W0_BYTE_ADDRESS 0x4470
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring7_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W1_ADDRESS 0x111d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W1_BYTE_ADDRESS 0x4474
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring7_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_SIZE_ADDRESS 0x111e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_SIZE_BYTE_ADDRESS 0x4478
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring7_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_PRODUCER_IDX_ADDRESS 0x111f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_PRODUCER_IDX_BYTE_ADDRESS 0x447c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_soft_rst                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_SOFT_RST_ADDRESS 0x1120
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_SOFT_RST_BYTE_ADDRESS 0x4480
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_wrr_credit                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_WRR_CREDIT_ADDRESS 0x1121
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_WRR_CREDIT_BYTE_ADDRESS 0x4484
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_abs_priority                 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ABS_PRIORITY_ADDRESS 0x1122
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ABS_PRIORITY_BYTE_ADDRESS 0x4488
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring0_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_CONSUMER_IDX_ADDRESS 0x1128
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_CONSUMER_IDX_BYTE_ADDRESS 0x44a0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring1_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_CONSUMER_IDX_ADDRESS 0x1129
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_CONSUMER_IDX_BYTE_ADDRESS 0x44a4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring2_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_CONSUMER_IDX_ADDRESS 0x112a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_CONSUMER_IDX_BYTE_ADDRESS 0x44a8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring3_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_CONSUMER_IDX_ADDRESS 0x112b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_CONSUMER_IDX_BYTE_ADDRESS 0x44ac
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring4_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_CONSUMER_IDX_ADDRESS 0x112c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_CONSUMER_IDX_BYTE_ADDRESS 0x44b0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring5_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_CONSUMER_IDX_ADDRESS 0x112d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_CONSUMER_IDX_BYTE_ADDRESS 0x44b4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring6_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_CONSUMER_IDX_ADDRESS 0x112e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_CONSUMER_IDX_BYTE_ADDRESS 0x44b8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring7_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_CONSUMER_IDX_ADDRESS 0x112f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_CONSUMER_IDX_BYTE_ADDRESS 0x44bc
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring0_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_COMP_CNT_ADDRESS 0x1130
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_COMP_CNT_BYTE_ADDRESS 0x44c0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring1_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_COMP_CNT_ADDRESS 0x1131
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_COMP_CNT_BYTE_ADDRESS 0x44c4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring2_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_COMP_CNT_ADDRESS 0x1132
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_COMP_CNT_BYTE_ADDRESS 0x44c8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring3_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_COMP_CNT_ADDRESS 0x1133
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_COMP_CNT_BYTE_ADDRESS 0x44cc
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring4_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_COMP_CNT_ADDRESS 0x1134
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_COMP_CNT_BYTE_ADDRESS 0x44d0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring5_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_COMP_CNT_ADDRESS 0x1135
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_COMP_CNT_BYTE_ADDRESS 0x44d4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring6_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_COMP_CNT_ADDRESS 0x1136
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_COMP_CNT_BYTE_ADDRESS 0x44d8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_ring7_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_COMP_CNT_ADDRESS 0x1137
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_COMP_CNT_BYTE_ADDRESS 0x44dc
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_status                       */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_STATUS_ADDRESS 0x1138
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_STATUS_BYTE_ADDRESS 0x44e0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_error_idx                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_IDX_ADDRESS 0x1139
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_IDX_BYTE_ADDRESS 0x44e4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_error_queue                  */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_QUEUE_ADDRESS 0x113a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_QUEUE_BYTE_ADDRESS 0x44e8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_dbg_stream                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_STREAM_ADDRESS 0x113b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_STREAM_BYTE_ADDRESS 0x44ec
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_dbg_fsm1                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM1_ADDRESS 0x113c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM1_BYTE_ADDRESS 0x44f0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_dbg_fsm2                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM2_ADDRESS 0x113d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM2_BYTE_ADDRESS 0x44f4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_dbg_fsm3                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM3_ADDRESS 0x113e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM3_BYTE_ADDRESS 0x44f8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym2_dbg_fsm4                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM4_ADDRESS 0x113f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM4_BYTE_ADDRESS 0x44fc
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring0_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W0_ADDRESS 0x1180
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W0_BYTE_ADDRESS 0x4600
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring0_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W1_ADDRESS 0x1181
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W1_BYTE_ADDRESS 0x4604
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring0_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_SIZE_ADDRESS 0x1182
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_SIZE_BYTE_ADDRESS 0x4608
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring0_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_PRODUCER_IDX_ADDRESS 0x1183
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_PRODUCER_IDX_BYTE_ADDRESS 0x460c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring1_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W0_ADDRESS 0x1184
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W0_BYTE_ADDRESS 0x4610
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring1_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W1_ADDRESS 0x1185
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W1_BYTE_ADDRESS 0x4614
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring1_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_SIZE_ADDRESS 0x1186
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_SIZE_BYTE_ADDRESS 0x4618
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring1_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_PRODUCER_IDX_ADDRESS 0x1187
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_PRODUCER_IDX_BYTE_ADDRESS 0x461c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring2_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W0_ADDRESS 0x1188
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W0_BYTE_ADDRESS 0x4620
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring2_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W1_ADDRESS 0x1189
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W1_BYTE_ADDRESS 0x4624
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring2_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_SIZE_ADDRESS 0x118a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_SIZE_BYTE_ADDRESS 0x4628
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring2_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_PRODUCER_IDX_ADDRESS 0x118b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_PRODUCER_IDX_BYTE_ADDRESS 0x462c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring3_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W0_ADDRESS 0x118c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W0_BYTE_ADDRESS 0x4630
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring3_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W1_ADDRESS 0x118d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W1_BYTE_ADDRESS 0x4634
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring3_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_SIZE_ADDRESS 0x118e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_SIZE_BYTE_ADDRESS 0x4638
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring3_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_PRODUCER_IDX_ADDRESS 0x118f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_PRODUCER_IDX_BYTE_ADDRESS 0x463c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring4_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W0_ADDRESS 0x1190
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W0_BYTE_ADDRESS 0x4640
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring4_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W1_ADDRESS 0x1191
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W1_BYTE_ADDRESS 0x4644
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring4_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_SIZE_ADDRESS 0x1192
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_SIZE_BYTE_ADDRESS 0x4648
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring4_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_PRODUCER_IDX_ADDRESS 0x1193
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_PRODUCER_IDX_BYTE_ADDRESS 0x464c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring5_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W0_ADDRESS 0x1194
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W0_BYTE_ADDRESS 0x4650
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring5_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W1_ADDRESS 0x1195
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W1_BYTE_ADDRESS 0x4654
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring5_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_SIZE_ADDRESS 0x1196
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_SIZE_BYTE_ADDRESS 0x4658
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring5_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_PRODUCER_IDX_ADDRESS 0x1197
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_PRODUCER_IDX_BYTE_ADDRESS 0x465c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring6_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W0_ADDRESS 0x1198
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W0_BYTE_ADDRESS 0x4660
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring6_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W1_ADDRESS 0x1199
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W1_BYTE_ADDRESS 0x4664
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring6_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_SIZE_ADDRESS 0x119a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_SIZE_BYTE_ADDRESS 0x4668
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring6_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_PRODUCER_IDX_ADDRESS 0x119b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_PRODUCER_IDX_BYTE_ADDRESS 0x466c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring7_base_w0                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W0_ADDRESS 0x119c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W0_BYTE_ADDRESS 0x4670
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring7_base_w1                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W1_ADDRESS 0x119d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W1_BYTE_ADDRESS 0x4674
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring7_size                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_SIZE_ADDRESS 0x119e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_SIZE_BYTE_ADDRESS 0x4678
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring7_producer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_PRODUCER_IDX_ADDRESS 0x119f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_PRODUCER_IDX_BYTE_ADDRESS 0x467c
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_soft_rst                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_SOFT_RST_ADDRESS 0x11a0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_SOFT_RST_BYTE_ADDRESS 0x4680
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_wrr_credit                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_WRR_CREDIT_ADDRESS 0x11a1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_WRR_CREDIT_BYTE_ADDRESS 0x4684
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_abs_priority                 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ABS_PRIORITY_ADDRESS 0x11a2
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ABS_PRIORITY_BYTE_ADDRESS 0x4688
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring0_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_CONSUMER_IDX_ADDRESS 0x11a8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_CONSUMER_IDX_BYTE_ADDRESS 0x46a0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring1_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_CONSUMER_IDX_ADDRESS 0x11a9
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_CONSUMER_IDX_BYTE_ADDRESS 0x46a4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring2_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_CONSUMER_IDX_ADDRESS 0x11aa
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_CONSUMER_IDX_BYTE_ADDRESS 0x46a8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring3_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_CONSUMER_IDX_ADDRESS 0x11ab
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_CONSUMER_IDX_BYTE_ADDRESS 0x46ac
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring4_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_CONSUMER_IDX_ADDRESS 0x11ac
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_CONSUMER_IDX_BYTE_ADDRESS 0x46b0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring5_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_CONSUMER_IDX_ADDRESS 0x11ad
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_CONSUMER_IDX_BYTE_ADDRESS 0x46b4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring6_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_CONSUMER_IDX_ADDRESS 0x11ae
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_CONSUMER_IDX_BYTE_ADDRESS 0x46b8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring7_consumer_idx           */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_CONSUMER_IDX_ADDRESS 0x11af
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_CONSUMER_IDX_BYTE_ADDRESS 0x46bc
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring0_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_COMP_CNT_ADDRESS 0x11b0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_COMP_CNT_BYTE_ADDRESS 0x46c0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring1_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_COMP_CNT_ADDRESS 0x11b1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_COMP_CNT_BYTE_ADDRESS 0x46c4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring2_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_COMP_CNT_ADDRESS 0x11b2
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_COMP_CNT_BYTE_ADDRESS 0x46c8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring3_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_COMP_CNT_ADDRESS 0x11b3
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_COMP_CNT_BYTE_ADDRESS 0x46cc
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring4_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_COMP_CNT_ADDRESS 0x11b4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_COMP_CNT_BYTE_ADDRESS 0x46d0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring5_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_COMP_CNT_ADDRESS 0x11b5
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_COMP_CNT_BYTE_ADDRESS 0x46d4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring6_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_COMP_CNT_ADDRESS 0x11b6
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_COMP_CNT_BYTE_ADDRESS 0x46d8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_ring7_comp_cnt               */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_COMP_CNT_ADDRESS 0x11b7
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_COMP_CNT_BYTE_ADDRESS 0x46dc
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_status                       */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_STATUS_ADDRESS 0x11b8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_STATUS_BYTE_ADDRESS 0x46e0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_error_idx                    */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_IDX_ADDRESS 0x11b9
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_IDX_BYTE_ADDRESS 0x46e4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_error_queue                  */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_QUEUE_ADDRESS 0x11ba
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_QUEUE_BYTE_ADDRESS 0x46e8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_dbg_stream                   */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_STREAM_ADDRESS 0x11bb
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_STREAM_BYTE_ADDRESS 0x46ec
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_dbg_fsm1                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM1_ADDRESS 0x11bc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM1_BYTE_ADDRESS 0x46f0
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_dbg_fsm2                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM2_ADDRESS 0x11bd
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM2_BYTE_ADDRESS 0x46f4
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_dbg_fsm3                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM3_ADDRESS 0x11be
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM3_BYTE_ADDRESS 0x46f8
/* Register: elb_hese_csr.dhs_crypto_ctl.sym3_dbg_fsm4                     */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM4_ADDRESS 0x11bf
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM4_BYTE_ADDRESS 0x46fc
/* Register: elb_hese_csr.cfg_he_ctl                                       */
#define ELB_HESE_CSR_CFG_HE_CTL_ADDRESS 0x2000
#define ELB_HESE_CSR_CFG_HE_CTL_BYTE_ADDRESS 0x8000
/* Register: elb_hese_csr.csr_intr                                         */
#define ELB_HESE_CSR_CSR_INTR_ADDRESS 0x2001
#define ELB_HESE_CSR_CSR_INTR_BYTE_ADDRESS 0x8004
/* Group: elb_hese_csr.int_groups                                          */
#define ELB_HESE_CSR_INT_GROUPS_ADDRESS 0x2004
#define ELB_HESE_CSR_INT_GROUPS_BYTE_ADDRESS 0x8010
/* Register: elb_hese_csr.int_groups.intreg                                */
#define ELB_HESE_CSR_INT_GROUPS_INTREG_ADDRESS 0x2004
#define ELB_HESE_CSR_INT_GROUPS_INTREG_BYTE_ADDRESS 0x8010
/* Register: elb_hese_csr.int_groups.int_enable_rw_reg                     */
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_ADDRESS 0x2005
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_BYTE_ADDRESS 0x8014
/* Register: elb_hese_csr.int_groups.int_rw_reg                            */
#define ELB_HESE_CSR_INT_GROUPS_INT_RW_REG_ADDRESS 0x2006
#define ELB_HESE_CSR_INT_GROUPS_INT_RW_REG_BYTE_ADDRESS 0x8018
/* Group: elb_hese_csr.int_invf                                            */
#define ELB_HESE_CSR_INT_INVF_ADDRESS 0x2008
#define ELB_HESE_CSR_INT_INVF_BYTE_ADDRESS 0x8020
/* Register: elb_hese_csr.int_invf.intreg                                  */
#define ELB_HESE_CSR_INT_INVF_INTREG_ADDRESS 0x2008
#define ELB_HESE_CSR_INT_INVF_INTREG_BYTE_ADDRESS 0x8020
/* Register: elb_hese_csr.int_invf.int_test_set                            */
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_ADDRESS 0x2009
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_BYTE_ADDRESS 0x8024
/* Register: elb_hese_csr.int_invf.int_enable_set                          */
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_ADDRESS 0x200a
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_BYTE_ADDRESS 0x8028
/* Register: elb_hese_csr.int_invf.int_enable_clear                        */
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_ADDRESS 0x200b
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_BYTE_ADDRESS 0x802c
/* Addressmap: elb_hese_csr.mdinvf0                                        */
#define ELB_HESE_CSR_MDINVF0_ADDRESS 0x2800
#define ELB_HESE_CSR_MDINVF0_BYTE_ADDRESS 0xa000
/* Register: elb_hese_csr.mdinvf0.cfg_sameid_log                           */
#define ELB_HESE_CSR_MDINVF0_CFG_SAMEID_LOG_ADDRESS 0x2800
#define ELB_HESE_CSR_MDINVF0_CFG_SAMEID_LOG_BYTE_ADDRESS 0xa000
/* Memory: elb_hese_csr.mdinvf0.STA_aw_log_cam                             */
#define ELB_HESE_CSR_MDINVF0_STA_AW_LOG_CAM_ADDRESS 0x2900
#define ELB_HESE_CSR_MDINVF0_STA_AW_LOG_CAM_BYTE_ADDRESS 0xa400
/* Register: elb_hese_csr.mdinvf0.STA_aw_log_cam.entry                     */
#define ELB_HESE_CSR_MDINVF0_STA_AW_LOG_CAM_ENTRY_ADDRESS 0x2900
#define ELB_HESE_CSR_MDINVF0_STA_AW_LOG_CAM_ENTRY_BYTE_ADDRESS 0xa400
#define ELB_HESE_CSR_MDINVF0_STA_AW_LOG_CAM_ENTRY_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_MDINVF0_STA_AW_LOG_CAM_ENTRY_ARRAY_COUNT 0x81
#define ELB_HESE_CSR_MDINVF0_STA_AW_LOG_CAM_ENTRY_ARRAY_INDEX_MAX 0x80
#define ELB_HESE_CSR_MDINVF0_STA_AW_LOG_CAM_ENTRY_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf0.STA_ar_log_cam                             */
#define ELB_HESE_CSR_MDINVF0_STA_AR_LOG_CAM_ADDRESS 0x2a00
#define ELB_HESE_CSR_MDINVF0_STA_AR_LOG_CAM_BYTE_ADDRESS 0xa800
/* Register: elb_hese_csr.mdinvf0.STA_ar_log_cam.entry                     */
#define ELB_HESE_CSR_MDINVF0_STA_AR_LOG_CAM_ENTRY_ADDRESS 0x2a00
#define ELB_HESE_CSR_MDINVF0_STA_AR_LOG_CAM_ENTRY_BYTE_ADDRESS 0xa800
#define ELB_HESE_CSR_MDINVF0_STA_AR_LOG_CAM_ENTRY_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_MDINVF0_STA_AR_LOG_CAM_ENTRY_ARRAY_COUNT 0x81
#define ELB_HESE_CSR_MDINVF0_STA_AR_LOG_CAM_ENTRY_ARRAY_INDEX_MAX 0x80
#define ELB_HESE_CSR_MDINVF0_STA_AR_LOG_CAM_ENTRY_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf0.filter_addr_lo                             */
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_LO_ADDRESS 0x2b00
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_LO_BYTE_ADDRESS 0xac00
/* Register: elb_hese_csr.mdinvf0.filter_addr_lo.data                      */
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_LO_DATA_ADDRESS 0x2b00
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_LO_DATA_BYTE_ADDRESS 0xac00
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_LO_DATA_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_LO_DATA_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_LO_DATA_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_LO_DATA_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf0.filter_addr_hi                             */
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_HI_ADDRESS 0x2b40
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_HI_BYTE_ADDRESS 0xad00
/* Register: elb_hese_csr.mdinvf0.filter_addr_hi.data                      */
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_HI_DATA_ADDRESS 0x2b40
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_HI_DATA_BYTE_ADDRESS 0xad00
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_HI_DATA_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_HI_DATA_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_HI_DATA_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_HI_DATA_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf0.filter_addr_host                           */
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_HOST_ADDRESS 0x2b80
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_HOST_BYTE_ADDRESS 0xae00
/* Register: elb_hese_csr.mdinvf0.filter_addr_host.data                    */
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_HOST_DATA_ADDRESS 0x2b80
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_HOST_DATA_BYTE_ADDRESS 0xae00
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_HOST_DATA_ARRAY_ELEMENT_SIZE 0x4
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_HOST_DATA_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_HOST_DATA_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_HOST_DATA_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf0.filter_addr_pic                            */
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_PIC_ADDRESS 0x2bc0
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_PIC_BYTE_ADDRESS 0xaf00
/* Register: elb_hese_csr.mdinvf0.filter_addr_pic.data                     */
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_PIC_DATA_ADDRESS 0x2bc0
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_PIC_DATA_BYTE_ADDRESS 0xaf00
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_PIC_DATA_ARRAY_ELEMENT_SIZE 0x4
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_PIC_DATA_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_PIC_DATA_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_PIC_DATA_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf0.filter_addr_lif                            */
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_LIF_ADDRESS 0x2c00
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_LIF_BYTE_ADDRESS 0xb000
/* Register: elb_hese_csr.mdinvf0.filter_addr_lif.data                     */
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_LIF_DATA_ADDRESS 0x2c00
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_LIF_DATA_BYTE_ADDRESS 0xb000
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_LIF_DATA_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_LIF_DATA_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_LIF_DATA_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_LIF_DATA_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf0.filter_src                                 */
#define ELB_HESE_CSR_MDINVF0_FILTER_SRC_ADDRESS 0x2c40
#define ELB_HESE_CSR_MDINVF0_FILTER_SRC_BYTE_ADDRESS 0xb100
/* Register: elb_hese_csr.mdinvf0.filter_src.data                          */
#define ELB_HESE_CSR_MDINVF0_FILTER_SRC_DATA_ADDRESS 0x2c40
#define ELB_HESE_CSR_MDINVF0_FILTER_SRC_DATA_BYTE_ADDRESS 0xb100
#define ELB_HESE_CSR_MDINVF0_FILTER_SRC_DATA_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_MDINVF0_FILTER_SRC_DATA_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF0_FILTER_SRC_DATA_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF0_FILTER_SRC_DATA_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf0.filter_axi_prot                            */
#define ELB_HESE_CSR_MDINVF0_FILTER_AXI_PROT_ADDRESS 0x2c80
#define ELB_HESE_CSR_MDINVF0_FILTER_AXI_PROT_BYTE_ADDRESS 0xb200
/* Register: elb_hese_csr.mdinvf0.filter_axi_prot.data                     */
#define ELB_HESE_CSR_MDINVF0_FILTER_AXI_PROT_DATA_ADDRESS 0x2c80
#define ELB_HESE_CSR_MDINVF0_FILTER_AXI_PROT_DATA_BYTE_ADDRESS 0xb200
#define ELB_HESE_CSR_MDINVF0_FILTER_AXI_PROT_DATA_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_MDINVF0_FILTER_AXI_PROT_DATA_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF0_FILTER_AXI_PROT_DATA_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF0_FILTER_AXI_PROT_DATA_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf0.filter_axi_cache                           */
#define ELB_HESE_CSR_MDINVF0_FILTER_AXI_CACHE_ADDRESS 0x2cc0
#define ELB_HESE_CSR_MDINVF0_FILTER_AXI_CACHE_BYTE_ADDRESS 0xb300
/* Register: elb_hese_csr.mdinvf0.filter_axi_cache.data                    */
#define ELB_HESE_CSR_MDINVF0_FILTER_AXI_CACHE_DATA_ADDRESS 0x2cc0
#define ELB_HESE_CSR_MDINVF0_FILTER_AXI_CACHE_DATA_BYTE_ADDRESS 0xb300
#define ELB_HESE_CSR_MDINVF0_FILTER_AXI_CACHE_DATA_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_MDINVF0_FILTER_AXI_CACHE_DATA_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF0_FILTER_AXI_CACHE_DATA_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF0_FILTER_AXI_CACHE_DATA_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf0.filter_acp                                 */
#define ELB_HESE_CSR_MDINVF0_FILTER_ACP_ADDRESS 0x2d00
#define ELB_HESE_CSR_MDINVF0_FILTER_ACP_BYTE_ADDRESS 0xb400
/* Register: elb_hese_csr.mdinvf0.filter_acp.data                          */
#define ELB_HESE_CSR_MDINVF0_FILTER_ACP_DATA_ADDRESS 0x2d00
#define ELB_HESE_CSR_MDINVF0_FILTER_ACP_DATA_BYTE_ADDRESS 0xb400
#define ELB_HESE_CSR_MDINVF0_FILTER_ACP_DATA_ARRAY_ELEMENT_SIZE 0x2
#define ELB_HESE_CSR_MDINVF0_FILTER_ACP_DATA_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF0_FILTER_ACP_DATA_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF0_FILTER_ACP_DATA_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf0.filter_addr_ctl                            */
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_CTL_ADDRESS 0x2d40
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_CTL_BYTE_ADDRESS 0xb500
/* Register: elb_hese_csr.mdinvf0.filter_addr_ctl.value                    */
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_CTL_VALUE_ADDRESS 0x2d40
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_CTL_VALUE_BYTE_ADDRESS 0xb500
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_CTL_VALUE_ARRAY_ELEMENT_SIZE 0x2
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_CTL_VALUE_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_CTL_VALUE_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF0_FILTER_ADDR_CTL_VALUE_ARRAY_INDEX_MIN 0x0
/* Register: elb_hese_csr.mdinvf0.filter_freeze_ctl                        */
#define ELB_HESE_CSR_MDINVF0_FILTER_FREEZE_CTL_ADDRESS 0x2d80
#define ELB_HESE_CSR_MDINVF0_FILTER_FREEZE_CTL_BYTE_ADDRESS 0xb600
/* Memory: elb_hese_csr.mdinvf0.filter_hit_count                           */
#define ELB_HESE_CSR_MDINVF0_FILTER_HIT_COUNT_ADDRESS 0x2dc0
#define ELB_HESE_CSR_MDINVF0_FILTER_HIT_COUNT_BYTE_ADDRESS 0xb700
/* Register: elb_hese_csr.mdinvf0.filter_hit_count.value                   */
#define ELB_HESE_CSR_MDINVF0_FILTER_HIT_COUNT_VALUE_ADDRESS 0x2dc0
#define ELB_HESE_CSR_MDINVF0_FILTER_HIT_COUNT_VALUE_BYTE_ADDRESS 0xb700
#define ELB_HESE_CSR_MDINVF0_FILTER_HIT_COUNT_VALUE_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_MDINVF0_FILTER_HIT_COUNT_VALUE_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF0_FILTER_HIT_COUNT_VALUE_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF0_FILTER_HIT_COUNT_VALUE_ARRAY_INDEX_MIN 0x0
/* Register: elb_hese_csr.mdinvf0.CNT_read_deny                            */
#define ELB_HESE_CSR_MDINVF0_CNT_READ_DENY_ADDRESS 0x2e00
#define ELB_HESE_CSR_MDINVF0_CNT_READ_DENY_BYTE_ADDRESS 0xb800
/* Register: elb_hese_csr.mdinvf0.CNT_write_deny                           */
#define ELB_HESE_CSR_MDINVF0_CNT_WRITE_DENY_ADDRESS 0x2e01
#define ELB_HESE_CSR_MDINVF0_CNT_WRITE_DENY_BYTE_ADDRESS 0xb804
/* Register: elb_hese_csr.mdinvf0.CFG_clear_filter                         */
#define ELB_HESE_CSR_MDINVF0_CFG_CLEAR_FILTER_ADDRESS 0x2e02
#define ELB_HESE_CSR_MDINVF0_CFG_CLEAR_FILTER_BYTE_ADDRESS 0xb808
/* Register: elb_hese_csr.mdinvf0.STA_write_deny                           */
#define ELB_HESE_CSR_MDINVF0_STA_WRITE_DENY_ADDRESS 0x2e03
#define ELB_HESE_CSR_MDINVF0_STA_WRITE_DENY_BYTE_ADDRESS 0xb80c
/* Register: elb_hese_csr.mdinvf0.STA_read_deny                            */
#define ELB_HESE_CSR_MDINVF0_STA_READ_DENY_ADDRESS 0x2e04
#define ELB_HESE_CSR_MDINVF0_STA_READ_DENY_BYTE_ADDRESS 0xb810
/* Register: elb_hese_csr.mdinvf0.STA_reads                                */
#define ELB_HESE_CSR_MDINVF0_STA_READS_ADDRESS 0x2e05
#define ELB_HESE_CSR_MDINVF0_STA_READS_BYTE_ADDRESS 0xb814
/* Register: elb_hese_csr.mdinvf0.STA_writes                               */
#define ELB_HESE_CSR_MDINVF0_STA_WRITES_ADDRESS 0x2e06
#define ELB_HESE_CSR_MDINVF0_STA_WRITES_BYTE_ADDRESS 0xb818
/* Wide Register: elb_hese_csr.mdinvf0.STA_freeze                          */
#define ELB_HESE_CSR_MDINVF0_STA_FREEZE_ADDRESS 0x2e08
#define ELB_HESE_CSR_MDINVF0_STA_FREEZE_BYTE_ADDRESS 0xb820
/* Register: elb_hese_csr.mdinvf0.STA_freeze.STA_freeze_0_3                */
#define ELB_HESE_CSR_MDINVF0_STA_FREEZE_STA_FREEZE_0_3_ADDRESS 0x2e08
#define ELB_HESE_CSR_MDINVF0_STA_FREEZE_STA_FREEZE_0_3_BYTE_ADDRESS 0xb820
/* Register: elb_hese_csr.mdinvf0.STA_freeze.STA_freeze_1_3                */
#define ELB_HESE_CSR_MDINVF0_STA_FREEZE_STA_FREEZE_1_3_ADDRESS 0x2e09
#define ELB_HESE_CSR_MDINVF0_STA_FREEZE_STA_FREEZE_1_3_BYTE_ADDRESS 0xb824
/* Register: elb_hese_csr.mdinvf0.STA_freeze.STA_freeze_2_3                */
#define ELB_HESE_CSR_MDINVF0_STA_FREEZE_STA_FREEZE_2_3_ADDRESS 0x2e0a
#define ELB_HESE_CSR_MDINVF0_STA_FREEZE_STA_FREEZE_2_3_BYTE_ADDRESS 0xb828
/* Wide Register: elb_hese_csr.mdinvf0.STA_interrupt                       */
#define ELB_HESE_CSR_MDINVF0_STA_INTERRUPT_ADDRESS 0x2e0c
#define ELB_HESE_CSR_MDINVF0_STA_INTERRUPT_BYTE_ADDRESS 0xb830
/* Register: elb_hese_csr.mdinvf0.STA_interrupt.STA_interrupt_0_3          */
#define ELB_HESE_CSR_MDINVF0_STA_INTERRUPT_STA_INTERRUPT_0_3_ADDRESS 0x2e0c
#define ELB_HESE_CSR_MDINVF0_STA_INTERRUPT_STA_INTERRUPT_0_3_BYTE_ADDRESS 0xb830
/* Register: elb_hese_csr.mdinvf0.STA_interrupt.STA_interrupt_1_3          */
#define ELB_HESE_CSR_MDINVF0_STA_INTERRUPT_STA_INTERRUPT_1_3_ADDRESS 0x2e0d
#define ELB_HESE_CSR_MDINVF0_STA_INTERRUPT_STA_INTERRUPT_1_3_BYTE_ADDRESS 0xb834
/* Register: elb_hese_csr.mdinvf0.STA_interrupt.STA_interrupt_2_3          */
#define ELB_HESE_CSR_MDINVF0_STA_INTERRUPT_STA_INTERRUPT_2_3_ADDRESS 0x2e0e
#define ELB_HESE_CSR_MDINVF0_STA_INTERRUPT_STA_INTERRUPT_2_3_BYTE_ADDRESS 0xb838
/* Wide Register: elb_hese_csr.mdinvf0.filter_trace                        */
#define ELB_HESE_CSR_MDINVF0_FILTER_TRACE_ADDRESS 0x2e10
#define ELB_HESE_CSR_MDINVF0_FILTER_TRACE_BYTE_ADDRESS 0xb840
/* Register: elb_hese_csr.mdinvf0.filter_trace.filter_trace_0_3            */
#define ELB_HESE_CSR_MDINVF0_FILTER_TRACE_FILTER_TRACE_0_3_ADDRESS 0x2e10
#define ELB_HESE_CSR_MDINVF0_FILTER_TRACE_FILTER_TRACE_0_3_BYTE_ADDRESS 0xb840
/* Register: elb_hese_csr.mdinvf0.filter_trace.filter_trace_1_3            */
#define ELB_HESE_CSR_MDINVF0_FILTER_TRACE_FILTER_TRACE_1_3_ADDRESS 0x2e11
#define ELB_HESE_CSR_MDINVF0_FILTER_TRACE_FILTER_TRACE_1_3_BYTE_ADDRESS 0xb844
/* Register: elb_hese_csr.mdinvf0.filter_trace.filter_trace_2_3            */
#define ELB_HESE_CSR_MDINVF0_FILTER_TRACE_FILTER_TRACE_2_3_ADDRESS 0x2e12
#define ELB_HESE_CSR_MDINVF0_FILTER_TRACE_FILTER_TRACE_2_3_BYTE_ADDRESS 0xb848
/* Register: elb_hese_csr.mdinvf0.filter_timeout                           */
#define ELB_HESE_CSR_MDINVF0_FILTER_TIMEOUT_ADDRESS 0x2e14
#define ELB_HESE_CSR_MDINVF0_FILTER_TIMEOUT_BYTE_ADDRESS 0xb850
/* Register: elb_hese_csr.mdinvf0.csr_intr                                 */
#define ELB_HESE_CSR_MDINVF0_CSR_INTR_ADDRESS 0x2e15
#define ELB_HESE_CSR_MDINVF0_CSR_INTR_BYTE_ADDRESS 0xb854
/* Group: elb_hese_csr.mdinvf0.int_groups                                  */
#define ELB_HESE_CSR_MDINVF0_INT_GROUPS_ADDRESS 0x2e18
#define ELB_HESE_CSR_MDINVF0_INT_GROUPS_BYTE_ADDRESS 0xb860
/* Register: elb_hese_csr.mdinvf0.int_groups.intreg                        */
#define ELB_HESE_CSR_MDINVF0_INT_GROUPS_INTREG_ADDRESS 0x2e18
#define ELB_HESE_CSR_MDINVF0_INT_GROUPS_INTREG_BYTE_ADDRESS 0xb860
/* Register: elb_hese_csr.mdinvf0.int_groups.int_enable_rw_reg             */
#define ELB_HESE_CSR_MDINVF0_INT_GROUPS_INT_ENABLE_RW_REG_ADDRESS 0x2e19
#define ELB_HESE_CSR_MDINVF0_INT_GROUPS_INT_ENABLE_RW_REG_BYTE_ADDRESS 0xb864
/* Register: elb_hese_csr.mdinvf0.int_groups.int_rw_reg                    */
#define ELB_HESE_CSR_MDINVF0_INT_GROUPS_INT_RW_REG_ADDRESS 0x2e1a
#define ELB_HESE_CSR_MDINVF0_INT_GROUPS_INT_RW_REG_BYTE_ADDRESS 0xb868
/* Group: elb_hese_csr.mdinvf0.int_filter                                  */
#define ELB_HESE_CSR_MDINVF0_INT_FILTER_ADDRESS 0x2e1c
#define ELB_HESE_CSR_MDINVF0_INT_FILTER_BYTE_ADDRESS 0xb870
/* Register: elb_hese_csr.mdinvf0.int_filter.intreg                        */
#define ELB_HESE_CSR_MDINVF0_INT_FILTER_INTREG_ADDRESS 0x2e1c
#define ELB_HESE_CSR_MDINVF0_INT_FILTER_INTREG_BYTE_ADDRESS 0xb870
/* Register: elb_hese_csr.mdinvf0.int_filter.int_test_set                  */
#define ELB_HESE_CSR_MDINVF0_INT_FILTER_INT_TEST_SET_ADDRESS 0x2e1d
#define ELB_HESE_CSR_MDINVF0_INT_FILTER_INT_TEST_SET_BYTE_ADDRESS 0xb874
/* Register: elb_hese_csr.mdinvf0.int_filter.int_enable_set                */
#define ELB_HESE_CSR_MDINVF0_INT_FILTER_INT_ENABLE_SET_ADDRESS 0x2e1e
#define ELB_HESE_CSR_MDINVF0_INT_FILTER_INT_ENABLE_SET_BYTE_ADDRESS 0xb878
/* Register: elb_hese_csr.mdinvf0.int_filter.int_enable_clear              */
#define ELB_HESE_CSR_MDINVF0_INT_FILTER_INT_ENABLE_CLEAR_ADDRESS 0x2e1f
#define ELB_HESE_CSR_MDINVF0_INT_FILTER_INT_ENABLE_CLEAR_BYTE_ADDRESS 0xb87c
/* Addressmap: elb_hese_csr.mdinvf1                                        */
#define ELB_HESE_CSR_MDINVF1_ADDRESS 0x3000
#define ELB_HESE_CSR_MDINVF1_BYTE_ADDRESS 0xc000
/* Register: elb_hese_csr.mdinvf1.cfg_sameid_log                           */
#define ELB_HESE_CSR_MDINVF1_CFG_SAMEID_LOG_ADDRESS 0x3000
#define ELB_HESE_CSR_MDINVF1_CFG_SAMEID_LOG_BYTE_ADDRESS 0xc000
/* Memory: elb_hese_csr.mdinvf1.STA_aw_log_cam                             */
#define ELB_HESE_CSR_MDINVF1_STA_AW_LOG_CAM_ADDRESS 0x3100
#define ELB_HESE_CSR_MDINVF1_STA_AW_LOG_CAM_BYTE_ADDRESS 0xc400
/* Register: elb_hese_csr.mdinvf1.STA_aw_log_cam.entry                     */
#define ELB_HESE_CSR_MDINVF1_STA_AW_LOG_CAM_ENTRY_ADDRESS 0x3100
#define ELB_HESE_CSR_MDINVF1_STA_AW_LOG_CAM_ENTRY_BYTE_ADDRESS 0xc400
#define ELB_HESE_CSR_MDINVF1_STA_AW_LOG_CAM_ENTRY_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_MDINVF1_STA_AW_LOG_CAM_ENTRY_ARRAY_COUNT 0x81
#define ELB_HESE_CSR_MDINVF1_STA_AW_LOG_CAM_ENTRY_ARRAY_INDEX_MAX 0x80
#define ELB_HESE_CSR_MDINVF1_STA_AW_LOG_CAM_ENTRY_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf1.STA_ar_log_cam                             */
#define ELB_HESE_CSR_MDINVF1_STA_AR_LOG_CAM_ADDRESS 0x3200
#define ELB_HESE_CSR_MDINVF1_STA_AR_LOG_CAM_BYTE_ADDRESS 0xc800
/* Register: elb_hese_csr.mdinvf1.STA_ar_log_cam.entry                     */
#define ELB_HESE_CSR_MDINVF1_STA_AR_LOG_CAM_ENTRY_ADDRESS 0x3200
#define ELB_HESE_CSR_MDINVF1_STA_AR_LOG_CAM_ENTRY_BYTE_ADDRESS 0xc800
#define ELB_HESE_CSR_MDINVF1_STA_AR_LOG_CAM_ENTRY_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_MDINVF1_STA_AR_LOG_CAM_ENTRY_ARRAY_COUNT 0x81
#define ELB_HESE_CSR_MDINVF1_STA_AR_LOG_CAM_ENTRY_ARRAY_INDEX_MAX 0x80
#define ELB_HESE_CSR_MDINVF1_STA_AR_LOG_CAM_ENTRY_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf1.filter_addr_lo                             */
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_LO_ADDRESS 0x3300
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_LO_BYTE_ADDRESS 0xcc00
/* Register: elb_hese_csr.mdinvf1.filter_addr_lo.data                      */
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_LO_DATA_ADDRESS 0x3300
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_LO_DATA_BYTE_ADDRESS 0xcc00
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_LO_DATA_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_LO_DATA_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_LO_DATA_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_LO_DATA_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf1.filter_addr_hi                             */
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_HI_ADDRESS 0x3340
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_HI_BYTE_ADDRESS 0xcd00
/* Register: elb_hese_csr.mdinvf1.filter_addr_hi.data                      */
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_HI_DATA_ADDRESS 0x3340
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_HI_DATA_BYTE_ADDRESS 0xcd00
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_HI_DATA_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_HI_DATA_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_HI_DATA_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_HI_DATA_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf1.filter_addr_host                           */
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_HOST_ADDRESS 0x3380
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_HOST_BYTE_ADDRESS 0xce00
/* Register: elb_hese_csr.mdinvf1.filter_addr_host.data                    */
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_HOST_DATA_ADDRESS 0x3380
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_HOST_DATA_BYTE_ADDRESS 0xce00
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_HOST_DATA_ARRAY_ELEMENT_SIZE 0x4
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_HOST_DATA_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_HOST_DATA_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_HOST_DATA_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf1.filter_addr_pic                            */
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_PIC_ADDRESS 0x33c0
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_PIC_BYTE_ADDRESS 0xcf00
/* Register: elb_hese_csr.mdinvf1.filter_addr_pic.data                     */
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_PIC_DATA_ADDRESS 0x33c0
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_PIC_DATA_BYTE_ADDRESS 0xcf00
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_PIC_DATA_ARRAY_ELEMENT_SIZE 0x4
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_PIC_DATA_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_PIC_DATA_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_PIC_DATA_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf1.filter_addr_lif                            */
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_LIF_ADDRESS 0x3400
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_LIF_BYTE_ADDRESS 0xd000
/* Register: elb_hese_csr.mdinvf1.filter_addr_lif.data                     */
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_LIF_DATA_ADDRESS 0x3400
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_LIF_DATA_BYTE_ADDRESS 0xd000
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_LIF_DATA_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_LIF_DATA_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_LIF_DATA_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_LIF_DATA_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf1.filter_src                                 */
#define ELB_HESE_CSR_MDINVF1_FILTER_SRC_ADDRESS 0x3440
#define ELB_HESE_CSR_MDINVF1_FILTER_SRC_BYTE_ADDRESS 0xd100
/* Register: elb_hese_csr.mdinvf1.filter_src.data                          */
#define ELB_HESE_CSR_MDINVF1_FILTER_SRC_DATA_ADDRESS 0x3440
#define ELB_HESE_CSR_MDINVF1_FILTER_SRC_DATA_BYTE_ADDRESS 0xd100
#define ELB_HESE_CSR_MDINVF1_FILTER_SRC_DATA_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_MDINVF1_FILTER_SRC_DATA_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF1_FILTER_SRC_DATA_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF1_FILTER_SRC_DATA_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf1.filter_axi_prot                            */
#define ELB_HESE_CSR_MDINVF1_FILTER_AXI_PROT_ADDRESS 0x3480
#define ELB_HESE_CSR_MDINVF1_FILTER_AXI_PROT_BYTE_ADDRESS 0xd200
/* Register: elb_hese_csr.mdinvf1.filter_axi_prot.data                     */
#define ELB_HESE_CSR_MDINVF1_FILTER_AXI_PROT_DATA_ADDRESS 0x3480
#define ELB_HESE_CSR_MDINVF1_FILTER_AXI_PROT_DATA_BYTE_ADDRESS 0xd200
#define ELB_HESE_CSR_MDINVF1_FILTER_AXI_PROT_DATA_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_MDINVF1_FILTER_AXI_PROT_DATA_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF1_FILTER_AXI_PROT_DATA_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF1_FILTER_AXI_PROT_DATA_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf1.filter_axi_cache                           */
#define ELB_HESE_CSR_MDINVF1_FILTER_AXI_CACHE_ADDRESS 0x34c0
#define ELB_HESE_CSR_MDINVF1_FILTER_AXI_CACHE_BYTE_ADDRESS 0xd300
/* Register: elb_hese_csr.mdinvf1.filter_axi_cache.data                    */
#define ELB_HESE_CSR_MDINVF1_FILTER_AXI_CACHE_DATA_ADDRESS 0x34c0
#define ELB_HESE_CSR_MDINVF1_FILTER_AXI_CACHE_DATA_BYTE_ADDRESS 0xd300
#define ELB_HESE_CSR_MDINVF1_FILTER_AXI_CACHE_DATA_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_MDINVF1_FILTER_AXI_CACHE_DATA_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF1_FILTER_AXI_CACHE_DATA_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF1_FILTER_AXI_CACHE_DATA_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf1.filter_acp                                 */
#define ELB_HESE_CSR_MDINVF1_FILTER_ACP_ADDRESS 0x3500
#define ELB_HESE_CSR_MDINVF1_FILTER_ACP_BYTE_ADDRESS 0xd400
/* Register: elb_hese_csr.mdinvf1.filter_acp.data                          */
#define ELB_HESE_CSR_MDINVF1_FILTER_ACP_DATA_ADDRESS 0x3500
#define ELB_HESE_CSR_MDINVF1_FILTER_ACP_DATA_BYTE_ADDRESS 0xd400
#define ELB_HESE_CSR_MDINVF1_FILTER_ACP_DATA_ARRAY_ELEMENT_SIZE 0x2
#define ELB_HESE_CSR_MDINVF1_FILTER_ACP_DATA_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF1_FILTER_ACP_DATA_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF1_FILTER_ACP_DATA_ARRAY_INDEX_MIN 0x0
/* Memory: elb_hese_csr.mdinvf1.filter_addr_ctl                            */
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_CTL_ADDRESS 0x3540
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_CTL_BYTE_ADDRESS 0xd500
/* Register: elb_hese_csr.mdinvf1.filter_addr_ctl.value                    */
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_CTL_VALUE_ADDRESS 0x3540
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_CTL_VALUE_BYTE_ADDRESS 0xd500
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_CTL_VALUE_ARRAY_ELEMENT_SIZE 0x2
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_CTL_VALUE_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_CTL_VALUE_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF1_FILTER_ADDR_CTL_VALUE_ARRAY_INDEX_MIN 0x0
/* Register: elb_hese_csr.mdinvf1.filter_freeze_ctl                        */
#define ELB_HESE_CSR_MDINVF1_FILTER_FREEZE_CTL_ADDRESS 0x3580
#define ELB_HESE_CSR_MDINVF1_FILTER_FREEZE_CTL_BYTE_ADDRESS 0xd600
/* Memory: elb_hese_csr.mdinvf1.filter_hit_count                           */
#define ELB_HESE_CSR_MDINVF1_FILTER_HIT_COUNT_ADDRESS 0x35c0
#define ELB_HESE_CSR_MDINVF1_FILTER_HIT_COUNT_BYTE_ADDRESS 0xd700
/* Register: elb_hese_csr.mdinvf1.filter_hit_count.value                   */
#define ELB_HESE_CSR_MDINVF1_FILTER_HIT_COUNT_VALUE_ADDRESS 0x35c0
#define ELB_HESE_CSR_MDINVF1_FILTER_HIT_COUNT_VALUE_BYTE_ADDRESS 0xd700
#define ELB_HESE_CSR_MDINVF1_FILTER_HIT_COUNT_VALUE_ARRAY_ELEMENT_SIZE 0x1
#define ELB_HESE_CSR_MDINVF1_FILTER_HIT_COUNT_VALUE_ARRAY_COUNT 0x40
#define ELB_HESE_CSR_MDINVF1_FILTER_HIT_COUNT_VALUE_ARRAY_INDEX_MAX 0x3f
#define ELB_HESE_CSR_MDINVF1_FILTER_HIT_COUNT_VALUE_ARRAY_INDEX_MIN 0x0
/* Register: elb_hese_csr.mdinvf1.CNT_read_deny                            */
#define ELB_HESE_CSR_MDINVF1_CNT_READ_DENY_ADDRESS 0x3600
#define ELB_HESE_CSR_MDINVF1_CNT_READ_DENY_BYTE_ADDRESS 0xd800
/* Register: elb_hese_csr.mdinvf1.CNT_write_deny                           */
#define ELB_HESE_CSR_MDINVF1_CNT_WRITE_DENY_ADDRESS 0x3601
#define ELB_HESE_CSR_MDINVF1_CNT_WRITE_DENY_BYTE_ADDRESS 0xd804
/* Register: elb_hese_csr.mdinvf1.CFG_clear_filter                         */
#define ELB_HESE_CSR_MDINVF1_CFG_CLEAR_FILTER_ADDRESS 0x3602
#define ELB_HESE_CSR_MDINVF1_CFG_CLEAR_FILTER_BYTE_ADDRESS 0xd808
/* Register: elb_hese_csr.mdinvf1.STA_write_deny                           */
#define ELB_HESE_CSR_MDINVF1_STA_WRITE_DENY_ADDRESS 0x3603
#define ELB_HESE_CSR_MDINVF1_STA_WRITE_DENY_BYTE_ADDRESS 0xd80c
/* Register: elb_hese_csr.mdinvf1.STA_read_deny                            */
#define ELB_HESE_CSR_MDINVF1_STA_READ_DENY_ADDRESS 0x3604
#define ELB_HESE_CSR_MDINVF1_STA_READ_DENY_BYTE_ADDRESS 0xd810
/* Register: elb_hese_csr.mdinvf1.STA_reads                                */
#define ELB_HESE_CSR_MDINVF1_STA_READS_ADDRESS 0x3605
#define ELB_HESE_CSR_MDINVF1_STA_READS_BYTE_ADDRESS 0xd814
/* Register: elb_hese_csr.mdinvf1.STA_writes                               */
#define ELB_HESE_CSR_MDINVF1_STA_WRITES_ADDRESS 0x3606
#define ELB_HESE_CSR_MDINVF1_STA_WRITES_BYTE_ADDRESS 0xd818
/* Wide Register: elb_hese_csr.mdinvf1.STA_freeze                          */
#define ELB_HESE_CSR_MDINVF1_STA_FREEZE_ADDRESS 0x3608
#define ELB_HESE_CSR_MDINVF1_STA_FREEZE_BYTE_ADDRESS 0xd820
/* Register: elb_hese_csr.mdinvf1.STA_freeze.STA_freeze_0_3                */
#define ELB_HESE_CSR_MDINVF1_STA_FREEZE_STA_FREEZE_0_3_ADDRESS 0x3608
#define ELB_HESE_CSR_MDINVF1_STA_FREEZE_STA_FREEZE_0_3_BYTE_ADDRESS 0xd820
/* Register: elb_hese_csr.mdinvf1.STA_freeze.STA_freeze_1_3                */
#define ELB_HESE_CSR_MDINVF1_STA_FREEZE_STA_FREEZE_1_3_ADDRESS 0x3609
#define ELB_HESE_CSR_MDINVF1_STA_FREEZE_STA_FREEZE_1_3_BYTE_ADDRESS 0xd824
/* Register: elb_hese_csr.mdinvf1.STA_freeze.STA_freeze_2_3                */
#define ELB_HESE_CSR_MDINVF1_STA_FREEZE_STA_FREEZE_2_3_ADDRESS 0x360a
#define ELB_HESE_CSR_MDINVF1_STA_FREEZE_STA_FREEZE_2_3_BYTE_ADDRESS 0xd828
/* Wide Register: elb_hese_csr.mdinvf1.STA_interrupt                       */
#define ELB_HESE_CSR_MDINVF1_STA_INTERRUPT_ADDRESS 0x360c
#define ELB_HESE_CSR_MDINVF1_STA_INTERRUPT_BYTE_ADDRESS 0xd830
/* Register: elb_hese_csr.mdinvf1.STA_interrupt.STA_interrupt_0_3          */
#define ELB_HESE_CSR_MDINVF1_STA_INTERRUPT_STA_INTERRUPT_0_3_ADDRESS 0x360c
#define ELB_HESE_CSR_MDINVF1_STA_INTERRUPT_STA_INTERRUPT_0_3_BYTE_ADDRESS 0xd830
/* Register: elb_hese_csr.mdinvf1.STA_interrupt.STA_interrupt_1_3          */
#define ELB_HESE_CSR_MDINVF1_STA_INTERRUPT_STA_INTERRUPT_1_3_ADDRESS 0x360d
#define ELB_HESE_CSR_MDINVF1_STA_INTERRUPT_STA_INTERRUPT_1_3_BYTE_ADDRESS 0xd834
/* Register: elb_hese_csr.mdinvf1.STA_interrupt.STA_interrupt_2_3          */
#define ELB_HESE_CSR_MDINVF1_STA_INTERRUPT_STA_INTERRUPT_2_3_ADDRESS 0x360e
#define ELB_HESE_CSR_MDINVF1_STA_INTERRUPT_STA_INTERRUPT_2_3_BYTE_ADDRESS 0xd838
/* Wide Register: elb_hese_csr.mdinvf1.filter_trace                        */
#define ELB_HESE_CSR_MDINVF1_FILTER_TRACE_ADDRESS 0x3610
#define ELB_HESE_CSR_MDINVF1_FILTER_TRACE_BYTE_ADDRESS 0xd840
/* Register: elb_hese_csr.mdinvf1.filter_trace.filter_trace_0_3            */
#define ELB_HESE_CSR_MDINVF1_FILTER_TRACE_FILTER_TRACE_0_3_ADDRESS 0x3610
#define ELB_HESE_CSR_MDINVF1_FILTER_TRACE_FILTER_TRACE_0_3_BYTE_ADDRESS 0xd840
/* Register: elb_hese_csr.mdinvf1.filter_trace.filter_trace_1_3            */
#define ELB_HESE_CSR_MDINVF1_FILTER_TRACE_FILTER_TRACE_1_3_ADDRESS 0x3611
#define ELB_HESE_CSR_MDINVF1_FILTER_TRACE_FILTER_TRACE_1_3_BYTE_ADDRESS 0xd844
/* Register: elb_hese_csr.mdinvf1.filter_trace.filter_trace_2_3            */
#define ELB_HESE_CSR_MDINVF1_FILTER_TRACE_FILTER_TRACE_2_3_ADDRESS 0x3612
#define ELB_HESE_CSR_MDINVF1_FILTER_TRACE_FILTER_TRACE_2_3_BYTE_ADDRESS 0xd848
/* Register: elb_hese_csr.mdinvf1.filter_timeout                           */
#define ELB_HESE_CSR_MDINVF1_FILTER_TIMEOUT_ADDRESS 0x3614
#define ELB_HESE_CSR_MDINVF1_FILTER_TIMEOUT_BYTE_ADDRESS 0xd850
/* Register: elb_hese_csr.mdinvf1.csr_intr                                 */
#define ELB_HESE_CSR_MDINVF1_CSR_INTR_ADDRESS 0x3615
#define ELB_HESE_CSR_MDINVF1_CSR_INTR_BYTE_ADDRESS 0xd854
/* Group: elb_hese_csr.mdinvf1.int_groups                                  */
#define ELB_HESE_CSR_MDINVF1_INT_GROUPS_ADDRESS 0x3618
#define ELB_HESE_CSR_MDINVF1_INT_GROUPS_BYTE_ADDRESS 0xd860
/* Register: elb_hese_csr.mdinvf1.int_groups.intreg                        */
#define ELB_HESE_CSR_MDINVF1_INT_GROUPS_INTREG_ADDRESS 0x3618
#define ELB_HESE_CSR_MDINVF1_INT_GROUPS_INTREG_BYTE_ADDRESS 0xd860
/* Register: elb_hese_csr.mdinvf1.int_groups.int_enable_rw_reg             */
#define ELB_HESE_CSR_MDINVF1_INT_GROUPS_INT_ENABLE_RW_REG_ADDRESS 0x3619
#define ELB_HESE_CSR_MDINVF1_INT_GROUPS_INT_ENABLE_RW_REG_BYTE_ADDRESS 0xd864
/* Register: elb_hese_csr.mdinvf1.int_groups.int_rw_reg                    */
#define ELB_HESE_CSR_MDINVF1_INT_GROUPS_INT_RW_REG_ADDRESS 0x361a
#define ELB_HESE_CSR_MDINVF1_INT_GROUPS_INT_RW_REG_BYTE_ADDRESS 0xd868
/* Group: elb_hese_csr.mdinvf1.int_filter                                  */
#define ELB_HESE_CSR_MDINVF1_INT_FILTER_ADDRESS 0x361c
#define ELB_HESE_CSR_MDINVF1_INT_FILTER_BYTE_ADDRESS 0xd870
/* Register: elb_hese_csr.mdinvf1.int_filter.intreg                        */
#define ELB_HESE_CSR_MDINVF1_INT_FILTER_INTREG_ADDRESS 0x361c
#define ELB_HESE_CSR_MDINVF1_INT_FILTER_INTREG_BYTE_ADDRESS 0xd870
/* Register: elb_hese_csr.mdinvf1.int_filter.int_test_set                  */
#define ELB_HESE_CSR_MDINVF1_INT_FILTER_INT_TEST_SET_ADDRESS 0x361d
#define ELB_HESE_CSR_MDINVF1_INT_FILTER_INT_TEST_SET_BYTE_ADDRESS 0xd874
/* Register: elb_hese_csr.mdinvf1.int_filter.int_enable_set                */
#define ELB_HESE_CSR_MDINVF1_INT_FILTER_INT_ENABLE_SET_ADDRESS 0x361e
#define ELB_HESE_CSR_MDINVF1_INT_FILTER_INT_ENABLE_SET_BYTE_ADDRESS 0xd878
/* Register: elb_hese_csr.mdinvf1.int_filter.int_enable_clear              */
#define ELB_HESE_CSR_MDINVF1_INT_FILTER_INT_ENABLE_CLEAR_ADDRESS 0x361f
#define ELB_HESE_CSR_MDINVF1_INT_FILTER_INT_ENABLE_CLEAR_BYTE_ADDRESS 0xd87c
/* Register: elb_hese_csr.base                                             */
#define ELB_HESE_CSR_BASE_ADDRESS 0x3800
#define ELB_HESE_CSR_BASE_BYTE_ADDRESS 0xe000


/* ####################################################################### */
/*        TEMPLATE MACROS                                                  */
/* ####################################################################### */

/* Addressmap type: elb_hese_csr                                           */
/* Addressmap template: elb_hese_csr                                       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 11 */
#define ELB_HESE_CSR_SIZE 0x4000
#define ELB_HESE_CSR_BYTE_SIZE 0x10000
/* Memory member: elb_hese_csr.dhs_crypto_ctl                              */
/* Memory type referenced: elb_hese_csr::dhs_crypto_ctl                    */
/* Memory template referenced: elb_hese_csr::dhs_crypto_ctl                */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_OFFSET 0x0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_BYTE_OFFSET 0x0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr.cfg_he_ctl                                */
/* Register type referenced: elb_hese_csr::cfg_he_ctl                      */
/* Register template referenced: elb_hese_csr::cfg_he_ctl                  */
#define ELB_HESE_CSR_CFG_HE_CTL_OFFSET 0x2000
#define ELB_HESE_CSR_CFG_HE_CTL_BYTE_OFFSET 0x8000
#define ELB_HESE_CSR_CFG_HE_CTL_READ_ACCESS 1
#define ELB_HESE_CSR_CFG_HE_CTL_WRITE_ACCESS 1
#define ELB_HESE_CSR_CFG_HE_CTL_RESET_VALUE 0x00000000
#define ELB_HESE_CSR_CFG_HE_CTL_RESET_MASK 0xffffffff
#define ELB_HESE_CSR_CFG_HE_CTL_READ_MASK 0xffffffff
#define ELB_HESE_CSR_CFG_HE_CTL_WRITE_MASK 0x000000ff
/* Register member: elb_hese_csr.csr_intr                                  */
/* Register type referenced: elb_hese_csr::csr_intr                        */
/* Register template referenced: elb_hese_csr::csr_intr                    */
#define ELB_HESE_CSR_CSR_INTR_OFFSET 0x2001
#define ELB_HESE_CSR_CSR_INTR_BYTE_OFFSET 0x8004
#define ELB_HESE_CSR_CSR_INTR_READ_ACCESS 1
#define ELB_HESE_CSR_CSR_INTR_WRITE_ACCESS 1
#define ELB_HESE_CSR_CSR_INTR_RESET_VALUE 0x00000000
#define ELB_HESE_CSR_CSR_INTR_RESET_MASK 0xfffffffe
#define ELB_HESE_CSR_CSR_INTR_READ_MASK 0xffffffff
#define ELB_HESE_CSR_CSR_INTR_WRITE_MASK 0x00000002
/* Group member: elb_hese_csr.int_groups                                   */
/* Group type referenced: elb_hese_csr::int_groups                         */
/* Group template referenced: elb_hese_csr::intgrp_status                  */
#define ELB_HESE_CSR_INT_GROUPS_OFFSET 0x2004
#define ELB_HESE_CSR_INT_GROUPS_BYTE_OFFSET 0x8010
#define ELB_HESE_CSR_INT_GROUPS_READ_ACCESS 1
#define ELB_HESE_CSR_INT_GROUPS_WRITE_ACCESS 1
/* Group member: elb_hese_csr.int_invf                                     */
/* Group type referenced: elb_hese_csr::int_invf                           */
/* Group template referenced: elb_hese_csr::intgrp                         */
#define ELB_HESE_CSR_INT_INVF_OFFSET 0x2008
#define ELB_HESE_CSR_INT_INVF_BYTE_OFFSET 0x8020
#define ELB_HESE_CSR_INT_INVF_READ_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_WRITE_ACCESS 1
/* Addressmap member: elb_hese_csr.mdinvf0                                 */
/* Addressmap type referenced: elb_mdinvf_csr                              */
/* Addressmap template referenced: elb_mdinvf_csr                          */
#define ELB_HESE_CSR_MDINVF0_OFFSET 0x2800
#define ELB_HESE_CSR_MDINVF0_BYTE_OFFSET 0xa000
#define ELB_HESE_CSR_MDINVF0_READ_ACCESS 1
#define ELB_HESE_CSR_MDINVF0_WRITE_ACCESS 1
/* Addressmap member: elb_hese_csr.mdinvf1                                 */
/* Addressmap type referenced: elb_mdinvf_csr                              */
/* Addressmap template referenced: elb_mdinvf_csr                          */
#define ELB_HESE_CSR_MDINVF1_OFFSET 0x3000
#define ELB_HESE_CSR_MDINVF1_BYTE_OFFSET 0xc000
#define ELB_HESE_CSR_MDINVF1_READ_ACCESS 1
#define ELB_HESE_CSR_MDINVF1_WRITE_ACCESS 1
/* Register member: elb_hese_csr.base                                      */
/* Register type referenced: elb_hese_csr::base                            */
/* Register template referenced: elb_hese_csr::base                        */
#define ELB_HESE_CSR_BASE_OFFSET 0x3800
#define ELB_HESE_CSR_BASE_BYTE_OFFSET 0xe000
#define ELB_HESE_CSR_BASE_READ_ACCESS 1
#define ELB_HESE_CSR_BASE_WRITE_ACCESS 1
#define ELB_HESE_CSR_BASE_RESET_VALUE 0x00000001
#define ELB_HESE_CSR_BASE_RESET_MASK 0xffffffff
#define ELB_HESE_CSR_BASE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_BASE_WRITE_MASK 0xffffffff

/* Memory type: elb_hese_csr::dhs_crypto_ctl                               */
/* Memory template: elb_hese_csr::dhs_crypto_ctl                           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 20 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SIZE 0x2000
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_BYTE_SIZE 0x8000
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_ENTRIES 0x2000
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_GET(x) ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SET(x) ((x) & 0xffffffff)
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_key_array_base_w0    */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_key_array_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_key_array_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W0_OFFSET 0x0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W0_BYTE_OFFSET 0x0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_key_array_base_w1    */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_key_array_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_key_array_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W1_OFFSET 0x1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W1_BYTE_OFFSET 0x4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_key_array_size       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_key_array_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_key_array_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_SIZE_OFFSET 0x2
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_SIZE_BYTE_OFFSET 0x8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_axi_desc             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_axi_desc   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_axi_desc */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DESC_OFFSET 0x3
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DESC_BYTE_OFFSET 0xc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DESC_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DESC_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DESC_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DESC_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_axi_data_read        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_axi_data_read */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_axi_data_read */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_READ_OFFSET 0x4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_READ_BYTE_OFFSET 0x10
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_READ_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_READ_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_READ_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_READ_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_axi_data_write       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_axi_data_write */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_axi_data_write */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_WRITE_OFFSET 0x5
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_WRITE_BYTE_OFFSET 0x14
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_WRITE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_WRITE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_WRITE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_WRITE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_axi_status           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_axi_status */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_axi_status */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_STATUS_OFFSET 0x6
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_STATUS_BYTE_OFFSET 0x18
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_STATUS_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_STATUS_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_STATUS_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_STATUS_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_axi_opaque_tag_write */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_axi_opaque_tag_write */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_axi_opaque_tag_write */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_OPAQUE_TAG_WRITE_OFFSET 0x7
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_OPAQUE_TAG_WRITE_BYTE_OFFSET 0x1c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_OPAQUE_TAG_WRITE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_OPAQUE_TAG_WRITE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_OPAQUE_TAG_WRITE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_OPAQUE_TAG_WRITE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_axi_doorbell_write   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_axi_doorbell_write */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_axi_doorbell_write */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DOORBELL_WRITE_OFFSET 0x8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DOORBELL_WRITE_BYTE_OFFSET 0x20
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DOORBELL_WRITE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DOORBELL_WRITE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DOORBELL_WRITE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DOORBELL_WRITE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_key_array_base_w0    */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_key_array_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_key_array_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W0_OFFSET 0x80
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W0_BYTE_OFFSET 0x200
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_key_array_base_w1    */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_key_array_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_key_array_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W1_OFFSET 0x81
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W1_BYTE_OFFSET 0x204
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_key_array_size       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_key_array_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_key_array_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_SIZE_OFFSET 0x82
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_SIZE_BYTE_OFFSET 0x208
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_axi_desc             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_axi_desc   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_axi_desc */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DESC_OFFSET 0x83
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DESC_BYTE_OFFSET 0x20c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DESC_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DESC_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DESC_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DESC_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_axi_data_read        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_axi_data_read */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_axi_data_read */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_READ_OFFSET 0x84
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_READ_BYTE_OFFSET 0x210
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_READ_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_READ_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_READ_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_READ_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_axi_data_write       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_axi_data_write */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_axi_data_write */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_WRITE_OFFSET 0x85
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_WRITE_BYTE_OFFSET 0x214
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_WRITE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_WRITE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_WRITE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_WRITE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_axi_status           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_axi_status */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_axi_status */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_STATUS_OFFSET 0x86
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_STATUS_BYTE_OFFSET 0x218
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_STATUS_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_STATUS_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_STATUS_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_STATUS_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_axi_opaque_tag_write */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_axi_opaque_tag_write */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_axi_opaque_tag_write */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_OPAQUE_TAG_WRITE_OFFSET 0x87
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_OPAQUE_TAG_WRITE_BYTE_OFFSET 0x21c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_OPAQUE_TAG_WRITE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_OPAQUE_TAG_WRITE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_OPAQUE_TAG_WRITE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_OPAQUE_TAG_WRITE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_axi_doorbell_write   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_axi_doorbell_write */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_axi_doorbell_write */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DOORBELL_WRITE_OFFSET 0x88
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DOORBELL_WRITE_BYTE_OFFSET 0x220
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DOORBELL_WRITE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DOORBELL_WRITE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DOORBELL_WRITE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DOORBELL_WRITE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_key_array_base_w0    */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_key_array_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_key_array_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W0_OFFSET 0x100
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W0_BYTE_OFFSET 0x400
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_key_array_base_w1    */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_key_array_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_key_array_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W1_OFFSET 0x101
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W1_BYTE_OFFSET 0x404
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_key_array_size       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_key_array_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_key_array_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_SIZE_OFFSET 0x102
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_SIZE_BYTE_OFFSET 0x408
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_axi_desc             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_axi_desc   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_axi_desc */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DESC_OFFSET 0x103
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DESC_BYTE_OFFSET 0x40c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DESC_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DESC_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DESC_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DESC_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_axi_data_read        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_axi_data_read */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_axi_data_read */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_READ_OFFSET 0x104
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_READ_BYTE_OFFSET 0x410
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_READ_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_READ_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_READ_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_READ_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_axi_data_write       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_axi_data_write */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_axi_data_write */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_WRITE_OFFSET 0x105
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_WRITE_BYTE_OFFSET 0x414
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_WRITE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_WRITE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_WRITE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_WRITE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_axi_status           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_axi_status */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_axi_status */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_STATUS_OFFSET 0x106
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_STATUS_BYTE_OFFSET 0x418
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_STATUS_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_STATUS_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_STATUS_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_STATUS_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_axi_opaque_tag_write */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_axi_opaque_tag_write */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_axi_opaque_tag_write */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_OPAQUE_TAG_WRITE_OFFSET 0x107
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_OPAQUE_TAG_WRITE_BYTE_OFFSET 0x41c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_OPAQUE_TAG_WRITE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_OPAQUE_TAG_WRITE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_OPAQUE_TAG_WRITE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_OPAQUE_TAG_WRITE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_axi_doorbell_write   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_axi_doorbell_write */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_axi_doorbell_write */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DOORBELL_WRITE_OFFSET 0x108
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DOORBELL_WRITE_BYTE_OFFSET 0x420
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DOORBELL_WRITE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DOORBELL_WRITE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DOORBELL_WRITE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DOORBELL_WRITE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_key_array_base_w0    */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_key_array_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_key_array_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W0_OFFSET 0x180
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W0_BYTE_OFFSET 0x600
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_key_array_base_w1    */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_key_array_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_key_array_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W1_OFFSET 0x181
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W1_BYTE_OFFSET 0x604
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_key_array_size       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_key_array_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_key_array_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_SIZE_OFFSET 0x182
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_SIZE_BYTE_OFFSET 0x608
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_axi_desc             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_axi_desc   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_axi_desc */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DESC_OFFSET 0x183
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DESC_BYTE_OFFSET 0x60c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DESC_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DESC_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DESC_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DESC_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_axi_data_read        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_axi_data_read */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_axi_data_read */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_READ_OFFSET 0x184
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_READ_BYTE_OFFSET 0x610
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_READ_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_READ_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_READ_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_READ_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_axi_data_write       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_axi_data_write */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_axi_data_write */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_WRITE_OFFSET 0x185
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_WRITE_BYTE_OFFSET 0x614
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_WRITE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_WRITE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_WRITE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_WRITE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_axi_status           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_axi_status */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_axi_status */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_STATUS_OFFSET 0x186
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_STATUS_BYTE_OFFSET 0x618
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_STATUS_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_STATUS_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_STATUS_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_STATUS_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_axi_opaque_tag_write */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_axi_opaque_tag_write */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_axi_opaque_tag_write */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_OPAQUE_TAG_WRITE_OFFSET 0x187
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_OPAQUE_TAG_WRITE_BYTE_OFFSET 0x61c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_OPAQUE_TAG_WRITE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_OPAQUE_TAG_WRITE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_OPAQUE_TAG_WRITE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_OPAQUE_TAG_WRITE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_axi_doorbell_write   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_axi_doorbell_write */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_axi_doorbell_write */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DOORBELL_WRITE_OFFSET 0x188
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DOORBELL_WRITE_BYTE_OFFSET 0x620
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DOORBELL_WRITE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DOORBELL_WRITE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DOORBELL_WRITE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DOORBELL_WRITE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_key_array_base_w0     */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_key_array_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_key_array_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W0_OFFSET 0x200
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W0_BYTE_OFFSET 0x800
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_key_array_base_w1     */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_key_array_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_key_array_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W1_OFFSET 0x201
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W1_BYTE_OFFSET 0x804
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_key_array_size        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_key_array_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_key_array_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_SIZE_OFFSET 0x202
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_SIZE_BYTE_OFFSET 0x808
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_axi_desc              */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_axi_desc    */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_axi_desc */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DESC_OFFSET 0x203
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DESC_BYTE_OFFSET 0x80c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DESC_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DESC_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DESC_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DESC_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_axi_data_read         */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_axi_data_read */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_axi_data_read */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_READ_OFFSET 0x204
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_READ_BYTE_OFFSET 0x810
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_READ_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_READ_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_READ_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_READ_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_axi_data_write        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_axi_data_write */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_axi_data_write */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_WRITE_OFFSET 0x205
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_WRITE_BYTE_OFFSET 0x814
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_WRITE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_WRITE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_WRITE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_WRITE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_axi_status            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_axi_status  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_axi_status */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_STATUS_OFFSET 0x206
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_STATUS_BYTE_OFFSET 0x818
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_STATUS_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_STATUS_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_STATUS_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_STATUS_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_axi_opaque_tag_write  */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_axi_opaque_tag_write */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_axi_opaque_tag_write */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_OPAQUE_TAG_WRITE_OFFSET 0x207
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_OPAQUE_TAG_WRITE_BYTE_OFFSET 0x81c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_OPAQUE_TAG_WRITE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_OPAQUE_TAG_WRITE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_OPAQUE_TAG_WRITE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_OPAQUE_TAG_WRITE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_axi_doorbell_write    */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_axi_doorbell_write */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_axi_doorbell_write */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DOORBELL_WRITE_OFFSET 0x208
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DOORBELL_WRITE_BYTE_OFFSET 0x820
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DOORBELL_WRITE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DOORBELL_WRITE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DOORBELL_WRITE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DOORBELL_WRITE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_key_array_base_w0     */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_key_array_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_key_array_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W0_OFFSET 0x280
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W0_BYTE_OFFSET 0xa00
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_key_array_base_w1     */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_key_array_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_key_array_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W1_OFFSET 0x281
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W1_BYTE_OFFSET 0xa04
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_key_array_size        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_key_array_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_key_array_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_SIZE_OFFSET 0x282
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_SIZE_BYTE_OFFSET 0xa08
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_axi_desc              */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_axi_desc    */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_axi_desc */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DESC_OFFSET 0x283
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DESC_BYTE_OFFSET 0xa0c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DESC_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DESC_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DESC_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DESC_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_axi_data_read         */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_axi_data_read */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_axi_data_read */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_READ_OFFSET 0x284
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_READ_BYTE_OFFSET 0xa10
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_READ_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_READ_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_READ_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_READ_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_axi_data_write        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_axi_data_write */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_axi_data_write */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_WRITE_OFFSET 0x285
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_WRITE_BYTE_OFFSET 0xa14
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_WRITE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_WRITE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_WRITE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_WRITE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_axi_status            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_axi_status  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_axi_status */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_STATUS_OFFSET 0x286
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_STATUS_BYTE_OFFSET 0xa18
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_STATUS_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_STATUS_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_STATUS_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_STATUS_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_axi_opaque_tag_write  */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_axi_opaque_tag_write */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_axi_opaque_tag_write */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_OPAQUE_TAG_WRITE_OFFSET 0x287
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_OPAQUE_TAG_WRITE_BYTE_OFFSET 0xa1c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_OPAQUE_TAG_WRITE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_OPAQUE_TAG_WRITE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_OPAQUE_TAG_WRITE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_OPAQUE_TAG_WRITE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_axi_doorbell_write    */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_axi_doorbell_write */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_axi_doorbell_write */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DOORBELL_WRITE_OFFSET 0x288
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DOORBELL_WRITE_BYTE_OFFSET 0xa20
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DOORBELL_WRITE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DOORBELL_WRITE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DOORBELL_WRITE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DOORBELL_WRITE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_ring_base_w0          */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_ring_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_ring_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W0_OFFSET 0x580
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W0_BYTE_OFFSET 0x1600
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_ring_base_w1          */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_ring_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_ring_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W1_OFFSET 0x581
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W1_BYTE_OFFSET 0x1604
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_ring_size             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_ring_size   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_ring_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_SIZE_OFFSET 0x582
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_SIZE_BYTE_OFFSET 0x1608
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_producer_idx          */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_PRODUCER_IDX_OFFSET 0x583
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_PRODUCER_IDX_BYTE_OFFSET 0x160c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_soft_rst              */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_soft_rst    */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_soft_rst */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_SOFT_RST_OFFSET 0x5a0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_SOFT_RST_BYTE_OFFSET 0x1680
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_SOFT_RST_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_SOFT_RST_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_SOFT_RST_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_SOFT_RST_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_ci_addr_w0            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_ci_addr_w0  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_ci_addr_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W0_OFFSET 0x5a4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W0_BYTE_OFFSET 0x1690
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_ci_addr_w1            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_ci_addr_w1  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_ci_addr_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W1_OFFSET 0x5a5
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W1_BYTE_OFFSET 0x1694
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_opa_tag_addr_w0       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_opa_tag_addr_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_opa_tag_addr_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W0_OFFSET 0x5a6
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W0_BYTE_OFFSET 0x1698
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_opa_tag_addr_w1       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_opa_tag_addr_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_opa_tag_addr_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W1_OFFSET 0x5a7
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W1_BYTE_OFFSET 0x169c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_consumer_idx          */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CONSUMER_IDX_OFFSET 0x5a8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CONSUMER_IDX_BYTE_OFFSET 0x16a0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_ring0_comp_cnt        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_ring0_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_ring0_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING0_COMP_CNT_OFFSET 0x5b0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING0_COMP_CNT_BYTE_OFFSET 0x16c0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING0_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING0_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING0_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING0_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_status                */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_status      */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_status  */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_STATUS_OFFSET 0x5b8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_STATUS_BYTE_OFFSET 0x16e0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_STATUS_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_STATUS_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_STATUS_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_STATUS_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk0_error_idx             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk0_error_idx   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk0_error_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_ERROR_IDX_OFFSET 0x5b9
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_ERROR_IDX_BYTE_OFFSET 0x16e4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_ERROR_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_ERROR_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_ERROR_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_ERROR_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_ring_base_w0          */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_ring_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_ring_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W0_OFFSET 0x600
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W0_BYTE_OFFSET 0x1800
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_ring_base_w1          */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_ring_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_ring_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W1_OFFSET 0x601
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W1_BYTE_OFFSET 0x1804
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_ring_size             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_ring_size   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_ring_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_SIZE_OFFSET 0x602
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_SIZE_BYTE_OFFSET 0x1808
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_producer_idx          */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_PRODUCER_IDX_OFFSET 0x603
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_PRODUCER_IDX_BYTE_OFFSET 0x180c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_soft_rst              */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_soft_rst    */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_soft_rst */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_SOFT_RST_OFFSET 0x620
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_SOFT_RST_BYTE_OFFSET 0x1880
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_SOFT_RST_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_SOFT_RST_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_SOFT_RST_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_SOFT_RST_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_ci_addr_w0            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_ci_addr_w0  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_ci_addr_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W0_OFFSET 0x624
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W0_BYTE_OFFSET 0x1890
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_ci_addr_w1            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_ci_addr_w1  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_ci_addr_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W1_OFFSET 0x625
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W1_BYTE_OFFSET 0x1894
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_opa_tag_addr_w0       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_opa_tag_addr_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_opa_tag_addr_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W0_OFFSET 0x626
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W0_BYTE_OFFSET 0x1898
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_opa_tag_addr_w1       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_opa_tag_addr_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_opa_tag_addr_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W1_OFFSET 0x627
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W1_BYTE_OFFSET 0x189c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_consumer_idx          */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CONSUMER_IDX_OFFSET 0x628
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CONSUMER_IDX_BYTE_OFFSET 0x18a0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_ring0_comp_cnt        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_ring0_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_ring0_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING0_COMP_CNT_OFFSET 0x630
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING0_COMP_CNT_BYTE_OFFSET 0x18c0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING0_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING0_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING0_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING0_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_status                */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_status      */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_status  */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_STATUS_OFFSET 0x638
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_STATUS_BYTE_OFFSET 0x18e0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_STATUS_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_STATUS_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_STATUS_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_STATUS_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.pk1_error_idx             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::pk1_error_idx   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::pk1_error_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_ERROR_IDX_OFFSET 0x639
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_ERROR_IDX_BYTE_OFFSET 0x18e4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_ERROR_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_ERROR_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_ERROR_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_ERROR_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg0_cryptoram_random_num0 */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_random_num0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_random_num0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_OFFSET 0x800
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_BYTE_OFFSET 0x2000
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg0_cryptoram_random_num1 */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_random_num1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_random_num1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_OFFSET 0x880
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_BYTE_OFFSET 0x2200
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg0_cryptoram_psnl_str_p */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_psnl_str_p */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_psnl_str_p */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_OFFSET 0x900
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_BYTE_OFFSET 0x2400
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg0_cryptoram_entropy_inst */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_entropy_inst */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_entropy_inst */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_OFFSET 0x910
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_BYTE_OFFSET 0x2440
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg0_cryptoram_entropy_reseed */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_entropy_reseed */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_entropy_reseed */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_OFFSET 0x920
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_BYTE_OFFSET 0x2480
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg0_isr              */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_isr    */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_isr */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ISR_OFFSET 0x940
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ISR_BYTE_OFFSET 0x2500
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ISR_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ISR_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ISR_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ISR_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg0_msk              */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_msk    */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_msk */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_MSK_OFFSET 0x941
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_MSK_BYTE_OFFSET 0x2504
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_MSK_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_MSK_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_MSK_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_MSK_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg0_icr              */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_icr    */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_icr */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ICR_OFFSET 0x942
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ICR_BYTE_OFFSET 0x2508
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ICR_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ICR_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ICR_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ICR_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg0_ver              */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_ver    */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_ver */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_VER_OFFSET 0x943
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_VER_BYTE_OFFSET 0x250c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_VER_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_VER_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_VER_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_VER_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg0_gct              */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_gct    */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_gct */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GCT_OFFSET 0x944
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GCT_BYTE_OFFSET 0x2510
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GCT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GCT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GCT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GCT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg0_rsvr0            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_rsvr0  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_rsvr0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR0_OFFSET 0x945
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR0_BYTE_OFFSET 0x2514
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg0_gs               */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_gs     */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_gs */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GS_OFFSET 0x946
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GS_BYTE_OFFSET 0x2518
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GS_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GS_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GS_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GS_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg0_rsvr1            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_rsvr1  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_rsvr1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR1_OFFSET 0x947
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR1_BYTE_OFFSET 0x251c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg0_rng              */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_rng    */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_rng */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RNG_OFFSET 0x948
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RNG_BYTE_OFFSET 0x2520
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RNG_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RNG_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RNG_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RNG_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg0_drnge            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_drnge  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg0_drnge */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_DRNGE_OFFSET 0x949
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_DRNGE_BYTE_OFFSET 0x2524
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_DRNGE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_DRNGE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_DRNGE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_DRNGE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_controlreg       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_controlreg */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_controlreg */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CONTROLREG_OFFSET 0x980
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CONTROLREG_BYTE_OFFSET 0x2600
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CONTROLREG_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CONTROLREG_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CONTROLREG_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CONTROLREG_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_fifolevel        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_fifolevel */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_fifolevel */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOLEVEL_OFFSET 0x981
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOLEVEL_BYTE_OFFSET 0x2604
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOLEVEL_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOLEVEL_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOLEVEL_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOLEVEL_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_fifothresh       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_fifothresh */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_fifothresh */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOTHRESH_OFFSET 0x982
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOTHRESH_BYTE_OFFSET 0x2608
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOTHRESH_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOTHRESH_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOTHRESH_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOTHRESH_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_fifodepth        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_fifodepth */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_fifodepth */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFODEPTH_OFFSET 0x983
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFODEPTH_BYTE_OFFSET 0x260c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFODEPTH_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFODEPTH_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFODEPTH_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFODEPTH_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_key0             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_key0   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_key0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY0_OFFSET 0x984
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY0_BYTE_OFFSET 0x2610
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_key1             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_key1   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_key1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY1_OFFSET 0x985
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY1_BYTE_OFFSET 0x2614
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_key2             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_key2   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_key2 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY2_OFFSET 0x986
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY2_BYTE_OFFSET 0x2618
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY2_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY2_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY2_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY2_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_key3             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_key3   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_key3 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY3_OFFSET 0x987
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY3_BYTE_OFFSET 0x261c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY3_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY3_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY3_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY3_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_testdata         */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_testdata */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_testdata */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_TESTDATA_OFFSET 0x988
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_TESTDATA_BYTE_OFFSET 0x2620
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_TESTDATA_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_TESTDATA_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_TESTDATA_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_TESTDATA_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_repthresh        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_repthresh */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_repthresh */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_REPTHRESH_OFFSET 0x989
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_REPTHRESH_BYTE_OFFSET 0x2624
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_REPTHRESH_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_REPTHRESH_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_REPTHRESH_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_REPTHRESH_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_prop1            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_prop1  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_prop1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP1_OFFSET 0x98a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP1_BYTE_OFFSET 0x2628
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_prop2            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_prop2  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_prop2 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP2_OFFSET 0x98b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP2_BYTE_OFFSET 0x262c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP2_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP2_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP2_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP2_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_status           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_status */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_status */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_STATUS_OFFSET 0x98c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_STATUS_BYTE_OFFSET 0x2630
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_STATUS_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_STATUS_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_STATUS_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_STATUS_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_initwaitval      */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_initwaitval */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_initwaitval */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_INITWAITVAL_OFFSET 0x98d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_INITWAITVAL_BYTE_OFFSET 0x2634
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_INITWAITVAL_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_INITWAITVAL_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_INITWAITVAL_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_INITWAITVAL_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_disableosc0      */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_disableosc0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_disableosc0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC0_OFFSET 0x98e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC0_BYTE_OFFSET 0x2638
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_disableosc1      */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_disableosc1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_disableosc1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC1_OFFSET 0x98f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC1_BYTE_OFFSET 0x263c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_swofftmrval      */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_swofftmrval */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_swofftmrval */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_SWOFFTMRVAL_OFFSET 0x990
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_SWOFFTMRVAL_BYTE_OFFSET 0x2640
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_SWOFFTMRVAL_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_SWOFFTMRVAL_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_SWOFFTMRVAL_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_SWOFFTMRVAL_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_clkdiv           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_clkdiv */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_clkdiv */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CLKDIV_OFFSET 0x991
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CLKDIV_BYTE_OFFSET 0x2644
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CLKDIV_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CLKDIV_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CLKDIV_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CLKDIV_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_ais31conf0       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31conf0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31conf0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF0_OFFSET 0x992
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF0_BYTE_OFFSET 0x2648
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_ais31conf1       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31conf1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31conf1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF1_OFFSET 0x993
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF1_BYTE_OFFSET 0x264c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_ais31conf2       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31conf2 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31conf2 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF2_OFFSET 0x994
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF2_BYTE_OFFSET 0x2650
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF2_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF2_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF2_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF2_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng0_ais31status      */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31status */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31status */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31STATUS_OFFSET 0x995
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31STATUS_BYTE_OFFSET 0x2654
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31STATUS_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31STATUS_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31STATUS_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31STATUS_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg1_cryptoram_random_num0 */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_random_num0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_random_num0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_OFFSET 0xc00
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_BYTE_OFFSET 0x3000
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg1_cryptoram_random_num1 */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_random_num1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_random_num1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_OFFSET 0xc80
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_BYTE_OFFSET 0x3200
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg1_cryptoram_psnl_str_p */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_psnl_str_p */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_psnl_str_p */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_OFFSET 0xd00
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_BYTE_OFFSET 0x3400
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg1_cryptoram_entropy_inst */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_entropy_inst */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_entropy_inst */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_OFFSET 0xd10
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_BYTE_OFFSET 0x3440
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg1_cryptoram_entropy_reseed */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_entropy_reseed */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_entropy_reseed */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_OFFSET 0xd20
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_BYTE_OFFSET 0x3480
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg1_isr              */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_isr    */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_isr */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ISR_OFFSET 0xd40
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ISR_BYTE_OFFSET 0x3500
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ISR_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ISR_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ISR_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ISR_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg1_msk              */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_msk    */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_msk */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_MSK_OFFSET 0xd41
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_MSK_BYTE_OFFSET 0x3504
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_MSK_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_MSK_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_MSK_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_MSK_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg1_icr              */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_icr    */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_icr */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ICR_OFFSET 0xd42
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ICR_BYTE_OFFSET 0x3508
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ICR_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ICR_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ICR_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ICR_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg1_ver              */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_ver    */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_ver */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_VER_OFFSET 0xd43
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_VER_BYTE_OFFSET 0x350c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_VER_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_VER_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_VER_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_VER_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg1_gct              */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_gct    */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_gct */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GCT_OFFSET 0xd44
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GCT_BYTE_OFFSET 0x3510
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GCT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GCT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GCT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GCT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg1_rsvr0            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_rsvr0  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_rsvr0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR0_OFFSET 0xd45
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR0_BYTE_OFFSET 0x3514
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg1_gs               */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_gs     */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_gs */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GS_OFFSET 0xd46
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GS_BYTE_OFFSET 0x3518
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GS_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GS_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GS_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GS_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg1_rsvr1            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_rsvr1  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_rsvr1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR1_OFFSET 0xd47
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR1_BYTE_OFFSET 0x351c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg1_rng              */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_rng    */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_rng */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RNG_OFFSET 0xd48
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RNG_BYTE_OFFSET 0x3520
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RNG_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RNG_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RNG_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RNG_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_drbg1_drnge            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_drnge  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_drbg1_drnge */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_DRNGE_OFFSET 0xd49
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_DRNGE_BYTE_OFFSET 0x3524
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_DRNGE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_DRNGE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_DRNGE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_DRNGE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_controlreg       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_controlreg */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_controlreg */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CONTROLREG_OFFSET 0xd80
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CONTROLREG_BYTE_OFFSET 0x3600
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CONTROLREG_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CONTROLREG_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CONTROLREG_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CONTROLREG_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_fifolevel        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_fifolevel */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_fifolevel */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOLEVEL_OFFSET 0xd81
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOLEVEL_BYTE_OFFSET 0x3604
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOLEVEL_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOLEVEL_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOLEVEL_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOLEVEL_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_fifothresh       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_fifothresh */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_fifothresh */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOTHRESH_OFFSET 0xd82
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOTHRESH_BYTE_OFFSET 0x3608
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOTHRESH_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOTHRESH_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOTHRESH_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOTHRESH_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_fifodepth        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_fifodepth */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_fifodepth */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFODEPTH_OFFSET 0xd83
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFODEPTH_BYTE_OFFSET 0x360c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFODEPTH_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFODEPTH_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFODEPTH_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFODEPTH_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_key0             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_key0   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_key0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY0_OFFSET 0xd84
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY0_BYTE_OFFSET 0x3610
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_key1             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_key1   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_key1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY1_OFFSET 0xd85
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY1_BYTE_OFFSET 0x3614
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_key2             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_key2   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_key2 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY2_OFFSET 0xd86
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY2_BYTE_OFFSET 0x3618
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY2_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY2_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY2_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY2_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_key3             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_key3   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_key3 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY3_OFFSET 0xd87
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY3_BYTE_OFFSET 0x361c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY3_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY3_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY3_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY3_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_testdata         */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_testdata */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_testdata */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_TESTDATA_OFFSET 0xd88
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_TESTDATA_BYTE_OFFSET 0x3620
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_TESTDATA_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_TESTDATA_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_TESTDATA_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_TESTDATA_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_repthresh        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_repthresh */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_repthresh */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_REPTHRESH_OFFSET 0xd89
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_REPTHRESH_BYTE_OFFSET 0x3624
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_REPTHRESH_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_REPTHRESH_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_REPTHRESH_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_REPTHRESH_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_prop1            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_prop1  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_prop1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP1_OFFSET 0xd8a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP1_BYTE_OFFSET 0x3628
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_prop2            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_prop2  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_prop2 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP2_OFFSET 0xd8b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP2_BYTE_OFFSET 0x362c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP2_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP2_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP2_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP2_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_status           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_status */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_status */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_STATUS_OFFSET 0xd8c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_STATUS_BYTE_OFFSET 0x3630
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_STATUS_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_STATUS_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_STATUS_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_STATUS_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_initwaitval      */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_initwaitval */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_initwaitval */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_INITWAITVAL_OFFSET 0xd8d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_INITWAITVAL_BYTE_OFFSET 0x3634
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_INITWAITVAL_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_INITWAITVAL_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_INITWAITVAL_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_INITWAITVAL_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_disableosc0      */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_disableosc0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_disableosc0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC0_OFFSET 0xd8e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC0_BYTE_OFFSET 0x3638
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_disableosc1      */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_disableosc1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_disableosc1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC1_OFFSET 0xd8f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC1_BYTE_OFFSET 0x363c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_swofftmrval      */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_swofftmrval */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_swofftmrval */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_SWOFFTMRVAL_OFFSET 0xd90
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_SWOFFTMRVAL_BYTE_OFFSET 0x3640
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_SWOFFTMRVAL_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_SWOFFTMRVAL_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_SWOFFTMRVAL_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_SWOFFTMRVAL_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_clkdiv           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_clkdiv */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_clkdiv */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CLKDIV_OFFSET 0xd91
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CLKDIV_BYTE_OFFSET 0x3644
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CLKDIV_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CLKDIV_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CLKDIV_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CLKDIV_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_ais31conf0       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31conf0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31conf0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF0_OFFSET 0xd92
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF0_BYTE_OFFSET 0x3648
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_ais31conf1       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31conf1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31conf1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF1_OFFSET 0xd93
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF1_BYTE_OFFSET 0x364c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_ais31conf2       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31conf2 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31conf2 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF2_OFFSET 0xd94
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF2_BYTE_OFFSET 0x3650
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF2_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF2_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF2_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF2_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.md_trng1_ais31status      */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31status */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31status */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31STATUS_OFFSET 0xd95
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31STATUS_BYTE_OFFSET 0x3654
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31STATUS_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31STATUS_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31STATUS_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31STATUS_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring0_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W0_OFFSET 0x1000
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W0_BYTE_OFFSET 0x4000
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring0_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W1_OFFSET 0x1001
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W1_BYTE_OFFSET 0x4004
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring0_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_SIZE_OFFSET 0x1002
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_SIZE_BYTE_OFFSET 0x4008
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring0_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_PRODUCER_IDX_OFFSET 0x1003
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_PRODUCER_IDX_BYTE_OFFSET 0x400c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring1_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W0_OFFSET 0x1004
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W0_BYTE_OFFSET 0x4010
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring1_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W1_OFFSET 0x1005
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W1_BYTE_OFFSET 0x4014
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring1_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_SIZE_OFFSET 0x1006
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_SIZE_BYTE_OFFSET 0x4018
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring1_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_PRODUCER_IDX_OFFSET 0x1007
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_PRODUCER_IDX_BYTE_OFFSET 0x401c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring2_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W0_OFFSET 0x1008
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W0_BYTE_OFFSET 0x4020
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring2_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W1_OFFSET 0x1009
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W1_BYTE_OFFSET 0x4024
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring2_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_SIZE_OFFSET 0x100a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_SIZE_BYTE_OFFSET 0x4028
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring2_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_PRODUCER_IDX_OFFSET 0x100b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_PRODUCER_IDX_BYTE_OFFSET 0x402c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring3_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W0_OFFSET 0x100c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W0_BYTE_OFFSET 0x4030
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring3_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W1_OFFSET 0x100d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W1_BYTE_OFFSET 0x4034
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring3_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_SIZE_OFFSET 0x100e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_SIZE_BYTE_OFFSET 0x4038
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring3_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_PRODUCER_IDX_OFFSET 0x100f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_PRODUCER_IDX_BYTE_OFFSET 0x403c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring4_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W0_OFFSET 0x1010
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W0_BYTE_OFFSET 0x4040
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring4_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W1_OFFSET 0x1011
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W1_BYTE_OFFSET 0x4044
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring4_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_SIZE_OFFSET 0x1012
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_SIZE_BYTE_OFFSET 0x4048
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring4_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_PRODUCER_IDX_OFFSET 0x1013
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_PRODUCER_IDX_BYTE_OFFSET 0x404c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring5_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W0_OFFSET 0x1014
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W0_BYTE_OFFSET 0x4050
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring5_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W1_OFFSET 0x1015
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W1_BYTE_OFFSET 0x4054
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring5_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_SIZE_OFFSET 0x1016
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_SIZE_BYTE_OFFSET 0x4058
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring5_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_PRODUCER_IDX_OFFSET 0x1017
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_PRODUCER_IDX_BYTE_OFFSET 0x405c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring6_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W0_OFFSET 0x1018
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W0_BYTE_OFFSET 0x4060
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring6_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W1_OFFSET 0x1019
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W1_BYTE_OFFSET 0x4064
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring6_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_SIZE_OFFSET 0x101a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_SIZE_BYTE_OFFSET 0x4068
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring6_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_PRODUCER_IDX_OFFSET 0x101b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_PRODUCER_IDX_BYTE_OFFSET 0x406c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring7_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W0_OFFSET 0x101c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W0_BYTE_OFFSET 0x4070
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring7_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W1_OFFSET 0x101d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W1_BYTE_OFFSET 0x4074
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring7_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_SIZE_OFFSET 0x101e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_SIZE_BYTE_OFFSET 0x4078
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring7_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_PRODUCER_IDX_OFFSET 0x101f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_PRODUCER_IDX_BYTE_OFFSET 0x407c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_soft_rst             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_soft_rst   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_soft_rst */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_SOFT_RST_OFFSET 0x1020
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_SOFT_RST_BYTE_OFFSET 0x4080
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_SOFT_RST_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_SOFT_RST_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_SOFT_RST_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_SOFT_RST_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_wrr_credit           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_wrr_credit */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_wrr_credit */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_WRR_CREDIT_OFFSET 0x1021
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_WRR_CREDIT_BYTE_OFFSET 0x4084
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_WRR_CREDIT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_WRR_CREDIT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_WRR_CREDIT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_WRR_CREDIT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_abs_priority         */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_abs_priority */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_abs_priority */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ABS_PRIORITY_OFFSET 0x1022
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ABS_PRIORITY_BYTE_OFFSET 0x4088
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ABS_PRIORITY_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ABS_PRIORITY_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ABS_PRIORITY_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ABS_PRIORITY_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring0_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_CONSUMER_IDX_OFFSET 0x1028
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_CONSUMER_IDX_BYTE_OFFSET 0x40a0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring1_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_CONSUMER_IDX_OFFSET 0x1029
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_CONSUMER_IDX_BYTE_OFFSET 0x40a4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring2_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_CONSUMER_IDX_OFFSET 0x102a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_CONSUMER_IDX_BYTE_OFFSET 0x40a8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring3_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_CONSUMER_IDX_OFFSET 0x102b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_CONSUMER_IDX_BYTE_OFFSET 0x40ac
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring4_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_CONSUMER_IDX_OFFSET 0x102c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_CONSUMER_IDX_BYTE_OFFSET 0x40b0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring5_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_CONSUMER_IDX_OFFSET 0x102d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_CONSUMER_IDX_BYTE_OFFSET 0x40b4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring6_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_CONSUMER_IDX_OFFSET 0x102e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_CONSUMER_IDX_BYTE_OFFSET 0x40b8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring7_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_CONSUMER_IDX_OFFSET 0x102f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_CONSUMER_IDX_BYTE_OFFSET 0x40bc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring0_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_COMP_CNT_OFFSET 0x1030
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_COMP_CNT_BYTE_OFFSET 0x40c0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring1_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_COMP_CNT_OFFSET 0x1031
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_COMP_CNT_BYTE_OFFSET 0x40c4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring2_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_COMP_CNT_OFFSET 0x1032
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_COMP_CNT_BYTE_OFFSET 0x40c8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring3_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_COMP_CNT_OFFSET 0x1033
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_COMP_CNT_BYTE_OFFSET 0x40cc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring4_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_COMP_CNT_OFFSET 0x1034
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_COMP_CNT_BYTE_OFFSET 0x40d0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring5_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_COMP_CNT_OFFSET 0x1035
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_COMP_CNT_BYTE_OFFSET 0x40d4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring6_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_COMP_CNT_OFFSET 0x1036
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_COMP_CNT_BYTE_OFFSET 0x40d8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_ring7_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_COMP_CNT_OFFSET 0x1037
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_COMP_CNT_BYTE_OFFSET 0x40dc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_status               */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_status     */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_status */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_STATUS_OFFSET 0x1038
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_STATUS_BYTE_OFFSET 0x40e0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_STATUS_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_STATUS_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_STATUS_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_STATUS_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_error_idx            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_error_idx  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_error_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_IDX_OFFSET 0x1039
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_IDX_BYTE_OFFSET 0x40e4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_error_queue          */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_error_queue */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_error_queue */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_QUEUE_OFFSET 0x103a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_QUEUE_BYTE_OFFSET 0x40e8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_QUEUE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_QUEUE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_QUEUE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_QUEUE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_dbg_stream           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_stream */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_stream */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_STREAM_OFFSET 0x103b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_STREAM_BYTE_OFFSET 0x40ec
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_STREAM_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_STREAM_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_STREAM_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_STREAM_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_dbg_fsm1             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm1   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM1_OFFSET 0x103c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM1_BYTE_OFFSET 0x40f0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_dbg_fsm2             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm2   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm2 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM2_OFFSET 0x103d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM2_BYTE_OFFSET 0x40f4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM2_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM2_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM2_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM2_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_dbg_fsm3             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm3   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm3 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM3_OFFSET 0x103e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM3_BYTE_OFFSET 0x40f8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM3_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM3_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM3_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM3_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym0_dbg_fsm4             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm4   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm4 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM4_OFFSET 0x103f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM4_BYTE_OFFSET 0x40fc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM4_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM4_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM4_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM4_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring0_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W0_OFFSET 0x1080
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W0_BYTE_OFFSET 0x4200
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring0_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W1_OFFSET 0x1081
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W1_BYTE_OFFSET 0x4204
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring0_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_SIZE_OFFSET 0x1082
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_SIZE_BYTE_OFFSET 0x4208
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring0_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_PRODUCER_IDX_OFFSET 0x1083
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_PRODUCER_IDX_BYTE_OFFSET 0x420c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring1_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W0_OFFSET 0x1084
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W0_BYTE_OFFSET 0x4210
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring1_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W1_OFFSET 0x1085
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W1_BYTE_OFFSET 0x4214
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring1_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_SIZE_OFFSET 0x1086
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_SIZE_BYTE_OFFSET 0x4218
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring1_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_PRODUCER_IDX_OFFSET 0x1087
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_PRODUCER_IDX_BYTE_OFFSET 0x421c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring2_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W0_OFFSET 0x1088
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W0_BYTE_OFFSET 0x4220
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring2_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W1_OFFSET 0x1089
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W1_BYTE_OFFSET 0x4224
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring2_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_SIZE_OFFSET 0x108a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_SIZE_BYTE_OFFSET 0x4228
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring2_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_PRODUCER_IDX_OFFSET 0x108b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_PRODUCER_IDX_BYTE_OFFSET 0x422c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring3_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W0_OFFSET 0x108c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W0_BYTE_OFFSET 0x4230
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring3_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W1_OFFSET 0x108d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W1_BYTE_OFFSET 0x4234
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring3_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_SIZE_OFFSET 0x108e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_SIZE_BYTE_OFFSET 0x4238
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring3_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_PRODUCER_IDX_OFFSET 0x108f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_PRODUCER_IDX_BYTE_OFFSET 0x423c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring4_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W0_OFFSET 0x1090
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W0_BYTE_OFFSET 0x4240
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring4_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W1_OFFSET 0x1091
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W1_BYTE_OFFSET 0x4244
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring4_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_SIZE_OFFSET 0x1092
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_SIZE_BYTE_OFFSET 0x4248
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring4_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_PRODUCER_IDX_OFFSET 0x1093
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_PRODUCER_IDX_BYTE_OFFSET 0x424c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring5_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W0_OFFSET 0x1094
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W0_BYTE_OFFSET 0x4250
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring5_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W1_OFFSET 0x1095
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W1_BYTE_OFFSET 0x4254
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring5_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_SIZE_OFFSET 0x1096
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_SIZE_BYTE_OFFSET 0x4258
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring5_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_PRODUCER_IDX_OFFSET 0x1097
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_PRODUCER_IDX_BYTE_OFFSET 0x425c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring6_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W0_OFFSET 0x1098
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W0_BYTE_OFFSET 0x4260
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring6_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W1_OFFSET 0x1099
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W1_BYTE_OFFSET 0x4264
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring6_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_SIZE_OFFSET 0x109a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_SIZE_BYTE_OFFSET 0x4268
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring6_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_PRODUCER_IDX_OFFSET 0x109b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_PRODUCER_IDX_BYTE_OFFSET 0x426c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring7_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W0_OFFSET 0x109c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W0_BYTE_OFFSET 0x4270
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring7_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W1_OFFSET 0x109d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W1_BYTE_OFFSET 0x4274
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring7_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_SIZE_OFFSET 0x109e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_SIZE_BYTE_OFFSET 0x4278
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring7_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_PRODUCER_IDX_OFFSET 0x109f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_PRODUCER_IDX_BYTE_OFFSET 0x427c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_soft_rst             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_soft_rst   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_soft_rst */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_SOFT_RST_OFFSET 0x10a0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_SOFT_RST_BYTE_OFFSET 0x4280
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_SOFT_RST_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_SOFT_RST_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_SOFT_RST_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_SOFT_RST_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_wrr_credit           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_wrr_credit */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_wrr_credit */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_WRR_CREDIT_OFFSET 0x10a1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_WRR_CREDIT_BYTE_OFFSET 0x4284
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_WRR_CREDIT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_WRR_CREDIT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_WRR_CREDIT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_WRR_CREDIT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_abs_priority         */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_abs_priority */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_abs_priority */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ABS_PRIORITY_OFFSET 0x10a2
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ABS_PRIORITY_BYTE_OFFSET 0x4288
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ABS_PRIORITY_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ABS_PRIORITY_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ABS_PRIORITY_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ABS_PRIORITY_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring0_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_CONSUMER_IDX_OFFSET 0x10a8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_CONSUMER_IDX_BYTE_OFFSET 0x42a0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring1_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_CONSUMER_IDX_OFFSET 0x10a9
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_CONSUMER_IDX_BYTE_OFFSET 0x42a4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring2_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_CONSUMER_IDX_OFFSET 0x10aa
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_CONSUMER_IDX_BYTE_OFFSET 0x42a8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring3_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_CONSUMER_IDX_OFFSET 0x10ab
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_CONSUMER_IDX_BYTE_OFFSET 0x42ac
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring4_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_CONSUMER_IDX_OFFSET 0x10ac
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_CONSUMER_IDX_BYTE_OFFSET 0x42b0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring5_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_CONSUMER_IDX_OFFSET 0x10ad
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_CONSUMER_IDX_BYTE_OFFSET 0x42b4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring6_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_CONSUMER_IDX_OFFSET 0x10ae
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_CONSUMER_IDX_BYTE_OFFSET 0x42b8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring7_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_CONSUMER_IDX_OFFSET 0x10af
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_CONSUMER_IDX_BYTE_OFFSET 0x42bc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring0_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_COMP_CNT_OFFSET 0x10b0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_COMP_CNT_BYTE_OFFSET 0x42c0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring1_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_COMP_CNT_OFFSET 0x10b1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_COMP_CNT_BYTE_OFFSET 0x42c4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring2_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_COMP_CNT_OFFSET 0x10b2
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_COMP_CNT_BYTE_OFFSET 0x42c8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring3_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_COMP_CNT_OFFSET 0x10b3
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_COMP_CNT_BYTE_OFFSET 0x42cc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring4_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_COMP_CNT_OFFSET 0x10b4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_COMP_CNT_BYTE_OFFSET 0x42d0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring5_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_COMP_CNT_OFFSET 0x10b5
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_COMP_CNT_BYTE_OFFSET 0x42d4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring6_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_COMP_CNT_OFFSET 0x10b6
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_COMP_CNT_BYTE_OFFSET 0x42d8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_ring7_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_COMP_CNT_OFFSET 0x10b7
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_COMP_CNT_BYTE_OFFSET 0x42dc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_status               */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_status     */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_status */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_STATUS_OFFSET 0x10b8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_STATUS_BYTE_OFFSET 0x42e0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_STATUS_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_STATUS_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_STATUS_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_STATUS_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_error_idx            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_error_idx  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_error_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_IDX_OFFSET 0x10b9
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_IDX_BYTE_OFFSET 0x42e4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_error_queue          */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_error_queue */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_error_queue */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_QUEUE_OFFSET 0x10ba
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_QUEUE_BYTE_OFFSET 0x42e8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_QUEUE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_QUEUE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_QUEUE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_QUEUE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_dbg_stream           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_stream */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_stream */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_STREAM_OFFSET 0x10bb
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_STREAM_BYTE_OFFSET 0x42ec
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_STREAM_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_STREAM_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_STREAM_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_STREAM_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_dbg_fsm1             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm1   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM1_OFFSET 0x10bc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM1_BYTE_OFFSET 0x42f0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_dbg_fsm2             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm2   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm2 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM2_OFFSET 0x10bd
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM2_BYTE_OFFSET 0x42f4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM2_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM2_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM2_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM2_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_dbg_fsm3             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm3   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm3 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM3_OFFSET 0x10be
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM3_BYTE_OFFSET 0x42f8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM3_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM3_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM3_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM3_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym1_dbg_fsm4             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm4   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm4 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM4_OFFSET 0x10bf
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM4_BYTE_OFFSET 0x42fc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM4_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM4_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM4_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM4_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring0_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W0_OFFSET 0x1100
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W0_BYTE_OFFSET 0x4400
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring0_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W1_OFFSET 0x1101
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W1_BYTE_OFFSET 0x4404
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring0_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_SIZE_OFFSET 0x1102
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_SIZE_BYTE_OFFSET 0x4408
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring0_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_PRODUCER_IDX_OFFSET 0x1103
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_PRODUCER_IDX_BYTE_OFFSET 0x440c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring1_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W0_OFFSET 0x1104
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W0_BYTE_OFFSET 0x4410
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring1_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W1_OFFSET 0x1105
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W1_BYTE_OFFSET 0x4414
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring1_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_SIZE_OFFSET 0x1106
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_SIZE_BYTE_OFFSET 0x4418
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring1_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_PRODUCER_IDX_OFFSET 0x1107
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_PRODUCER_IDX_BYTE_OFFSET 0x441c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring2_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W0_OFFSET 0x1108
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W0_BYTE_OFFSET 0x4420
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring2_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W1_OFFSET 0x1109
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W1_BYTE_OFFSET 0x4424
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring2_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_SIZE_OFFSET 0x110a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_SIZE_BYTE_OFFSET 0x4428
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring2_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_PRODUCER_IDX_OFFSET 0x110b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_PRODUCER_IDX_BYTE_OFFSET 0x442c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring3_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W0_OFFSET 0x110c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W0_BYTE_OFFSET 0x4430
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring3_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W1_OFFSET 0x110d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W1_BYTE_OFFSET 0x4434
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring3_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_SIZE_OFFSET 0x110e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_SIZE_BYTE_OFFSET 0x4438
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring3_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_PRODUCER_IDX_OFFSET 0x110f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_PRODUCER_IDX_BYTE_OFFSET 0x443c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring4_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W0_OFFSET 0x1110
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W0_BYTE_OFFSET 0x4440
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring4_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W1_OFFSET 0x1111
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W1_BYTE_OFFSET 0x4444
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring4_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_SIZE_OFFSET 0x1112
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_SIZE_BYTE_OFFSET 0x4448
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring4_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_PRODUCER_IDX_OFFSET 0x1113
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_PRODUCER_IDX_BYTE_OFFSET 0x444c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring5_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W0_OFFSET 0x1114
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W0_BYTE_OFFSET 0x4450
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring5_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W1_OFFSET 0x1115
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W1_BYTE_OFFSET 0x4454
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring5_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_SIZE_OFFSET 0x1116
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_SIZE_BYTE_OFFSET 0x4458
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring5_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_PRODUCER_IDX_OFFSET 0x1117
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_PRODUCER_IDX_BYTE_OFFSET 0x445c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring6_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W0_OFFSET 0x1118
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W0_BYTE_OFFSET 0x4460
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring6_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W1_OFFSET 0x1119
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W1_BYTE_OFFSET 0x4464
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring6_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_SIZE_OFFSET 0x111a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_SIZE_BYTE_OFFSET 0x4468
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring6_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_PRODUCER_IDX_OFFSET 0x111b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_PRODUCER_IDX_BYTE_OFFSET 0x446c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring7_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W0_OFFSET 0x111c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W0_BYTE_OFFSET 0x4470
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring7_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W1_OFFSET 0x111d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W1_BYTE_OFFSET 0x4474
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring7_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_SIZE_OFFSET 0x111e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_SIZE_BYTE_OFFSET 0x4478
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring7_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_PRODUCER_IDX_OFFSET 0x111f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_PRODUCER_IDX_BYTE_OFFSET 0x447c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_soft_rst             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_soft_rst   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_soft_rst */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_SOFT_RST_OFFSET 0x1120
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_SOFT_RST_BYTE_OFFSET 0x4480
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_SOFT_RST_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_SOFT_RST_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_SOFT_RST_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_SOFT_RST_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_wrr_credit           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_wrr_credit */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_wrr_credit */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_WRR_CREDIT_OFFSET 0x1121
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_WRR_CREDIT_BYTE_OFFSET 0x4484
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_WRR_CREDIT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_WRR_CREDIT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_WRR_CREDIT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_WRR_CREDIT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_abs_priority         */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_abs_priority */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_abs_priority */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ABS_PRIORITY_OFFSET 0x1122
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ABS_PRIORITY_BYTE_OFFSET 0x4488
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ABS_PRIORITY_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ABS_PRIORITY_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ABS_PRIORITY_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ABS_PRIORITY_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring0_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_CONSUMER_IDX_OFFSET 0x1128
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_CONSUMER_IDX_BYTE_OFFSET 0x44a0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring1_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_CONSUMER_IDX_OFFSET 0x1129
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_CONSUMER_IDX_BYTE_OFFSET 0x44a4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring2_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_CONSUMER_IDX_OFFSET 0x112a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_CONSUMER_IDX_BYTE_OFFSET 0x44a8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring3_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_CONSUMER_IDX_OFFSET 0x112b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_CONSUMER_IDX_BYTE_OFFSET 0x44ac
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring4_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_CONSUMER_IDX_OFFSET 0x112c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_CONSUMER_IDX_BYTE_OFFSET 0x44b0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring5_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_CONSUMER_IDX_OFFSET 0x112d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_CONSUMER_IDX_BYTE_OFFSET 0x44b4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring6_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_CONSUMER_IDX_OFFSET 0x112e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_CONSUMER_IDX_BYTE_OFFSET 0x44b8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring7_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_CONSUMER_IDX_OFFSET 0x112f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_CONSUMER_IDX_BYTE_OFFSET 0x44bc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring0_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_COMP_CNT_OFFSET 0x1130
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_COMP_CNT_BYTE_OFFSET 0x44c0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring1_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_COMP_CNT_OFFSET 0x1131
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_COMP_CNT_BYTE_OFFSET 0x44c4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring2_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_COMP_CNT_OFFSET 0x1132
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_COMP_CNT_BYTE_OFFSET 0x44c8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring3_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_COMP_CNT_OFFSET 0x1133
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_COMP_CNT_BYTE_OFFSET 0x44cc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring4_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_COMP_CNT_OFFSET 0x1134
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_COMP_CNT_BYTE_OFFSET 0x44d0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring5_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_COMP_CNT_OFFSET 0x1135
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_COMP_CNT_BYTE_OFFSET 0x44d4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring6_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_COMP_CNT_OFFSET 0x1136
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_COMP_CNT_BYTE_OFFSET 0x44d8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_ring7_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_COMP_CNT_OFFSET 0x1137
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_COMP_CNT_BYTE_OFFSET 0x44dc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_status               */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_status     */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_status */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_STATUS_OFFSET 0x1138
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_STATUS_BYTE_OFFSET 0x44e0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_STATUS_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_STATUS_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_STATUS_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_STATUS_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_error_idx            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_error_idx  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_error_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_IDX_OFFSET 0x1139
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_IDX_BYTE_OFFSET 0x44e4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_error_queue          */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_error_queue */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_error_queue */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_QUEUE_OFFSET 0x113a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_QUEUE_BYTE_OFFSET 0x44e8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_QUEUE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_QUEUE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_QUEUE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_QUEUE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_dbg_stream           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_stream */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_stream */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_STREAM_OFFSET 0x113b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_STREAM_BYTE_OFFSET 0x44ec
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_STREAM_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_STREAM_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_STREAM_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_STREAM_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_dbg_fsm1             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm1   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM1_OFFSET 0x113c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM1_BYTE_OFFSET 0x44f0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_dbg_fsm2             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm2   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm2 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM2_OFFSET 0x113d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM2_BYTE_OFFSET 0x44f4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM2_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM2_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM2_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM2_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_dbg_fsm3             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm3   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm3 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM3_OFFSET 0x113e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM3_BYTE_OFFSET 0x44f8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM3_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM3_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM3_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM3_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym2_dbg_fsm4             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm4   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm4 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM4_OFFSET 0x113f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM4_BYTE_OFFSET 0x44fc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM4_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM4_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM4_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM4_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring0_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W0_OFFSET 0x1180
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W0_BYTE_OFFSET 0x4600
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring0_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W1_OFFSET 0x1181
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W1_BYTE_OFFSET 0x4604
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring0_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_SIZE_OFFSET 0x1182
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_SIZE_BYTE_OFFSET 0x4608
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring0_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_PRODUCER_IDX_OFFSET 0x1183
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_PRODUCER_IDX_BYTE_OFFSET 0x460c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring1_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W0_OFFSET 0x1184
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W0_BYTE_OFFSET 0x4610
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring1_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W1_OFFSET 0x1185
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W1_BYTE_OFFSET 0x4614
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring1_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_SIZE_OFFSET 0x1186
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_SIZE_BYTE_OFFSET 0x4618
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring1_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_PRODUCER_IDX_OFFSET 0x1187
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_PRODUCER_IDX_BYTE_OFFSET 0x461c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring2_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W0_OFFSET 0x1188
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W0_BYTE_OFFSET 0x4620
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring2_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W1_OFFSET 0x1189
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W1_BYTE_OFFSET 0x4624
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring2_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_SIZE_OFFSET 0x118a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_SIZE_BYTE_OFFSET 0x4628
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring2_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_PRODUCER_IDX_OFFSET 0x118b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_PRODUCER_IDX_BYTE_OFFSET 0x462c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring3_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W0_OFFSET 0x118c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W0_BYTE_OFFSET 0x4630
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring3_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W1_OFFSET 0x118d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W1_BYTE_OFFSET 0x4634
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring3_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_SIZE_OFFSET 0x118e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_SIZE_BYTE_OFFSET 0x4638
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring3_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_PRODUCER_IDX_OFFSET 0x118f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_PRODUCER_IDX_BYTE_OFFSET 0x463c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring4_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W0_OFFSET 0x1190
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W0_BYTE_OFFSET 0x4640
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring4_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W1_OFFSET 0x1191
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W1_BYTE_OFFSET 0x4644
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring4_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_SIZE_OFFSET 0x1192
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_SIZE_BYTE_OFFSET 0x4648
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring4_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_PRODUCER_IDX_OFFSET 0x1193
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_PRODUCER_IDX_BYTE_OFFSET 0x464c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring5_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W0_OFFSET 0x1194
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W0_BYTE_OFFSET 0x4650
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring5_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W1_OFFSET 0x1195
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W1_BYTE_OFFSET 0x4654
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring5_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_SIZE_OFFSET 0x1196
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_SIZE_BYTE_OFFSET 0x4658
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring5_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_PRODUCER_IDX_OFFSET 0x1197
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_PRODUCER_IDX_BYTE_OFFSET 0x465c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring6_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W0_OFFSET 0x1198
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W0_BYTE_OFFSET 0x4660
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring6_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W1_OFFSET 0x1199
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W1_BYTE_OFFSET 0x4664
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring6_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_SIZE_OFFSET 0x119a
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_SIZE_BYTE_OFFSET 0x4668
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring6_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_PRODUCER_IDX_OFFSET 0x119b
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_PRODUCER_IDX_BYTE_OFFSET 0x466c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring7_base_w0        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_base_w0 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_base_w0 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W0_OFFSET 0x119c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W0_BYTE_OFFSET 0x4670
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W0_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W0_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W0_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W0_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring7_base_w1        */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_base_w1 */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_base_w1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W1_OFFSET 0x119d
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W1_BYTE_OFFSET 0x4674
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring7_size           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_size */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_size */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_SIZE_OFFSET 0x119e
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_SIZE_BYTE_OFFSET 0x4678
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_SIZE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_SIZE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_SIZE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_SIZE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring7_producer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_producer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_producer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_PRODUCER_IDX_OFFSET 0x119f
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_PRODUCER_IDX_BYTE_OFFSET 0x467c
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_PRODUCER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_PRODUCER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_PRODUCER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_PRODUCER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_soft_rst             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_soft_rst   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_soft_rst */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_SOFT_RST_OFFSET 0x11a0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_SOFT_RST_BYTE_OFFSET 0x4680
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_SOFT_RST_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_SOFT_RST_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_SOFT_RST_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_SOFT_RST_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_wrr_credit           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_wrr_credit */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_wrr_credit */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_WRR_CREDIT_OFFSET 0x11a1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_WRR_CREDIT_BYTE_OFFSET 0x4684
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_WRR_CREDIT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_WRR_CREDIT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_WRR_CREDIT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_WRR_CREDIT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_abs_priority         */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_abs_priority */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_abs_priority */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ABS_PRIORITY_OFFSET 0x11a2
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ABS_PRIORITY_BYTE_OFFSET 0x4688
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ABS_PRIORITY_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ABS_PRIORITY_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ABS_PRIORITY_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ABS_PRIORITY_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring0_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_CONSUMER_IDX_OFFSET 0x11a8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_CONSUMER_IDX_BYTE_OFFSET 0x46a0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring1_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_CONSUMER_IDX_OFFSET 0x11a9
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_CONSUMER_IDX_BYTE_OFFSET 0x46a4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring2_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_CONSUMER_IDX_OFFSET 0x11aa
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_CONSUMER_IDX_BYTE_OFFSET 0x46a8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring3_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_CONSUMER_IDX_OFFSET 0x11ab
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_CONSUMER_IDX_BYTE_OFFSET 0x46ac
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring4_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_CONSUMER_IDX_OFFSET 0x11ac
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_CONSUMER_IDX_BYTE_OFFSET 0x46b0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring5_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_CONSUMER_IDX_OFFSET 0x11ad
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_CONSUMER_IDX_BYTE_OFFSET 0x46b4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring6_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_CONSUMER_IDX_OFFSET 0x11ae
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_CONSUMER_IDX_BYTE_OFFSET 0x46b8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring7_consumer_idx   */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_consumer_idx */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_consumer_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_CONSUMER_IDX_OFFSET 0x11af
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_CONSUMER_IDX_BYTE_OFFSET 0x46bc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_CONSUMER_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_CONSUMER_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_CONSUMER_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_CONSUMER_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring0_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_COMP_CNT_OFFSET 0x11b0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_COMP_CNT_BYTE_OFFSET 0x46c0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring1_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_COMP_CNT_OFFSET 0x11b1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_COMP_CNT_BYTE_OFFSET 0x46c4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring2_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_COMP_CNT_OFFSET 0x11b2
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_COMP_CNT_BYTE_OFFSET 0x46c8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring3_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_COMP_CNT_OFFSET 0x11b3
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_COMP_CNT_BYTE_OFFSET 0x46cc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring4_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_COMP_CNT_OFFSET 0x11b4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_COMP_CNT_BYTE_OFFSET 0x46d0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring5_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_COMP_CNT_OFFSET 0x11b5
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_COMP_CNT_BYTE_OFFSET 0x46d4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring6_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_COMP_CNT_OFFSET 0x11b6
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_COMP_CNT_BYTE_OFFSET 0x46d8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_ring7_comp_cnt       */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_comp_cnt */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_comp_cnt */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_COMP_CNT_OFFSET 0x11b7
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_COMP_CNT_BYTE_OFFSET 0x46dc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_COMP_CNT_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_COMP_CNT_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_COMP_CNT_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_COMP_CNT_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_status               */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_status     */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_status */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_STATUS_OFFSET 0x11b8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_STATUS_BYTE_OFFSET 0x46e0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_STATUS_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_STATUS_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_STATUS_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_STATUS_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_error_idx            */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_error_idx  */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_error_idx */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_IDX_OFFSET 0x11b9
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_IDX_BYTE_OFFSET 0x46e4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_IDX_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_IDX_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_IDX_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_IDX_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_error_queue          */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_error_queue */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_error_queue */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_QUEUE_OFFSET 0x11ba
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_QUEUE_BYTE_OFFSET 0x46e8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_QUEUE_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_QUEUE_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_QUEUE_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_QUEUE_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_dbg_stream           */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_stream */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_stream */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_STREAM_OFFSET 0x11bb
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_STREAM_BYTE_OFFSET 0x46ec
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_STREAM_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_STREAM_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_STREAM_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_STREAM_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_dbg_fsm1             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm1   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm1 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM1_OFFSET 0x11bc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM1_BYTE_OFFSET 0x46f0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM1_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM1_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM1_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM1_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_dbg_fsm2             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm2   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm2 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM2_OFFSET 0x11bd
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM2_BYTE_OFFSET 0x46f4
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM2_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM2_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM2_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM2_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_dbg_fsm3             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm3   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm3 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM3_OFFSET 0x11be
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM3_BYTE_OFFSET 0x46f8
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM3_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM3_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM3_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM3_WRITE_MASK 0xffffffff
/* Register member: elb_hese_csr::dhs_crypto_ctl.sym3_dbg_fsm4             */
/* Register type referenced: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm4   */
/* Register template referenced: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm4 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM4_OFFSET 0x11bf
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM4_BYTE_OFFSET 0x46fc
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM4_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM4_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM4_READ_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM4_WRITE_MASK 0xffffffff

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_key_array_base_w0     */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_key_array_base_w0 */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 33 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_key_array_base_w0.fld  */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 33 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_key_array_base_w1     */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_key_array_base_w1 */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 34 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_key_array_base_w1.fld  */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 34 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_key_array_size        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_key_array_size    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 35 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_key_array_size.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 35 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_KEY_ARRAY_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_axi_desc              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_axi_desc          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 36 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_axi_desc.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 36 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DESC_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DESC_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DESC_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DESC_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DESC_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DESC_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DESC_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DESC_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DESC_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_axi_data_read         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_axi_data_read     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 37 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_axi_data_read.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 37 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_READ_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_READ_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_READ_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_READ_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_READ_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_READ_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_READ_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_READ_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_READ_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_axi_data_write        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_axi_data_write    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 38 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_axi_data_write.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 38 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_WRITE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_WRITE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_WRITE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_WRITE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_WRITE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_WRITE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_WRITE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_WRITE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DATA_WRITE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_axi_status            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_axi_status        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 39 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_axi_status.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 39 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_STATUS_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_STATUS_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_STATUS_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_STATUS_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_STATUS_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_STATUS_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_STATUS_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_STATUS_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_STATUS_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_axi_opaque_tag_write  */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_axi_opaque_tag_write */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 40 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_axi_opaque_tag_write.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 40 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_OPAQUE_TAG_WRITE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_OPAQUE_TAG_WRITE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_OPAQUE_TAG_WRITE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_OPAQUE_TAG_WRITE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_OPAQUE_TAG_WRITE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_OPAQUE_TAG_WRITE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_OPAQUE_TAG_WRITE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_OPAQUE_TAG_WRITE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_OPAQUE_TAG_WRITE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_axi_doorbell_write    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_axi_doorbell_write */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 41 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_axi_doorbell_write.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 41 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DOORBELL_WRITE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DOORBELL_WRITE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DOORBELL_WRITE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DOORBELL_WRITE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DOORBELL_WRITE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DOORBELL_WRITE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DOORBELL_WRITE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DOORBELL_WRITE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_AXI_DOORBELL_WRITE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_key_array_base_w0     */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_key_array_base_w0 */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 42 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_key_array_base_w0.fld  */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 42 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_key_array_base_w1     */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_key_array_base_w1 */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 43 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_key_array_base_w1.fld  */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 43 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_key_array_size        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_key_array_size    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 44 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_key_array_size.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 44 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_KEY_ARRAY_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_axi_desc              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_axi_desc          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 45 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_axi_desc.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 45 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DESC_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DESC_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DESC_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DESC_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DESC_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DESC_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DESC_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DESC_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DESC_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_axi_data_read         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_axi_data_read     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 46 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_axi_data_read.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 46 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_READ_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_READ_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_READ_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_READ_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_READ_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_READ_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_READ_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_READ_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_READ_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_axi_data_write        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_axi_data_write    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 47 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_axi_data_write.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 47 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_WRITE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_WRITE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_WRITE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_WRITE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_WRITE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_WRITE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_WRITE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_WRITE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DATA_WRITE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_axi_status            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_axi_status        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 48 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_axi_status.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 48 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_STATUS_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_STATUS_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_STATUS_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_STATUS_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_STATUS_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_STATUS_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_STATUS_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_STATUS_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_STATUS_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_axi_opaque_tag_write  */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_axi_opaque_tag_write */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 49 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_axi_opaque_tag_write.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 49 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_OPAQUE_TAG_WRITE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_OPAQUE_TAG_WRITE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_OPAQUE_TAG_WRITE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_OPAQUE_TAG_WRITE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_OPAQUE_TAG_WRITE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_OPAQUE_TAG_WRITE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_OPAQUE_TAG_WRITE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_OPAQUE_TAG_WRITE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_OPAQUE_TAG_WRITE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_axi_doorbell_write    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_axi_doorbell_write */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 50 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_axi_doorbell_write.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 50 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DOORBELL_WRITE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DOORBELL_WRITE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DOORBELL_WRITE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DOORBELL_WRITE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DOORBELL_WRITE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DOORBELL_WRITE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DOORBELL_WRITE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DOORBELL_WRITE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_AXI_DOORBELL_WRITE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_key_array_base_w0     */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_key_array_base_w0 */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 51 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_key_array_base_w0.fld  */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 51 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_key_array_base_w1     */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_key_array_base_w1 */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 52 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_key_array_base_w1.fld  */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 52 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_key_array_size        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_key_array_size    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 53 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_key_array_size.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 53 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_KEY_ARRAY_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_axi_desc              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_axi_desc          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 54 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_axi_desc.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 54 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DESC_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DESC_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DESC_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DESC_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DESC_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DESC_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DESC_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DESC_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DESC_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_axi_data_read         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_axi_data_read     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 55 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_axi_data_read.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 55 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_READ_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_READ_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_READ_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_READ_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_READ_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_READ_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_READ_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_READ_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_READ_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_axi_data_write        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_axi_data_write    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 56 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_axi_data_write.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 56 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_WRITE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_WRITE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_WRITE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_WRITE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_WRITE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_WRITE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_WRITE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_WRITE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DATA_WRITE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_axi_status            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_axi_status        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 57 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_axi_status.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 57 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_STATUS_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_STATUS_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_STATUS_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_STATUS_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_STATUS_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_STATUS_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_STATUS_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_STATUS_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_STATUS_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_axi_opaque_tag_write  */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_axi_opaque_tag_write */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 58 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_axi_opaque_tag_write.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 58 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_OPAQUE_TAG_WRITE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_OPAQUE_TAG_WRITE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_OPAQUE_TAG_WRITE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_OPAQUE_TAG_WRITE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_OPAQUE_TAG_WRITE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_OPAQUE_TAG_WRITE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_OPAQUE_TAG_WRITE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_OPAQUE_TAG_WRITE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_OPAQUE_TAG_WRITE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_axi_doorbell_write    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_axi_doorbell_write */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 59 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_axi_doorbell_write.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 59 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DOORBELL_WRITE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DOORBELL_WRITE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DOORBELL_WRITE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DOORBELL_WRITE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DOORBELL_WRITE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DOORBELL_WRITE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DOORBELL_WRITE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DOORBELL_WRITE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_AXI_DOORBELL_WRITE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_key_array_base_w0     */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_key_array_base_w0 */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 60 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_key_array_base_w0.fld  */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 60 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_key_array_base_w1     */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_key_array_base_w1 */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 61 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_key_array_base_w1.fld  */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 61 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_key_array_size        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_key_array_size    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 62 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_key_array_size.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 62 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_KEY_ARRAY_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_axi_desc              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_axi_desc          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 63 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_axi_desc.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 63 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DESC_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DESC_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DESC_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DESC_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DESC_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DESC_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DESC_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DESC_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DESC_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_axi_data_read         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_axi_data_read     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 64 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_axi_data_read.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 64 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_READ_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_READ_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_READ_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_READ_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_READ_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_READ_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_READ_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_READ_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_READ_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_axi_data_write        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_axi_data_write    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 65 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_axi_data_write.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 65 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_WRITE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_WRITE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_WRITE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_WRITE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_WRITE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_WRITE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_WRITE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_WRITE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DATA_WRITE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_axi_status            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_axi_status        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 66 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_axi_status.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 66 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_STATUS_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_STATUS_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_STATUS_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_STATUS_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_STATUS_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_STATUS_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_STATUS_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_STATUS_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_STATUS_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_axi_opaque_tag_write  */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_axi_opaque_tag_write */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 67 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_axi_opaque_tag_write.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 67 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_OPAQUE_TAG_WRITE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_OPAQUE_TAG_WRITE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_OPAQUE_TAG_WRITE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_OPAQUE_TAG_WRITE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_OPAQUE_TAG_WRITE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_OPAQUE_TAG_WRITE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_OPAQUE_TAG_WRITE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_OPAQUE_TAG_WRITE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_OPAQUE_TAG_WRITE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_axi_doorbell_write    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_axi_doorbell_write */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 68 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_axi_doorbell_write.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 68 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DOORBELL_WRITE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DOORBELL_WRITE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DOORBELL_WRITE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DOORBELL_WRITE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DOORBELL_WRITE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DOORBELL_WRITE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DOORBELL_WRITE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DOORBELL_WRITE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_AXI_DOORBELL_WRITE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_key_array_base_w0      */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_key_array_base_w0  */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 69 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_key_array_base_w0.fld   */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 69 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_key_array_base_w1      */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_key_array_base_w1  */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 70 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_key_array_base_w1.fld   */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 70 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_key_array_size         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_key_array_size     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 71 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_key_array_size.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 71 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_KEY_ARRAY_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_axi_desc               */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_axi_desc           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 72 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_axi_desc.fld            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 72 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DESC_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DESC_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DESC_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DESC_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DESC_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DESC_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DESC_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DESC_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DESC_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_axi_data_read          */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_axi_data_read      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 73 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_axi_data_read.fld       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 73 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_READ_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_READ_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_READ_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_READ_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_READ_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_READ_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_READ_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_READ_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_READ_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_axi_data_write         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_axi_data_write     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 74 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_axi_data_write.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 74 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_WRITE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_WRITE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_WRITE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_WRITE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_WRITE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_WRITE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_WRITE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_WRITE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DATA_WRITE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_axi_status             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_axi_status         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 75 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_axi_status.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 75 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_STATUS_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_STATUS_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_STATUS_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_STATUS_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_STATUS_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_STATUS_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_STATUS_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_STATUS_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_STATUS_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_axi_opaque_tag_write   */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_axi_opaque_tag_write */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 76 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_axi_opaque_tag_write.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 76 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_OPAQUE_TAG_WRITE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_OPAQUE_TAG_WRITE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_OPAQUE_TAG_WRITE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_OPAQUE_TAG_WRITE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_OPAQUE_TAG_WRITE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_OPAQUE_TAG_WRITE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_OPAQUE_TAG_WRITE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_OPAQUE_TAG_WRITE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_OPAQUE_TAG_WRITE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_axi_doorbell_write     */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_axi_doorbell_write */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 77 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_axi_doorbell_write.fld  */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 77 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DOORBELL_WRITE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DOORBELL_WRITE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DOORBELL_WRITE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DOORBELL_WRITE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DOORBELL_WRITE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DOORBELL_WRITE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DOORBELL_WRITE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DOORBELL_WRITE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_AXI_DOORBELL_WRITE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_key_array_base_w0      */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_key_array_base_w0  */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 78 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_key_array_base_w0.fld   */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 78 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_key_array_base_w1      */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_key_array_base_w1  */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 79 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_key_array_base_w1.fld   */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 79 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_key_array_size         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_key_array_size     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 80 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_key_array_size.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 80 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_KEY_ARRAY_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_axi_desc               */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_axi_desc           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 81 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_axi_desc.fld            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 81 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DESC_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DESC_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DESC_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DESC_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DESC_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DESC_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DESC_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DESC_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DESC_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_axi_data_read          */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_axi_data_read      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 82 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_axi_data_read.fld       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 82 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_READ_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_READ_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_READ_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_READ_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_READ_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_READ_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_READ_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_READ_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_READ_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_axi_data_write         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_axi_data_write     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 83 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_axi_data_write.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 83 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_WRITE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_WRITE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_WRITE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_WRITE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_WRITE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_WRITE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_WRITE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_WRITE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DATA_WRITE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_axi_status             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_axi_status         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 84 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_axi_status.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 84 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_STATUS_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_STATUS_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_STATUS_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_STATUS_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_STATUS_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_STATUS_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_STATUS_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_STATUS_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_STATUS_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_axi_opaque_tag_write   */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_axi_opaque_tag_write */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 85 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_axi_opaque_tag_write.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 85 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_OPAQUE_TAG_WRITE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_OPAQUE_TAG_WRITE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_OPAQUE_TAG_WRITE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_OPAQUE_TAG_WRITE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_OPAQUE_TAG_WRITE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_OPAQUE_TAG_WRITE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_OPAQUE_TAG_WRITE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_OPAQUE_TAG_WRITE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_OPAQUE_TAG_WRITE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_axi_doorbell_write     */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_axi_doorbell_write */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 86 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_axi_doorbell_write.fld  */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 86 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DOORBELL_WRITE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DOORBELL_WRITE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DOORBELL_WRITE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DOORBELL_WRITE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DOORBELL_WRITE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DOORBELL_WRITE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DOORBELL_WRITE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DOORBELL_WRITE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_AXI_DOORBELL_WRITE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_ring_base_w0           */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_ring_base_w0       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 88 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_ring_base_w0.fld        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 88 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_ring_base_w1           */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_ring_base_w1       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 89 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_ring_base_w1.fld        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 89 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_ring_size              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_ring_size          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 90 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_ring_size.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 90 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_producer_idx           */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_producer_idx       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 91 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_producer_idx.fld        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 91 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_soft_rst               */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_soft_rst           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 92 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_soft_rst.fld            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 92 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_SOFT_RST_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_SOFT_RST_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_SOFT_RST_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_SOFT_RST_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_SOFT_RST_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_SOFT_RST_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_SOFT_RST_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_SOFT_RST_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_SOFT_RST_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_ci_addr_w0             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_ci_addr_w0         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 95 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_ci_addr_w0.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 95 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_ci_addr_w1             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_ci_addr_w1         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 96 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_ci_addr_w1.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 96 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CI_ADDR_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_opa_tag_addr_w0        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_opa_tag_addr_w0    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 97 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_opa_tag_addr_w0.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 97 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_opa_tag_addr_w1        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_opa_tag_addr_w1    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 98 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_opa_tag_addr_w1.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 98 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_OPA_TAG_ADDR_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_consumer_idx           */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_consumer_idx       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 99 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_consumer_idx.fld        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 99 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_ring0_comp_cnt         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_ring0_comp_cnt     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 100 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_ring0_comp_cnt.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 100 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING0_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING0_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING0_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING0_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING0_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING0_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING0_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING0_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_RING0_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_status                 */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_status             */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 101 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_status.fld              */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 101 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_STATUS_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_STATUS_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_STATUS_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_STATUS_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_STATUS_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_STATUS_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_STATUS_FLD_GET(x) ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_STATUS_FLD_SET(x) ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_STATUS_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk0_error_idx              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk0_error_idx          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 102 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk0_error_idx.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 102 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_ERROR_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_ERROR_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_ERROR_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_ERROR_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_ERROR_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_ERROR_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_ERROR_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_ERROR_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK0_ERROR_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_ring_base_w0           */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_ring_base_w0       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 105 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_ring_base_w0.fld        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 105 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_ring_base_w1           */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_ring_base_w1       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 106 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_ring_base_w1.fld        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 106 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_ring_size              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_ring_size          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 107 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_ring_size.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 107 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_producer_idx           */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_producer_idx       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 108 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_producer_idx.fld        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 108 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_soft_rst               */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_soft_rst           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 109 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_soft_rst.fld            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 109 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_SOFT_RST_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_SOFT_RST_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_SOFT_RST_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_SOFT_RST_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_SOFT_RST_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_SOFT_RST_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_SOFT_RST_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_SOFT_RST_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_SOFT_RST_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_ci_addr_w0             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_ci_addr_w0         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 112 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_ci_addr_w0.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 112 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_ci_addr_w1             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_ci_addr_w1         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 113 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_ci_addr_w1.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 113 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CI_ADDR_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_opa_tag_addr_w0        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_opa_tag_addr_w0    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 114 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_opa_tag_addr_w0.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 114 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_opa_tag_addr_w1        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_opa_tag_addr_w1    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 115 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_opa_tag_addr_w1.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 115 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_OPA_TAG_ADDR_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_consumer_idx           */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_consumer_idx       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 116 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_consumer_idx.fld        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 116 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_ring0_comp_cnt         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_ring0_comp_cnt     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 117 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_ring0_comp_cnt.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 117 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING0_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING0_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING0_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING0_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING0_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING0_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING0_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING0_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_RING0_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_status                 */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_status             */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 118 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_status.fld              */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 118 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_STATUS_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_STATUS_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_STATUS_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_STATUS_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_STATUS_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_STATUS_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_STATUS_FLD_GET(x) ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_STATUS_FLD_SET(x) ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_STATUS_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::pk1_error_idx              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::pk1_error_idx          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 119 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::pk1_error_idx.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 119 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_ERROR_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_ERROR_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_ERROR_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_ERROR_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_ERROR_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_ERROR_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_ERROR_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_ERROR_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_PK1_ERROR_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_random_num0 */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_random_num0 */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 123 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_random_num0.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 123 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_random_num1 */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_random_num1 */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 124 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_random_num1.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 124 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_RANDOM_NUM1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_psnl_str_p */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_psnl_str_p */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 125 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_psnl_str_p.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 125 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_PSNL_STR_P_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_entropy_inst */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_entropy_inst */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 126 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_entropy_inst.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 126 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_INST_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_entropy_reseed */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_entropy_reseed */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 127 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg0_cryptoram_entropy_reseed.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 127 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_CRYPTORAM_ENTROPY_RESEED_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg0_isr               */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg0_isr           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 129 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg0_isr.fld            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 129 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ISR_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ISR_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ISR_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ISR_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ISR_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ISR_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ISR_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ISR_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ISR_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg0_msk               */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg0_msk           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 130 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg0_msk.fld            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 130 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_MSK_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_MSK_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_MSK_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_MSK_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_MSK_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_MSK_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_MSK_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_MSK_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_MSK_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg0_icr               */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg0_icr           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 131 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg0_icr.fld            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 131 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ICR_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ICR_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ICR_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ICR_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ICR_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ICR_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ICR_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ICR_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_ICR_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg0_ver               */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg0_ver           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 132 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg0_ver.fld            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 132 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_VER_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_VER_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_VER_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_VER_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_VER_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_VER_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_VER_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_VER_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_VER_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg0_gct               */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg0_gct           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 133 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg0_gct.fld            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 133 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GCT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GCT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GCT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GCT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GCT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GCT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GCT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GCT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GCT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg0_rsvr0             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg0_rsvr0         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 134 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg0_rsvr0.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 134 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg0_gs                */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg0_gs            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 135 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg0_gs.fld             */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 135 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GS_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GS_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GS_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GS_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GS_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GS_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GS_FLD_GET(x) ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GS_FLD_SET(x) ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_GS_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg0_rsvr1             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg0_rsvr1         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 136 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg0_rsvr1.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 136 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RSVR1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg0_rng               */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg0_rng           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 137 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg0_rng.fld            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 137 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RNG_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RNG_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RNG_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RNG_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RNG_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RNG_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RNG_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RNG_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_RNG_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg0_drnge             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg0_drnge         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 138 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg0_drnge.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 138 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_DRNGE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_DRNGE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_DRNGE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_DRNGE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_DRNGE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_DRNGE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_DRNGE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_DRNGE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG0_DRNGE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_controlreg        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_controlreg    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 140 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_controlreg.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 140 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CONTROLREG_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CONTROLREG_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CONTROLREG_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CONTROLREG_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CONTROLREG_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CONTROLREG_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CONTROLREG_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CONTROLREG_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CONTROLREG_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_fifolevel         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_fifolevel     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 141 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_fifolevel.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 141 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOLEVEL_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOLEVEL_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOLEVEL_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOLEVEL_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOLEVEL_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOLEVEL_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOLEVEL_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOLEVEL_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOLEVEL_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_fifothresh        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_fifothresh    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 142 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_fifothresh.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 142 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOTHRESH_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOTHRESH_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOTHRESH_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOTHRESH_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOTHRESH_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOTHRESH_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOTHRESH_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOTHRESH_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFOTHRESH_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_fifodepth         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_fifodepth     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 143 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_fifodepth.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 143 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFODEPTH_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFODEPTH_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFODEPTH_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFODEPTH_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFODEPTH_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFODEPTH_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFODEPTH_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFODEPTH_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_FIFODEPTH_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_key0              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_key0          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 144 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_key0.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 144 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_key1              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_key1          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 145 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_key1.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 145 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_key2              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_key2          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 146 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_key2.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 146 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY2_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY2_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY2_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY2_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY2_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY2_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY2_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY2_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY2_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_key3              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_key3          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 147 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_key3.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 147 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY3_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY3_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY3_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY3_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY3_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY3_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY3_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY3_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_KEY3_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_testdata          */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_testdata      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 148 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_testdata.fld       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 148 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_TESTDATA_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_TESTDATA_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_TESTDATA_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_TESTDATA_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_TESTDATA_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_TESTDATA_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_TESTDATA_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_TESTDATA_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_TESTDATA_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_repthresh         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_repthresh     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 149 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_repthresh.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 149 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_REPTHRESH_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_REPTHRESH_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_REPTHRESH_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_REPTHRESH_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_REPTHRESH_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_REPTHRESH_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_REPTHRESH_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_REPTHRESH_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_REPTHRESH_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_prop1             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_prop1         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 150 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_prop1.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 150 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_prop2             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_prop2         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 151 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_prop2.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 151 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP2_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP2_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP2_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP2_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP2_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP2_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP2_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP2_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_PROP2_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_status            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_status        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 152 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_status.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 152 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_STATUS_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_STATUS_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_STATUS_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_STATUS_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_STATUS_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_STATUS_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_STATUS_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_STATUS_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_STATUS_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_initwaitval       */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_initwaitval   */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 153 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_initwaitval.fld    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 153 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_INITWAITVAL_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_INITWAITVAL_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_INITWAITVAL_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_INITWAITVAL_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_INITWAITVAL_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_INITWAITVAL_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_INITWAITVAL_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_INITWAITVAL_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_INITWAITVAL_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_disableosc0       */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_disableosc0   */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 154 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_disableosc0.fld    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 154 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_disableosc1       */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_disableosc1   */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 155 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_disableosc1.fld    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 155 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_DISABLEOSC1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_swofftmrval       */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_swofftmrval   */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 156 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_swofftmrval.fld    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 156 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_SWOFFTMRVAL_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_SWOFFTMRVAL_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_SWOFFTMRVAL_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_SWOFFTMRVAL_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_SWOFFTMRVAL_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_SWOFFTMRVAL_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_SWOFFTMRVAL_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_SWOFFTMRVAL_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_SWOFFTMRVAL_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_clkdiv            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_clkdiv        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 157 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_clkdiv.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 157 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CLKDIV_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CLKDIV_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CLKDIV_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CLKDIV_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CLKDIV_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CLKDIV_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CLKDIV_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CLKDIV_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_CLKDIV_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31conf0        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31conf0    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 158 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31conf0.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 158 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31conf1        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31conf1    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 159 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31conf1.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 159 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31conf2        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31conf2    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 160 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31conf2.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 160 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF2_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF2_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF2_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF2_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF2_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF2_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF2_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF2_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31CONF2_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31status       */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31status   */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 161 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng0_ais31status.fld    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 161 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31STATUS_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31STATUS_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31STATUS_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31STATUS_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31STATUS_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31STATUS_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31STATUS_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31STATUS_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG0_AIS31STATUS_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_random_num0 */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_random_num0 */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 165 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_random_num0.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 165 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_random_num1 */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_random_num1 */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 166 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_random_num1.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 166 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_RANDOM_NUM1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_psnl_str_p */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_psnl_str_p */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 167 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_psnl_str_p.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 167 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_PSNL_STR_P_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_entropy_inst */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_entropy_inst */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 168 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_entropy_inst.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 168 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_INST_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_entropy_reseed */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_entropy_reseed */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 169 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg1_cryptoram_entropy_reseed.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 169 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_CRYPTORAM_ENTROPY_RESEED_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg1_isr               */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg1_isr           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 171 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg1_isr.fld            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 171 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ISR_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ISR_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ISR_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ISR_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ISR_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ISR_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ISR_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ISR_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ISR_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg1_msk               */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg1_msk           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 172 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg1_msk.fld            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 172 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_MSK_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_MSK_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_MSK_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_MSK_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_MSK_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_MSK_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_MSK_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_MSK_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_MSK_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg1_icr               */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg1_icr           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 173 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg1_icr.fld            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 173 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ICR_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ICR_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ICR_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ICR_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ICR_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ICR_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ICR_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ICR_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_ICR_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg1_ver               */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg1_ver           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 174 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg1_ver.fld            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 174 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_VER_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_VER_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_VER_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_VER_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_VER_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_VER_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_VER_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_VER_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_VER_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg1_gct               */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg1_gct           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 175 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg1_gct.fld            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 175 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GCT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GCT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GCT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GCT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GCT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GCT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GCT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GCT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GCT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg1_rsvr0             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg1_rsvr0         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 176 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg1_rsvr0.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 176 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg1_gs                */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg1_gs            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 177 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg1_gs.fld             */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 177 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GS_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GS_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GS_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GS_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GS_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GS_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GS_FLD_GET(x) ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GS_FLD_SET(x) ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_GS_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg1_rsvr1             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg1_rsvr1         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 178 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg1_rsvr1.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 178 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RSVR1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg1_rng               */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg1_rng           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 179 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg1_rng.fld            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 179 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RNG_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RNG_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RNG_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RNG_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RNG_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RNG_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RNG_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RNG_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_RNG_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_drbg1_drnge             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_drbg1_drnge         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 180 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_drbg1_drnge.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 180 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_DRNGE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_DRNGE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_DRNGE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_DRNGE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_DRNGE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_DRNGE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_DRNGE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_DRNGE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_DRBG1_DRNGE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_controlreg        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_controlreg    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 182 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_controlreg.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 182 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CONTROLREG_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CONTROLREG_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CONTROLREG_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CONTROLREG_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CONTROLREG_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CONTROLREG_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CONTROLREG_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CONTROLREG_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CONTROLREG_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_fifolevel         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_fifolevel     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 183 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_fifolevel.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 183 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOLEVEL_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOLEVEL_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOLEVEL_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOLEVEL_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOLEVEL_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOLEVEL_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOLEVEL_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOLEVEL_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOLEVEL_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_fifothresh        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_fifothresh    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 184 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_fifothresh.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 184 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOTHRESH_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOTHRESH_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOTHRESH_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOTHRESH_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOTHRESH_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOTHRESH_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOTHRESH_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOTHRESH_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFOTHRESH_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_fifodepth         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_fifodepth     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 185 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_fifodepth.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 185 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFODEPTH_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFODEPTH_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFODEPTH_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFODEPTH_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFODEPTH_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFODEPTH_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFODEPTH_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFODEPTH_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_FIFODEPTH_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_key0              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_key0          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 186 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_key0.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 186 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_key1              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_key1          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 187 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_key1.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 187 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_key2              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_key2          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 188 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_key2.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 188 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY2_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY2_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY2_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY2_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY2_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY2_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY2_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY2_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY2_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_key3              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_key3          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 189 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_key3.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 189 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY3_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY3_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY3_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY3_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY3_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY3_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY3_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY3_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_KEY3_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_testdata          */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_testdata      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 190 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_testdata.fld       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 190 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_TESTDATA_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_TESTDATA_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_TESTDATA_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_TESTDATA_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_TESTDATA_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_TESTDATA_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_TESTDATA_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_TESTDATA_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_TESTDATA_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_repthresh         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_repthresh     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 191 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_repthresh.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 191 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_REPTHRESH_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_REPTHRESH_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_REPTHRESH_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_REPTHRESH_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_REPTHRESH_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_REPTHRESH_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_REPTHRESH_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_REPTHRESH_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_REPTHRESH_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_prop1             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_prop1         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 192 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_prop1.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 192 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_prop2             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_prop2         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 193 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_prop2.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 193 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP2_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP2_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP2_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP2_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP2_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP2_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP2_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP2_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_PROP2_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_status            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_status        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 194 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_status.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 194 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_STATUS_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_STATUS_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_STATUS_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_STATUS_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_STATUS_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_STATUS_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_STATUS_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_STATUS_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_STATUS_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_initwaitval       */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_initwaitval   */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 195 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_initwaitval.fld    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 195 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_INITWAITVAL_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_INITWAITVAL_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_INITWAITVAL_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_INITWAITVAL_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_INITWAITVAL_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_INITWAITVAL_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_INITWAITVAL_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_INITWAITVAL_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_INITWAITVAL_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_disableosc0       */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_disableosc0   */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 196 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_disableosc0.fld    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 196 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_disableosc1       */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_disableosc1   */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 197 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_disableosc1.fld    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 197 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_DISABLEOSC1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_swofftmrval       */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_swofftmrval   */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 198 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_swofftmrval.fld    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 198 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_SWOFFTMRVAL_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_SWOFFTMRVAL_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_SWOFFTMRVAL_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_SWOFFTMRVAL_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_SWOFFTMRVAL_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_SWOFFTMRVAL_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_SWOFFTMRVAL_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_SWOFFTMRVAL_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_SWOFFTMRVAL_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_clkdiv            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_clkdiv        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 199 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_clkdiv.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 199 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CLKDIV_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CLKDIV_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CLKDIV_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CLKDIV_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CLKDIV_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CLKDIV_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CLKDIV_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CLKDIV_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_CLKDIV_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31conf0        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31conf0    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 200 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31conf0.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 200 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31conf1        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31conf1    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 201 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31conf1.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 201 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31conf2        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31conf2    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 202 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31conf2.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 202 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF2_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF2_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF2_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF2_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF2_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF2_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF2_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF2_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31CONF2_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31status       */
/* Register template: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31status   */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 203 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::md_trng1_ais31status.fld    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 203 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31STATUS_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31STATUS_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31STATUS_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31STATUS_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31STATUS_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31STATUS_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31STATUS_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31STATUS_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_MD_TRNG1_AIS31STATUS_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 208 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 208 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 209 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 209 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 210 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 210 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 211 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 211 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 212 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 212 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 213 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 213 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 214 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 214 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 215 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 215 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 216 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 216 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 217 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 217 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 218 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 218 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 219 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 219 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 220 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 220 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 221 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 221 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 222 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 222 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 223 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 223 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 224 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 224 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 225 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 225 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 226 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 226 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 227 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 227 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 228 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 228 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 229 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 229 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 230 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 230 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 231 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 231 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 232 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 232 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 233 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 233 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 234 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 234 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 235 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 235 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 236 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 236 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 237 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 237 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 238 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 238 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 239 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 239 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_soft_rst              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_soft_rst          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 240 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_soft_rst.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 240 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_SOFT_RST_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_SOFT_RST_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_SOFT_RST_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_SOFT_RST_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_SOFT_RST_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_SOFT_RST_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_SOFT_RST_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_SOFT_RST_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_SOFT_RST_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_wrr_credit            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_wrr_credit        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 241 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_wrr_credit.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 241 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_WRR_CREDIT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_WRR_CREDIT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_WRR_CREDIT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_WRR_CREDIT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_WRR_CREDIT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_WRR_CREDIT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_WRR_CREDIT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_WRR_CREDIT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_WRR_CREDIT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_abs_priority          */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_abs_priority      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 242 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_abs_priority.fld       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 242 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ABS_PRIORITY_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ABS_PRIORITY_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ABS_PRIORITY_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ABS_PRIORITY_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ABS_PRIORITY_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ABS_PRIORITY_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ABS_PRIORITY_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ABS_PRIORITY_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ABS_PRIORITY_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 245 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 245 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 246 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 246 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 247 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 247 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 248 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 248 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 249 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 249 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 250 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 250 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 251 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 251 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 252 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 252 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 253 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring0_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 253 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING0_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 254 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring1_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 254 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING1_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 255 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring2_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 255 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING2_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 256 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring3_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 256 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING3_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 257 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring4_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 257 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING4_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 258 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring5_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 258 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING5_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 259 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring6_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 259 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING6_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 260 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_ring7_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 260 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_RING7_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_status                */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_status            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 261 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_status.fld             */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 261 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_STATUS_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_STATUS_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_STATUS_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_STATUS_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_STATUS_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_STATUS_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_STATUS_FLD_GET(x) ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_STATUS_FLD_SET(x) ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_STATUS_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_error_idx             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_error_idx         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 262 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_error_idx.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 262 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_error_queue           */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_error_queue       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 263 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_error_queue.fld        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 263 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_QUEUE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_QUEUE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_QUEUE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_QUEUE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_QUEUE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_QUEUE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_QUEUE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_QUEUE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_ERROR_QUEUE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_stream            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_stream        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 264 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_stream.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 264 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_STREAM_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_STREAM_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_STREAM_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_STREAM_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_STREAM_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_STREAM_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_STREAM_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_STREAM_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_STREAM_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm1              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm1          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 265 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm1.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 265 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm2              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm2          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 266 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm2.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 266 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM2_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM2_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM2_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM2_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM2_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM2_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM2_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM2_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM2_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm3              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm3          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 267 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm3.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 267 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM3_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM3_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM3_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM3_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM3_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM3_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM3_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM3_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM3_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm4              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm4          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 268 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym0_dbg_fsm4.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 268 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM4_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM4_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM4_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM4_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM4_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM4_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM4_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM4_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM0_DBG_FSM4_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 271 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 271 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 272 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 272 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 273 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 273 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 274 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 274 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 275 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 275 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 276 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 276 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 277 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 277 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 278 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 278 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 279 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 279 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 280 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 280 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 281 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 281 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 282 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 282 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 283 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 283 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 284 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 284 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 285 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 285 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 286 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 286 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 287 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 287 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 288 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 288 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 289 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 289 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 290 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 290 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 291 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 291 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 292 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 292 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 293 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 293 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 294 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 294 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 295 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 295 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 296 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 296 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 297 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 297 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 298 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 298 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 299 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 299 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 300 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 300 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 301 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 301 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 302 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 302 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_soft_rst              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_soft_rst          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 303 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_soft_rst.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 303 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_SOFT_RST_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_SOFT_RST_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_SOFT_RST_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_SOFT_RST_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_SOFT_RST_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_SOFT_RST_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_SOFT_RST_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_SOFT_RST_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_SOFT_RST_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_wrr_credit            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_wrr_credit        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 304 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_wrr_credit.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 304 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_WRR_CREDIT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_WRR_CREDIT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_WRR_CREDIT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_WRR_CREDIT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_WRR_CREDIT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_WRR_CREDIT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_WRR_CREDIT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_WRR_CREDIT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_WRR_CREDIT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_abs_priority          */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_abs_priority      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 305 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_abs_priority.fld       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 305 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ABS_PRIORITY_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ABS_PRIORITY_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ABS_PRIORITY_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ABS_PRIORITY_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ABS_PRIORITY_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ABS_PRIORITY_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ABS_PRIORITY_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ABS_PRIORITY_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ABS_PRIORITY_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 308 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 308 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 309 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 309 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 310 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 310 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 311 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 311 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 312 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 312 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 313 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 313 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 314 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 314 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 315 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 315 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 316 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring0_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 316 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING0_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 317 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring1_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 317 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING1_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 318 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring2_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 318 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING2_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 319 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring3_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 319 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING3_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 320 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring4_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 320 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING4_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 321 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring5_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 321 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING5_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 322 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring6_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 322 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING6_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 323 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_ring7_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 323 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_RING7_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_status                */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_status            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 324 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_status.fld             */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 324 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_STATUS_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_STATUS_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_STATUS_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_STATUS_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_STATUS_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_STATUS_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_STATUS_FLD_GET(x) ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_STATUS_FLD_SET(x) ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_STATUS_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_error_idx             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_error_idx         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 325 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_error_idx.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 325 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_error_queue           */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_error_queue       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 326 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_error_queue.fld        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 326 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_QUEUE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_QUEUE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_QUEUE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_QUEUE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_QUEUE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_QUEUE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_QUEUE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_QUEUE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_ERROR_QUEUE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_stream            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_stream        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 327 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_stream.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 327 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_STREAM_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_STREAM_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_STREAM_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_STREAM_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_STREAM_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_STREAM_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_STREAM_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_STREAM_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_STREAM_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm1              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm1          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 328 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm1.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 328 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm2              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm2          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 329 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm2.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 329 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM2_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM2_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM2_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM2_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM2_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM2_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM2_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM2_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM2_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm3              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm3          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 330 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm3.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 330 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM3_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM3_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM3_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM3_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM3_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM3_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM3_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM3_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM3_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm4              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm4          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 331 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym1_dbg_fsm4.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 331 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM4_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM4_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM4_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM4_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM4_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM4_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM4_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM4_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM1_DBG_FSM4_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 334 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 334 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 335 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 335 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 336 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 336 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 337 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 337 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 338 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 338 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 339 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 339 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 340 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 340 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 341 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 341 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 342 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 342 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 343 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 343 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 344 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 344 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 345 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 345 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 346 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 346 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 347 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 347 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 348 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 348 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 349 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 349 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 350 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 350 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 351 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 351 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 352 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 352 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 353 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 353 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 354 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 354 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 355 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 355 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 356 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 356 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 357 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 357 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 358 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 358 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 359 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 359 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 360 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 360 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 361 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 361 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 362 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 362 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 363 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 363 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 364 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 364 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 365 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 365 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_soft_rst              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_soft_rst          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 366 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_soft_rst.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 366 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_SOFT_RST_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_SOFT_RST_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_SOFT_RST_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_SOFT_RST_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_SOFT_RST_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_SOFT_RST_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_SOFT_RST_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_SOFT_RST_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_SOFT_RST_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_wrr_credit            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_wrr_credit        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 367 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_wrr_credit.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 367 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_WRR_CREDIT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_WRR_CREDIT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_WRR_CREDIT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_WRR_CREDIT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_WRR_CREDIT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_WRR_CREDIT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_WRR_CREDIT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_WRR_CREDIT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_WRR_CREDIT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_abs_priority          */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_abs_priority      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 368 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_abs_priority.fld       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 368 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ABS_PRIORITY_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ABS_PRIORITY_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ABS_PRIORITY_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ABS_PRIORITY_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ABS_PRIORITY_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ABS_PRIORITY_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ABS_PRIORITY_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ABS_PRIORITY_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ABS_PRIORITY_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 371 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 371 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 372 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 372 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 373 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 373 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 374 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 374 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 375 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 375 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 376 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 376 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 377 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 377 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 378 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 378 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 379 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring0_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 379 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING0_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 380 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring1_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 380 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING1_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 381 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring2_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 381 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING2_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 382 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring3_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 382 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING3_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 383 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring4_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 383 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING4_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 384 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring5_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 384 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING5_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 385 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring6_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 385 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING6_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 386 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_ring7_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 386 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_RING7_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_status                */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_status            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 387 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_status.fld             */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 387 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_STATUS_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_STATUS_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_STATUS_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_STATUS_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_STATUS_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_STATUS_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_STATUS_FLD_GET(x) ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_STATUS_FLD_SET(x) ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_STATUS_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_error_idx             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_error_idx         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 388 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_error_idx.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 388 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_error_queue           */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_error_queue       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 389 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_error_queue.fld        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 389 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_QUEUE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_QUEUE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_QUEUE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_QUEUE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_QUEUE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_QUEUE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_QUEUE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_QUEUE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_ERROR_QUEUE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_stream            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_stream        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 390 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_stream.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 390 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_STREAM_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_STREAM_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_STREAM_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_STREAM_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_STREAM_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_STREAM_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_STREAM_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_STREAM_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_STREAM_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm1              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm1          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 391 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm1.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 391 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm2              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm2          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 392 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm2.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 392 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM2_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM2_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM2_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM2_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM2_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM2_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM2_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM2_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM2_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm3              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm3          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 393 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm3.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 393 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM3_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM3_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM3_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM3_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM3_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM3_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM3_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM3_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM3_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm4              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm4          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 394 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym2_dbg_fsm4.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 394 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM4_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM4_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM4_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM4_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM4_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM4_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM4_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM4_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM2_DBG_FSM4_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 397 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 397 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 398 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 398 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 399 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 399 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 400 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 400 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 401 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 401 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 402 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 402 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 403 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 403 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 404 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 404 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 405 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 405 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 406 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 406 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 407 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 407 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 408 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 408 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 409 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 409 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 410 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 410 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 411 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 411 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 412 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 412 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 413 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 413 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 414 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 414 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 415 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 415 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 416 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 416 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 417 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 417 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 418 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 418 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 419 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 419 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 420 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 420 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 421 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 421 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 422 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 422 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 423 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 423 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 424 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 424 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_base_w0         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_base_w0     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 425 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_base_w0.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 425 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W0_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W0_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W0_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W0_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W0_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W0_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W0_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W0_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W0_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_base_w1         */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_base_w1     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 426 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_base_w1.fld      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 426 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_BASE_W1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_size            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_size        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 427 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_size.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 427 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_SIZE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_SIZE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_SIZE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_SIZE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_SIZE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_SIZE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_SIZE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_SIZE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_SIZE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_producer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_producer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 428 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_producer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 428 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_PRODUCER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_PRODUCER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_PRODUCER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_PRODUCER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_PRODUCER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_PRODUCER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_PRODUCER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_PRODUCER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_PRODUCER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_soft_rst              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_soft_rst          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 429 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_soft_rst.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 429 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_SOFT_RST_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_SOFT_RST_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_SOFT_RST_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_SOFT_RST_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_SOFT_RST_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_SOFT_RST_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_SOFT_RST_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_SOFT_RST_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_SOFT_RST_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_wrr_credit            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_wrr_credit        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 430 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_wrr_credit.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 430 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_WRR_CREDIT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_WRR_CREDIT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_WRR_CREDIT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_WRR_CREDIT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_WRR_CREDIT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_WRR_CREDIT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_WRR_CREDIT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_WRR_CREDIT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_WRR_CREDIT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_abs_priority          */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_abs_priority      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 431 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_abs_priority.fld       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 431 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ABS_PRIORITY_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ABS_PRIORITY_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ABS_PRIORITY_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ABS_PRIORITY_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ABS_PRIORITY_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ABS_PRIORITY_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ABS_PRIORITY_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ABS_PRIORITY_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ABS_PRIORITY_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 434 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 434 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 435 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 435 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 436 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 436 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 437 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 437 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 438 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 438 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 439 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 439 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 440 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 440 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_consumer_idx    */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_consumer_idx */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 441 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_consumer_idx.fld */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 441 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_CONSUMER_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_CONSUMER_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_CONSUMER_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_CONSUMER_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_CONSUMER_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_CONSUMER_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_CONSUMER_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_CONSUMER_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_CONSUMER_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 442 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring0_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 442 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING0_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 443 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring1_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 443 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING1_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 444 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring2_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 444 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING2_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 445 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring3_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 445 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING3_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 446 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring4_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 446 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING4_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 447 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring5_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 447 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING5_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 448 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring6_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 448 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING6_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_comp_cnt        */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_comp_cnt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 449 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_ring7_comp_cnt.fld     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 449 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_COMP_CNT_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_COMP_CNT_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_COMP_CNT_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_COMP_CNT_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_COMP_CNT_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_COMP_CNT_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_COMP_CNT_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_COMP_CNT_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_RING7_COMP_CNT_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_status                */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_status            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 450 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_status.fld             */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 450 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_STATUS_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_STATUS_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_STATUS_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_STATUS_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_STATUS_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_STATUS_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_STATUS_FLD_GET(x) ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_STATUS_FLD_SET(x) ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_STATUS_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_error_idx             */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_error_idx         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 451 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_error_idx.fld          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 451 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_IDX_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_IDX_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_IDX_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_IDX_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_IDX_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_IDX_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_IDX_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_IDX_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_IDX_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_error_queue           */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_error_queue       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 452 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_error_queue.fld        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 452 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_QUEUE_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_QUEUE_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_QUEUE_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_QUEUE_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_QUEUE_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_QUEUE_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_QUEUE_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_QUEUE_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_ERROR_QUEUE_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_stream            */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_stream        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 453 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_stream.fld         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 453 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_STREAM_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_STREAM_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_STREAM_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_STREAM_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_STREAM_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_STREAM_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_STREAM_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_STREAM_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_STREAM_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm1              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm1          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 454 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm1.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 454 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM1_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM1_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM1_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM1_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM1_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM1_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM1_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM1_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM1_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm2              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm2          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 455 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm2.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 455 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM2_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM2_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM2_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM2_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM2_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM2_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM2_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM2_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM2_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm3              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm3          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 456 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm3.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 456 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM3_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM3_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM3_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM3_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM3_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM3_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM3_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM3_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM3_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm4              */
/* Register template: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm4          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 457 */
/* Field member: elb_hese_csr::dhs_crypto_ctl::sym3_dbg_fsm4.fld           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 457 */
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM4_FLD_MSB 31
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM4_FLD_LSB 0
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM4_FLD_WIDTH 32
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM4_FLD_READ_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM4_FLD_WRITE_ACCESS 1
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM4_FLD_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM4_FLD_GET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM4_FLD_SET(x) \
   ((x) & 0xffffffff)
#define ELB_HESE_CSR_DHS_CRYPTO_CTL_SYM3_DBG_FSM4_FLD_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_hese_csr::cfg_he_ctl                                 */
/* Register template: elb_hese_csr::cfg_he_ctl                             */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 463 */
/* Field member: elb_hese_csr::cfg_he_ctl.hsm_mode                         */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 13 */
#define ELB_HESE_CSR_CFG_HE_CTL_HSM_MODE_MSB 7
#define ELB_HESE_CSR_CFG_HE_CTL_HSM_MODE_LSB 0
#define ELB_HESE_CSR_CFG_HE_CTL_HSM_MODE_WIDTH 8
#define ELB_HESE_CSR_CFG_HE_CTL_HSM_MODE_READ_ACCESS 1
#define ELB_HESE_CSR_CFG_HE_CTL_HSM_MODE_WRITE_ACCESS 1
#define ELB_HESE_CSR_CFG_HE_CTL_HSM_MODE_RESET 0x00
#define ELB_HESE_CSR_CFG_HE_CTL_HSM_MODE_FIELD_MASK 0x000000ff
#define ELB_HESE_CSR_CFG_HE_CTL_HSM_MODE_GET(x) ((x) & 0x000000ff)
#define ELB_HESE_CSR_CFG_HE_CTL_HSM_MODE_SET(x) ((x) & 0x000000ff)
#define ELB_HESE_CSR_CFG_HE_CTL_HSM_MODE_MODIFY(r, x) \
   (((x) & 0x000000ff) | ((r) & 0xffffff00))

/* Register type: elb_hese_csr::csr_intr                                   */
/* Register template: elb_hese_csr::csr_intr                               */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 578 */
/* Field member: elb_hese_csr::csr_intr.dowstream_enable                   */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 233 */
#define ELB_HESE_CSR_CSR_INTR_DOWSTREAM_ENABLE_MSB 1
#define ELB_HESE_CSR_CSR_INTR_DOWSTREAM_ENABLE_LSB 1
#define ELB_HESE_CSR_CSR_INTR_DOWSTREAM_ENABLE_WIDTH 1
#define ELB_HESE_CSR_CSR_INTR_DOWSTREAM_ENABLE_READ_ACCESS 1
#define ELB_HESE_CSR_CSR_INTR_DOWSTREAM_ENABLE_WRITE_ACCESS 1
#define ELB_HESE_CSR_CSR_INTR_DOWSTREAM_ENABLE_RESET 0x0
#define ELB_HESE_CSR_CSR_INTR_DOWSTREAM_ENABLE_FIELD_MASK 0x00000002
#define ELB_HESE_CSR_CSR_INTR_DOWSTREAM_ENABLE_GET(x) \
   (((x) & 0x00000002) >> 1)
#define ELB_HESE_CSR_CSR_INTR_DOWSTREAM_ENABLE_SET(x) \
   (((x) << 1) & 0x00000002)
#define ELB_HESE_CSR_CSR_INTR_DOWSTREAM_ENABLE_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002) | ((r) & 0xfffffffd))
/* Field member: elb_hese_csr::csr_intr.dowstream                          */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 242 */
#define ELB_HESE_CSR_CSR_INTR_DOWSTREAM_MSB 0
#define ELB_HESE_CSR_CSR_INTR_DOWSTREAM_LSB 0
#define ELB_HESE_CSR_CSR_INTR_DOWSTREAM_WIDTH 1
#define ELB_HESE_CSR_CSR_INTR_DOWSTREAM_READ_ACCESS 1
#define ELB_HESE_CSR_CSR_INTR_DOWSTREAM_WRITE_ACCESS 0
#define ELB_HESE_CSR_CSR_INTR_DOWSTREAM_FIELD_MASK 0x00000001
#define ELB_HESE_CSR_CSR_INTR_DOWSTREAM_GET(x) ((x) & 0x00000001)
#define ELB_HESE_CSR_CSR_INTR_DOWSTREAM_SET(x) ((x) & 0x00000001)
#define ELB_HESE_CSR_CSR_INTR_DOWSTREAM_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Group type: elb_hese_csr::int_groups                                    */
/* Group template: elb_hese_csr::intgrp_status                             */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 562 */
#define ELB_HESE_CSR_INT_GROUPS_SIZE 0x4
#define ELB_HESE_CSR_INT_GROUPS_BYTE_SIZE 0x10
/* Register member: elb_hese_csr::intgrp_status.intreg                     */
/* Register type referenced: elb_hese_csr::int_groups::intreg              */
/* Register template referenced: elb_hese_csr::intreg_status               */
#define ELB_HESE_CSR_INT_GROUPS_INTREG_OFFSET 0x0
#define ELB_HESE_CSR_INT_GROUPS_INTREG_BYTE_OFFSET 0x0
#define ELB_HESE_CSR_INT_GROUPS_INTREG_READ_ACCESS 1
#define ELB_HESE_CSR_INT_GROUPS_INTREG_WRITE_ACCESS 0
#define ELB_HESE_CSR_INT_GROUPS_INTREG_RESET_VALUE 0x00000000
#define ELB_HESE_CSR_INT_GROUPS_INTREG_RESET_MASK 0xfffffffe
#define ELB_HESE_CSR_INT_GROUPS_INTREG_READ_MASK 0xffffffff
#define ELB_HESE_CSR_INT_GROUPS_INTREG_WRITE_MASK 0x00000000
/* Register member: elb_hese_csr::intgrp_status.int_enable_rw_reg          */
/* Register type referenced: elb_hese_csr::int_groups::int_enable_rw_reg   */
/* Register template referenced: elb_hese_csr::intreg_enable               */
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_OFFSET 0x1
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_BYTE_OFFSET 0x4
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_READ_ACCESS 1
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_WRITE_ACCESS 1
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_RESET_VALUE 0x00000001
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_RESET_MASK 0xffffffff
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_READ_MASK 0xffffffff
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_WRITE_MASK 0x00000001
/* Register member: elb_hese_csr::intgrp_status.int_rw_reg                 */
/* Register type referenced: elb_hese_csr::int_groups::int_rw_reg          */
/* Register template referenced: elb_hese_csr::intreg_status               */
#define ELB_HESE_CSR_INT_GROUPS_INT_RW_REG_OFFSET 0x2
#define ELB_HESE_CSR_INT_GROUPS_INT_RW_REG_BYTE_OFFSET 0x8
#define ELB_HESE_CSR_INT_GROUPS_INT_RW_REG_READ_ACCESS 1
#define ELB_HESE_CSR_INT_GROUPS_INT_RW_REG_WRITE_ACCESS 0
#define ELB_HESE_CSR_INT_GROUPS_INT_RW_REG_RESET_VALUE 0x00000000
#define ELB_HESE_CSR_INT_GROUPS_INT_RW_REG_RESET_MASK 0xfffffffe
#define ELB_HESE_CSR_INT_GROUPS_INT_RW_REG_READ_MASK 0xffffffff
#define ELB_HESE_CSR_INT_GROUPS_INT_RW_REG_WRITE_MASK 0x00000000

/* Register type: elb_hese_csr::int_groups::intreg                         */
/* Register template: elb_hese_csr::intreg_status                          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 512 */
/* Field member: elb_hese_csr::intreg_status.int_invf_interrupt            */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 242 */
#define ELB_HESE_CSR_INT_GROUPS_INTREG_INT_INVF_INTERRUPT_MSB 0
#define ELB_HESE_CSR_INT_GROUPS_INTREG_INT_INVF_INTERRUPT_LSB 0
#define ELB_HESE_CSR_INT_GROUPS_INTREG_INT_INVF_INTERRUPT_WIDTH 1
#define ELB_HESE_CSR_INT_GROUPS_INTREG_INT_INVF_INTERRUPT_READ_ACCESS 1
#define ELB_HESE_CSR_INT_GROUPS_INTREG_INT_INVF_INTERRUPT_WRITE_ACCESS 0
#define ELB_HESE_CSR_INT_GROUPS_INTREG_INT_INVF_INTERRUPT_FIELD_MASK 0x00000001
#define ELB_HESE_CSR_INT_GROUPS_INTREG_INT_INVF_INTERRUPT_GET(x) \
   ((x) & 0x00000001)
#define ELB_HESE_CSR_INT_GROUPS_INTREG_INT_INVF_INTERRUPT_SET(x) \
   ((x) & 0x00000001)
#define ELB_HESE_CSR_INT_GROUPS_INTREG_INT_INVF_INTERRUPT_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Register type: elb_hese_csr::int_groups::int_enable_rw_reg              */
/* Register template: elb_hese_csr::intreg_enable                          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 500 */
/* Field member: elb_hese_csr::intreg_enable.int_invf_enable               */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 233 */
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_INVF_ENABLE_MSB 0
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_INVF_ENABLE_LSB 0
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_INVF_ENABLE_WIDTH 1
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_INVF_ENABLE_READ_ACCESS 1
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_INVF_ENABLE_WRITE_ACCESS 1
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_INVF_ENABLE_RESET 0x1
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_INVF_ENABLE_FIELD_MASK 0x00000001
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_INVF_ENABLE_GET(x) \
   ((x) & 0x00000001)
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_INVF_ENABLE_SET(x) \
   ((x) & 0x00000001)
#define ELB_HESE_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_INVF_ENABLE_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Register type: elb_hese_csr::int_groups::int_rw_reg                     */
/* Register template: elb_hese_csr::intreg_status                          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 512 */
/* Field member: elb_hese_csr::intreg_status.int_invf_interrupt            */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 242 */
#define ELB_HESE_CSR_INT_GROUPS_INT_RW_REG_INT_INVF_INTERRUPT_MSB 0
#define ELB_HESE_CSR_INT_GROUPS_INT_RW_REG_INT_INVF_INTERRUPT_LSB 0
#define ELB_HESE_CSR_INT_GROUPS_INT_RW_REG_INT_INVF_INTERRUPT_WIDTH 1
#define ELB_HESE_CSR_INT_GROUPS_INT_RW_REG_INT_INVF_INTERRUPT_READ_ACCESS 1
#define ELB_HESE_CSR_INT_GROUPS_INT_RW_REG_INT_INVF_INTERRUPT_WRITE_ACCESS 0
#define ELB_HESE_CSR_INT_GROUPS_INT_RW_REG_INT_INVF_INTERRUPT_FIELD_MASK 0x00000001
#define ELB_HESE_CSR_INT_GROUPS_INT_RW_REG_INT_INVF_INTERRUPT_GET(x) \
   ((x) & 0x00000001)
#define ELB_HESE_CSR_INT_GROUPS_INT_RW_REG_INT_INVF_INTERRUPT_SET(x) \
   ((x) & 0x00000001)
#define ELB_HESE_CSR_INT_GROUPS_INT_RW_REG_INT_INVF_INTERRUPT_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Group type: elb_hese_csr::int_invf                                      */
/* Group template: elb_hese_csr::intgrp                                    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 541 */
#define ELB_HESE_CSR_INT_INVF_SIZE 0x4
#define ELB_HESE_CSR_INT_INVF_BYTE_SIZE 0x10
/* Register member: elb_hese_csr::intgrp.intreg                            */
/* Register type referenced: elb_hese_csr::int_invf::intreg                */
/* Register template referenced: elb_hese_csr::intreg                      */
#define ELB_HESE_CSR_INT_INVF_INTREG_OFFSET 0x0
#define ELB_HESE_CSR_INT_INVF_INTREG_BYTE_OFFSET 0x0
#define ELB_HESE_CSR_INT_INVF_INTREG_READ_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INTREG_WRITE_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INTREG_RESET_VALUE 0x00000000
#define ELB_HESE_CSR_INT_INVF_INTREG_RESET_MASK 0xffffffff
#define ELB_HESE_CSR_INT_INVF_INTREG_READ_MASK 0xffffffff
#define ELB_HESE_CSR_INT_INVF_INTREG_WRITE_MASK 0x00000003
/* Register member: elb_hese_csr::intgrp.int_test_set                      */
/* Register type referenced: elb_hese_csr::int_invf::int_test_set          */
/* Register template referenced: elb_hese_csr::intreg                      */
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_OFFSET 0x1
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_BYTE_OFFSET 0x4
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_READ_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_WRITE_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_RESET_VALUE 0x00000000
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_RESET_MASK 0xffffffff
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_READ_MASK 0xffffffff
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_WRITE_MASK 0x00000003
/* Register member: elb_hese_csr::intgrp.int_enable_set                    */
/* Register type referenced: elb_hese_csr::int_invf::int_enable_set        */
/* Register template referenced: elb_hese_csr::intreg_enable               */
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_OFFSET 0x2
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_BYTE_OFFSET 0x8
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_READ_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_WRITE_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_RESET_VALUE 0x00000003
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_RESET_MASK 0xffffffff
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_READ_MASK 0xffffffff
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_WRITE_MASK 0x00000003
/* Register member: elb_hese_csr::intgrp.int_enable_clear                  */
/* Register type referenced: elb_hese_csr::int_invf::int_enable_clear      */
/* Register template referenced: elb_hese_csr::intreg_enable               */
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_OFFSET 0x3
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_BYTE_OFFSET 0xc
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_READ_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_WRITE_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_RESET_VALUE 0x00000003
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_RESET_MASK 0xffffffff
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_READ_MASK 0xffffffff
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_WRITE_MASK 0x00000003

/* Register type: elb_hese_csr::int_invf::intreg                           */
/* Register template: elb_hese_csr::intreg                                 */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 477 */
/* Field member: elb_hese_csr::intreg.invf1_interrupt                      */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 220 */
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF1_INTERRUPT_MSB 1
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF1_INTERRUPT_LSB 1
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF1_INTERRUPT_WIDTH 1
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF1_INTERRUPT_READ_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF1_INTERRUPT_WRITE_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF1_INTERRUPT_RESET 0x0
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF1_INTERRUPT_FIELD_MASK 0x00000002
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF1_INTERRUPT_GET(x) \
   (((x) & 0x00000002) >> 1)
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF1_INTERRUPT_SET(x) \
   (((x) << 1) & 0x00000002)
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF1_INTERRUPT_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002) | ((r) & 0xfffffffd))
/* Field member: elb_hese_csr::intreg.invf0_interrupt                      */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 220 */
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF0_INTERRUPT_MSB 0
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF0_INTERRUPT_LSB 0
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF0_INTERRUPT_WIDTH 1
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF0_INTERRUPT_READ_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF0_INTERRUPT_WRITE_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF0_INTERRUPT_RESET 0x0
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF0_INTERRUPT_FIELD_MASK 0x00000001
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF0_INTERRUPT_GET(x) \
   ((x) & 0x00000001)
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF0_INTERRUPT_SET(x) \
   ((x) & 0x00000001)
#define ELB_HESE_CSR_INT_INVF_INTREG_INVF0_INTERRUPT_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Register type: elb_hese_csr::int_invf::int_test_set                     */
/* Register template: elb_hese_csr::intreg                                 */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 477 */
/* Field member: elb_hese_csr::intreg.invf1_interrupt                      */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 220 */
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF1_INTERRUPT_MSB 1
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF1_INTERRUPT_LSB 1
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF1_INTERRUPT_WIDTH 1
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF1_INTERRUPT_READ_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF1_INTERRUPT_WRITE_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF1_INTERRUPT_RESET 0x0
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF1_INTERRUPT_FIELD_MASK 0x00000002
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF1_INTERRUPT_GET(x) \
   (((x) & 0x00000002) >> 1)
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF1_INTERRUPT_SET(x) \
   (((x) << 1) & 0x00000002)
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF1_INTERRUPT_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002) | ((r) & 0xfffffffd))
/* Field member: elb_hese_csr::intreg.invf0_interrupt                      */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 220 */
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF0_INTERRUPT_MSB 0
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF0_INTERRUPT_LSB 0
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF0_INTERRUPT_WIDTH 1
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF0_INTERRUPT_READ_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF0_INTERRUPT_WRITE_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF0_INTERRUPT_RESET 0x0
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF0_INTERRUPT_FIELD_MASK 0x00000001
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF0_INTERRUPT_GET(x) \
   ((x) & 0x00000001)
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF0_INTERRUPT_SET(x) \
   ((x) & 0x00000001)
#define ELB_HESE_CSR_INT_INVF_INT_TEST_SET_INVF0_INTERRUPT_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Register type: elb_hese_csr::int_invf::int_enable_set                   */
/* Register template: elb_hese_csr::intreg_enable                          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 500 */
/* Field member: elb_hese_csr::intreg_enable.invf1_enable                  */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 233 */
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF1_ENABLE_MSB 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF1_ENABLE_LSB 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF1_ENABLE_WIDTH 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF1_ENABLE_READ_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF1_ENABLE_WRITE_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF1_ENABLE_RESET 0x1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF1_ENABLE_FIELD_MASK 0x00000002
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF1_ENABLE_GET(x) \
   (((x) & 0x00000002) >> 1)
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF1_ENABLE_SET(x) \
   (((x) << 1) & 0x00000002)
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF1_ENABLE_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002) | ((r) & 0xfffffffd))
/* Field member: elb_hese_csr::intreg_enable.invf0_enable                  */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 233 */
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF0_ENABLE_MSB 0
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF0_ENABLE_LSB 0
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF0_ENABLE_WIDTH 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF0_ENABLE_READ_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF0_ENABLE_WRITE_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF0_ENABLE_RESET 0x1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF0_ENABLE_FIELD_MASK 0x00000001
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF0_ENABLE_GET(x) \
   ((x) & 0x00000001)
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF0_ENABLE_SET(x) \
   ((x) & 0x00000001)
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_SET_INVF0_ENABLE_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Register type: elb_hese_csr::int_invf::int_enable_clear                 */
/* Register template: elb_hese_csr::intreg_enable                          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 500 */
/* Field member: elb_hese_csr::intreg_enable.invf1_enable                  */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 233 */
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF1_ENABLE_MSB 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF1_ENABLE_LSB 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF1_ENABLE_WIDTH 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF1_ENABLE_READ_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF1_ENABLE_WRITE_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF1_ENABLE_RESET 0x1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF1_ENABLE_FIELD_MASK 0x00000002
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF1_ENABLE_GET(x) \
   (((x) & 0x00000002) >> 1)
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF1_ENABLE_SET(x) \
   (((x) << 1) & 0x00000002)
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF1_ENABLE_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002) | ((r) & 0xfffffffd))
/* Field member: elb_hese_csr::intreg_enable.invf0_enable                  */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 233 */
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF0_ENABLE_MSB 0
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF0_ENABLE_LSB 0
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF0_ENABLE_WIDTH 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF0_ENABLE_READ_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF0_ENABLE_WRITE_ACCESS 1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF0_ENABLE_RESET 0x1
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF0_ENABLE_FIELD_MASK 0x00000001
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF0_ENABLE_GET(x) \
   ((x) & 0x00000001)
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF0_ENABLE_SET(x) \
   ((x) & 0x00000001)
#define ELB_HESE_CSR_INT_INVF_INT_ENABLE_CLEAR_INVF0_ENABLE_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Addressmap type: elb_mdinvf_csr                                         */
/* Addressmap template: elb_mdinvf_csr                                     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr, line: 2 */
#define ELB_MDINVF_CSR_SIZE 0x800
#define ELB_MDINVF_CSR_BYTE_SIZE 0x2000
/* Register member: elb_mdinvf_csr.cfg_sameid_log                          */
/* Register type referenced: elb_mdinvf_csr::cfg_sameid_log                */
/* Register template referenced: elb_mdinvf_csr::cfg_sameid_log            */
#define ELB_MDINVF_CSR_CFG_SAMEID_LOG_OFFSET 0x0
#define ELB_MDINVF_CSR_CFG_SAMEID_LOG_BYTE_OFFSET 0x0
#define ELB_MDINVF_CSR_CFG_SAMEID_LOG_READ_ACCESS 1
#define ELB_MDINVF_CSR_CFG_SAMEID_LOG_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_CFG_SAMEID_LOG_RESET_VALUE 0x00000001
#define ELB_MDINVF_CSR_CFG_SAMEID_LOG_RESET_MASK 0xffffffff
#define ELB_MDINVF_CSR_CFG_SAMEID_LOG_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_CFG_SAMEID_LOG_WRITE_MASK 0x00000001
/* Memory member: elb_mdinvf_csr.STA_aw_log_cam                            */
/* Memory type referenced: elb_mdinvf_csr::STA_aw_log_cam                  */
/* Memory template referenced: elb_mdinvf_csr::STA_aw_log_cam              */
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_OFFSET 0x100
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_BYTE_OFFSET 0x400
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_READ_MASK 0x3fffff
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_WRITE_MASK 0x000000
/* Memory member: elb_mdinvf_csr.STA_ar_log_cam                            */
/* Memory type referenced: elb_mdinvf_csr::STA_ar_log_cam                  */
/* Memory template referenced: elb_mdinvf_csr::STA_ar_log_cam              */
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_OFFSET 0x200
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_BYTE_OFFSET 0x800
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_READ_MASK 0x3fffff
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_WRITE_MASK 0x000000
/* Memory member: elb_mdinvf_csr.filter_addr_lo                            */
/* Memory type referenced: elb_mdinvf_csr::filter_addr_lo                  */
/* Memory template referenced: elb_mdinvf_csr::filter_addr_lo              */
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_OFFSET 0x300
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_BYTE_OFFSET 0xc00
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_READ_MASK 0x7fffffff
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_WRITE_MASK 0x7fffffff
/* Memory member: elb_mdinvf_csr.filter_addr_hi                            */
/* Memory type referenced: elb_mdinvf_csr::filter_addr_hi                  */
/* Memory template referenced: elb_mdinvf_csr::filter_addr_hi              */
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_OFFSET 0x340
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_BYTE_OFFSET 0xd00
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_READ_MASK 0x7fffffff
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_WRITE_MASK 0x7fffffff
/* Memory member: elb_mdinvf_csr.filter_addr_host                          */
/* Memory type referenced: elb_mdinvf_csr::filter_addr_host                */
/* Memory template referenced: elb_mdinvf_csr::filter_addr_host            */
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_OFFSET 0x380
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_BYTE_OFFSET 0xe00
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_READ_MASK 0x3
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_WRITE_MASK 0x3
/* Memory member: elb_mdinvf_csr.filter_addr_pic                           */
/* Memory type referenced: elb_mdinvf_csr::filter_addr_pic                 */
/* Memory template referenced: elb_mdinvf_csr::filter_addr_pic             */
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_OFFSET 0x3c0
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_BYTE_OFFSET 0xf00
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_READ_MASK 0x3
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_WRITE_MASK 0x3
/* Memory member: elb_mdinvf_csr.filter_addr_lif                           */
/* Memory type referenced: elb_mdinvf_csr::filter_addr_lif                 */
/* Memory template referenced: elb_mdinvf_csr::filter_addr_lif             */
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_OFFSET 0x400
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_BYTE_OFFSET 0x1000
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_READ_MASK 0x3fffff
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_WRITE_MASK 0x3fffff
/* Memory member: elb_mdinvf_csr.filter_src                                */
/* Memory type referenced: elb_mdinvf_csr::filter_src                      */
/* Memory template referenced: elb_mdinvf_csr::filter_src                  */
#define ELB_MDINVF_CSR_FILTER_SRC_OFFSET 0x440
#define ELB_MDINVF_CSR_FILTER_SRC_BYTE_OFFSET 0x1100
#define ELB_MDINVF_CSR_FILTER_SRC_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_SRC_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_SRC_READ_MASK 0x3ffffff
#define ELB_MDINVF_CSR_FILTER_SRC_WRITE_MASK 0x3ffffff
/* Memory member: elb_mdinvf_csr.filter_axi_prot                           */
/* Memory type referenced: elb_mdinvf_csr::filter_axi_prot                 */
/* Memory template referenced: elb_mdinvf_csr::filter_axi_prot             */
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_OFFSET 0x480
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_BYTE_OFFSET 0x1200
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_READ_MASK 0xfffff
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_WRITE_MASK 0xfffff
/* Memory member: elb_mdinvf_csr.filter_axi_cache                          */
/* Memory type referenced: elb_mdinvf_csr::filter_axi_cache                */
/* Memory template referenced: elb_mdinvf_csr::filter_axi_cache            */
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_OFFSET 0x4c0
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_BYTE_OFFSET 0x1300
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_READ_MASK 0x3ffffff
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_WRITE_MASK 0x3ffffff
/* Memory member: elb_mdinvf_csr.filter_acp                                */
/* Memory type referenced: elb_mdinvf_csr::filter_acp                      */
/* Memory template referenced: elb_mdinvf_csr::filter_acp                  */
#define ELB_MDINVF_CSR_FILTER_ACP_OFFSET 0x500
#define ELB_MDINVF_CSR_FILTER_ACP_BYTE_OFFSET 0x1400
#define ELB_MDINVF_CSR_FILTER_ACP_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ACP_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ACP_READ_MASK 0x3ff
#define ELB_MDINVF_CSR_FILTER_ACP_WRITE_MASK 0x3ff
/* Memory member: elb_mdinvf_csr.filter_addr_ctl                           */
/* Memory type referenced: elb_mdinvf_csr::filter_addr_ctl                 */
/* Memory template referenced: elb_mdinvf_csr::filter_addr_ctl             */
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_OFFSET 0x540
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_BYTE_OFFSET 0x1500
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_READ_MASK 0x3fff
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_WRITE_MASK 0x3fff
/* Register member: elb_mdinvf_csr.filter_freeze_ctl                       */
/* Register type referenced: elb_mdinvf_csr::filter_freeze_ctl             */
/* Register template referenced: elb_mdinvf_csr::filter_freeze_ctl         */
#define ELB_MDINVF_CSR_FILTER_FREEZE_CTL_OFFSET 0x580
#define ELB_MDINVF_CSR_FILTER_FREEZE_CTL_BYTE_OFFSET 0x1600
#define ELB_MDINVF_CSR_FILTER_FREEZE_CTL_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_FREEZE_CTL_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_FREEZE_CTL_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_FILTER_FREEZE_CTL_RESET_MASK 0xffffffff
#define ELB_MDINVF_CSR_FILTER_FREEZE_CTL_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_FILTER_FREEZE_CTL_WRITE_MASK 0x00000001
/* Memory member: elb_mdinvf_csr.filter_hit_count                          */
/* Memory type referenced: elb_mdinvf_csr::filter_hit_count                */
/* Memory template referenced: elb_mdinvf_csr::filter_hit_count            */
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_OFFSET 0x5c0
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_BYTE_OFFSET 0x1700
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_WRITE_MASK 0xffffffff
/* Register member: elb_mdinvf_csr.CNT_read_deny                           */
/* Register type referenced: elb_mdinvf_csr::CNT_read_deny                 */
/* Register template referenced: elb_mdinvf_csr::CNT_read_deny             */
#define ELB_MDINVF_CSR_CNT_READ_DENY_OFFSET 0x600
#define ELB_MDINVF_CSR_CNT_READ_DENY_BYTE_OFFSET 0x1800
#define ELB_MDINVF_CSR_CNT_READ_DENY_READ_ACCESS 1
#define ELB_MDINVF_CSR_CNT_READ_DENY_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_CNT_READ_DENY_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_CNT_READ_DENY_RESET_MASK 0xffffffff
#define ELB_MDINVF_CSR_CNT_READ_DENY_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_CNT_READ_DENY_WRITE_MASK 0x0000ffff
/* Register member: elb_mdinvf_csr.CNT_write_deny                          */
/* Register type referenced: elb_mdinvf_csr::CNT_write_deny                */
/* Register template referenced: elb_mdinvf_csr::CNT_write_deny            */
#define ELB_MDINVF_CSR_CNT_WRITE_DENY_OFFSET 0x601
#define ELB_MDINVF_CSR_CNT_WRITE_DENY_BYTE_OFFSET 0x1804
#define ELB_MDINVF_CSR_CNT_WRITE_DENY_READ_ACCESS 1
#define ELB_MDINVF_CSR_CNT_WRITE_DENY_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_CNT_WRITE_DENY_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_CNT_WRITE_DENY_RESET_MASK 0xffffffff
#define ELB_MDINVF_CSR_CNT_WRITE_DENY_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_CNT_WRITE_DENY_WRITE_MASK 0x0000ffff
/* Register member: elb_mdinvf_csr.CFG_clear_filter                        */
/* Register type referenced: elb_mdinvf_csr::CFG_clear_filter              */
/* Register template referenced: elb_mdinvf_csr::CFG_clear_filter          */
#define ELB_MDINVF_CSR_CFG_CLEAR_FILTER_OFFSET 0x602
#define ELB_MDINVF_CSR_CFG_CLEAR_FILTER_BYTE_OFFSET 0x1808
#define ELB_MDINVF_CSR_CFG_CLEAR_FILTER_READ_ACCESS 1
#define ELB_MDINVF_CSR_CFG_CLEAR_FILTER_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_CFG_CLEAR_FILTER_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_CFG_CLEAR_FILTER_RESET_MASK 0xffffffff
#define ELB_MDINVF_CSR_CFG_CLEAR_FILTER_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_CFG_CLEAR_FILTER_WRITE_MASK 0x00000001
/* Register member: elb_mdinvf_csr.STA_write_deny                          */
/* Register type referenced: elb_mdinvf_csr::STA_write_deny                */
/* Register template referenced: elb_mdinvf_csr::STA_write_deny            */
#define ELB_MDINVF_CSR_STA_WRITE_DENY_OFFSET 0x603
#define ELB_MDINVF_CSR_STA_WRITE_DENY_BYTE_OFFSET 0x180c
#define ELB_MDINVF_CSR_STA_WRITE_DENY_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_WRITE_DENY_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_WRITE_DENY_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_STA_WRITE_DENY_WRITE_MASK 0x00000000
/* Register member: elb_mdinvf_csr.STA_read_deny                           */
/* Register type referenced: elb_mdinvf_csr::STA_read_deny                 */
/* Register template referenced: elb_mdinvf_csr::STA_read_deny             */
#define ELB_MDINVF_CSR_STA_READ_DENY_OFFSET 0x604
#define ELB_MDINVF_CSR_STA_READ_DENY_BYTE_OFFSET 0x1810
#define ELB_MDINVF_CSR_STA_READ_DENY_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_READ_DENY_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_READ_DENY_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_STA_READ_DENY_WRITE_MASK 0x00000000
/* Register member: elb_mdinvf_csr.STA_reads                               */
/* Register type referenced: elb_mdinvf_csr::STA_reads                     */
/* Register template referenced: elb_mdinvf_csr::STA_reads                 */
#define ELB_MDINVF_CSR_STA_READS_OFFSET 0x605
#define ELB_MDINVF_CSR_STA_READS_BYTE_OFFSET 0x1814
#define ELB_MDINVF_CSR_STA_READS_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_READS_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_READS_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_STA_READS_RESET_MASK 0xffffff00
#define ELB_MDINVF_CSR_STA_READS_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_STA_READS_WRITE_MASK 0x00000000
/* Register member: elb_mdinvf_csr.STA_writes                              */
/* Register type referenced: elb_mdinvf_csr::STA_writes                    */
/* Register template referenced: elb_mdinvf_csr::STA_writes                */
#define ELB_MDINVF_CSR_STA_WRITES_OFFSET 0x606
#define ELB_MDINVF_CSR_STA_WRITES_BYTE_OFFSET 0x1818
#define ELB_MDINVF_CSR_STA_WRITES_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_WRITES_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_WRITES_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_STA_WRITES_RESET_MASK 0xffffff00
#define ELB_MDINVF_CSR_STA_WRITES_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_STA_WRITES_WRITE_MASK 0x00000000
/* Wide Register member: elb_mdinvf_csr.STA_freeze                         */
/* Wide Register type referenced: elb_mdinvf_csr::STA_freeze               */
/* Wide Register template referenced: elb_mdinvf_csr::STA_freeze           */
#define ELB_MDINVF_CSR_STA_FREEZE_OFFSET 0x608
#define ELB_MDINVF_CSR_STA_FREEZE_BYTE_OFFSET 0x1820
#define ELB_MDINVF_CSR_STA_FREEZE_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_FREEZE_WRITE_ACCESS 0
/* Register member: elb_mdinvf_csr::STA_freeze.STA_freeze_0_3              */
/* Register type referenced: elb_mdinvf_csr::STA_freeze::STA_freeze_0_3    */
/* Register template referenced: elb_mdinvf_csr::STA_freeze::STA_freeze_0_3 */
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_OFFSET 0x608
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_BYTE_OFFSET 0x1820
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_WRITE_MASK 0x00000000
/* Register member: elb_mdinvf_csr::STA_freeze.STA_freeze_1_3              */
/* Register type referenced: elb_mdinvf_csr::STA_freeze::STA_freeze_1_3    */
/* Register template referenced: elb_mdinvf_csr::STA_freeze::STA_freeze_1_3 */
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_1_3_OFFSET 0x609
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_1_3_BYTE_OFFSET 0x1824
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_1_3_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_1_3_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_1_3_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_1_3_WRITE_MASK 0x00000000
/* Register member: elb_mdinvf_csr::STA_freeze.STA_freeze_2_3              */
/* Register type referenced: elb_mdinvf_csr::STA_freeze::STA_freeze_2_3    */
/* Register template referenced: elb_mdinvf_csr::STA_freeze::STA_freeze_2_3 */
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_2_3_OFFSET 0x60a
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_2_3_BYTE_OFFSET 0x1828
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_2_3_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_2_3_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_2_3_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_2_3_RESET_MASK 0xfffffff8
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_2_3_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_2_3_WRITE_MASK 0x00000000
/* Wide Register member: elb_mdinvf_csr.STA_interrupt                      */
/* Wide Register type referenced: elb_mdinvf_csr::STA_interrupt            */
/* Wide Register template referenced: elb_mdinvf_csr::STA_interrupt        */
#define ELB_MDINVF_CSR_STA_INTERRUPT_OFFSET 0x60c
#define ELB_MDINVF_CSR_STA_INTERRUPT_BYTE_OFFSET 0x1830
#define ELB_MDINVF_CSR_STA_INTERRUPT_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_INTERRUPT_WRITE_ACCESS 0
/* Register member: elb_mdinvf_csr::STA_interrupt.STA_interrupt_0_3        */
/* Register type referenced: elb_mdinvf_csr::STA_interrupt::STA_interrupt_0_3 */
/* Register template referenced: elb_mdinvf_csr::STA_interrupt::STA_interrupt_0_3 */
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_OFFSET 0x60c
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_BYTE_OFFSET 0x1830
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_WRITE_MASK 0x00000000
/* Register member: elb_mdinvf_csr::STA_interrupt.STA_interrupt_1_3        */
/* Register type referenced: elb_mdinvf_csr::STA_interrupt::STA_interrupt_1_3 */
/* Register template referenced: elb_mdinvf_csr::STA_interrupt::STA_interrupt_1_3 */
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_1_3_OFFSET 0x60d
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_1_3_BYTE_OFFSET 0x1834
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_1_3_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_1_3_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_1_3_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_1_3_WRITE_MASK 0x00000000
/* Register member: elb_mdinvf_csr::STA_interrupt.STA_interrupt_2_3        */
/* Register type referenced: elb_mdinvf_csr::STA_interrupt::STA_interrupt_2_3 */
/* Register template referenced: elb_mdinvf_csr::STA_interrupt::STA_interrupt_2_3 */
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_2_3_OFFSET 0x60e
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_2_3_BYTE_OFFSET 0x1838
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_2_3_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_2_3_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_2_3_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_2_3_RESET_MASK 0xfffffffc
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_2_3_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_2_3_WRITE_MASK 0x00000000
/* Wide Register member: elb_mdinvf_csr.filter_trace                       */
/* Wide Register type referenced: elb_mdinvf_csr::filter_trace             */
/* Wide Register template referenced: elb_mdinvf_csr::filter_trace         */
#define ELB_MDINVF_CSR_FILTER_TRACE_OFFSET 0x610
#define ELB_MDINVF_CSR_FILTER_TRACE_BYTE_OFFSET 0x1840
#define ELB_MDINVF_CSR_FILTER_TRACE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_WRITE_ACCESS 1
/* Register member: elb_mdinvf_csr::filter_trace.filter_trace_0_3          */
/* Register type referenced: elb_mdinvf_csr::filter_trace::filter_trace_0_3 */
/* Register template referenced: elb_mdinvf_csr::filter_trace::filter_trace_0_3 */
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_OFFSET 0x610
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_BYTE_OFFSET 0x1840
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RESET_VALUE 0x000001e0
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RESET_MASK 0xffffffff
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_WRITE_MASK 0xffffffff
/* Register member: elb_mdinvf_csr::filter_trace.filter_trace_1_3          */
/* Register type referenced: elb_mdinvf_csr::filter_trace::filter_trace_1_3 */
/* Register template referenced: elb_mdinvf_csr::filter_trace::filter_trace_1_3 */
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_OFFSET 0x611
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BYTE_OFFSET 0x1844
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_RESET_MASK 0x00001fff
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_WRITE_MASK 0x00001fff
/* Register member: elb_mdinvf_csr::filter_trace.filter_trace_2_3          */
/* Register type referenced: elb_mdinvf_csr::filter_trace::filter_trace_2_3 */
/* Register template referenced: elb_mdinvf_csr::filter_trace::filter_trace_2_3 */
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_OFFSET 0x612
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_BYTE_OFFSET 0x1848
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_RESET_MASK 0xfffff000
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_WRITE_MASK 0x00000000
/* Register member: elb_mdinvf_csr.filter_timeout                          */
/* Register type referenced: elb_mdinvf_csr::filter_timeout                */
/* Register template referenced: elb_mdinvf_csr::filter_timeout            */
#define ELB_MDINVF_CSR_FILTER_TIMEOUT_OFFSET 0x614
#define ELB_MDINVF_CSR_FILTER_TIMEOUT_BYTE_OFFSET 0x1850
#define ELB_MDINVF_CSR_FILTER_TIMEOUT_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TIMEOUT_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TIMEOUT_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_FILTER_TIMEOUT_RESET_MASK 0xffffffff
#define ELB_MDINVF_CSR_FILTER_TIMEOUT_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_FILTER_TIMEOUT_WRITE_MASK 0x0000ffff
/* Register member: elb_mdinvf_csr.csr_intr                                */
/* Register type referenced: elb_mdinvf_csr::csr_intr                      */
/* Register template referenced: elb_mdinvf_csr::csr_intr                  */
#define ELB_MDINVF_CSR_CSR_INTR_OFFSET 0x615
#define ELB_MDINVF_CSR_CSR_INTR_BYTE_OFFSET 0x1854
#define ELB_MDINVF_CSR_CSR_INTR_READ_ACCESS 1
#define ELB_MDINVF_CSR_CSR_INTR_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_CSR_INTR_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_CSR_INTR_RESET_MASK 0xfffffffe
#define ELB_MDINVF_CSR_CSR_INTR_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_CSR_INTR_WRITE_MASK 0x00000002
/* Group member: elb_mdinvf_csr.int_groups                                 */
/* Group type referenced: elb_mdinvf_csr::int_groups                       */
/* Group template referenced: elb_mdinvf_csr::intgrp_status                */
#define ELB_MDINVF_CSR_INT_GROUPS_OFFSET 0x618
#define ELB_MDINVF_CSR_INT_GROUPS_BYTE_OFFSET 0x1860
#define ELB_MDINVF_CSR_INT_GROUPS_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_GROUPS_WRITE_ACCESS 1
/* Group member: elb_mdinvf_csr.int_filter                                 */
/* Group type referenced: elb_mdinvf_csr::int_filter                       */
/* Group template referenced: elb_mdinvf_csr::intgrp                       */
#define ELB_MDINVF_CSR_INT_FILTER_OFFSET 0x61c
#define ELB_MDINVF_CSR_INT_FILTER_BYTE_OFFSET 0x1870
#define ELB_MDINVF_CSR_INT_FILTER_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_WRITE_ACCESS 1

/* Register type: elb_mdinvf_csr::cfg_sameid_log                           */
/* Register template: elb_mdinvf_csr::cfg_sameid_log                       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr, line: 128 */
/* Field member: elb_mdinvf_csr::cfg_sameid_log.enable                     */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 13 */
#define ELB_MDINVF_CSR_CFG_SAMEID_LOG_ENABLE_MSB 0
#define ELB_MDINVF_CSR_CFG_SAMEID_LOG_ENABLE_LSB 0
#define ELB_MDINVF_CSR_CFG_SAMEID_LOG_ENABLE_WIDTH 1
#define ELB_MDINVF_CSR_CFG_SAMEID_LOG_ENABLE_READ_ACCESS 1
#define ELB_MDINVF_CSR_CFG_SAMEID_LOG_ENABLE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_CFG_SAMEID_LOG_ENABLE_RESET 0x1
#define ELB_MDINVF_CSR_CFG_SAMEID_LOG_ENABLE_FIELD_MASK 0x00000001
#define ELB_MDINVF_CSR_CFG_SAMEID_LOG_ENABLE_GET(x) ((x) & 0x00000001)
#define ELB_MDINVF_CSR_CFG_SAMEID_LOG_ENABLE_SET(x) ((x) & 0x00000001)
#define ELB_MDINVF_CSR_CFG_SAMEID_LOG_ENABLE_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Memory type: elb_mdinvf_csr::STA_aw_log_cam                             */
/* Memory template: elb_mdinvf_csr::STA_aw_log_cam                         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr, line: 134 */
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_SIZE 0x100
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_BYTE_SIZE 0x400
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_ENTRIES 0x81
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_MSB 21
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_LSB 0
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_WIDTH 22
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_MASK 0x003fffff
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_GET(x) ((x) & 0x003fffff)
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_SET(x) ((x) & 0x003fffff)
/* Register member: elb_mdinvf_csr::STA_aw_log_cam.entry                   */
/* Register type referenced: elb_mdinvf_csr::STA_aw_log_cam::entry         */
/* Register template referenced: elb_mdinvf_csr::STA_aw_log_cam::entry     */
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_ENTRY_OFFSET 0x0
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_ENTRY_BYTE_OFFSET 0x0
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_ENTRY_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_ENTRY_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_ENTRY_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_ENTRY_RESET_MASK 0xffc00000
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_ENTRY_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_ENTRY_WRITE_MASK 0x00000000

/* Register type: elb_mdinvf_csr::STA_aw_log_cam::entry                    */
/* Register template: elb_mdinvf_csr::STA_aw_log_cam::entry                */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr, line: 141 */
/* Field member: elb_mdinvf_csr::STA_aw_log_cam::entry.data                */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 74 */
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_ENTRY_DATA_MSB 21
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_ENTRY_DATA_LSB 0
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_ENTRY_DATA_WIDTH 22
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_ENTRY_DATA_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_ENTRY_DATA_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_ENTRY_DATA_FIELD_MASK 0x003fffff
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_ENTRY_DATA_GET(x) ((x) & 0x003fffff)
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_ENTRY_DATA_SET(x) ((x) & 0x003fffff)
#define ELB_MDINVF_CSR_STA_AW_LOG_CAM_ENTRY_DATA_MODIFY(r, x) \
   (((x) & 0x003fffff) | ((r) & 0xffc00000))

/* Memory type: elb_mdinvf_csr::STA_ar_log_cam                             */
/* Memory template: elb_mdinvf_csr::STA_ar_log_cam                         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr, line: 146 */
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_SIZE 0x100
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_BYTE_SIZE 0x400
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_ENTRIES 0x81
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_MSB 21
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_LSB 0
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_WIDTH 22
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_MASK 0x003fffff
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_GET(x) ((x) & 0x003fffff)
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_SET(x) ((x) & 0x003fffff)
/* Register member: elb_mdinvf_csr::STA_ar_log_cam.entry                   */
/* Register type referenced: elb_mdinvf_csr::STA_ar_log_cam::entry         */
/* Register template referenced: elb_mdinvf_csr::STA_ar_log_cam::entry     */
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_ENTRY_OFFSET 0x0
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_ENTRY_BYTE_OFFSET 0x0
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_ENTRY_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_ENTRY_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_ENTRY_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_ENTRY_RESET_MASK 0xffc00000
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_ENTRY_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_ENTRY_WRITE_MASK 0x00000000

/* Register type: elb_mdinvf_csr::STA_ar_log_cam::entry                    */
/* Register template: elb_mdinvf_csr::STA_ar_log_cam::entry                */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr, line: 153 */
/* Field member: elb_mdinvf_csr::STA_ar_log_cam::entry.data                */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 74 */
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_ENTRY_DATA_MSB 21
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_ENTRY_DATA_LSB 0
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_ENTRY_DATA_WIDTH 22
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_ENTRY_DATA_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_ENTRY_DATA_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_ENTRY_DATA_FIELD_MASK 0x003fffff
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_ENTRY_DATA_GET(x) ((x) & 0x003fffff)
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_ENTRY_DATA_SET(x) ((x) & 0x003fffff)
#define ELB_MDINVF_CSR_STA_AR_LOG_CAM_ENTRY_DATA_MODIFY(r, x) \
   (((x) & 0x003fffff) | ((r) & 0xffc00000))

/* Memory type: elb_mdinvf_csr::filter_addr_lo                             */
/* Memory template: elb_mdinvf_csr::filter_addr_lo                         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 1 */
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_SIZE 0x40
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_BYTE_SIZE 0x100
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_ENTRIES 0x40
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_MSB 30
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_LSB 0
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_WIDTH 31
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_MASK 0x7fffffff
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_GET(x) ((x) & 0x7fffffff)
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_SET(x) ((x) & 0x7fffffff)
/* Register member: elb_mdinvf_csr::filter_addr_lo.data                    */
/* Register type referenced: elb_mdinvf_csr::filter_addr_lo::data          */
/* Register template referenced: elb_mdinvf_csr::filter_addr_lo::data      */
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_DATA_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_DATA_BYTE_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_DATA_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_DATA_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_DATA_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_DATA_RESET_MASK 0x80000000
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_DATA_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_DATA_WRITE_MASK 0x7fffffff

/* Register type: elb_mdinvf_csr::filter_addr_lo::data                     */
/* Register template: elb_mdinvf_csr::filter_addr_lo::data                 */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 10 */
/* Field member: elb_mdinvf_csr::filter_addr_lo::data.value                */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_DATA_VALUE_MSB 30
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_DATA_VALUE_LSB 0
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_DATA_VALUE_WIDTH 31
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_DATA_VALUE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_DATA_VALUE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_DATA_VALUE_FIELD_MASK 0x7fffffff
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_DATA_VALUE_GET(x) ((x) & 0x7fffffff)
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_DATA_VALUE_SET(x) ((x) & 0x7fffffff)
#define ELB_MDINVF_CSR_FILTER_ADDR_LO_DATA_VALUE_MODIFY(r, x) \
   (((x) & 0x7fffffff) | ((r) & 0x80000000))

/* Memory type: elb_mdinvf_csr::filter_addr_hi                             */
/* Memory template: elb_mdinvf_csr::filter_addr_hi                         */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 16 */
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_SIZE 0x40
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_BYTE_SIZE 0x100
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_ENTRIES 0x40
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_MSB 30
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_LSB 0
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_WIDTH 31
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_MASK 0x7fffffff
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_GET(x) ((x) & 0x7fffffff)
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_SET(x) ((x) & 0x7fffffff)
/* Register member: elb_mdinvf_csr::filter_addr_hi.data                    */
/* Register type referenced: elb_mdinvf_csr::filter_addr_hi::data          */
/* Register template referenced: elb_mdinvf_csr::filter_addr_hi::data      */
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_DATA_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_DATA_BYTE_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_DATA_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_DATA_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_DATA_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_DATA_RESET_MASK 0x80000000
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_DATA_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_DATA_WRITE_MASK 0x7fffffff

/* Register type: elb_mdinvf_csr::filter_addr_hi::data                     */
/* Register template: elb_mdinvf_csr::filter_addr_hi::data                 */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 25 */
/* Field member: elb_mdinvf_csr::filter_addr_hi::data.value                */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_DATA_VALUE_MSB 30
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_DATA_VALUE_LSB 0
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_DATA_VALUE_WIDTH 31
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_DATA_VALUE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_DATA_VALUE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_DATA_VALUE_FIELD_MASK 0x7fffffff
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_DATA_VALUE_GET(x) ((x) & 0x7fffffff)
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_DATA_VALUE_SET(x) ((x) & 0x7fffffff)
#define ELB_MDINVF_CSR_FILTER_ADDR_HI_DATA_VALUE_MODIFY(r, x) \
   (((x) & 0x7fffffff) | ((r) & 0x80000000))

/* Memory type: elb_mdinvf_csr::filter_addr_host                           */
/* Memory template: elb_mdinvf_csr::filter_addr_host                       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 31 */
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_SIZE 0x40
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_BYTE_SIZE 0x100
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_ENTRIES 0x40
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_MSB 1
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_LSB 0
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_WIDTH 2
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_MASK 0x03
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_GET(x) ((x) & 0x03)
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_SET(x) ((x) & 0x03)
/* Register member: elb_mdinvf_csr::filter_addr_host.data                  */
/* Register type referenced: elb_mdinvf_csr::filter_addr_host::data        */
/* Register template referenced: elb_mdinvf_csr::filter_addr_host::data    */
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_BYTE_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_RESET_VALUE 0x00
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_RESET_MASK 0xfc
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_READ_MASK 0xff
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_WRITE_MASK 0x03

/* Register type: elb_mdinvf_csr::filter_addr_host::data                   */
/* Register template: elb_mdinvf_csr::filter_addr_host::data               */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 40 */
/* Field member: elb_mdinvf_csr::filter_addr_host::data.match              */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_MATCH_MSB 1
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_MATCH_LSB 1
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_MATCH_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_MATCH_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_MATCH_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_MATCH_FIELD_MASK 0x02
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_MATCH_GET(x) (((x) & 0x02) >> 1)
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_MATCH_SET(x) \
   (((x) << 1) & 0x02)
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_MATCH_MODIFY(r, x) \
   ((((x) << 1) & 0x02) | ((r) & 0xfd))
/* Field member: elb_mdinvf_csr::filter_addr_host::data.mask               */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_MASK_MSB 0
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_MASK_LSB 0
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_MASK_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_MASK_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_MASK_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_MASK_FIELD_MASK 0x01
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_MASK_GET(x) ((x) & 0x01)
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_MASK_SET(x) ((x) & 0x01)
#define ELB_MDINVF_CSR_FILTER_ADDR_HOST_DATA_MASK_MODIFY(r, x) \
   (((x) & 0x01) | ((r) & 0xfe))

/* Memory type: elb_mdinvf_csr::filter_addr_pic                            */
/* Memory template: elb_mdinvf_csr::filter_addr_pic                        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 51 */
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_SIZE 0x40
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_BYTE_SIZE 0x100
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_ENTRIES 0x40
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_MSB 1
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_LSB 0
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_WIDTH 2
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_MASK 0x03
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_GET(x) ((x) & 0x03)
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_SET(x) ((x) & 0x03)
/* Register member: elb_mdinvf_csr::filter_addr_pic.data                   */
/* Register type referenced: elb_mdinvf_csr::filter_addr_pic::data         */
/* Register template referenced: elb_mdinvf_csr::filter_addr_pic::data     */
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_BYTE_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_RESET_VALUE 0x00
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_RESET_MASK 0xfc
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_READ_MASK 0xff
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_WRITE_MASK 0x03

/* Register type: elb_mdinvf_csr::filter_addr_pic::data                    */
/* Register template: elb_mdinvf_csr::filter_addr_pic::data                */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 60 */
/* Field member: elb_mdinvf_csr::filter_addr_pic::data.match               */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_MATCH_MSB 1
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_MATCH_LSB 1
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_MATCH_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_MATCH_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_MATCH_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_MATCH_FIELD_MASK 0x02
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_MATCH_GET(x) (((x) & 0x02) >> 1)
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_MATCH_SET(x) (((x) << 1) & 0x02)
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_MATCH_MODIFY(r, x) \
   ((((x) << 1) & 0x02) | ((r) & 0xfd))
/* Field member: elb_mdinvf_csr::filter_addr_pic::data.mask                */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_MASK_MSB 0
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_MASK_LSB 0
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_MASK_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_MASK_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_MASK_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_MASK_FIELD_MASK 0x01
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_MASK_GET(x) ((x) & 0x01)
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_MASK_SET(x) ((x) & 0x01)
#define ELB_MDINVF_CSR_FILTER_ADDR_PIC_DATA_MASK_MODIFY(r, x) \
   (((x) & 0x01) | ((r) & 0xfe))

/* Memory type: elb_mdinvf_csr::filter_addr_lif                            */
/* Memory template: elb_mdinvf_csr::filter_addr_lif                        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 71 */
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_SIZE 0x40
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_BYTE_SIZE 0x100
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_ENTRIES 0x40
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_MSB 21
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_LSB 0
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_WIDTH 22
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_MASK 0x003fffff
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_GET(x) ((x) & 0x003fffff)
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_SET(x) ((x) & 0x003fffff)
/* Register member: elb_mdinvf_csr::filter_addr_lif.data                   */
/* Register type referenced: elb_mdinvf_csr::filter_addr_lif::data         */
/* Register template referenced: elb_mdinvf_csr::filter_addr_lif::data     */
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_BYTE_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_RESET_MASK 0xffc00000
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_WRITE_MASK 0x003fffff

/* Register type: elb_mdinvf_csr::filter_addr_lif::data                    */
/* Register template: elb_mdinvf_csr::filter_addr_lif::data                */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 80 */
/* Field member: elb_mdinvf_csr::filter_addr_lif::data.match               */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_MATCH_MSB 21
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_MATCH_LSB 11
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_MATCH_WIDTH 11
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_MATCH_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_MATCH_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_MATCH_FIELD_MASK 0x003ff800
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_MATCH_GET(x) \
   (((x) & 0x003ff800) >> 11)
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_MATCH_SET(x) \
   (((x) << 11) & 0x003ff800)
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_MATCH_MODIFY(r, x) \
   ((((x) << 11) & 0x003ff800) | ((r) & 0xffc007ff))
/* Field member: elb_mdinvf_csr::filter_addr_lif::data.mask                */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_MASK_MSB 10
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_MASK_LSB 0
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_MASK_WIDTH 11
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_MASK_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_MASK_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_MASK_FIELD_MASK 0x000007ff
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_MASK_GET(x) ((x) & 0x000007ff)
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_MASK_SET(x) ((x) & 0x000007ff)
#define ELB_MDINVF_CSR_FILTER_ADDR_LIF_DATA_MASK_MODIFY(r, x) \
   (((x) & 0x000007ff) | ((r) & 0xfffff800))

/* Memory type: elb_mdinvf_csr::filter_src                                 */
/* Memory template: elb_mdinvf_csr::filter_src                             */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 91 */
#define ELB_MDINVF_CSR_FILTER_SRC_SIZE 0x40
#define ELB_MDINVF_CSR_FILTER_SRC_BYTE_SIZE 0x100
#define ELB_MDINVF_CSR_FILTER_SRC_ENTRIES 0x40
#define ELB_MDINVF_CSR_FILTER_SRC_MSB 25
#define ELB_MDINVF_CSR_FILTER_SRC_LSB 0
#define ELB_MDINVF_CSR_FILTER_SRC_WIDTH 26
#define ELB_MDINVF_CSR_FILTER_SRC_MASK 0x03ffffff
#define ELB_MDINVF_CSR_FILTER_SRC_GET(x) ((x) & 0x03ffffff)
#define ELB_MDINVF_CSR_FILTER_SRC_SET(x) ((x) & 0x03ffffff)
/* Register member: elb_mdinvf_csr::filter_src.data                        */
/* Register type referenced: elb_mdinvf_csr::filter_src::data              */
/* Register template referenced: elb_mdinvf_csr::filter_src::data          */
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_BYTE_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_RESET_MASK 0xfc000000
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_WRITE_MASK 0x03ffffff

/* Register type: elb_mdinvf_csr::filter_src::data                         */
/* Register template: elb_mdinvf_csr::filter_src::data                     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 100 */
/* Field member: elb_mdinvf_csr::filter_src::data.id_match                 */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_ID_MATCH_MSB 25
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_ID_MATCH_LSB 13
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_ID_MATCH_WIDTH 13
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_ID_MATCH_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_ID_MATCH_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_ID_MATCH_FIELD_MASK 0x03ffe000
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_ID_MATCH_GET(x) \
   (((x) & 0x03ffe000) >> 13)
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_ID_MATCH_SET(x) \
   (((x) << 13) & 0x03ffe000)
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_ID_MATCH_MODIFY(r, x) \
   ((((x) << 13) & 0x03ffe000) | ((r) & 0xfc001fff))
/* Field member: elb_mdinvf_csr::filter_src::data.id_mask                  */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_ID_MASK_MSB 12
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_ID_MASK_LSB 0
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_ID_MASK_WIDTH 13
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_ID_MASK_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_ID_MASK_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_ID_MASK_FIELD_MASK 0x00001fff
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_ID_MASK_GET(x) ((x) & 0x00001fff)
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_ID_MASK_SET(x) ((x) & 0x00001fff)
#define ELB_MDINVF_CSR_FILTER_SRC_DATA_ID_MASK_MODIFY(r, x) \
   (((x) & 0x00001fff) | ((r) & 0xffffe000))

/* Memory type: elb_mdinvf_csr::filter_axi_prot                            */
/* Memory template: elb_mdinvf_csr::filter_axi_prot                        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 111 */
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_SIZE 0x40
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_BYTE_SIZE 0x100
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_ENTRIES 0x40
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_MSB 19
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_LSB 0
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_WIDTH 20
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_MASK 0x000fffff
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_GET(x) ((x) & 0x000fffff)
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_SET(x) ((x) & 0x000fffff)
/* Register member: elb_mdinvf_csr::filter_axi_prot.data                   */
/* Register type referenced: elb_mdinvf_csr::filter_axi_prot::data         */
/* Register template referenced: elb_mdinvf_csr::filter_axi_prot::data     */
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_BYTE_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_RESET_MASK 0xfff00000
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_WRITE_MASK 0x000fffff

/* Register type: elb_mdinvf_csr::filter_axi_prot::data                    */
/* Register template: elb_mdinvf_csr::filter_axi_prot::data                */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 121 */
/* Field member: elb_mdinvf_csr::filter_axi_prot::data.arprot_overwrite    */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_OVERWRITE_MSB 19
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_OVERWRITE_LSB 16
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_OVERWRITE_WIDTH 4
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_OVERWRITE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_OVERWRITE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_OVERWRITE_FIELD_MASK 0x000f0000
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_OVERWRITE_GET(x) \
   (((x) & 0x000f0000) >> 16)
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_OVERWRITE_SET(x) \
   (((x) << 16) & 0x000f0000)
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_OVERWRITE_MODIFY(r, x) \
   ((((x) << 16) & 0x000f0000) | ((r) & 0xfff0ffff))
/* Field member: elb_mdinvf_csr::filter_axi_prot::data.awprot_overwrite    */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_OVERWRITE_MSB 15
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_OVERWRITE_LSB 12
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_OVERWRITE_WIDTH 4
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_OVERWRITE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_OVERWRITE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_OVERWRITE_FIELD_MASK 0x0000f000
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_OVERWRITE_GET(x) \
   (((x) & 0x0000f000) >> 12)
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_OVERWRITE_SET(x) \
   (((x) << 12) & 0x0000f000)
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_OVERWRITE_MODIFY(r, x) \
   ((((x) << 12) & 0x0000f000) | ((r) & 0xffff0fff))
/* Field member: elb_mdinvf_csr::filter_axi_prot::data.arprot_match        */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_MATCH_MSB 11
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_MATCH_LSB 9
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_MATCH_WIDTH 3
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_MATCH_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_MATCH_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_MATCH_FIELD_MASK 0x00000e00
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_MATCH_GET(x) \
   (((x) & 0x00000e00) >> 9)
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_MATCH_SET(x) \
   (((x) << 9) & 0x00000e00)
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_MATCH_MODIFY(r, x) \
   ((((x) << 9) & 0x00000e00) | ((r) & 0xfffff1ff))
/* Field member: elb_mdinvf_csr::filter_axi_prot::data.arprot_mask         */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_MASK_MSB 8
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_MASK_LSB 6
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_MASK_WIDTH 3
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_MASK_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_MASK_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_MASK_FIELD_MASK 0x000001c0
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_MASK_GET(x) \
   (((x) & 0x000001c0) >> 6)
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_MASK_SET(x) \
   (((x) << 6) & 0x000001c0)
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_ARPROT_MASK_MODIFY(r, x) \
   ((((x) << 6) & 0x000001c0) | ((r) & 0xfffffe3f))
/* Field member: elb_mdinvf_csr::filter_axi_prot::data.awprot_match        */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_MATCH_MSB 5
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_MATCH_LSB 3
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_MATCH_WIDTH 3
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_MATCH_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_MATCH_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_MATCH_FIELD_MASK 0x00000038
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_MATCH_GET(x) \
   (((x) & 0x00000038) >> 3)
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_MATCH_SET(x) \
   (((x) << 3) & 0x00000038)
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_MATCH_MODIFY(r, x) \
   ((((x) << 3) & 0x00000038) | ((r) & 0xffffffc7))
/* Field member: elb_mdinvf_csr::filter_axi_prot::data.awprot_mask         */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_MASK_MSB 2
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_MASK_LSB 0
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_MASK_WIDTH 3
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_MASK_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_MASK_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_MASK_FIELD_MASK 0x00000007
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_MASK_GET(x) \
   ((x) & 0x00000007)
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_MASK_SET(x) \
   ((x) & 0x00000007)
#define ELB_MDINVF_CSR_FILTER_AXI_PROT_DATA_AWPROT_MASK_MODIFY(r, x) \
   (((x) & 0x00000007) | ((r) & 0xfffffff8))

/* Memory type: elb_mdinvf_csr::filter_axi_cache                           */
/* Memory template: elb_mdinvf_csr::filter_axi_cache                       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 144 */
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_SIZE 0x40
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_BYTE_SIZE 0x100
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_ENTRIES 0x40
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_MSB 25
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_LSB 0
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_WIDTH 26
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_MASK 0x03ffffff
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_GET(x) ((x) & 0x03ffffff)
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_SET(x) ((x) & 0x03ffffff)
/* Register member: elb_mdinvf_csr::filter_axi_cache.data                  */
/* Register type referenced: elb_mdinvf_csr::filter_axi_cache::data        */
/* Register template referenced: elb_mdinvf_csr::filter_axi_cache::data    */
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_BYTE_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_RESET_MASK 0xfc000000
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_WRITE_MASK 0x03ffffff

/* Register type: elb_mdinvf_csr::filter_axi_cache::data                   */
/* Register template: elb_mdinvf_csr::filter_axi_cache::data               */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 154 */
/* Field member: elb_mdinvf_csr::filter_axi_cache::data.arcache_overwrite  */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_OVERWRITE_MSB 25
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_OVERWRITE_LSB 21
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_OVERWRITE_WIDTH 5
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_OVERWRITE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_OVERWRITE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_OVERWRITE_FIELD_MASK 0x03e00000
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_OVERWRITE_GET(x) \
   (((x) & 0x03e00000) >> 21)
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_OVERWRITE_SET(x) \
   (((x) << 21) & 0x03e00000)
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_OVERWRITE_MODIFY(r, x) \
   ((((x) << 21) & 0x03e00000) | ((r) & 0xfc1fffff))
/* Field member: elb_mdinvf_csr::filter_axi_cache::data.awcache_overwrite  */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_OVERWRITE_MSB 20
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_OVERWRITE_LSB 16
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_OVERWRITE_WIDTH 5
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_OVERWRITE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_OVERWRITE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_OVERWRITE_FIELD_MASK 0x001f0000
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_OVERWRITE_GET(x) \
   (((x) & 0x001f0000) >> 16)
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_OVERWRITE_SET(x) \
   (((x) << 16) & 0x001f0000)
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_OVERWRITE_MODIFY(r, x) \
   ((((x) << 16) & 0x001f0000) | ((r) & 0xffe0ffff))
/* Field member: elb_mdinvf_csr::filter_axi_cache::data.arcache_match      */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_MATCH_MSB 15
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_MATCH_LSB 12
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_MATCH_WIDTH 4
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_MATCH_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_MATCH_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_MATCH_FIELD_MASK 0x0000f000
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_MATCH_GET(x) \
   (((x) & 0x0000f000) >> 12)
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_MATCH_SET(x) \
   (((x) << 12) & 0x0000f000)
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_MATCH_MODIFY(r, x) \
   ((((x) << 12) & 0x0000f000) | ((r) & 0xffff0fff))
/* Field member: elb_mdinvf_csr::filter_axi_cache::data.arcache_mask       */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_MASK_MSB 11
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_MASK_LSB 8
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_MASK_WIDTH 4
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_MASK_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_MASK_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_MASK_FIELD_MASK 0x00000f00
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_MASK_GET(x) \
   (((x) & 0x00000f00) >> 8)
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_MASK_SET(x) \
   (((x) << 8) & 0x00000f00)
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_ARCACHE_MASK_MODIFY(r, x) \
   ((((x) << 8) & 0x00000f00) | ((r) & 0xfffff0ff))
/* Field member: elb_mdinvf_csr::filter_axi_cache::data.awcache_match      */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_MATCH_MSB 7
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_MATCH_LSB 4
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_MATCH_WIDTH 4
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_MATCH_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_MATCH_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_MATCH_FIELD_MASK 0x000000f0
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_MATCH_GET(x) \
   (((x) & 0x000000f0) >> 4)
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_MATCH_SET(x) \
   (((x) << 4) & 0x000000f0)
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_MATCH_MODIFY(r, x) \
   ((((x) << 4) & 0x000000f0) | ((r) & 0xffffff0f))
/* Field member: elb_mdinvf_csr::filter_axi_cache::data.awcache_mask       */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_MASK_MSB 3
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_MASK_LSB 0
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_MASK_WIDTH 4
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_MASK_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_MASK_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_MASK_FIELD_MASK 0x0000000f
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_MASK_GET(x) \
   ((x) & 0x0000000f)
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_MASK_SET(x) \
   ((x) & 0x0000000f)
#define ELB_MDINVF_CSR_FILTER_AXI_CACHE_DATA_AWCACHE_MASK_MODIFY(r, x) \
   (((x) & 0x0000000f) | ((r) & 0xfffffff0))

/* Memory type: elb_mdinvf_csr::filter_acp                                 */
/* Memory template: elb_mdinvf_csr::filter_acp                             */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 177 */
#define ELB_MDINVF_CSR_FILTER_ACP_SIZE 0x40
#define ELB_MDINVF_CSR_FILTER_ACP_BYTE_SIZE 0x100
#define ELB_MDINVF_CSR_FILTER_ACP_ENTRIES 0x40
#define ELB_MDINVF_CSR_FILTER_ACP_MSB 9
#define ELB_MDINVF_CSR_FILTER_ACP_LSB 0
#define ELB_MDINVF_CSR_FILTER_ACP_WIDTH 10
#define ELB_MDINVF_CSR_FILTER_ACP_MASK 0x03ff
#define ELB_MDINVF_CSR_FILTER_ACP_GET(x) ((x) & 0x03ff)
#define ELB_MDINVF_CSR_FILTER_ACP_SET(x) ((x) & 0x03ff)
/* Register member: elb_mdinvf_csr::filter_acp.data                        */
/* Register type referenced: elb_mdinvf_csr::filter_acp::data              */
/* Register template referenced: elb_mdinvf_csr::filter_acp::data          */
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_BYTE_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_RESET_VALUE 0x0000
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_RESET_MASK 0xfc00
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_READ_MASK 0xffff
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_WRITE_MASK 0x03ff

/* Register type: elb_mdinvf_csr::filter_acp::data                         */
/* Register template: elb_mdinvf_csr::filter_acp::data                     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 186 */
/* Field member: elb_mdinvf_csr::filter_acp::data.roverwrite               */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_ROVERWRITE_MSB 9
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_ROVERWRITE_LSB 5
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_ROVERWRITE_WIDTH 5
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_ROVERWRITE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_ROVERWRITE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_ROVERWRITE_FIELD_MASK 0x03e0
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_ROVERWRITE_GET(x) \
   (((x) & 0x03e0) >> 5)
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_ROVERWRITE_SET(x) \
   (((x) << 5) & 0x03e0)
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_ROVERWRITE_MODIFY(r, x) \
   ((((x) << 5) & 0x03e0) | ((r) & 0xfc1f))
/* Field member: elb_mdinvf_csr::filter_acp::data.woverwrite               */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_WOVERWRITE_MSB 4
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_WOVERWRITE_LSB 0
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_WOVERWRITE_WIDTH 5
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_WOVERWRITE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_WOVERWRITE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_WOVERWRITE_FIELD_MASK 0x001f
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_WOVERWRITE_GET(x) ((x) & 0x001f)
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_WOVERWRITE_SET(x) ((x) & 0x001f)
#define ELB_MDINVF_CSR_FILTER_ACP_DATA_WOVERWRITE_MODIFY(r, x) \
   (((x) & 0x001f) | ((r) & 0xffe0))

/* Memory type: elb_mdinvf_csr::filter_addr_ctl                            */
/* Memory template: elb_mdinvf_csr::filter_addr_ctl                        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 197 */
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_SIZE 0x40
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_BYTE_SIZE 0x100
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_ENTRIES 0x40
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_MSB 13
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_LSB 0
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_WIDTH 14
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_MASK 0x3fff
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_GET(x) ((x) & 0x3fff)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_SET(x) ((x) & 0x3fff)
/* Register member: elb_mdinvf_csr::filter_addr_ctl.value                  */
/* Register type referenced: elb_mdinvf_csr::filter_addr_ctl::value        */
/* Register template referenced: elb_mdinvf_csr::filter_addr_ctl::value    */
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_BYTE_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_RESET_VALUE 0x0000
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_RESET_MASK 0xc000
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_MASK 0xffff
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_MASK 0x3fff

/* Register type: elb_mdinvf_csr::filter_addr_ctl::value                   */
/* Register template: elb_mdinvf_csr::filter_addr_ctl::value               */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 206 */
/* Field member: elb_mdinvf_csr::filter_addr_ctl::value.round64            */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_ROUND64_MSB 13
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_ROUND64_LSB 13
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_ROUND64_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_ROUND64_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_ROUND64_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_ROUND64_FIELD_MASK 0x2000
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_ROUND64_GET(x) \
   (((x) & 0x2000) >> 13)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_ROUND64_SET(x) \
   (((x) << 13) & 0x2000)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_ROUND64_MODIFY(r, x) \
   ((((x) << 13) & 0x2000) | ((r) & 0xdfff))
/* Field member: elb_mdinvf_csr::filter_addr_ctl::value.local_ack          */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOCAL_ACK_MSB 12
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOCAL_ACK_LSB 12
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOCAL_ACK_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOCAL_ACK_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOCAL_ACK_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOCAL_ACK_FIELD_MASK 0x1000
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOCAL_ACK_GET(x) \
   (((x) & 0x1000) >> 12)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOCAL_ACK_SET(x) \
   (((x) << 12) & 0x1000)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOCAL_ACK_MODIFY(r, x) \
   ((((x) << 12) & 0x1000) | ((r) & 0xefff))
/* Field member: elb_mdinvf_csr::filter_addr_ctl::value.inval_receive      */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_INVAL_RECEIVE_MSB 11
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_INVAL_RECEIVE_LSB 11
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_INVAL_RECEIVE_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_INVAL_RECEIVE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_INVAL_RECEIVE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_INVAL_RECEIVE_FIELD_MASK 0x0800
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_INVAL_RECEIVE_GET(x) \
   (((x) & 0x0800) >> 11)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_INVAL_RECEIVE_SET(x) \
   (((x) << 11) & 0x0800)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_INVAL_RECEIVE_MODIFY(r, x) \
   ((((x) << 11) & 0x0800) | ((r) & 0xf7ff))
/* Field member: elb_mdinvf_csr::filter_addr_ctl::value.inval_send         */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_INVAL_SEND_MSB 10
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_INVAL_SEND_LSB 10
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_INVAL_SEND_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_INVAL_SEND_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_INVAL_SEND_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_INVAL_SEND_FIELD_MASK 0x0400
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_INVAL_SEND_GET(x) \
   (((x) & 0x0400) >> 10)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_INVAL_SEND_SET(x) \
   (((x) << 10) & 0x0400)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_INVAL_SEND_MODIFY(r, x) \
   ((((x) << 10) & 0x0400) | ((r) & 0xfbff))
/* Field member: elb_mdinvf_csr::filter_addr_ctl::value.use_cache          */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_USE_CACHE_MSB 9
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_USE_CACHE_LSB 9
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_USE_CACHE_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_USE_CACHE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_USE_CACHE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_USE_CACHE_FIELD_MASK 0x0200
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_USE_CACHE_GET(x) \
   (((x) & 0x0200) >> 9)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_USE_CACHE_SET(x) \
   (((x) << 9) & 0x0200)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_USE_CACHE_MODIFY(r, x) \
   ((((x) << 9) & 0x0200) | ((r) & 0xfdff))
/* Field member: elb_mdinvf_csr::filter_addr_ctl::value.log_resp           */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOG_RESP_MSB 8
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOG_RESP_LSB 8
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOG_RESP_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOG_RESP_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOG_RESP_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOG_RESP_FIELD_MASK 0x0100
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOG_RESP_GET(x) \
   (((x) & 0x0100) >> 8)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOG_RESP_SET(x) \
   (((x) << 8) & 0x0100)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOG_RESP_MODIFY(r, x) \
   ((((x) << 8) & 0x0100) | ((r) & 0xfeff))
/* Field member: elb_mdinvf_csr::filter_addr_ctl::value.log_req            */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOG_REQ_MSB 7
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOG_REQ_LSB 7
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOG_REQ_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOG_REQ_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOG_REQ_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOG_REQ_FIELD_MASK 0x0080
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOG_REQ_GET(x) \
   (((x) & 0x0080) >> 7)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOG_REQ_SET(x) \
   (((x) << 7) & 0x0080)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_LOG_REQ_MODIFY(r, x) \
   ((((x) << 7) & 0x0080) | ((r) & 0xff7f))
/* Field member: elb_mdinvf_csr::filter_addr_ctl::value.write_interrupt    */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_INTERRUPT_MSB 6
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_INTERRUPT_LSB 6
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_INTERRUPT_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_INTERRUPT_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_INTERRUPT_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_INTERRUPT_FIELD_MASK 0x0040
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_INTERRUPT_GET(x) \
   (((x) & 0x0040) >> 6)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_INTERRUPT_SET(x) \
   (((x) << 6) & 0x0040)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_INTERRUPT_MODIFY(r, x) \
   ((((x) << 6) & 0x0040) | ((r) & 0xffbf))
/* Field member: elb_mdinvf_csr::filter_addr_ctl::value.read_interrupt     */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_INTERRUPT_MSB 5
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_INTERRUPT_LSB 5
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_INTERRUPT_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_INTERRUPT_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_INTERRUPT_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_INTERRUPT_FIELD_MASK 0x0020
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_INTERRUPT_GET(x) \
   (((x) & 0x0020) >> 5)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_INTERRUPT_SET(x) \
   (((x) << 5) & 0x0020)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_INTERRUPT_MODIFY(r, x) \
   ((((x) << 5) & 0x0020) | ((r) & 0xffdf))
/* Field member: elb_mdinvf_csr::filter_addr_ctl::value.write_freeze       */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_FREEZE_MSB 4
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_FREEZE_LSB 4
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_FREEZE_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_FREEZE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_FREEZE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_FREEZE_FIELD_MASK 0x0010
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_FREEZE_GET(x) \
   (((x) & 0x0010) >> 4)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_FREEZE_SET(x) \
   (((x) << 4) & 0x0010)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_FREEZE_MODIFY(r, x) \
   ((((x) << 4) & 0x0010) | ((r) & 0xffef))
/* Field member: elb_mdinvf_csr::filter_addr_ctl::value.read_freeze        */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_FREEZE_MSB 3
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_FREEZE_LSB 3
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_FREEZE_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_FREEZE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_FREEZE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_FREEZE_FIELD_MASK 0x0008
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_FREEZE_GET(x) \
   (((x) & 0x0008) >> 3)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_FREEZE_SET(x) \
   (((x) << 3) & 0x0008)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_FREEZE_MODIFY(r, x) \
   ((((x) << 3) & 0x0008) | ((r) & 0xfff7))
/* Field member: elb_mdinvf_csr::filter_addr_ctl::value.write_access       */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_ACCESS_MSB 2
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_ACCESS_LSB 2
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_ACCESS_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_ACCESS_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_ACCESS_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_ACCESS_FIELD_MASK 0x0004
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_ACCESS_GET(x) \
   (((x) & 0x0004) >> 2)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_ACCESS_SET(x) \
   (((x) << 2) & 0x0004)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_WRITE_ACCESS_MODIFY(r, x) \
   ((((x) << 2) & 0x0004) | ((r) & 0xfffb))
/* Field member: elb_mdinvf_csr::filter_addr_ctl::value.read_access        */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_ACCESS_MSB 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_ACCESS_LSB 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_ACCESS_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_ACCESS_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_ACCESS_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_ACCESS_FIELD_MASK 0x0002
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_ACCESS_GET(x) \
   (((x) & 0x0002) >> 1)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_ACCESS_SET(x) \
   (((x) << 1) & 0x0002)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_READ_ACCESS_MODIFY(r, x) \
   ((((x) << 1) & 0x0002) | ((r) & 0xfffd))
/* Field member: elb_mdinvf_csr::filter_addr_ctl::value.valid              */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_VALID_MSB 0
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_VALID_LSB 0
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_VALID_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_VALID_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_VALID_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_VALID_FIELD_MASK 0x0001
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_VALID_GET(x) ((x) & 0x0001)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_VALID_SET(x) ((x) & 0x0001)
#define ELB_MDINVF_CSR_FILTER_ADDR_CTL_VALUE_VALID_MODIFY(r, x) \
   (((x) & 0x0001) | ((r) & 0xfffe))

/* Register type: elb_mdinvf_csr::filter_freeze_ctl                        */
/* Register template: elb_mdinvf_csr::filter_freeze_ctl                    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 225 */
/* Field member: elb_mdinvf_csr::filter_freeze_ctl.go                      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 230 */
#define ELB_MDINVF_CSR_FILTER_FREEZE_CTL_GO_MSB 0
#define ELB_MDINVF_CSR_FILTER_FREEZE_CTL_GO_LSB 0
#define ELB_MDINVF_CSR_FILTER_FREEZE_CTL_GO_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_FREEZE_CTL_GO_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_FREEZE_CTL_GO_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_FREEZE_CTL_GO_RESET 0x0
#define ELB_MDINVF_CSR_FILTER_FREEZE_CTL_GO_FIELD_MASK 0x00000001
#define ELB_MDINVF_CSR_FILTER_FREEZE_CTL_GO_GET(x) ((x) & 0x00000001)
#define ELB_MDINVF_CSR_FILTER_FREEZE_CTL_GO_SET(x) ((x) & 0x00000001)
#define ELB_MDINVF_CSR_FILTER_FREEZE_CTL_GO_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Memory type: elb_mdinvf_csr::filter_hit_count                           */
/* Memory template: elb_mdinvf_csr::filter_hit_count                       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 240 */
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_SIZE 0x40
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_BYTE_SIZE 0x100
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_ENTRIES 0x40
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_MSB 31
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_LSB 0
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_WIDTH 32
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_MASK 0xffffffff
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_GET(x) ((x) & 0xffffffff)
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_SET(x) ((x) & 0xffffffff)
/* Register member: elb_mdinvf_csr::filter_hit_count.value                 */
/* Register type referenced: elb_mdinvf_csr::filter_hit_count::value       */
/* Register template referenced: elb_mdinvf_csr::filter_hit_count::value   */
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_BYTE_OFFSET 0x0
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_WRITE_MASK 0xffffffff

/* Register type: elb_mdinvf_csr::filter_hit_count::value                  */
/* Register template: elb_mdinvf_csr::filter_hit_count::value              */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 249 */
/* Field member: elb_mdinvf_csr::filter_hit_count::value.wr_value          */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_WR_VALUE_MSB 31
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_WR_VALUE_LSB 16
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_WR_VALUE_WIDTH 16
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_WR_VALUE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_WR_VALUE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_WR_VALUE_FIELD_MASK 0xffff0000
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_WR_VALUE_GET(x) \
   (((x) & 0xffff0000) >> 16)
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_WR_VALUE_SET(x) \
   (((x) << 16) & 0xffff0000)
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_WR_VALUE_MODIFY(r, x) \
   ((((x) << 16) & 0xffff0000) | ((r) & 0x0000ffff))
/* Field member: elb_mdinvf_csr::filter_hit_count::value.rd_value          */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 112 */
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_RD_VALUE_MSB 15
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_RD_VALUE_LSB 0
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_RD_VALUE_WIDTH 16
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_RD_VALUE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_RD_VALUE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_RD_VALUE_FIELD_MASK 0x0000ffff
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_RD_VALUE_GET(x) \
   ((x) & 0x0000ffff)
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_RD_VALUE_SET(x) \
   ((x) & 0x0000ffff)
#define ELB_MDINVF_CSR_FILTER_HIT_COUNT_VALUE_RD_VALUE_MODIFY(r, x) \
   (((x) & 0x0000ffff) | ((r) & 0xffff0000))

/* Register type: elb_mdinvf_csr::CNT_read_deny                            */
/* Register template: elb_mdinvf_csr::CNT_read_deny                        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 256 */
/* Field member: elb_mdinvf_csr::CNT_read_deny.counter                     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 260 */
#define ELB_MDINVF_CSR_CNT_READ_DENY_COUNTER_MSB 15
#define ELB_MDINVF_CSR_CNT_READ_DENY_COUNTER_LSB 0
#define ELB_MDINVF_CSR_CNT_READ_DENY_COUNTER_WIDTH 16
#define ELB_MDINVF_CSR_CNT_READ_DENY_COUNTER_READ_ACCESS 1
#define ELB_MDINVF_CSR_CNT_READ_DENY_COUNTER_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_CNT_READ_DENY_COUNTER_RESET 0x0000
#define ELB_MDINVF_CSR_CNT_READ_DENY_COUNTER_FIELD_MASK 0x0000ffff
#define ELB_MDINVF_CSR_CNT_READ_DENY_COUNTER_GET(x) ((x) & 0x0000ffff)
#define ELB_MDINVF_CSR_CNT_READ_DENY_COUNTER_SET(x) ((x) & 0x0000ffff)
#define ELB_MDINVF_CSR_CNT_READ_DENY_COUNTER_MODIFY(r, x) \
   (((x) & 0x0000ffff) | ((r) & 0xffff0000))

/* Register type: elb_mdinvf_csr::CNT_write_deny                           */
/* Register template: elb_mdinvf_csr::CNT_write_deny                       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 267 */
/* Field member: elb_mdinvf_csr::CNT_write_deny.counter                    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 271 */
#define ELB_MDINVF_CSR_CNT_WRITE_DENY_COUNTER_MSB 15
#define ELB_MDINVF_CSR_CNT_WRITE_DENY_COUNTER_LSB 0
#define ELB_MDINVF_CSR_CNT_WRITE_DENY_COUNTER_WIDTH 16
#define ELB_MDINVF_CSR_CNT_WRITE_DENY_COUNTER_READ_ACCESS 1
#define ELB_MDINVF_CSR_CNT_WRITE_DENY_COUNTER_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_CNT_WRITE_DENY_COUNTER_RESET 0x0000
#define ELB_MDINVF_CSR_CNT_WRITE_DENY_COUNTER_FIELD_MASK 0x0000ffff
#define ELB_MDINVF_CSR_CNT_WRITE_DENY_COUNTER_GET(x) ((x) & 0x0000ffff)
#define ELB_MDINVF_CSR_CNT_WRITE_DENY_COUNTER_SET(x) ((x) & 0x0000ffff)
#define ELB_MDINVF_CSR_CNT_WRITE_DENY_COUNTER_MODIFY(r, x) \
   (((x) & 0x0000ffff) | ((r) & 0xffff0000))

/* Register type: elb_mdinvf_csr::CFG_clear_filter                         */
/* Register template: elb_mdinvf_csr::CFG_clear_filter                     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 278 */
/* Field member: elb_mdinvf_csr::CFG_clear_filter.pulse                    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 283 */
#define ELB_MDINVF_CSR_CFG_CLEAR_FILTER_PULSE_MSB 0
#define ELB_MDINVF_CSR_CFG_CLEAR_FILTER_PULSE_LSB 0
#define ELB_MDINVF_CSR_CFG_CLEAR_FILTER_PULSE_WIDTH 1
#define ELB_MDINVF_CSR_CFG_CLEAR_FILTER_PULSE_READ_ACCESS 1
#define ELB_MDINVF_CSR_CFG_CLEAR_FILTER_PULSE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_CFG_CLEAR_FILTER_PULSE_RESET 0x0
#define ELB_MDINVF_CSR_CFG_CLEAR_FILTER_PULSE_FIELD_MASK 0x00000001
#define ELB_MDINVF_CSR_CFG_CLEAR_FILTER_PULSE_GET(x) ((x) & 0x00000001)
#define ELB_MDINVF_CSR_CFG_CLEAR_FILTER_PULSE_SET(x) ((x) & 0x00000001)
#define ELB_MDINVF_CSR_CFG_CLEAR_FILTER_PULSE_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Register type: elb_mdinvf_csr::STA_write_deny                           */
/* Register template: elb_mdinvf_csr::STA_write_deny                       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 293 */
/* Field member: elb_mdinvf_csr::STA_write_deny.address                    */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 74 */
#define ELB_MDINVF_CSR_STA_WRITE_DENY_ADDRESS_MSB 31
#define ELB_MDINVF_CSR_STA_WRITE_DENY_ADDRESS_LSB 0
#define ELB_MDINVF_CSR_STA_WRITE_DENY_ADDRESS_WIDTH 32
#define ELB_MDINVF_CSR_STA_WRITE_DENY_ADDRESS_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_WRITE_DENY_ADDRESS_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_WRITE_DENY_ADDRESS_FIELD_MASK 0xffffffff
#define ELB_MDINVF_CSR_STA_WRITE_DENY_ADDRESS_GET(x) ((x) & 0xffffffff)
#define ELB_MDINVF_CSR_STA_WRITE_DENY_ADDRESS_SET(x) ((x) & 0xffffffff)
#define ELB_MDINVF_CSR_STA_WRITE_DENY_ADDRESS_MODIFY(r, x) ((x) & 0xffffffff)

/* Register type: elb_mdinvf_csr::STA_read_deny                            */
/* Register template: elb_mdinvf_csr::STA_read_deny                        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 301 */
/* Field member: elb_mdinvf_csr::STA_read_deny.address                     */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 74 */
#define ELB_MDINVF_CSR_STA_READ_DENY_ADDRESS_MSB 31
#define ELB_MDINVF_CSR_STA_READ_DENY_ADDRESS_LSB 0
#define ELB_MDINVF_CSR_STA_READ_DENY_ADDRESS_WIDTH 32
#define ELB_MDINVF_CSR_STA_READ_DENY_ADDRESS_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_READ_DENY_ADDRESS_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_READ_DENY_ADDRESS_FIELD_MASK 0xffffffff
#define ELB_MDINVF_CSR_STA_READ_DENY_ADDRESS_GET(x) ((x) & 0xffffffff)
#define ELB_MDINVF_CSR_STA_READ_DENY_ADDRESS_SET(x) ((x) & 0xffffffff)
#define ELB_MDINVF_CSR_STA_READ_DENY_ADDRESS_MODIFY(r, x) ((x) & 0xffffffff)

/* Register type: elb_mdinvf_csr::STA_reads                                */
/* Register template: elb_mdinvf_csr::STA_reads                            */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 309 */
/* Field member: elb_mdinvf_csr::STA_reads.pending                         */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 74 */
#define ELB_MDINVF_CSR_STA_READS_PENDING_MSB 7
#define ELB_MDINVF_CSR_STA_READS_PENDING_LSB 0
#define ELB_MDINVF_CSR_STA_READS_PENDING_WIDTH 8
#define ELB_MDINVF_CSR_STA_READS_PENDING_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_READS_PENDING_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_READS_PENDING_FIELD_MASK 0x000000ff
#define ELB_MDINVF_CSR_STA_READS_PENDING_GET(x) ((x) & 0x000000ff)
#define ELB_MDINVF_CSR_STA_READS_PENDING_SET(x) ((x) & 0x000000ff)
#define ELB_MDINVF_CSR_STA_READS_PENDING_MODIFY(r, x) \
   (((x) & 0x000000ff) | ((r) & 0xffffff00))

/* Register type: elb_mdinvf_csr::STA_writes                               */
/* Register template: elb_mdinvf_csr::STA_writes                           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 317 */
/* Field member: elb_mdinvf_csr::STA_writes.pending                        */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 74 */
#define ELB_MDINVF_CSR_STA_WRITES_PENDING_MSB 7
#define ELB_MDINVF_CSR_STA_WRITES_PENDING_LSB 0
#define ELB_MDINVF_CSR_STA_WRITES_PENDING_WIDTH 8
#define ELB_MDINVF_CSR_STA_WRITES_PENDING_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_WRITES_PENDING_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_WRITES_PENDING_FIELD_MASK 0x000000ff
#define ELB_MDINVF_CSR_STA_WRITES_PENDING_GET(x) ((x) & 0x000000ff)
#define ELB_MDINVF_CSR_STA_WRITES_PENDING_SET(x) ((x) & 0x000000ff)
#define ELB_MDINVF_CSR_STA_WRITES_PENDING_MODIFY(r, x) \
   (((x) & 0x000000ff) | ((r) & 0xffffff00))

/* Wide Register type: elb_mdinvf_csr::STA_freeze                          */
/* Wide Register template: elb_mdinvf_csr::STA_freeze                      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 325 */
#define ELB_MDINVF_CSR_STA_FREEZE_SIZE 0x4
#define ELB_MDINVF_CSR_STA_FREEZE_BYTE_SIZE 0x10

/* Register type: elb_mdinvf_csr::STA_freeze::STA_freeze_0_3               */
/* Register template: elb_mdinvf_csr::STA_freeze::STA_freeze_0_3           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 325 */
/* Field member: elb_mdinvf_csr::STA_freeze::STA_freeze_0_3.addr_29_0      */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 74 */
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_ADDR_29_0_MSB 31
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_ADDR_29_0_LSB 2
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_ADDR_29_0_WIDTH 30
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_ADDR_29_0_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_ADDR_29_0_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_ADDR_29_0_FIELD_MASK 0xfffffffc
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_ADDR_29_0_GET(x) \
   (((x) & 0xfffffffc) >> 2)
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_ADDR_29_0_SET(x) \
   (((x) << 2) & 0xfffffffc)
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_ADDR_29_0_MODIFY(r, x) \
   ((((x) << 2) & 0xfffffffc) | ((r) & 0x00000003))
/* Field member: elb_mdinvf_csr::STA_freeze::STA_freeze_0_3.wfreeze        */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 74 */
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_WFREEZE_MSB 1
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_WFREEZE_LSB 1
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_WFREEZE_WIDTH 1
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_WFREEZE_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_WFREEZE_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_WFREEZE_FIELD_MASK 0x00000002
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_WFREEZE_GET(x) \
   (((x) & 0x00000002) >> 1)
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_WFREEZE_SET(x) \
   (((x) << 1) & 0x00000002)
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_WFREEZE_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002) | ((r) & 0xfffffffd))
/* Field member: elb_mdinvf_csr::STA_freeze::STA_freeze_0_3.rfreeze        */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 74 */
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_RFREEZE_MSB 0
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_RFREEZE_LSB 0
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_RFREEZE_WIDTH 1
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_RFREEZE_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_RFREEZE_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_RFREEZE_FIELD_MASK 0x00000001
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_RFREEZE_GET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_RFREEZE_SET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_0_3_RFREEZE_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Register type: elb_mdinvf_csr::STA_freeze::STA_freeze_1_3               */
/* Register template: elb_mdinvf_csr::STA_freeze::STA_freeze_1_3           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 325 */
/* Field member: elb_mdinvf_csr::STA_freeze::STA_freeze_1_3.addr_61_30     */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 74 */
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_1_3_ADDR_61_30_MSB 31
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_1_3_ADDR_61_30_LSB 0
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_1_3_ADDR_61_30_WIDTH 32
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_1_3_ADDR_61_30_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_1_3_ADDR_61_30_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_1_3_ADDR_61_30_FIELD_MASK 0xffffffff
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_1_3_ADDR_61_30_GET(x) \
   ((x) & 0xffffffff)
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_1_3_ADDR_61_30_SET(x) \
   ((x) & 0xffffffff)
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_1_3_ADDR_61_30_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_mdinvf_csr::STA_freeze::STA_freeze_2_3               */
/* Register template: elb_mdinvf_csr::STA_freeze::STA_freeze_2_3           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 325 */
/* Field member: elb_mdinvf_csr::STA_freeze::STA_freeze_2_3.addr_64_62     */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 74 */
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_2_3_ADDR_64_62_MSB 2
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_2_3_ADDR_64_62_LSB 0
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_2_3_ADDR_64_62_WIDTH 3
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_2_3_ADDR_64_62_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_2_3_ADDR_64_62_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_2_3_ADDR_64_62_FIELD_MASK 0x00000007
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_2_3_ADDR_64_62_GET(x) \
   ((x) & 0x00000007)
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_2_3_ADDR_64_62_SET(x) \
   ((x) & 0x00000007)
#define ELB_MDINVF_CSR_STA_FREEZE_STA_FREEZE_2_3_ADDR_64_62_MODIFY(r, x) \
   (((x) & 0x00000007) | ((r) & 0xfffffff8))

/* Wide Register type: elb_mdinvf_csr::STA_interrupt                       */
/* Wide Register template: elb_mdinvf_csr::STA_interrupt                   */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 335 */
#define ELB_MDINVF_CSR_STA_INTERRUPT_SIZE 0x4
#define ELB_MDINVF_CSR_STA_INTERRUPT_BYTE_SIZE 0x10

/* Register type: elb_mdinvf_csr::STA_interrupt::STA_interrupt_0_3         */
/* Register template: elb_mdinvf_csr::STA_interrupt::STA_interrupt_0_3     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 335 */
/* Field member: elb_mdinvf_csr::STA_interrupt::STA_interrupt_0_3.addr_30_0 */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 74 */
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_ADDR_30_0_MSB 31
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_ADDR_30_0_LSB 1
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_ADDR_30_0_WIDTH 31
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_ADDR_30_0_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_ADDR_30_0_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_ADDR_30_0_FIELD_MASK 0xfffffffe
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_ADDR_30_0_GET(x) \
   (((x) & 0xfffffffe) >> 1)
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_ADDR_30_0_SET(x) \
   (((x) << 1) & 0xfffffffe)
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_ADDR_30_0_MODIFY(r, x) \
   ((((x) << 1) & 0xfffffffe) | ((r) & 0x00000001))
/* Field member: elb_mdinvf_csr::STA_interrupt::STA_interrupt_0_3.rwinterrupt */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 74 */
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_RWINTERRUPT_MSB 0
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_RWINTERRUPT_LSB 0
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_RWINTERRUPT_WIDTH 1
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_RWINTERRUPT_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_RWINTERRUPT_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_RWINTERRUPT_FIELD_MASK 0x00000001
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_RWINTERRUPT_GET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_RWINTERRUPT_SET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_0_3_RWINTERRUPT_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Register type: elb_mdinvf_csr::STA_interrupt::STA_interrupt_1_3         */
/* Register template: elb_mdinvf_csr::STA_interrupt::STA_interrupt_1_3     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 335 */
/* Field member: elb_mdinvf_csr::STA_interrupt::STA_interrupt_1_3.addr_62_31 */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 74 */
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_1_3_ADDR_62_31_MSB 31
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_1_3_ADDR_62_31_LSB 0
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_1_3_ADDR_62_31_WIDTH 32
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_1_3_ADDR_62_31_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_1_3_ADDR_62_31_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_1_3_ADDR_62_31_FIELD_MASK 0xffffffff
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_1_3_ADDR_62_31_GET(x) \
   ((x) & 0xffffffff)
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_1_3_ADDR_62_31_SET(x) \
   ((x) & 0xffffffff)
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_1_3_ADDR_62_31_MODIFY(r, x) \
   ((x) & 0xffffffff)

/* Register type: elb_mdinvf_csr::STA_interrupt::STA_interrupt_2_3         */
/* Register template: elb_mdinvf_csr::STA_interrupt::STA_interrupt_2_3     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 335 */
/* Field member: elb_mdinvf_csr::STA_interrupt::STA_interrupt_2_3.addr_64_63 */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 74 */
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_2_3_ADDR_64_63_MSB 1
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_2_3_ADDR_64_63_LSB 0
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_2_3_ADDR_64_63_WIDTH 2
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_2_3_ADDR_64_63_READ_ACCESS 1
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_2_3_ADDR_64_63_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_2_3_ADDR_64_63_FIELD_MASK 0x00000003
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_2_3_ADDR_64_63_GET(x) \
   ((x) & 0x00000003)
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_2_3_ADDR_64_63_SET(x) \
   ((x) & 0x00000003)
#define ELB_MDINVF_CSR_STA_INTERRUPT_STA_INTERRUPT_2_3_ADDR_64_63_MODIFY(r, x) \
   (((x) & 0x00000003) | ((r) & 0xfffffffc))

/* Wide Register type: elb_mdinvf_csr::filter_trace                        */
/* Wide Register template: elb_mdinvf_csr::filter_trace                    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 344 */
#define ELB_MDINVF_CSR_FILTER_TRACE_SIZE 0x4
#define ELB_MDINVF_CSR_FILTER_TRACE_BYTE_SIZE 0x10

/* Register type: elb_mdinvf_csr::filter_trace::filter_trace_0_3           */
/* Register template: elb_mdinvf_csr::filter_trace::filter_trace_0_3       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 344 */
/* Field member: elb_mdinvf_csr::filter_trace::filter_trace_0_3.base_addr_22_0 */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 13 */
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_BASE_ADDR_22_0_MSB 31
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_BASE_ADDR_22_0_LSB 9
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_BASE_ADDR_22_0_WIDTH 23
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_BASE_ADDR_22_0_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_BASE_ADDR_22_0_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_BASE_ADDR_22_0_RESET 0x000000
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_BASE_ADDR_22_0_FIELD_MASK 0xfffffe00
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_BASE_ADDR_22_0_GET(x) \
   (((x) & 0xfffffe00) >> 9)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_BASE_ADDR_22_0_SET(x) \
   (((x) << 9) & 0xfffffe00)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_BASE_ADDR_22_0_MODIFY(r, x) \
   ((((x) << 9) & 0xfffffe00) | ((r) & 0x000001ff))
/* Field member: elb_mdinvf_csr::filter_trace::filter_trace_0_3.awcache    */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 13 */
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_AWCACHE_MSB 8
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_AWCACHE_LSB 5
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_AWCACHE_WIDTH 4
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_AWCACHE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_AWCACHE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_AWCACHE_RESET 0xf
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_AWCACHE_FIELD_MASK 0x000001e0
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_AWCACHE_GET(x) \
   (((x) & 0x000001e0) >> 5)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_AWCACHE_SET(x) \
   (((x) << 5) & 0x000001e0)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_AWCACHE_MODIFY(r, x) \
   ((((x) << 5) & 0x000001e0) | ((r) & 0xfffffe1f))
/* Field member: elb_mdinvf_csr::filter_trace::filter_trace_0_3.rst        */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 13 */
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RST_MSB 4
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RST_LSB 4
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RST_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RST_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RST_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RST_RESET 0x0
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RST_FIELD_MASK 0x00000010
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RST_GET(x) \
   (((x) & 0x00000010) >> 4)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RST_SET(x) \
   (((x) << 4) & 0x00000010)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RST_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010) | ((r) & 0xffffffef))
/* Field member: elb_mdinvf_csr::filter_trace::filter_trace_0_3.wrap       */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 13 */
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_WRAP_MSB 3
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_WRAP_LSB 3
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_WRAP_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_WRAP_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_WRAP_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_WRAP_RESET 0x0
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_WRAP_FIELD_MASK 0x00000008
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_WRAP_GET(x) \
   (((x) & 0x00000008) >> 3)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_WRAP_SET(x) \
   (((x) << 3) & 0x00000008)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_WRAP_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008) | ((r) & 0xfffffff7))
/* Field member: elb_mdinvf_csr::filter_trace::filter_trace_0_3.resp_err   */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 13 */
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RESP_ERR_MSB 2
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RESP_ERR_LSB 2
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RESP_ERR_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RESP_ERR_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RESP_ERR_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RESP_ERR_RESET 0x0
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RESP_ERR_FIELD_MASK 0x00000004
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RESP_ERR_GET(x) \
   (((x) & 0x00000004) >> 2)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RESP_ERR_SET(x) \
   (((x) << 2) & 0x00000004)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_RESP_ERR_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004) | ((r) & 0xfffffffb))
/* Field member: elb_mdinvf_csr::filter_trace::filter_trace_0_3.always_on  */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 13 */
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ALWAYS_ON_MSB 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ALWAYS_ON_LSB 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ALWAYS_ON_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ALWAYS_ON_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ALWAYS_ON_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ALWAYS_ON_RESET 0x0
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ALWAYS_ON_FIELD_MASK 0x00000002
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ALWAYS_ON_GET(x) \
   (((x) & 0x00000002) >> 1)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ALWAYS_ON_SET(x) \
   (((x) << 1) & 0x00000002)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ALWAYS_ON_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002) | ((r) & 0xfffffffd))
/* Field member: elb_mdinvf_csr::filter_trace::filter_trace_0_3.enable     */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 13 */
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ENABLE_MSB 0
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ENABLE_LSB 0
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ENABLE_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ENABLE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ENABLE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ENABLE_RESET 0x0
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ENABLE_FIELD_MASK 0x00000001
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ENABLE_GET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ENABLE_SET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_0_3_ENABLE_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Register type: elb_mdinvf_csr::filter_trace::filter_trace_1_3           */
/* Register template: elb_mdinvf_csr::filter_trace::filter_trace_1_3       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 344 */
/* Field member: elb_mdinvf_csr::filter_trace::filter_trace_1_3.index_18_0 */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 74 */
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_INDEX_18_0_MSB 31
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_INDEX_18_0_LSB 13
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_INDEX_18_0_WIDTH 19
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_INDEX_18_0_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_INDEX_18_0_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_INDEX_18_0_FIELD_MASK 0xffffe000
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_INDEX_18_0_GET(x) \
   (((x) & 0xffffe000) >> 13)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_INDEX_18_0_SET(x) \
   (((x) << 13) & 0xffffe000)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_INDEX_18_0_MODIFY(r, x) \
   ((((x) << 13) & 0xffffe000) | ((r) & 0x00001fff))
/* Field member: elb_mdinvf_csr::filter_trace::filter_trace_1_3.buf_size   */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 13 */
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BUF_SIZE_MSB 12
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BUF_SIZE_LSB 8
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BUF_SIZE_WIDTH 5
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BUF_SIZE_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BUF_SIZE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BUF_SIZE_RESET 0x00
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BUF_SIZE_FIELD_MASK 0x00001f00
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BUF_SIZE_GET(x) \
   (((x) & 0x00001f00) >> 8)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BUF_SIZE_SET(x) \
   (((x) << 8) & 0x00001f00)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BUF_SIZE_MODIFY(r, x) \
   ((((x) << 8) & 0x00001f00) | ((r) & 0xffffe0ff))
/* Field member: elb_mdinvf_csr::filter_trace::filter_trace_1_3.base_addr_30_23 */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 13 */
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BASE_ADDR_30_23_MSB 7
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BASE_ADDR_30_23_LSB 0
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BASE_ADDR_30_23_WIDTH 8
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BASE_ADDR_30_23_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BASE_ADDR_30_23_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BASE_ADDR_30_23_RESET 0x00
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BASE_ADDR_30_23_FIELD_MASK 0x000000ff
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BASE_ADDR_30_23_GET(x) \
   ((x) & 0x000000ff)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BASE_ADDR_30_23_SET(x) \
   ((x) & 0x000000ff)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_1_3_BASE_ADDR_30_23_MODIFY(r, x) \
   (((x) & 0x000000ff) | ((r) & 0xffffff00))

/* Register type: elb_mdinvf_csr::filter_trace::filter_trace_2_3           */
/* Register template: elb_mdinvf_csr::filter_trace::filter_trace_2_3       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 344 */
/* Field member: elb_mdinvf_csr::filter_trace::filter_trace_2_3.generation */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 74 */
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_GENERATION_MSB 11
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_GENERATION_LSB 11
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_GENERATION_WIDTH 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_GENERATION_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_GENERATION_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_GENERATION_FIELD_MASK 0x00000800
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_GENERATION_GET(x) \
   (((x) & 0x00000800) >> 11)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_GENERATION_SET(x) \
   (((x) << 11) & 0x00000800)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_GENERATION_MODIFY(r, x) \
   ((((x) << 11) & 0x00000800) | ((r) & 0xfffff7ff))
/* Field member: elb_mdinvf_csr::filter_trace::filter_trace_2_3.index_29_19 */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 74 */
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_INDEX_29_19_MSB 10
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_INDEX_29_19_LSB 0
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_INDEX_29_19_WIDTH 11
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_INDEX_29_19_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_INDEX_29_19_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_INDEX_29_19_FIELD_MASK 0x000007ff
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_INDEX_29_19_GET(x) \
   ((x) & 0x000007ff)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_INDEX_29_19_SET(x) \
   ((x) & 0x000007ff)
#define ELB_MDINVF_CSR_FILTER_TRACE_FILTER_TRACE_2_3_INDEX_29_19_MODIFY(r, x) \
   (((x) & 0x000007ff) | ((r) & 0xfffff800))

/* Register type: elb_mdinvf_csr::filter_timeout                           */
/* Register template: elb_mdinvf_csr::filter_timeout                       */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 379 */
/* Field member: elb_mdinvf_csr::filter_timeout.cycles                     */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 13 */
#define ELB_MDINVF_CSR_FILTER_TIMEOUT_CYCLES_MSB 15
#define ELB_MDINVF_CSR_FILTER_TIMEOUT_CYCLES_LSB 0
#define ELB_MDINVF_CSR_FILTER_TIMEOUT_CYCLES_WIDTH 16
#define ELB_MDINVF_CSR_FILTER_TIMEOUT_CYCLES_READ_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TIMEOUT_CYCLES_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_FILTER_TIMEOUT_CYCLES_RESET 0x0000
#define ELB_MDINVF_CSR_FILTER_TIMEOUT_CYCLES_FIELD_MASK 0x0000ffff
#define ELB_MDINVF_CSR_FILTER_TIMEOUT_CYCLES_GET(x) ((x) & 0x0000ffff)
#define ELB_MDINVF_CSR_FILTER_TIMEOUT_CYCLES_SET(x) ((x) & 0x0000ffff)
#define ELB_MDINVF_CSR_FILTER_TIMEOUT_CYCLES_MODIFY(r, x) \
   (((x) & 0x0000ffff) | ((r) & 0xffff0000))

/* Register type: elb_mdinvf_csr::csr_intr                                 */
/* Register template: elb_mdinvf_csr::csr_intr                             */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr, line: 111 */
/* Field member: elb_mdinvf_csr::csr_intr.dowstream_enable                 */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 233 */
#define ELB_MDINVF_CSR_CSR_INTR_DOWSTREAM_ENABLE_MSB 1
#define ELB_MDINVF_CSR_CSR_INTR_DOWSTREAM_ENABLE_LSB 1
#define ELB_MDINVF_CSR_CSR_INTR_DOWSTREAM_ENABLE_WIDTH 1
#define ELB_MDINVF_CSR_CSR_INTR_DOWSTREAM_ENABLE_READ_ACCESS 1
#define ELB_MDINVF_CSR_CSR_INTR_DOWSTREAM_ENABLE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_CSR_INTR_DOWSTREAM_ENABLE_RESET 0x0
#define ELB_MDINVF_CSR_CSR_INTR_DOWSTREAM_ENABLE_FIELD_MASK 0x00000002
#define ELB_MDINVF_CSR_CSR_INTR_DOWSTREAM_ENABLE_GET(x) \
   (((x) & 0x00000002) >> 1)
#define ELB_MDINVF_CSR_CSR_INTR_DOWSTREAM_ENABLE_SET(x) \
   (((x) << 1) & 0x00000002)
#define ELB_MDINVF_CSR_CSR_INTR_DOWSTREAM_ENABLE_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002) | ((r) & 0xfffffffd))
/* Field member: elb_mdinvf_csr::csr_intr.dowstream                        */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 242 */
#define ELB_MDINVF_CSR_CSR_INTR_DOWSTREAM_MSB 0
#define ELB_MDINVF_CSR_CSR_INTR_DOWSTREAM_LSB 0
#define ELB_MDINVF_CSR_CSR_INTR_DOWSTREAM_WIDTH 1
#define ELB_MDINVF_CSR_CSR_INTR_DOWSTREAM_READ_ACCESS 1
#define ELB_MDINVF_CSR_CSR_INTR_DOWSTREAM_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_CSR_INTR_DOWSTREAM_FIELD_MASK 0x00000001
#define ELB_MDINVF_CSR_CSR_INTR_DOWSTREAM_GET(x) ((x) & 0x00000001)
#define ELB_MDINVF_CSR_CSR_INTR_DOWSTREAM_SET(x) ((x) & 0x00000001)
#define ELB_MDINVF_CSR_CSR_INTR_DOWSTREAM_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Group type: elb_mdinvf_csr::int_groups                                  */
/* Group template: elb_mdinvf_csr::intgrp_status                           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr, line: 95 */
#define ELB_MDINVF_CSR_INT_GROUPS_SIZE 0x4
#define ELB_MDINVF_CSR_INT_GROUPS_BYTE_SIZE 0x10
/* Register member: elb_mdinvf_csr::intgrp_status.intreg                   */
/* Register type referenced: elb_mdinvf_csr::int_groups::intreg            */
/* Register template referenced: elb_mdinvf_csr::intreg_status             */
#define ELB_MDINVF_CSR_INT_GROUPS_INTREG_OFFSET 0x0
#define ELB_MDINVF_CSR_INT_GROUPS_INTREG_BYTE_OFFSET 0x0
#define ELB_MDINVF_CSR_INT_GROUPS_INTREG_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_GROUPS_INTREG_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_INT_GROUPS_INTREG_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_INT_GROUPS_INTREG_RESET_MASK 0xfffffffe
#define ELB_MDINVF_CSR_INT_GROUPS_INTREG_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_INT_GROUPS_INTREG_WRITE_MASK 0x00000000
/* Register member: elb_mdinvf_csr::intgrp_status.int_enable_rw_reg        */
/* Register type referenced: elb_mdinvf_csr::int_groups::int_enable_rw_reg */
/* Register template referenced: elb_mdinvf_csr::intreg_enable             */
#define ELB_MDINVF_CSR_INT_GROUPS_INT_ENABLE_RW_REG_OFFSET 0x1
#define ELB_MDINVF_CSR_INT_GROUPS_INT_ENABLE_RW_REG_BYTE_OFFSET 0x4
#define ELB_MDINVF_CSR_INT_GROUPS_INT_ENABLE_RW_REG_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_GROUPS_INT_ENABLE_RW_REG_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_GROUPS_INT_ENABLE_RW_REG_RESET_VALUE 0x00000001
#define ELB_MDINVF_CSR_INT_GROUPS_INT_ENABLE_RW_REG_RESET_MASK 0xffffffff
#define ELB_MDINVF_CSR_INT_GROUPS_INT_ENABLE_RW_REG_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_INT_GROUPS_INT_ENABLE_RW_REG_WRITE_MASK 0x00000001
/* Register member: elb_mdinvf_csr::intgrp_status.int_rw_reg               */
/* Register type referenced: elb_mdinvf_csr::int_groups::int_rw_reg        */
/* Register template referenced: elb_mdinvf_csr::intreg_status             */
#define ELB_MDINVF_CSR_INT_GROUPS_INT_RW_REG_OFFSET 0x2
#define ELB_MDINVF_CSR_INT_GROUPS_INT_RW_REG_BYTE_OFFSET 0x8
#define ELB_MDINVF_CSR_INT_GROUPS_INT_RW_REG_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_GROUPS_INT_RW_REG_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_INT_GROUPS_INT_RW_REG_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_INT_GROUPS_INT_RW_REG_RESET_MASK 0xfffffffe
#define ELB_MDINVF_CSR_INT_GROUPS_INT_RW_REG_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_INT_GROUPS_INT_RW_REG_WRITE_MASK 0x00000000

/* Register type: elb_mdinvf_csr::int_groups::intreg                       */
/* Register template: elb_mdinvf_csr::intreg_status                        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr, line: 45 */
/* Field member: elb_mdinvf_csr::intreg_status.int_filter_interrupt        */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 242 */
#define ELB_MDINVF_CSR_INT_GROUPS_INTREG_INT_FILTER_INTERRUPT_MSB 0
#define ELB_MDINVF_CSR_INT_GROUPS_INTREG_INT_FILTER_INTERRUPT_LSB 0
#define ELB_MDINVF_CSR_INT_GROUPS_INTREG_INT_FILTER_INTERRUPT_WIDTH 1
#define ELB_MDINVF_CSR_INT_GROUPS_INTREG_INT_FILTER_INTERRUPT_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_GROUPS_INTREG_INT_FILTER_INTERRUPT_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_INT_GROUPS_INTREG_INT_FILTER_INTERRUPT_FIELD_MASK 0x00000001
#define ELB_MDINVF_CSR_INT_GROUPS_INTREG_INT_FILTER_INTERRUPT_GET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_INT_GROUPS_INTREG_INT_FILTER_INTERRUPT_SET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_INT_GROUPS_INTREG_INT_FILTER_INTERRUPT_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Register type: elb_mdinvf_csr::int_groups::int_enable_rw_reg            */
/* Register template: elb_mdinvf_csr::intreg_enable                        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr, line: 33 */
/* Field member: elb_mdinvf_csr::intreg_enable.int_filter_enable           */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 233 */
#define ELB_MDINVF_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_FILTER_ENABLE_MSB 0
#define ELB_MDINVF_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_FILTER_ENABLE_LSB 0
#define ELB_MDINVF_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_FILTER_ENABLE_WIDTH 1
#define ELB_MDINVF_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_FILTER_ENABLE_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_FILTER_ENABLE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_FILTER_ENABLE_RESET 0x1
#define ELB_MDINVF_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_FILTER_ENABLE_FIELD_MASK 0x00000001
#define ELB_MDINVF_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_FILTER_ENABLE_GET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_FILTER_ENABLE_SET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_INT_GROUPS_INT_ENABLE_RW_REG_INT_FILTER_ENABLE_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Register type: elb_mdinvf_csr::int_groups::int_rw_reg                   */
/* Register template: elb_mdinvf_csr::intreg_status                        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr, line: 45 */
/* Field member: elb_mdinvf_csr::intreg_status.int_filter_interrupt        */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 242 */
#define ELB_MDINVF_CSR_INT_GROUPS_INT_RW_REG_INT_FILTER_INTERRUPT_MSB 0
#define ELB_MDINVF_CSR_INT_GROUPS_INT_RW_REG_INT_FILTER_INTERRUPT_LSB 0
#define ELB_MDINVF_CSR_INT_GROUPS_INT_RW_REG_INT_FILTER_INTERRUPT_WIDTH 1
#define ELB_MDINVF_CSR_INT_GROUPS_INT_RW_REG_INT_FILTER_INTERRUPT_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_GROUPS_INT_RW_REG_INT_FILTER_INTERRUPT_WRITE_ACCESS 0
#define ELB_MDINVF_CSR_INT_GROUPS_INT_RW_REG_INT_FILTER_INTERRUPT_FIELD_MASK 0x00000001
#define ELB_MDINVF_CSR_INT_GROUPS_INT_RW_REG_INT_FILTER_INTERRUPT_GET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_INT_GROUPS_INT_RW_REG_INT_FILTER_INTERRUPT_SET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_INT_GROUPS_INT_RW_REG_INT_FILTER_INTERRUPT_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Group type: elb_mdinvf_csr::int_filter                                  */
/* Group template: elb_mdinvf_csr::intgrp                                  */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr, line: 74 */
#define ELB_MDINVF_CSR_INT_FILTER_SIZE 0x4
#define ELB_MDINVF_CSR_INT_FILTER_BYTE_SIZE 0x10
/* Register member: elb_mdinvf_csr::intgrp.intreg                          */
/* Register type referenced: elb_mdinvf_csr::int_filter::intreg            */
/* Register template referenced: elb_mdinvf_csr::intreg                    */
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_OFFSET 0x0
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_BYTE_OFFSET 0x0
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_RESET_MASK 0xffffffff
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_WRITE_MASK 0x0000001f
/* Register member: elb_mdinvf_csr::intgrp.int_test_set                    */
/* Register type referenced: elb_mdinvf_csr::int_filter::int_test_set      */
/* Register template referenced: elb_mdinvf_csr::intreg                    */
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_OFFSET 0x1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_BYTE_OFFSET 0x4
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_RESET_VALUE 0x00000000
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_RESET_MASK 0xffffffff
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_WRITE_MASK 0x0000001f
/* Register member: elb_mdinvf_csr::intgrp.int_enable_set                  */
/* Register type referenced: elb_mdinvf_csr::int_filter::int_enable_set    */
/* Register template referenced: elb_mdinvf_csr::intreg_enable             */
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_OFFSET 0x2
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_BYTE_OFFSET 0x8
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_RESET_VALUE 0x0000001f
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_RESET_MASK 0xffffffff
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_WRITE_MASK 0x0000001f
/* Register member: elb_mdinvf_csr::intgrp.int_enable_clear                */
/* Register type referenced: elb_mdinvf_csr::int_filter::int_enable_clear  */
/* Register template referenced: elb_mdinvf_csr::intreg_enable             */
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_OFFSET 0x3
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_BYTE_OFFSET 0xc
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_RESET_VALUE 0x0000001f
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_RESET_MASK 0xffffffff
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_READ_MASK 0xffffffff
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_WRITE_MASK 0x0000001f

/* Register type: elb_mdinvf_csr::int_filter::intreg                       */
/* Register template: elb_mdinvf_csr::intreg                               */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr, line: 10 */
/* Field member: elb_mdinvf_csr::intreg.response_log_timeout_err_interrupt */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 220 */
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_MSB 4
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_LSB 4
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_RESET 0x0
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_FIELD_MASK 0x00000010
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_GET(x) \
   (((x) & 0x00000010) >> 4)
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_SET(x) \
   (((x) << 4) & 0x00000010)
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010) | ((r) & 0xffffffef))
/* Field member: elb_mdinvf_csr::intreg.write_response_err_interrupt       */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 220 */
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_WRITE_RESPONSE_ERR_INTERRUPT_MSB 3
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_WRITE_RESPONSE_ERR_INTERRUPT_LSB 3
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_WRITE_RESPONSE_ERR_INTERRUPT_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_WRITE_RESPONSE_ERR_INTERRUPT_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_WRITE_RESPONSE_ERR_INTERRUPT_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_WRITE_RESPONSE_ERR_INTERRUPT_RESET 0x0
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_WRITE_RESPONSE_ERR_INTERRUPT_FIELD_MASK 0x00000008
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_WRITE_RESPONSE_ERR_INTERRUPT_GET(x) \
   (((x) & 0x00000008) >> 3)
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_WRITE_RESPONSE_ERR_INTERRUPT_SET(x) \
   (((x) << 3) & 0x00000008)
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_WRITE_RESPONSE_ERR_INTERRUPT_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008) | ((r) & 0xfffffff7))
/* Field member: elb_mdinvf_csr::intreg.read_response_err_interrupt        */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 220 */
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_READ_RESPONSE_ERR_INTERRUPT_MSB 2
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_READ_RESPONSE_ERR_INTERRUPT_LSB 2
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_READ_RESPONSE_ERR_INTERRUPT_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_READ_RESPONSE_ERR_INTERRUPT_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_READ_RESPONSE_ERR_INTERRUPT_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_READ_RESPONSE_ERR_INTERRUPT_RESET 0x0
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_READ_RESPONSE_ERR_INTERRUPT_FIELD_MASK 0x00000004
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_READ_RESPONSE_ERR_INTERRUPT_GET(x) \
   (((x) & 0x00000004) >> 2)
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_READ_RESPONSE_ERR_INTERRUPT_SET(x) \
   (((x) << 2) & 0x00000004)
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_READ_RESPONSE_ERR_INTERRUPT_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004) | ((r) & 0xfffffffb))
/* Field member: elb_mdinvf_csr::intreg.axi_freeze_interrupt               */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 220 */
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_FREEZE_INTERRUPT_MSB 1
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_FREEZE_INTERRUPT_LSB 1
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_FREEZE_INTERRUPT_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_FREEZE_INTERRUPT_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_FREEZE_INTERRUPT_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_FREEZE_INTERRUPT_RESET 0x0
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_FREEZE_INTERRUPT_FIELD_MASK 0x00000002
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_FREEZE_INTERRUPT_GET(x) \
   (((x) & 0x00000002) >> 1)
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_FREEZE_INTERRUPT_SET(x) \
   (((x) << 1) & 0x00000002)
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_FREEZE_INTERRUPT_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002) | ((r) & 0xfffffffd))
/* Field member: elb_mdinvf_csr::intreg.axi_int_filter_interrupt           */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 220 */
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_INT_FILTER_INTERRUPT_MSB 0
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_INT_FILTER_INTERRUPT_LSB 0
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_INT_FILTER_INTERRUPT_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_INT_FILTER_INTERRUPT_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_INT_FILTER_INTERRUPT_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_INT_FILTER_INTERRUPT_RESET 0x0
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_INT_FILTER_INTERRUPT_FIELD_MASK 0x00000001
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_INT_FILTER_INTERRUPT_GET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_INT_FILTER_INTERRUPT_SET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_INT_FILTER_INTREG_AXI_INT_FILTER_INTERRUPT_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Register type: elb_mdinvf_csr::int_filter::int_test_set                 */
/* Register template: elb_mdinvf_csr::intreg                               */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr, line: 10 */
/* Field member: elb_mdinvf_csr::intreg.response_log_timeout_err_interrupt */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 220 */
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_MSB 4
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_LSB 4
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_RESET 0x0
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_FIELD_MASK 0x00000010
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_GET(x) \
   (((x) & 0x00000010) >> 4)
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_SET(x) \
   (((x) << 4) & 0x00000010)
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_RESPONSE_LOG_TIMEOUT_ERR_INTERRUPT_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010) | ((r) & 0xffffffef))
/* Field member: elb_mdinvf_csr::intreg.write_response_err_interrupt       */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 220 */
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_WRITE_RESPONSE_ERR_INTERRUPT_MSB 3
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_WRITE_RESPONSE_ERR_INTERRUPT_LSB 3
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_WRITE_RESPONSE_ERR_INTERRUPT_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_WRITE_RESPONSE_ERR_INTERRUPT_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_WRITE_RESPONSE_ERR_INTERRUPT_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_WRITE_RESPONSE_ERR_INTERRUPT_RESET 0x0
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_WRITE_RESPONSE_ERR_INTERRUPT_FIELD_MASK 0x00000008
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_WRITE_RESPONSE_ERR_INTERRUPT_GET(x) \
   (((x) & 0x00000008) >> 3)
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_WRITE_RESPONSE_ERR_INTERRUPT_SET(x) \
   (((x) << 3) & 0x00000008)
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_WRITE_RESPONSE_ERR_INTERRUPT_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008) | ((r) & 0xfffffff7))
/* Field member: elb_mdinvf_csr::intreg.read_response_err_interrupt        */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 220 */
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_READ_RESPONSE_ERR_INTERRUPT_MSB 2
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_READ_RESPONSE_ERR_INTERRUPT_LSB 2
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_READ_RESPONSE_ERR_INTERRUPT_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_READ_RESPONSE_ERR_INTERRUPT_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_READ_RESPONSE_ERR_INTERRUPT_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_READ_RESPONSE_ERR_INTERRUPT_RESET 0x0
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_READ_RESPONSE_ERR_INTERRUPT_FIELD_MASK 0x00000004
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_READ_RESPONSE_ERR_INTERRUPT_GET(x) \
   (((x) & 0x00000004) >> 2)
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_READ_RESPONSE_ERR_INTERRUPT_SET(x) \
   (((x) << 2) & 0x00000004)
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_READ_RESPONSE_ERR_INTERRUPT_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004) | ((r) & 0xfffffffb))
/* Field member: elb_mdinvf_csr::intreg.axi_freeze_interrupt               */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 220 */
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_FREEZE_INTERRUPT_MSB 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_FREEZE_INTERRUPT_LSB 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_FREEZE_INTERRUPT_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_FREEZE_INTERRUPT_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_FREEZE_INTERRUPT_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_FREEZE_INTERRUPT_RESET 0x0
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_FREEZE_INTERRUPT_FIELD_MASK 0x00000002
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_FREEZE_INTERRUPT_GET(x) \
   (((x) & 0x00000002) >> 1)
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_FREEZE_INTERRUPT_SET(x) \
   (((x) << 1) & 0x00000002)
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_FREEZE_INTERRUPT_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002) | ((r) & 0xfffffffd))
/* Field member: elb_mdinvf_csr::intreg.axi_int_filter_interrupt           */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 220 */
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_INT_FILTER_INTERRUPT_MSB 0
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_INT_FILTER_INTERRUPT_LSB 0
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_INT_FILTER_INTERRUPT_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_INT_FILTER_INTERRUPT_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_INT_FILTER_INTERRUPT_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_INT_FILTER_INTERRUPT_RESET 0x0
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_INT_FILTER_INTERRUPT_FIELD_MASK 0x00000001
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_INT_FILTER_INTERRUPT_GET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_INT_FILTER_INTERRUPT_SET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_INT_FILTER_INT_TEST_SET_AXI_INT_FILTER_INTERRUPT_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Register type: elb_mdinvf_csr::int_filter::int_enable_set               */
/* Register template: elb_mdinvf_csr::intreg_enable                        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr, line: 33 */
/* Field member: elb_mdinvf_csr::intreg_enable.response_log_timeout_err_enable */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 233 */
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_MSB 4
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_LSB 4
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_RESET 0x1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_FIELD_MASK 0x00000010
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_GET(x) \
   (((x) & 0x00000010) >> 4)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_SET(x) \
   (((x) << 4) & 0x00000010)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010) | ((r) & 0xffffffef))
/* Field member: elb_mdinvf_csr::intreg_enable.write_response_err_enable   */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 233 */
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_WRITE_RESPONSE_ERR_ENABLE_MSB 3
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_WRITE_RESPONSE_ERR_ENABLE_LSB 3
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_WRITE_RESPONSE_ERR_ENABLE_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_WRITE_RESPONSE_ERR_ENABLE_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_WRITE_RESPONSE_ERR_ENABLE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_WRITE_RESPONSE_ERR_ENABLE_RESET 0x1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_WRITE_RESPONSE_ERR_ENABLE_FIELD_MASK 0x00000008
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_WRITE_RESPONSE_ERR_ENABLE_GET(x) \
   (((x) & 0x00000008) >> 3)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_WRITE_RESPONSE_ERR_ENABLE_SET(x) \
   (((x) << 3) & 0x00000008)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_WRITE_RESPONSE_ERR_ENABLE_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008) | ((r) & 0xfffffff7))
/* Field member: elb_mdinvf_csr::intreg_enable.read_response_err_enable    */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 233 */
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_READ_RESPONSE_ERR_ENABLE_MSB 2
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_READ_RESPONSE_ERR_ENABLE_LSB 2
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_READ_RESPONSE_ERR_ENABLE_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_READ_RESPONSE_ERR_ENABLE_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_READ_RESPONSE_ERR_ENABLE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_READ_RESPONSE_ERR_ENABLE_RESET 0x1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_READ_RESPONSE_ERR_ENABLE_FIELD_MASK 0x00000004
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_READ_RESPONSE_ERR_ENABLE_GET(x) \
   (((x) & 0x00000004) >> 2)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_READ_RESPONSE_ERR_ENABLE_SET(x) \
   (((x) << 2) & 0x00000004)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_READ_RESPONSE_ERR_ENABLE_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004) | ((r) & 0xfffffffb))
/* Field member: elb_mdinvf_csr::intreg_enable.axi_freeze_enable           */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 233 */
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_FREEZE_ENABLE_MSB 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_FREEZE_ENABLE_LSB 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_FREEZE_ENABLE_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_FREEZE_ENABLE_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_FREEZE_ENABLE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_FREEZE_ENABLE_RESET 0x1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_FREEZE_ENABLE_FIELD_MASK 0x00000002
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_FREEZE_ENABLE_GET(x) \
   (((x) & 0x00000002) >> 1)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_FREEZE_ENABLE_SET(x) \
   (((x) << 1) & 0x00000002)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_FREEZE_ENABLE_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002) | ((r) & 0xfffffffd))
/* Field member: elb_mdinvf_csr::intreg_enable.axi_int_filter_enable       */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 233 */
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_INT_FILTER_ENABLE_MSB 0
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_INT_FILTER_ENABLE_LSB 0
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_INT_FILTER_ENABLE_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_INT_FILTER_ENABLE_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_INT_FILTER_ENABLE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_INT_FILTER_ENABLE_RESET 0x1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_INT_FILTER_ENABLE_FIELD_MASK 0x00000001
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_INT_FILTER_ENABLE_GET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_INT_FILTER_ENABLE_SET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_SET_AXI_INT_FILTER_ENABLE_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Register type: elb_mdinvf_csr::int_filter::int_enable_clear             */
/* Register template: elb_mdinvf_csr::intreg_enable                        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr, line: 33 */
/* Field member: elb_mdinvf_csr::intreg_enable.response_log_timeout_err_enable */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 233 */
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_MSB 4
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_LSB 4
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_RESET 0x1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_FIELD_MASK 0x00000010
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_GET(x) \
   (((x) & 0x00000010) >> 4)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_SET(x) \
   (((x) << 4) & 0x00000010)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_RESPONSE_LOG_TIMEOUT_ERR_ENABLE_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010) | ((r) & 0xffffffef))
/* Field member: elb_mdinvf_csr::intreg_enable.write_response_err_enable   */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 233 */
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_WRITE_RESPONSE_ERR_ENABLE_MSB 3
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_WRITE_RESPONSE_ERR_ENABLE_LSB 3
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_WRITE_RESPONSE_ERR_ENABLE_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_WRITE_RESPONSE_ERR_ENABLE_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_WRITE_RESPONSE_ERR_ENABLE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_WRITE_RESPONSE_ERR_ENABLE_RESET 0x1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_WRITE_RESPONSE_ERR_ENABLE_FIELD_MASK 0x00000008
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_WRITE_RESPONSE_ERR_ENABLE_GET(x) \
   (((x) & 0x00000008) >> 3)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_WRITE_RESPONSE_ERR_ENABLE_SET(x) \
   (((x) << 3) & 0x00000008)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_WRITE_RESPONSE_ERR_ENABLE_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008) | ((r) & 0xfffffff7))
/* Field member: elb_mdinvf_csr::intreg_enable.read_response_err_enable    */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 233 */
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_READ_RESPONSE_ERR_ENABLE_MSB 2
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_READ_RESPONSE_ERR_ENABLE_LSB 2
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_READ_RESPONSE_ERR_ENABLE_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_READ_RESPONSE_ERR_ENABLE_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_READ_RESPONSE_ERR_ENABLE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_READ_RESPONSE_ERR_ENABLE_RESET 0x1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_READ_RESPONSE_ERR_ENABLE_FIELD_MASK 0x00000004
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_READ_RESPONSE_ERR_ENABLE_GET(x) \
   (((x) & 0x00000004) >> 2)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_READ_RESPONSE_ERR_ENABLE_SET(x) \
   (((x) << 2) & 0x00000004)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_READ_RESPONSE_ERR_ENABLE_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004) | ((r) & 0xfffffffb))
/* Field member: elb_mdinvf_csr::intreg_enable.axi_freeze_enable           */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 233 */
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_FREEZE_ENABLE_MSB 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_FREEZE_ENABLE_LSB 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_FREEZE_ENABLE_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_FREEZE_ENABLE_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_FREEZE_ENABLE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_FREEZE_ENABLE_RESET 0x1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_FREEZE_ENABLE_FIELD_MASK 0x00000002
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_FREEZE_ENABLE_GET(x) \
   (((x) & 0x00000002) >> 1)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_FREEZE_ENABLE_SET(x) \
   (((x) << 1) & 0x00000002)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_FREEZE_ENABLE_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002) | ((r) & 0xfffffffd))
/* Field member: elb_mdinvf_csr::intreg_enable.axi_int_filter_enable       */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 233 */
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_INT_FILTER_ENABLE_MSB 0
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_INT_FILTER_ENABLE_LSB 0
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_INT_FILTER_ENABLE_WIDTH 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_INT_FILTER_ENABLE_READ_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_INT_FILTER_ENABLE_WRITE_ACCESS 1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_INT_FILTER_ENABLE_RESET 0x1
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_INT_FILTER_ENABLE_FIELD_MASK 0x00000001
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_INT_FILTER_ENABLE_GET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_INT_FILTER_ENABLE_SET(x) \
   ((x) & 0x00000001)
#define ELB_MDINVF_CSR_INT_FILTER_INT_ENABLE_CLEAR_AXI_INT_FILTER_ENABLE_MODIFY(r, x) \
   (((x) & 0x00000001) | ((r) & 0xfffffffe))

/* Register type: elb_hese_csr::base                                       */
/* Register template: elb_hese_csr::base                                   */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 598 */
/* Field member: elb_hese_csr::base.scratch_reg                            */
/* Source filename: /home/kinjal/pen_src/asic/elba/design/common/elb_common.csr, line: 13 */
#define ELB_HESE_CSR_BASE_SCRATCH_REG_MSB 31
#define ELB_HESE_CSR_BASE_SCRATCH_REG_LSB 0
#define ELB_HESE_CSR_BASE_SCRATCH_REG_WIDTH 32
#define ELB_HESE_CSR_BASE_SCRATCH_REG_READ_ACCESS 1
#define ELB_HESE_CSR_BASE_SCRATCH_REG_WRITE_ACCESS 1
#define ELB_HESE_CSR_BASE_SCRATCH_REG_RESET 0x00000001
#define ELB_HESE_CSR_BASE_SCRATCH_REG_FIELD_MASK 0xffffffff
#define ELB_HESE_CSR_BASE_SCRATCH_REG_GET(x) ((x) & 0xffffffff)
#define ELB_HESE_CSR_BASE_SCRATCH_REG_SET(x) ((x) & 0xffffffff)
#define ELB_HESE_CSR_BASE_SCRATCH_REG_MODIFY(r, x) ((x) & 0xffffffff)

/* ####################################################################### */
/*        TYPE DEFINITIONS                                                 */
/* ####################################################################### */
#ifndef __ASSEMBLY__

/* Typedef for Memory: elb_hese_csr::dhs_crypto_ctl                        */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 20 */
typedef struct {
   volatile uint32_t sym0_key_array_base_w0; /**< Offset 0x0 (R/W) */
   volatile uint32_t sym0_key_array_base_w1; /**< Offset 0x4 (R/W) */
   volatile uint32_t sym0_key_array_size; /**< Offset 0x8 (R/W) */
   volatile uint32_t sym0_axi_desc; /**< Offset 0xc (R/W) */
   volatile uint32_t sym0_axi_data_read; /**< Offset 0x10 (R/W) */
   volatile uint32_t sym0_axi_data_write; /**< Offset 0x14 (R/W) */
   volatile uint32_t sym0_axi_status; /**< Offset 0x18 (R/W) */
   volatile uint32_t sym0_axi_opaque_tag_write; /**< Offset 0x1c (R/W) */
   volatile uint32_t sym0_axi_doorbell_write; /**< Offset 0x20 (R/W) */
   uint8_t _pad0[0x1dc];
   volatile uint32_t sym1_key_array_base_w0; /**< Offset 0x200 (R/W) */
   volatile uint32_t sym1_key_array_base_w1; /**< Offset 0x204 (R/W) */
   volatile uint32_t sym1_key_array_size; /**< Offset 0x208 (R/W) */
   volatile uint32_t sym1_axi_desc; /**< Offset 0x20c (R/W) */
   volatile uint32_t sym1_axi_data_read; /**< Offset 0x210 (R/W) */
   volatile uint32_t sym1_axi_data_write; /**< Offset 0x214 (R/W) */
   volatile uint32_t sym1_axi_status; /**< Offset 0x218 (R/W) */
   volatile uint32_t sym1_axi_opaque_tag_write; /**< Offset 0x21c (R/W) */
   volatile uint32_t sym1_axi_doorbell_write; /**< Offset 0x220 (R/W) */
   uint8_t _pad1[0x1dc];
   volatile uint32_t sym2_key_array_base_w0; /**< Offset 0x400 (R/W) */
   volatile uint32_t sym2_key_array_base_w1; /**< Offset 0x404 (R/W) */
   volatile uint32_t sym2_key_array_size; /**< Offset 0x408 (R/W) */
   volatile uint32_t sym2_axi_desc; /**< Offset 0x40c (R/W) */
   volatile uint32_t sym2_axi_data_read; /**< Offset 0x410 (R/W) */
   volatile uint32_t sym2_axi_data_write; /**< Offset 0x414 (R/W) */
   volatile uint32_t sym2_axi_status; /**< Offset 0x418 (R/W) */
   volatile uint32_t sym2_axi_opaque_tag_write; /**< Offset 0x41c (R/W) */
   volatile uint32_t sym2_axi_doorbell_write; /**< Offset 0x420 (R/W) */
   uint8_t _pad2[0x1dc];
   volatile uint32_t sym3_key_array_base_w0; /**< Offset 0x600 (R/W) */
   volatile uint32_t sym3_key_array_base_w1; /**< Offset 0x604 (R/W) */
   volatile uint32_t sym3_key_array_size; /**< Offset 0x608 (R/W) */
   volatile uint32_t sym3_axi_desc; /**< Offset 0x60c (R/W) */
   volatile uint32_t sym3_axi_data_read; /**< Offset 0x610 (R/W) */
   volatile uint32_t sym3_axi_data_write; /**< Offset 0x614 (R/W) */
   volatile uint32_t sym3_axi_status; /**< Offset 0x618 (R/W) */
   volatile uint32_t sym3_axi_opaque_tag_write; /**< Offset 0x61c (R/W) */
   volatile uint32_t sym3_axi_doorbell_write; /**< Offset 0x620 (R/W) */
   uint8_t _pad3[0x1dc];
   volatile uint32_t pk0_key_array_base_w0; /**< Offset 0x800 (R/W) */
   volatile uint32_t pk0_key_array_base_w1; /**< Offset 0x804 (R/W) */
   volatile uint32_t pk0_key_array_size; /**< Offset 0x808 (R/W) */
   volatile uint32_t pk0_axi_desc; /**< Offset 0x80c (R/W) */
   volatile uint32_t pk0_axi_data_read; /**< Offset 0x810 (R/W) */
   volatile uint32_t pk0_axi_data_write; /**< Offset 0x814 (R/W) */
   volatile uint32_t pk0_axi_status; /**< Offset 0x818 (R/W) */
   volatile uint32_t pk0_axi_opaque_tag_write; /**< Offset 0x81c (R/W) */
   volatile uint32_t pk0_axi_doorbell_write; /**< Offset 0x820 (R/W) */
   uint8_t _pad4[0x1dc];
   volatile uint32_t pk1_key_array_base_w0; /**< Offset 0xa00 (R/W) */
   volatile uint32_t pk1_key_array_base_w1; /**< Offset 0xa04 (R/W) */
   volatile uint32_t pk1_key_array_size; /**< Offset 0xa08 (R/W) */
   volatile uint32_t pk1_axi_desc; /**< Offset 0xa0c (R/W) */
   volatile uint32_t pk1_axi_data_read; /**< Offset 0xa10 (R/W) */
   volatile uint32_t pk1_axi_data_write; /**< Offset 0xa14 (R/W) */
   volatile uint32_t pk1_axi_status; /**< Offset 0xa18 (R/W) */
   volatile uint32_t pk1_axi_opaque_tag_write; /**< Offset 0xa1c (R/W) */
   volatile uint32_t pk1_axi_doorbell_write; /**< Offset 0xa20 (R/W) */
   uint8_t _pad5[0xbdc];
   volatile uint32_t pk0_ring_base_w0; /**< Offset 0x1600 (R/W) */
   volatile uint32_t pk0_ring_base_w1; /**< Offset 0x1604 (R/W) */
   volatile uint32_t pk0_ring_size; /**< Offset 0x1608 (R/W) */
   volatile uint32_t pk0_producer_idx; /**< Offset 0x160c (R/W) */
   uint8_t _pad6[0x70];
   volatile uint32_t pk0_soft_rst; /**< Offset 0x1680 (R/W) */
   uint8_t _pad7[0xc];
   volatile uint32_t pk0_ci_addr_w0; /**< Offset 0x1690 (R/W) */
   volatile uint32_t pk0_ci_addr_w1; /**< Offset 0x1694 (R/W) */
   volatile uint32_t pk0_opa_tag_addr_w0; /**< Offset 0x1698 (R/W) */
   volatile uint32_t pk0_opa_tag_addr_w1; /**< Offset 0x169c (R/W) */
   volatile uint32_t pk0_consumer_idx; /**< Offset 0x16a0 (R/W) */
   uint8_t _pad8[0x1c];
   volatile uint32_t pk0_ring0_comp_cnt; /**< Offset 0x16c0 (R/W) */
   uint8_t _pad9[0x1c];
   volatile uint32_t pk0_status; /**< Offset 0x16e0 (R/W) */
   volatile uint32_t pk0_error_idx; /**< Offset 0x16e4 (R/W) */
   uint8_t _pad10[0x118];
   volatile uint32_t pk1_ring_base_w0; /**< Offset 0x1800 (R/W) */
   volatile uint32_t pk1_ring_base_w1; /**< Offset 0x1804 (R/W) */
   volatile uint32_t pk1_ring_size; /**< Offset 0x1808 (R/W) */
   volatile uint32_t pk1_producer_idx; /**< Offset 0x180c (R/W) */
   uint8_t _pad11[0x70];
   volatile uint32_t pk1_soft_rst; /**< Offset 0x1880 (R/W) */
   uint8_t _pad12[0xc];
   volatile uint32_t pk1_ci_addr_w0; /**< Offset 0x1890 (R/W) */
   volatile uint32_t pk1_ci_addr_w1; /**< Offset 0x1894 (R/W) */
   volatile uint32_t pk1_opa_tag_addr_w0; /**< Offset 0x1898 (R/W) */
   volatile uint32_t pk1_opa_tag_addr_w1; /**< Offset 0x189c (R/W) */
   volatile uint32_t pk1_consumer_idx; /**< Offset 0x18a0 (R/W) */
   uint8_t _pad13[0x1c];
   volatile uint32_t pk1_ring0_comp_cnt; /**< Offset 0x18c0 (R/W) */
   uint8_t _pad14[0x1c];
   volatile uint32_t pk1_status; /**< Offset 0x18e0 (R/W) */
   volatile uint32_t pk1_error_idx; /**< Offset 0x18e4 (R/W) */
   uint8_t _pad15[0x718];
   volatile uint32_t md_drbg0_cryptoram_random_num0[0x80]; /**< Offset 0x2000 (R/W) */
   volatile uint32_t md_drbg0_cryptoram_random_num1[0x80]; /**< Offset 0x2200 (R/W) */
   volatile uint32_t md_drbg0_cryptoram_psnl_str_p[0x8]; /**< Offset 0x2400 (R/W) */
   uint8_t _pad16[0x20];
   volatile uint32_t md_drbg0_cryptoram_entropy_inst[0xc]; /**< Offset 0x2440 (R/W) */
   uint8_t _pad17[0x10];
   volatile uint32_t md_drbg0_cryptoram_entropy_reseed[0x8]; /**< Offset 0x2480 (R/W) */
   uint8_t _pad18[0x60];
   volatile uint32_t md_drbg0_isr; /**< Offset 0x2500 (R/W) */
   volatile uint32_t md_drbg0_msk; /**< Offset 0x2504 (R/W) */
   volatile uint32_t md_drbg0_icr; /**< Offset 0x2508 (R/W) */
   volatile uint32_t md_drbg0_ver; /**< Offset 0x250c (R/W) */
   volatile uint32_t md_drbg0_gct; /**< Offset 0x2510 (R/W) */
   volatile uint32_t md_drbg0_rsvr0; /**< Offset 0x2514 (R/W) */
   volatile uint32_t md_drbg0_gs; /**< Offset 0x2518 (R/W) */
   volatile uint32_t md_drbg0_rsvr1; /**< Offset 0x251c (R/W) */
   volatile uint32_t md_drbg0_rng; /**< Offset 0x2520 (R/W) */
   volatile uint32_t md_drbg0_drnge; /**< Offset 0x2524 (R/W) */
   uint8_t _pad19[0xd8];
   volatile uint32_t md_trng0_controlreg; /**< Offset 0x2600 (R/W) */
   volatile uint32_t md_trng0_fifolevel; /**< Offset 0x2604 (R/W) */
   volatile uint32_t md_trng0_fifothresh; /**< Offset 0x2608 (R/W) */
   volatile uint32_t md_trng0_fifodepth; /**< Offset 0x260c (R/W) */
   volatile uint32_t md_trng0_key0; /**< Offset 0x2610 (R/W) */
   volatile uint32_t md_trng0_key1; /**< Offset 0x2614 (R/W) */
   volatile uint32_t md_trng0_key2; /**< Offset 0x2618 (R/W) */
   volatile uint32_t md_trng0_key3; /**< Offset 0x261c (R/W) */
   volatile uint32_t md_trng0_testdata; /**< Offset 0x2620 (R/W) */
   volatile uint32_t md_trng0_repthresh; /**< Offset 0x2624 (R/W) */
   volatile uint32_t md_trng0_prop1; /**< Offset 0x2628 (R/W) */
   volatile uint32_t md_trng0_prop2; /**< Offset 0x262c (R/W) */
   volatile uint32_t md_trng0_status; /**< Offset 0x2630 (R/W) */
   volatile uint32_t md_trng0_initwaitval; /**< Offset 0x2634 (R/W) */
   volatile uint32_t md_trng0_disableosc0; /**< Offset 0x2638 (R/W) */
   volatile uint32_t md_trng0_disableosc1; /**< Offset 0x263c (R/W) */
   volatile uint32_t md_trng0_swofftmrval; /**< Offset 0x2640 (R/W) */
   volatile uint32_t md_trng0_clkdiv; /**< Offset 0x2644 (R/W) */
   volatile uint32_t md_trng0_ais31conf0; /**< Offset 0x2648 (R/W) */
   volatile uint32_t md_trng0_ais31conf1; /**< Offset 0x264c (R/W) */
   volatile uint32_t md_trng0_ais31conf2; /**< Offset 0x2650 (R/W) */
   volatile uint32_t md_trng0_ais31status; /**< Offset 0x2654 (R/W) */
   uint8_t _pad20[0x9a8];
   volatile uint32_t md_drbg1_cryptoram_random_num0[0x80]; /**< Offset 0x3000 (R/W) */
   volatile uint32_t md_drbg1_cryptoram_random_num1[0x80]; /**< Offset 0x3200 (R/W) */
   volatile uint32_t md_drbg1_cryptoram_psnl_str_p[0x8]; /**< Offset 0x3400 (R/W) */
   uint8_t _pad21[0x20];
   volatile uint32_t md_drbg1_cryptoram_entropy_inst[0xc]; /**< Offset 0x3440 (R/W) */
   uint8_t _pad22[0x10];
   volatile uint32_t md_drbg1_cryptoram_entropy_reseed[0x8]; /**< Offset 0x3480 (R/W) */
   uint8_t _pad23[0x60];
   volatile uint32_t md_drbg1_isr; /**< Offset 0x3500 (R/W) */
   volatile uint32_t md_drbg1_msk; /**< Offset 0x3504 (R/W) */
   volatile uint32_t md_drbg1_icr; /**< Offset 0x3508 (R/W) */
   volatile uint32_t md_drbg1_ver; /**< Offset 0x350c (R/W) */
   volatile uint32_t md_drbg1_gct; /**< Offset 0x3510 (R/W) */
   volatile uint32_t md_drbg1_rsvr0; /**< Offset 0x3514 (R/W) */
   volatile uint32_t md_drbg1_gs; /**< Offset 0x3518 (R/W) */
   volatile uint32_t md_drbg1_rsvr1; /**< Offset 0x351c (R/W) */
   volatile uint32_t md_drbg1_rng; /**< Offset 0x3520 (R/W) */
   volatile uint32_t md_drbg1_drnge; /**< Offset 0x3524 (R/W) */
   uint8_t _pad24[0xd8];
   volatile uint32_t md_trng1_controlreg; /**< Offset 0x3600 (R/W) */
   volatile uint32_t md_trng1_fifolevel; /**< Offset 0x3604 (R/W) */
   volatile uint32_t md_trng1_fifothresh; /**< Offset 0x3608 (R/W) */
   volatile uint32_t md_trng1_fifodepth; /**< Offset 0x360c (R/W) */
   volatile uint32_t md_trng1_key0; /**< Offset 0x3610 (R/W) */
   volatile uint32_t md_trng1_key1; /**< Offset 0x3614 (R/W) */
   volatile uint32_t md_trng1_key2; /**< Offset 0x3618 (R/W) */
   volatile uint32_t md_trng1_key3; /**< Offset 0x361c (R/W) */
   volatile uint32_t md_trng1_testdata; /**< Offset 0x3620 (R/W) */
   volatile uint32_t md_trng1_repthresh; /**< Offset 0x3624 (R/W) */
   volatile uint32_t md_trng1_prop1; /**< Offset 0x3628 (R/W) */
   volatile uint32_t md_trng1_prop2; /**< Offset 0x362c (R/W) */
   volatile uint32_t md_trng1_status; /**< Offset 0x3630 (R/W) */
   volatile uint32_t md_trng1_initwaitval; /**< Offset 0x3634 (R/W) */
   volatile uint32_t md_trng1_disableosc0; /**< Offset 0x3638 (R/W) */
   volatile uint32_t md_trng1_disableosc1; /**< Offset 0x363c (R/W) */
   volatile uint32_t md_trng1_swofftmrval; /**< Offset 0x3640 (R/W) */
   volatile uint32_t md_trng1_clkdiv; /**< Offset 0x3644 (R/W) */
   volatile uint32_t md_trng1_ais31conf0; /**< Offset 0x3648 (R/W) */
   volatile uint32_t md_trng1_ais31conf1; /**< Offset 0x364c (R/W) */
   volatile uint32_t md_trng1_ais31conf2; /**< Offset 0x3650 (R/W) */
   volatile uint32_t md_trng1_ais31status; /**< Offset 0x3654 (R/W) */
   uint8_t _pad25[0x9a8];
   volatile uint32_t sym0_ring0_base_w0; /**< Offset 0x4000 (R/W) */
   volatile uint32_t sym0_ring0_base_w1; /**< Offset 0x4004 (R/W) */
   volatile uint32_t sym0_ring0_size; /**< Offset 0x4008 (R/W) */
   volatile uint32_t sym0_ring0_producer_idx; /**< Offset 0x400c (R/W) */
   volatile uint32_t sym0_ring1_base_w0; /**< Offset 0x4010 (R/W) */
   volatile uint32_t sym0_ring1_base_w1; /**< Offset 0x4014 (R/W) */
   volatile uint32_t sym0_ring1_size; /**< Offset 0x4018 (R/W) */
   volatile uint32_t sym0_ring1_producer_idx; /**< Offset 0x401c (R/W) */
   volatile uint32_t sym0_ring2_base_w0; /**< Offset 0x4020 (R/W) */
   volatile uint32_t sym0_ring2_base_w1; /**< Offset 0x4024 (R/W) */
   volatile uint32_t sym0_ring2_size; /**< Offset 0x4028 (R/W) */
   volatile uint32_t sym0_ring2_producer_idx; /**< Offset 0x402c (R/W) */
   volatile uint32_t sym0_ring3_base_w0; /**< Offset 0x4030 (R/W) */
   volatile uint32_t sym0_ring3_base_w1; /**< Offset 0x4034 (R/W) */
   volatile uint32_t sym0_ring3_size; /**< Offset 0x4038 (R/W) */
   volatile uint32_t sym0_ring3_producer_idx; /**< Offset 0x403c (R/W) */
   volatile uint32_t sym0_ring4_base_w0; /**< Offset 0x4040 (R/W) */
   volatile uint32_t sym0_ring4_base_w1; /**< Offset 0x4044 (R/W) */
   volatile uint32_t sym0_ring4_size; /**< Offset 0x4048 (R/W) */
   volatile uint32_t sym0_ring4_producer_idx; /**< Offset 0x404c (R/W) */
   volatile uint32_t sym0_ring5_base_w0; /**< Offset 0x4050 (R/W) */
   volatile uint32_t sym0_ring5_base_w1; /**< Offset 0x4054 (R/W) */
   volatile uint32_t sym0_ring5_size; /**< Offset 0x4058 (R/W) */
   volatile uint32_t sym0_ring5_producer_idx; /**< Offset 0x405c (R/W) */
   volatile uint32_t sym0_ring6_base_w0; /**< Offset 0x4060 (R/W) */
   volatile uint32_t sym0_ring6_base_w1; /**< Offset 0x4064 (R/W) */
   volatile uint32_t sym0_ring6_size; /**< Offset 0x4068 (R/W) */
   volatile uint32_t sym0_ring6_producer_idx; /**< Offset 0x406c (R/W) */
   volatile uint32_t sym0_ring7_base_w0; /**< Offset 0x4070 (R/W) */
   volatile uint32_t sym0_ring7_base_w1; /**< Offset 0x4074 (R/W) */
   volatile uint32_t sym0_ring7_size; /**< Offset 0x4078 (R/W) */
   volatile uint32_t sym0_ring7_producer_idx; /**< Offset 0x407c (R/W) */
   volatile uint32_t sym0_soft_rst; /**< Offset 0x4080 (R/W) */
   volatile uint32_t sym0_wrr_credit; /**< Offset 0x4084 (R/W) */
   volatile uint32_t sym0_abs_priority; /**< Offset 0x4088 (R/W) */
   uint8_t _pad26[0x14];
   volatile uint32_t sym0_ring0_consumer_idx; /**< Offset 0x40a0 (R/W) */
   volatile uint32_t sym0_ring1_consumer_idx; /**< Offset 0x40a4 (R/W) */
   volatile uint32_t sym0_ring2_consumer_idx; /**< Offset 0x40a8 (R/W) */
   volatile uint32_t sym0_ring3_consumer_idx; /**< Offset 0x40ac (R/W) */
   volatile uint32_t sym0_ring4_consumer_idx; /**< Offset 0x40b0 (R/W) */
   volatile uint32_t sym0_ring5_consumer_idx; /**< Offset 0x40b4 (R/W) */
   volatile uint32_t sym0_ring6_consumer_idx; /**< Offset 0x40b8 (R/W) */
   volatile uint32_t sym0_ring7_consumer_idx; /**< Offset 0x40bc (R/W) */
   volatile uint32_t sym0_ring0_comp_cnt; /**< Offset 0x40c0 (R/W) */
   volatile uint32_t sym0_ring1_comp_cnt; /**< Offset 0x40c4 (R/W) */
   volatile uint32_t sym0_ring2_comp_cnt; /**< Offset 0x40c8 (R/W) */
   volatile uint32_t sym0_ring3_comp_cnt; /**< Offset 0x40cc (R/W) */
   volatile uint32_t sym0_ring4_comp_cnt; /**< Offset 0x40d0 (R/W) */
   volatile uint32_t sym0_ring5_comp_cnt; /**< Offset 0x40d4 (R/W) */
   volatile uint32_t sym0_ring6_comp_cnt; /**< Offset 0x40d8 (R/W) */
   volatile uint32_t sym0_ring7_comp_cnt; /**< Offset 0x40dc (R/W) */
   volatile uint32_t sym0_status; /**< Offset 0x40e0 (R/W) */
   volatile uint32_t sym0_error_idx; /**< Offset 0x40e4 (R/W) */
   volatile uint32_t sym0_error_queue; /**< Offset 0x40e8 (R/W) */
   volatile uint32_t sym0_dbg_stream; /**< Offset 0x40ec (R/W) */
   volatile uint32_t sym0_dbg_fsm1; /**< Offset 0x40f0 (R/W) */
   volatile uint32_t sym0_dbg_fsm2; /**< Offset 0x40f4 (R/W) */
   volatile uint32_t sym0_dbg_fsm3; /**< Offset 0x40f8 (R/W) */
   volatile uint32_t sym0_dbg_fsm4; /**< Offset 0x40fc (R/W) */
   uint8_t _pad27[0x100];
   volatile uint32_t sym1_ring0_base_w0; /**< Offset 0x4200 (R/W) */
   volatile uint32_t sym1_ring0_base_w1; /**< Offset 0x4204 (R/W) */
   volatile uint32_t sym1_ring0_size; /**< Offset 0x4208 (R/W) */
   volatile uint32_t sym1_ring0_producer_idx; /**< Offset 0x420c (R/W) */
   volatile uint32_t sym1_ring1_base_w0; /**< Offset 0x4210 (R/W) */
   volatile uint32_t sym1_ring1_base_w1; /**< Offset 0x4214 (R/W) */
   volatile uint32_t sym1_ring1_size; /**< Offset 0x4218 (R/W) */
   volatile uint32_t sym1_ring1_producer_idx; /**< Offset 0x421c (R/W) */
   volatile uint32_t sym1_ring2_base_w0; /**< Offset 0x4220 (R/W) */
   volatile uint32_t sym1_ring2_base_w1; /**< Offset 0x4224 (R/W) */
   volatile uint32_t sym1_ring2_size; /**< Offset 0x4228 (R/W) */
   volatile uint32_t sym1_ring2_producer_idx; /**< Offset 0x422c (R/W) */
   volatile uint32_t sym1_ring3_base_w0; /**< Offset 0x4230 (R/W) */
   volatile uint32_t sym1_ring3_base_w1; /**< Offset 0x4234 (R/W) */
   volatile uint32_t sym1_ring3_size; /**< Offset 0x4238 (R/W) */
   volatile uint32_t sym1_ring3_producer_idx; /**< Offset 0x423c (R/W) */
   volatile uint32_t sym1_ring4_base_w0; /**< Offset 0x4240 (R/W) */
   volatile uint32_t sym1_ring4_base_w1; /**< Offset 0x4244 (R/W) */
   volatile uint32_t sym1_ring4_size; /**< Offset 0x4248 (R/W) */
   volatile uint32_t sym1_ring4_producer_idx; /**< Offset 0x424c (R/W) */
   volatile uint32_t sym1_ring5_base_w0; /**< Offset 0x4250 (R/W) */
   volatile uint32_t sym1_ring5_base_w1; /**< Offset 0x4254 (R/W) */
   volatile uint32_t sym1_ring5_size; /**< Offset 0x4258 (R/W) */
   volatile uint32_t sym1_ring5_producer_idx; /**< Offset 0x425c (R/W) */
   volatile uint32_t sym1_ring6_base_w0; /**< Offset 0x4260 (R/W) */
   volatile uint32_t sym1_ring6_base_w1; /**< Offset 0x4264 (R/W) */
   volatile uint32_t sym1_ring6_size; /**< Offset 0x4268 (R/W) */
   volatile uint32_t sym1_ring6_producer_idx; /**< Offset 0x426c (R/W) */
   volatile uint32_t sym1_ring7_base_w0; /**< Offset 0x4270 (R/W) */
   volatile uint32_t sym1_ring7_base_w1; /**< Offset 0x4274 (R/W) */
   volatile uint32_t sym1_ring7_size; /**< Offset 0x4278 (R/W) */
   volatile uint32_t sym1_ring7_producer_idx; /**< Offset 0x427c (R/W) */
   volatile uint32_t sym1_soft_rst; /**< Offset 0x4280 (R/W) */
   volatile uint32_t sym1_wrr_credit; /**< Offset 0x4284 (R/W) */
   volatile uint32_t sym1_abs_priority; /**< Offset 0x4288 (R/W) */
   uint8_t _pad28[0x14];
   volatile uint32_t sym1_ring0_consumer_idx; /**< Offset 0x42a0 (R/W) */
   volatile uint32_t sym1_ring1_consumer_idx; /**< Offset 0x42a4 (R/W) */
   volatile uint32_t sym1_ring2_consumer_idx; /**< Offset 0x42a8 (R/W) */
   volatile uint32_t sym1_ring3_consumer_idx; /**< Offset 0x42ac (R/W) */
   volatile uint32_t sym1_ring4_consumer_idx; /**< Offset 0x42b0 (R/W) */
   volatile uint32_t sym1_ring5_consumer_idx; /**< Offset 0x42b4 (R/W) */
   volatile uint32_t sym1_ring6_consumer_idx; /**< Offset 0x42b8 (R/W) */
   volatile uint32_t sym1_ring7_consumer_idx; /**< Offset 0x42bc (R/W) */
   volatile uint32_t sym1_ring0_comp_cnt; /**< Offset 0x42c0 (R/W) */
   volatile uint32_t sym1_ring1_comp_cnt; /**< Offset 0x42c4 (R/W) */
   volatile uint32_t sym1_ring2_comp_cnt; /**< Offset 0x42c8 (R/W) */
   volatile uint32_t sym1_ring3_comp_cnt; /**< Offset 0x42cc (R/W) */
   volatile uint32_t sym1_ring4_comp_cnt; /**< Offset 0x42d0 (R/W) */
   volatile uint32_t sym1_ring5_comp_cnt; /**< Offset 0x42d4 (R/W) */
   volatile uint32_t sym1_ring6_comp_cnt; /**< Offset 0x42d8 (R/W) */
   volatile uint32_t sym1_ring7_comp_cnt; /**< Offset 0x42dc (R/W) */
   volatile uint32_t sym1_status; /**< Offset 0x42e0 (R/W) */
   volatile uint32_t sym1_error_idx; /**< Offset 0x42e4 (R/W) */
   volatile uint32_t sym1_error_queue; /**< Offset 0x42e8 (R/W) */
   volatile uint32_t sym1_dbg_stream; /**< Offset 0x42ec (R/W) */
   volatile uint32_t sym1_dbg_fsm1; /**< Offset 0x42f0 (R/W) */
   volatile uint32_t sym1_dbg_fsm2; /**< Offset 0x42f4 (R/W) */
   volatile uint32_t sym1_dbg_fsm3; /**< Offset 0x42f8 (R/W) */
   volatile uint32_t sym1_dbg_fsm4; /**< Offset 0x42fc (R/W) */
   uint8_t _pad29[0x100];
   volatile uint32_t sym2_ring0_base_w0; /**< Offset 0x4400 (R/W) */
   volatile uint32_t sym2_ring0_base_w1; /**< Offset 0x4404 (R/W) */
   volatile uint32_t sym2_ring0_size; /**< Offset 0x4408 (R/W) */
   volatile uint32_t sym2_ring0_producer_idx; /**< Offset 0x440c (R/W) */
   volatile uint32_t sym2_ring1_base_w0; /**< Offset 0x4410 (R/W) */
   volatile uint32_t sym2_ring1_base_w1; /**< Offset 0x4414 (R/W) */
   volatile uint32_t sym2_ring1_size; /**< Offset 0x4418 (R/W) */
   volatile uint32_t sym2_ring1_producer_idx; /**< Offset 0x441c (R/W) */
   volatile uint32_t sym2_ring2_base_w0; /**< Offset 0x4420 (R/W) */
   volatile uint32_t sym2_ring2_base_w1; /**< Offset 0x4424 (R/W) */
   volatile uint32_t sym2_ring2_size; /**< Offset 0x4428 (R/W) */
   volatile uint32_t sym2_ring2_producer_idx; /**< Offset 0x442c (R/W) */
   volatile uint32_t sym2_ring3_base_w0; /**< Offset 0x4430 (R/W) */
   volatile uint32_t sym2_ring3_base_w1; /**< Offset 0x4434 (R/W) */
   volatile uint32_t sym2_ring3_size; /**< Offset 0x4438 (R/W) */
   volatile uint32_t sym2_ring3_producer_idx; /**< Offset 0x443c (R/W) */
   volatile uint32_t sym2_ring4_base_w0; /**< Offset 0x4440 (R/W) */
   volatile uint32_t sym2_ring4_base_w1; /**< Offset 0x4444 (R/W) */
   volatile uint32_t sym2_ring4_size; /**< Offset 0x4448 (R/W) */
   volatile uint32_t sym2_ring4_producer_idx; /**< Offset 0x444c (R/W) */
   volatile uint32_t sym2_ring5_base_w0; /**< Offset 0x4450 (R/W) */
   volatile uint32_t sym2_ring5_base_w1; /**< Offset 0x4454 (R/W) */
   volatile uint32_t sym2_ring5_size; /**< Offset 0x4458 (R/W) */
   volatile uint32_t sym2_ring5_producer_idx; /**< Offset 0x445c (R/W) */
   volatile uint32_t sym2_ring6_base_w0; /**< Offset 0x4460 (R/W) */
   volatile uint32_t sym2_ring6_base_w1; /**< Offset 0x4464 (R/W) */
   volatile uint32_t sym2_ring6_size; /**< Offset 0x4468 (R/W) */
   volatile uint32_t sym2_ring6_producer_idx; /**< Offset 0x446c (R/W) */
   volatile uint32_t sym2_ring7_base_w0; /**< Offset 0x4470 (R/W) */
   volatile uint32_t sym2_ring7_base_w1; /**< Offset 0x4474 (R/W) */
   volatile uint32_t sym2_ring7_size; /**< Offset 0x4478 (R/W) */
   volatile uint32_t sym2_ring7_producer_idx; /**< Offset 0x447c (R/W) */
   volatile uint32_t sym2_soft_rst; /**< Offset 0x4480 (R/W) */
   volatile uint32_t sym2_wrr_credit; /**< Offset 0x4484 (R/W) */
   volatile uint32_t sym2_abs_priority; /**< Offset 0x4488 (R/W) */
   uint8_t _pad30[0x14];
   volatile uint32_t sym2_ring0_consumer_idx; /**< Offset 0x44a0 (R/W) */
   volatile uint32_t sym2_ring1_consumer_idx; /**< Offset 0x44a4 (R/W) */
   volatile uint32_t sym2_ring2_consumer_idx; /**< Offset 0x44a8 (R/W) */
   volatile uint32_t sym2_ring3_consumer_idx; /**< Offset 0x44ac (R/W) */
   volatile uint32_t sym2_ring4_consumer_idx; /**< Offset 0x44b0 (R/W) */
   volatile uint32_t sym2_ring5_consumer_idx; /**< Offset 0x44b4 (R/W) */
   volatile uint32_t sym2_ring6_consumer_idx; /**< Offset 0x44b8 (R/W) */
   volatile uint32_t sym2_ring7_consumer_idx; /**< Offset 0x44bc (R/W) */
   volatile uint32_t sym2_ring0_comp_cnt; /**< Offset 0x44c0 (R/W) */
   volatile uint32_t sym2_ring1_comp_cnt; /**< Offset 0x44c4 (R/W) */
   volatile uint32_t sym2_ring2_comp_cnt; /**< Offset 0x44c8 (R/W) */
   volatile uint32_t sym2_ring3_comp_cnt; /**< Offset 0x44cc (R/W) */
   volatile uint32_t sym2_ring4_comp_cnt; /**< Offset 0x44d0 (R/W) */
   volatile uint32_t sym2_ring5_comp_cnt; /**< Offset 0x44d4 (R/W) */
   volatile uint32_t sym2_ring6_comp_cnt; /**< Offset 0x44d8 (R/W) */
   volatile uint32_t sym2_ring7_comp_cnt; /**< Offset 0x44dc (R/W) */
   volatile uint32_t sym2_status; /**< Offset 0x44e0 (R/W) */
   volatile uint32_t sym2_error_idx; /**< Offset 0x44e4 (R/W) */
   volatile uint32_t sym2_error_queue; /**< Offset 0x44e8 (R/W) */
   volatile uint32_t sym2_dbg_stream; /**< Offset 0x44ec (R/W) */
   volatile uint32_t sym2_dbg_fsm1; /**< Offset 0x44f0 (R/W) */
   volatile uint32_t sym2_dbg_fsm2; /**< Offset 0x44f4 (R/W) */
   volatile uint32_t sym2_dbg_fsm3; /**< Offset 0x44f8 (R/W) */
   volatile uint32_t sym2_dbg_fsm4; /**< Offset 0x44fc (R/W) */
   uint8_t _pad31[0x100];
   volatile uint32_t sym3_ring0_base_w0; /**< Offset 0x4600 (R/W) */
   volatile uint32_t sym3_ring0_base_w1; /**< Offset 0x4604 (R/W) */
   volatile uint32_t sym3_ring0_size; /**< Offset 0x4608 (R/W) */
   volatile uint32_t sym3_ring0_producer_idx; /**< Offset 0x460c (R/W) */
   volatile uint32_t sym3_ring1_base_w0; /**< Offset 0x4610 (R/W) */
   volatile uint32_t sym3_ring1_base_w1; /**< Offset 0x4614 (R/W) */
   volatile uint32_t sym3_ring1_size; /**< Offset 0x4618 (R/W) */
   volatile uint32_t sym3_ring1_producer_idx; /**< Offset 0x461c (R/W) */
   volatile uint32_t sym3_ring2_base_w0; /**< Offset 0x4620 (R/W) */
   volatile uint32_t sym3_ring2_base_w1; /**< Offset 0x4624 (R/W) */
   volatile uint32_t sym3_ring2_size; /**< Offset 0x4628 (R/W) */
   volatile uint32_t sym3_ring2_producer_idx; /**< Offset 0x462c (R/W) */
   volatile uint32_t sym3_ring3_base_w0; /**< Offset 0x4630 (R/W) */
   volatile uint32_t sym3_ring3_base_w1; /**< Offset 0x4634 (R/W) */
   volatile uint32_t sym3_ring3_size; /**< Offset 0x4638 (R/W) */
   volatile uint32_t sym3_ring3_producer_idx; /**< Offset 0x463c (R/W) */
   volatile uint32_t sym3_ring4_base_w0; /**< Offset 0x4640 (R/W) */
   volatile uint32_t sym3_ring4_base_w1; /**< Offset 0x4644 (R/W) */
   volatile uint32_t sym3_ring4_size; /**< Offset 0x4648 (R/W) */
   volatile uint32_t sym3_ring4_producer_idx; /**< Offset 0x464c (R/W) */
   volatile uint32_t sym3_ring5_base_w0; /**< Offset 0x4650 (R/W) */
   volatile uint32_t sym3_ring5_base_w1; /**< Offset 0x4654 (R/W) */
   volatile uint32_t sym3_ring5_size; /**< Offset 0x4658 (R/W) */
   volatile uint32_t sym3_ring5_producer_idx; /**< Offset 0x465c (R/W) */
   volatile uint32_t sym3_ring6_base_w0; /**< Offset 0x4660 (R/W) */
   volatile uint32_t sym3_ring6_base_w1; /**< Offset 0x4664 (R/W) */
   volatile uint32_t sym3_ring6_size; /**< Offset 0x4668 (R/W) */
   volatile uint32_t sym3_ring6_producer_idx; /**< Offset 0x466c (R/W) */
   volatile uint32_t sym3_ring7_base_w0; /**< Offset 0x4670 (R/W) */
   volatile uint32_t sym3_ring7_base_w1; /**< Offset 0x4674 (R/W) */
   volatile uint32_t sym3_ring7_size; /**< Offset 0x4678 (R/W) */
   volatile uint32_t sym3_ring7_producer_idx; /**< Offset 0x467c (R/W) */
   volatile uint32_t sym3_soft_rst; /**< Offset 0x4680 (R/W) */
   volatile uint32_t sym3_wrr_credit; /**< Offset 0x4684 (R/W) */
   volatile uint32_t sym3_abs_priority; /**< Offset 0x4688 (R/W) */
   uint8_t _pad32[0x14];
   volatile uint32_t sym3_ring0_consumer_idx; /**< Offset 0x46a0 (R/W) */
   volatile uint32_t sym3_ring1_consumer_idx; /**< Offset 0x46a4 (R/W) */
   volatile uint32_t sym3_ring2_consumer_idx; /**< Offset 0x46a8 (R/W) */
   volatile uint32_t sym3_ring3_consumer_idx; /**< Offset 0x46ac (R/W) */
   volatile uint32_t sym3_ring4_consumer_idx; /**< Offset 0x46b0 (R/W) */
   volatile uint32_t sym3_ring5_consumer_idx; /**< Offset 0x46b4 (R/W) */
   volatile uint32_t sym3_ring6_consumer_idx; /**< Offset 0x46b8 (R/W) */
   volatile uint32_t sym3_ring7_consumer_idx; /**< Offset 0x46bc (R/W) */
   volatile uint32_t sym3_ring0_comp_cnt; /**< Offset 0x46c0 (R/W) */
   volatile uint32_t sym3_ring1_comp_cnt; /**< Offset 0x46c4 (R/W) */
   volatile uint32_t sym3_ring2_comp_cnt; /**< Offset 0x46c8 (R/W) */
   volatile uint32_t sym3_ring3_comp_cnt; /**< Offset 0x46cc (R/W) */
   volatile uint32_t sym3_ring4_comp_cnt; /**< Offset 0x46d0 (R/W) */
   volatile uint32_t sym3_ring5_comp_cnt; /**< Offset 0x46d4 (R/W) */
   volatile uint32_t sym3_ring6_comp_cnt; /**< Offset 0x46d8 (R/W) */
   volatile uint32_t sym3_ring7_comp_cnt; /**< Offset 0x46dc (R/W) */
   volatile uint32_t sym3_status; /**< Offset 0x46e0 (R/W) */
   volatile uint32_t sym3_error_idx; /**< Offset 0x46e4 (R/W) */
   volatile uint32_t sym3_error_queue; /**< Offset 0x46e8 (R/W) */
   volatile uint32_t sym3_dbg_stream; /**< Offset 0x46ec (R/W) */
   volatile uint32_t sym3_dbg_fsm1; /**< Offset 0x46f0 (R/W) */
   volatile uint32_t sym3_dbg_fsm2; /**< Offset 0x46f4 (R/W) */
   volatile uint32_t sym3_dbg_fsm3; /**< Offset 0x46f8 (R/W) */
   volatile uint32_t sym3_dbg_fsm4; /**< Offset 0x46fc (R/W) */
   uint8_t _pad33[0x3900];
} Elb_hese_csr_dhs_crypto_ctl, *PTR_Elb_hese_csr_dhs_crypto_ctl;

/* Typedef for Group: elb_hese_csr::int_groups                             */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 591 */
typedef struct {
   volatile uint32_t intreg; /**< Offset 0x0 (R) */
   volatile uint32_t int_enable_rw_reg; /**< Offset 0x4 (R/W1S) */
   volatile uint32_t int_rw_reg; /**< Offset 0x8 (R) */
   uint8_t _pad0[0x4];
} Elb_hese_csr_int_groups, *PTR_Elb_hese_csr_int_groups;

/* Typedef for Group: elb_hese_csr::int_invf                               */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 592 */
typedef struct {
   volatile uint32_t intreg; /**< Offset 0x0 (R/W1C) */
   volatile uint32_t int_test_set; /**< Offset 0x4 (R/W1S) */
   volatile uint32_t int_enable_set; /**< Offset 0x8 (R/W1S) */
   volatile uint32_t int_enable_clear; /**< Offset 0xc (R/W1C) */
} Elb_hese_csr_int_invf, *PTR_Elb_hese_csr_int_invf;

/* Typedef for Memory: elb_mdinvf_csr::STA_aw_log_cam                      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr, line: 134 */
typedef struct {
   volatile uint32_t entry[0x81]; /**< Offset 0x0 (R) */
   uint8_t _pad0[0x1fc];
} Elb_mdinvf_csr_STA_aw_log_cam, *PTR_Elb_mdinvf_csr_STA_aw_log_cam;

/* Typedef for Memory: elb_mdinvf_csr::STA_ar_log_cam                      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr, line: 146 */
typedef struct {
   volatile uint32_t entry[0x81]; /**< Offset 0x0 (R) */
   uint8_t _pad0[0x1fc];
} Elb_mdinvf_csr_STA_ar_log_cam, *PTR_Elb_mdinvf_csr_STA_ar_log_cam;

/* Typedef for Memory: elb_mdinvf_csr::filter_addr_lo                      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 1 */
typedef struct {
   volatile uint32_t data[0x40]; /**< Offset 0x0 (R/W) */
} Elb_mdinvf_csr_filter_addr_lo, *PTR_Elb_mdinvf_csr_filter_addr_lo;

/* Typedef for Memory: elb_mdinvf_csr::filter_addr_hi                      */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 16 */
typedef struct {
   volatile uint32_t data[0x40]; /**< Offset 0x0 (R/W) */
} Elb_mdinvf_csr_filter_addr_hi, *PTR_Elb_mdinvf_csr_filter_addr_hi;

/* Typedef for Memory: elb_mdinvf_csr::filter_addr_host                    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 31 */
typedef struct {
   struct {
      volatile uint8_t data;
      uint8_t _pad[0x3];
   } data_t[0x40]; /**< Offset 0x0 (R/W) */
} Elb_mdinvf_csr_filter_addr_host, *PTR_Elb_mdinvf_csr_filter_addr_host;

/* Typedef for Memory: elb_mdinvf_csr::filter_addr_pic                     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 51 */
typedef struct {
   struct {
      volatile uint8_t data;
      uint8_t _pad[0x3];
   } data_t[0x40]; /**< Offset 0x0 (R/W) */
} Elb_mdinvf_csr_filter_addr_pic, *PTR_Elb_mdinvf_csr_filter_addr_pic;

/* Typedef for Memory: elb_mdinvf_csr::filter_addr_lif                     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 71 */
typedef struct {
   volatile uint32_t data[0x40]; /**< Offset 0x0 (R/W) */
} Elb_mdinvf_csr_filter_addr_lif, *PTR_Elb_mdinvf_csr_filter_addr_lif;

/* Typedef for Memory: elb_mdinvf_csr::filter_src                          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 91 */
typedef struct {
   volatile uint32_t data[0x40]; /**< Offset 0x0 (R/W) */
} Elb_mdinvf_csr_filter_src, *PTR_Elb_mdinvf_csr_filter_src;

/* Typedef for Memory: elb_mdinvf_csr::filter_axi_prot                     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 111 */
typedef struct {
   volatile uint32_t data[0x40]; /**< Offset 0x0 (R/W) */
} Elb_mdinvf_csr_filter_axi_prot, *PTR_Elb_mdinvf_csr_filter_axi_prot;

/* Typedef for Memory: elb_mdinvf_csr::filter_axi_cache                    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 144 */
typedef struct {
   volatile uint32_t data[0x40]; /**< Offset 0x0 (R/W) */
} Elb_mdinvf_csr_filter_axi_cache, *PTR_Elb_mdinvf_csr_filter_axi_cache;

/* Typedef for Memory: elb_mdinvf_csr::filter_acp                          */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 177 */
typedef struct {
   struct {
      volatile uint16_t data;
      uint8_t _pad[0x2];
   } data_t[0x40]; /**< Offset 0x0 (R/W) */
} Elb_mdinvf_csr_filter_acp, *PTR_Elb_mdinvf_csr_filter_acp;

/* Typedef for Memory: elb_mdinvf_csr::filter_addr_ctl                     */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 197 */
typedef struct {
   struct {
      volatile uint16_t value;
      uint8_t _pad[0x2];
   } value_t[0x40]; /**< Offset 0x0 (R/W) */
} Elb_mdinvf_csr_filter_addr_ctl, *PTR_Elb_mdinvf_csr_filter_addr_ctl;

/* Typedef for Memory: elb_mdinvf_csr::filter_hit_count                    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 240 */
typedef struct {
   volatile uint32_t value[0x40]; /**< Offset 0x0 (R/W) */
} Elb_mdinvf_csr_filter_hit_count, *PTR_Elb_mdinvf_csr_filter_hit_count;

/* Typedef for Wide Register: elb_mdinvf_csr::STA_freeze                   */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 325 */
typedef struct {
   volatile uint32_t STA_freeze_0_3; /**< Offset 0x0 (R) */
   volatile uint32_t STA_freeze_1_3; /**< Offset 0x4 (R) */
   volatile uint32_t STA_freeze_2_3; /**< Offset 0x8 (R) */
   uint8_t _pad0[0x4];
} Elb_mdinvf_csr_STA_freeze, *PTR_Elb_mdinvf_csr_STA_freeze;

/* Typedef for Wide Register: elb_mdinvf_csr::STA_interrupt                */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 335 */
typedef struct {
   volatile uint32_t STA_interrupt_0_3; /**< Offset 0x0 (R) */
   volatile uint32_t STA_interrupt_1_3; /**< Offset 0x4 (R) */
   volatile uint32_t STA_interrupt_2_3; /**< Offset 0x8 (R) */
   uint8_t _pad0[0x4];
} Elb_mdinvf_csr_STA_interrupt, *PTR_Elb_mdinvf_csr_STA_interrupt;

/* Typedef for Wide Register: elb_mdinvf_csr::filter_trace                 */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 344 */
typedef struct {
   volatile uint32_t filter_trace_0_3; /**< Offset 0x0 (R/W) */
   volatile uint32_t filter_trace_1_3; /**< Offset 0x4 (R/W) */
   volatile uint32_t filter_trace_2_3; /**< Offset 0x8 (R/W) */
   uint8_t _pad0[0x4];
} Elb_mdinvf_csr_filter_trace, *PTR_Elb_mdinvf_csr_filter_trace;

/* Typedef for Group: elb_mdinvf_csr::int_groups                           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 393 */
typedef struct {
   volatile uint32_t intreg; /**< Offset 0x0 (R) */
   volatile uint32_t int_enable_rw_reg; /**< Offset 0x4 (R/W1S) */
   volatile uint32_t int_rw_reg; /**< Offset 0x8 (R) */
   uint8_t _pad0[0x4];
} Elb_mdinvf_csr_int_groups, *PTR_Elb_mdinvf_csr_int_groups;

/* Typedef for Group: elb_mdinvf_csr::int_filter                           */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/elb_axi_filter.gcsr, line: 394 */
typedef struct {
   volatile uint32_t intreg; /**< Offset 0x0 (R/W1C) */
   volatile uint32_t int_test_set; /**< Offset 0x4 (R/W1S) */
   volatile uint32_t int_enable_set; /**< Offset 0x8 (R/W1S) */
   volatile uint32_t int_enable_clear; /**< Offset 0xc (R/W1C) */
} Elb_mdinvf_csr_int_filter, *PTR_Elb_mdinvf_csr_int_filter;

/* Typedef for Addressmap: elb_mdinvf_csr                                  */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/mdinvf.gcsr, line: 160 */
typedef struct {
   volatile uint32_t cfg_sameid_log; /**< Offset 0x0 (R/W) */
   uint8_t _pad0[0x3fc];
   Elb_mdinvf_csr_STA_aw_log_cam STA_aw_log_cam; /**< Offset 0x400 (R) */
   Elb_mdinvf_csr_STA_ar_log_cam STA_ar_log_cam; /**< Offset 0x800 (R) */
   Elb_mdinvf_csr_filter_addr_lo filter_addr_lo; /**< Offset 0xc00 (R/W) */
   Elb_mdinvf_csr_filter_addr_hi filter_addr_hi; /**< Offset 0xd00 (R/W) */
   Elb_mdinvf_csr_filter_addr_host filter_addr_host; /**< Offset 0xe00 (R/W) */
   Elb_mdinvf_csr_filter_addr_pic filter_addr_pic; /**< Offset 0xf00 (R/W) */
   Elb_mdinvf_csr_filter_addr_lif filter_addr_lif; /**< Offset 0x1000 (R/W) */
   Elb_mdinvf_csr_filter_src filter_src; /**< Offset 0x1100 (R/W) */
   Elb_mdinvf_csr_filter_axi_prot filter_axi_prot; /**< Offset 0x1200 (R/W) */
   Elb_mdinvf_csr_filter_axi_cache filter_axi_cache; /**< Offset 0x1300 (R/W) */
   Elb_mdinvf_csr_filter_acp filter_acp; /**< Offset 0x1400 (R/W) */
   Elb_mdinvf_csr_filter_addr_ctl filter_addr_ctl; /**< Offset 0x1500 (R/W) */
   volatile uint32_t filter_freeze_ctl; /**< Offset 0x1600 (R/W) */
   uint8_t _pad1[0xfc];
   Elb_mdinvf_csr_filter_hit_count filter_hit_count; /**< Offset 0x1700 (R/W) */
   volatile uint32_t CNT_read_deny; /**< Offset 0x1800 (R/W) */
   volatile uint32_t CNT_write_deny; /**< Offset 0x1804 (R/W) */
   volatile uint32_t CFG_clear_filter; /**< Offset 0x1808 (R/W) */
   volatile uint32_t STA_write_deny; /**< Offset 0x180c (R) */
   volatile uint32_t STA_read_deny; /**< Offset 0x1810 (R) */
   volatile uint32_t STA_reads; /**< Offset 0x1814 (R) */
   volatile uint32_t STA_writes; /**< Offset 0x1818 (R) */
   uint8_t _pad2[0x4];
   volatile Elb_mdinvf_csr_STA_freeze STA_freeze; /**< Offset 0x1820 (R) */
   volatile Elb_mdinvf_csr_STA_interrupt STA_interrupt; /**< Offset 0x1830 (R) */
   volatile Elb_mdinvf_csr_filter_trace filter_trace; /**< Offset 0x1840 (R/W) */
   volatile uint32_t filter_timeout; /**< Offset 0x1850 (R/W) */
   volatile uint32_t csr_intr; /**< Offset 0x1854 (R/W) */
   uint8_t _pad3[0x8];
   Elb_mdinvf_csr_int_groups int_groups; /**< Offset 0x1860 (R/W) */
   Elb_mdinvf_csr_int_filter int_filter; /**< Offset 0x1870 (R/W) */
   uint8_t _pad4[0x780];
} Elb_mdinvf_csr, *PTR_Elb_mdinvf_csr;

/* Typedef for Addressmap: elb_hese_csr                                    */
/* Source filename: /home/kinjal/pen_src/asic/elba/verif/common/csr_gen/hese.gcsr, line: 602 */
typedef struct {
   Elb_hese_csr_dhs_crypto_ctl dhs_crypto_ctl; /**< Offset 0x0 (R/W) */
   volatile uint32_t cfg_he_ctl; /**< Offset 0x8000 (R/W) */
   volatile uint32_t csr_intr; /**< Offset 0x8004 (R/W) */
   uint8_t _pad0[0x8];
   Elb_hese_csr_int_groups int_groups; /**< Offset 0x8010 (R/W) */
   Elb_hese_csr_int_invf int_invf; /**< Offset 0x8020 (R/W) */
   uint8_t _pad1[0x1fd0];
   Elb_mdinvf_csr mdinvf0; /**< Offset 0xa000 (R/W) */
   Elb_mdinvf_csr mdinvf1; /**< Offset 0xc000 (R/W) */
   volatile uint32_t base; /**< Offset 0xe000 (R/W) */
   uint8_t _pad2[0x1ffc];
} Elb_hese_csr, *PTR_Elb_hese_csr;
#endif

#endif
