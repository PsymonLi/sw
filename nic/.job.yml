---
targets:
  main: ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && make bazel-gtests && make run-gtests" ]
  storage:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --storage" ]
  def:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py" ]
  #config:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo eth --feature config" ]
  fte:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo fte --feature fte" ]
  fte2:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo fte --feature fte2" ]
  ftevxlan:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo fte --feature ftevxlan" ]
  norm: ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo norm --feature norm" ]
  eth:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo eth --feature eth" ]
  acl:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo acl --feature acl" ]
  proxy:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo proxy --feature proxy" ]
  ipsec:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo proxy --feature ipsec" ]
  networking:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo up2up --feature networking" ]
  vxlan:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo vxlan --feature vxlan" ]
  ipsg:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo eth --feature ipsg" ]
  firewall:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo firewall --feature firewall" ]
  admin:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo admin --feature admin" ]
  pin:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo fte --feature fte,hostpin --hostpin" ]
  pin2:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo fte --feature fte2 --hostpin" ]
  pinvxlan:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo fte --feature ftevxlan --hostpin" ]
  agent: ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && (./tools/start-hal-stub.sh &) && cd $GOPATH/src/github.com/pensando/sw && go test -v ./test/integ/venice_integ... -datapath=hal && go test -v ./test/integ/npminteg/..."]
  multicast:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo multicast --feature multicast" ]
  l4lb:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo l4lb --feature l4lb" ]
  recirc:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo recirc --feature recirc" ]
  classic:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo classic --feature classic --classic" ]
  parser:  ["sh", "-c", "cd /sw && make pull-assets && cd nic && make bazel-build && ./run.py --topo parser --feature parser" ]
cache:
  name: "sw"
  mount_dir: "/root/.cache"
image:
  name: "pensando/nic"
  bind_dir: "/sw"
  work_dir: "/sw/nic"
rebase: true
