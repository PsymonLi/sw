#include "nic/utils/agent_api/agent_api.hpp"
#include "nic/utils/agent_api/shared_constants.h"
#define IPv4_LEN 4
#define IPv6_LEN 16
#define L4PORT_LEN 2

void ipc_logger::set_ipc_instances (int numInst) 
{
    IPC_INSTANCES = numInst;
}

// init sets up shared memory for use by the ipc logger
int ipc_logger::init (void)
{
    // TBD: IPC message size needs to be dynamically
    // computed once we have a autogenerated API 
    // that does a sizeof() operation for uninitialized 
    // proto class
    // set_ipc_buf_sz();
    return ipc::setup_shm(IPC_MEM_SIZE, IPC_INSTANCES);
}

// deinit frees up the shared memory
void ipc_logger::deinit (void)
{
    ipc::tear_down_shm();
}

// factory creates a new instance of ipc_logger
ipc_logger *ipc_logger::factory (void)
{
    ipc *ipc_inst;

    ipc_inst = ipc::factory();
    if (!ipc_inst) {
        return nullptr;
    }

    ipc_logger *il = new(ipc_logger);
    il->pipe_ = ipc_inst;

    return il;
}

uint8_t *ipc_logger::get_buffer(int size)
{
    return (pipe_->get_buffer(size));
}

int ipc_logger::write_buffer(uint8_t *buf, int size)
{
    return (pipe_->put_buffer(buf, size));
}
