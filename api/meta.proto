syntax = "proto3";
package api;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

  option (gogoproto.unmarshaler_all) = true;
  option (gogoproto.marshaler_all) = true;

// TypeMeta contains the metadata about kind and version for all API objects.
message TypeMeta {
  // Kind represents the type of the API object.
  string Kind       = 1 [(gogoproto.jsontag) = "kind"];
  // APIVersion defines the version of the API object.
  string APIVersion = 2 [(gogoproto.jsontag) = "api-version,omitempty"];
}

// ListMeta contains the metadata for list of objects.
message ListMeta {
  // Resource version of object store at the time of list generation.
  string ResourceVersion = 1 [(gogoproto.jsontag) = "resource-version,omitempty"];
}

message Timestamp {
  google.protobuf.Timestamp time = 1 [(gogoproto.nullable) = false, (gogoproto.embed) = true ];
}
// ObjectMeta contains metadata that all objects stored in kvstore must have.
message ObjectMeta {
  // Name of the object, unique within a Namespace for scoped objects.
  string Name                 = 1 [(gogoproto.jsontag) = "name"];
  // Tenant is global namespace isolation for various objects. This can be automatically
  // filled in many cases based on the tenant a user, who created the object, belongs go.
  string Tenant               = 2 [(gogoproto.jsontag) = "tenant,omitempty"];
  // Namespace of the object, for scoped objects.
  string Namespace            = 3 [(gogoproto.jsontag) = "namespace,omitempty"];
  // Resource version in the object store. This can only be set by the server.
  string ResourceVersion      = 4 [(gogoproto.jsontag) = "resource-version,omitempty"];
  // UUID is the unique identifier for the object. This can only be set by the server.
  string UUID                 = 5 [(gogoproto.jsontag) = "uuid,omitempty"];
  // Labels are arbitrary (key,value) pairs associated with any object.
  map <string, string> Labels = 6 [(gogoproto.jsontag) = "labels,omitempty"];
  // CreationTime is the creation time of Object
  Timestamp CreationTime      = 7 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "creation-time,omitempty"];
  // ModTime is the Last Modification time of Object
  Timestamp ModTime           = 8 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "mod-time,omitempty"];
  // SelfLink is a link to accessing this object. When stored in the KV store this is
  //  the key in the kvstore and when the object is served from the API-GW it is the
  //  URI path. Examples
  //    - "/venice/tenants/tenants/tenant2" in the kvstore
  //    - "/v1/tenants/tenants/tenant2" when served by API Gateway.
  string SelfLink           = 9 [(gogoproto.jsontag) = "self-link,omitempty"];
}

// ObjectRef contains identifying information about an object.
message ObjectRef {
  // Tenant of the object.
  string Tenant     = 1 [(gogoproto.jsontag) = "tenant,omitempty"];
  // Namespace of the object, for scoped objects.
  string Namespace  = 2 [(gogoproto.jsontag) = "namespace,omitempty"];
  // Kind represents the type of the API object.
  string Kind       = 3 [(gogoproto.jsontag) = "kind"];
  // Name of the object, unique within a Namespace for scoped objects.
  string Name       = 4 [(gogoproto.jsontag) = "name"];
  // URI is a link to accessing the referenced object.
  string URI        = 5 [(gogoproto.jsontag) = "uri,omitempty"];
}

message ListWatchOptions {
  ObjectMeta O                        = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = ""];
  string LabelSelector                = 2 [(gogoproto.jsontag) = "label-selector,omitempty"];
  string FieldSelector                = 3 [(gogoproto.jsontag) = "field-selector,omitempty"];
  bool PrefixWatch                    = 4 [(gogoproto.jsontag) = "prefix-watch,omitempty"];
  repeated string FieldChangeSelector = 5 [(gogoproto.jsontag) = "field-change-selector,omitempty"];
}

// StatusResult contains possible statuses for a NIC.
message StatusResult {
  string Str = 1;
}

// Status is returned for calls that dont return objects.
message Status {
  TypeMeta T          = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = ""];
  // Result contains the status of the operation, success or failure.
  StatusResult Result = 2 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "result,omitempty"];
  // Message contains human readable form of the error.
  repeated string Message      = 3 [(gogoproto.jsontag) = "message,omitempty"];
  // Code is the HTTP status code.
  int32 Code          = 4 [(gogoproto.jsontag) = "code,omitempty"];
  // Reference to the object (optional) for which this status is being sent.
  ObjectRef Ref       = 5 [(gogoproto.jsontag) = "object-ref,omitempty"];
}

// Watch event types
enum EventType {
    CreateEvent   = 0;
    UpdateEvent   = 1;
    DeleteEvent   = 2;
}
