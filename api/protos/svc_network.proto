// {C} Copyright 2017 Pensando Systems Inc. All rights reserved.

syntax = "proto3";
// Configure and Manage Networks and Services.
package network;

// Mandatory imports.
import "google/api/annotations.proto";
import public "github.com/pensando/sw/venice/utils/apigen/annotations/includes.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/pensando/sw/api/labels/selector.proto";

import "tenant.proto";
import "network.proto";
import "lb.proto";
import "service.proto";
import "vrf.proto";
import "networkinterface.proto";
import "ipam.proto";
import "route.proto";
import "vr_peering_group.proto";
import "policer.proto";

// Network REST API
service NetworkV1 {
    // Prefix for all resources served by this service.
    option (venice.apiPrefix) = "network";
    // API Version.
    option (venice.apiVersion) = "v1";

    option (venice.apiGrpcCrudService) = "Network";
    option (venice.apiGrpcCrudService) = "Service";
    option (venice.apiGrpcCrudService) = "LbPolicy";
    option (venice.apiGrpcCrudService) = "VirtualRouter";
    option (venice.apiGrpcCrudService) = "NetworkInterface";
    option (venice.apiGrpcCrudService) = "IPAMPolicy";
    option (venice.apiGrpcCrudService) = "RoutingConfig";
    option (venice.apiGrpcCrudService) = "RouteTable";
    option (venice.apiGrpcCrudService) = "VirtualRouterPeeringGroup";
    option (venice.apiGrpcCrudService) = "PolicerProfile";

    option (venice.apiRestService) = {
         Object: "Network"
         Method: [ "post", "put", "delete", "get", "list", "watch", "label" ]
    };

    option (venice.apiRestService) = {
         Object: "NetworkInterface"
         Method: [ "put", "get", "list", "watch", "label" ]
    };

    option (venice.apiRestService) = {
         Object: "IPAMPolicy"
         Method: [ "post", "put", "delete", "get", "list", "watch", "label" ]
    };

    option (venice.apiRestService) = {
         Object: "VirtualRouter"
         Method: [ "post", "put", "delete", "get", "list", "watch", "label" ]
    };

    option (venice.apiRestService) = {
         Object: "RoutingConfig"
         Method: [ "post", "put", "delete", "get", "list", "watch", "label" ]
    };

    // only allow reading Route Table for now. In the future user could create route tables.
    option (venice.apiRestService) = {
         Object: "RouteTable"
         Method: [ "get", "list", "watch" ]
    };

    option (venice.apiRestService) = {
         Object: "VirtualRouterPeeringGroup"
         Method: [ "post", "put", "delete", "get", "list", "watch", "label" ]
    };

    option (venice.apiRestService) = {
         Object: "PolicerProfile"
        Method: [ "post", "put", "delete", "get", "list", "watch", "label" ]
    };
}
