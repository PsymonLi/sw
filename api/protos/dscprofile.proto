// {C} Copyright 2020 Pensando Systems Inc. All rights reserved

syntax = "proto3";
package cluster;

// Mandatory imports.
import "google/api/annotations.proto";
import public "github.com/pensando/sw/venice/utils/apigen/annotations/includes.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/pensando/sw/api/meta.proto";

// ------------------------------------- Profile Object ---------------------------
message PropagationStatus {
    // The Generation ID this status is for
    string GenerationID = 1 [(gogoproto.jsontag) = "generation-id"];
    // The number of Naples that this version has already been pushed to
    int32 Updated = 2 [(gogoproto.jsontag) = "updated"];
    // Number of Naples pending. If this is 0 it can be assumed that everything is up to date.
    int32 Pending = 3 [(gogoproto.jsontag) = "pending"];
    // The Version running on the slowest Naples
    string MinVersion = 4 [(gogoproto.jsontag) = "min-version"];
    // Textual description of propagation status
    string Status = 5 [(gogoproto.jsontag) = "status"];
    // list of DSCs where propagation did not complete
    repeated string PendingNaples = 6 [(gogoproto.jsontag) = "pending-dscs"];
}


// ProfileSpec - Spec applicable to DSC
message DSCProfileSpec {
    enum Deployment_Target
    {
       // ui-hint: Host
       HOST = 0; //Host target
       // ui-hint: Virtualized
       VIRTUALIZED   = 1; //Virtualized target
    }
    enum Feature_Set
    {
       // ui-hint: SmartNIC
       SMARTNIC   = 0; // Basic networking mode.
       // ui-hint: FlowAware
       FLOWAWARE = 1; // Flows are learnt in this mode
       // ui-hint: FlowAware with Firewall
       FLOWAWARE_FIREWALL  = 2; // Flows are learnt and policy enforced
       //ui-hint: SDN
       SDN = 3;
    }
    string DeploymentTarget    = 1 [(venice.check) = "StrEnum(DSCProfileSpec.Deployment_Target)",
                             (gogoproto.nullable) = true, (gogoproto.jsontag) = "deployment-target"];
    string FeatureSet = 2 [(venice.check) = "StrEnum(DSCProfileSpec.Feature_Set)",(gogoproto.nullable) = true, (gogoproto.jsontag)="feature-set"];
}

message DSCProfileStatus {
    // The status of the configuration propagation to naples
    PropagationStatus       PropagationStatus         = 1 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "propagation-status"];

}
// Profile
message DSCProfile {
    option (venice.objectPrefix) = {Collection: "dscprofiles"};
    api.TypeMeta          T      = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = ",inline"];
    api.ObjectMeta        O      = 2 [(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = "meta,omitempty"];
    DSCProfileSpec        Spec   = 3 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "spec,omitempty"];
    DSCProfileStatus      Status = 4 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "status,omitempty"];
}


