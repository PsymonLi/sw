// {C} Copyright 2020 Pensando Systems Inc. All rights reserved

syntax = "proto3";
package cluster;

// Mandatory imports.
import "google/api/annotations.proto";
import public "github.com/pensando/sw/venice/utils/apigen/annotations/includes.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/pensando/sw/api/meta.proto";

// ------------------------------------- Profile Object ---------------------------
message PropagationStatus {
    // The Generation ID this status is for
    string GenerationID = 1 [(gogoproto.jsontag) = "generation-id"];
    // The number of Naples that this version has already been pushed to
    int32 Updated = 2 [(gogoproto.jsontag) = "updated"];
    // Number of Naples pending. If this is 0 it can be assumed that everything is up to date.
    int32 Pending = 3 [(gogoproto.jsontag) = "pending"];
    // The Version running on the slowest Naples
    string MinVersion = 4 [(gogoproto.jsontag) = "min-version"];
    // Textual description of propagation status
    string Status = 5 [(gogoproto.jsontag) = "status"];
    // list of DSCs where propagation did not complete
    repeated string PendingNaples = 6 [(gogoproto.jsontag) = "pending-dscs"];
}

message FeatureSet {
    // ui-hint: InterVMServices
    bool InterVMServices  = 1; //Enables InterVMSerives in DSC

    // ui-hint: FlowAware 
    bool FlowAware        = 2; //Enables DSC to FlowAware

    // ui-hint: Firewall
    bool Firewall         = 3; //Enables Firewall feature in DSC
}


// ProfileSpec - Spec applicable to DSC
message DSCProfileSpec {
    FeatureSet Features = 1 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "feature-set"];
}

message DSCProfileStatus {
    // The status of the configuration propagation to naples
    PropagationStatus       PropagationStatus         = 1 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "propagation-status"];

}
// Profile
message DSCProfile {
    option (venice.objectPrefix) = {Collection: "dscprofiles"};
    api.TypeMeta          T      = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = ",inline"];
    api.ObjectMeta        O      = 2 [(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = "meta,omitempty"];
    DSCProfileSpec        Spec   = 3 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "spec,inline"];
    DSCProfileStatus      Status = 4 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "status,omitempty"];
}


