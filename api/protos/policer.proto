// {C} Copyright 2020 Pensando Systems Inc. All rights reserved.

syntax = "proto3";

package network;

// Mandatory imports.
import "google/api/annotations.proto";
import public "github.com/pensando/sw/venice/utils/apigen/annotations/includes.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/pensando/sw/api/meta.proto";
import "github.com/pensando/sw/api/labels/selector.proto";

import "tenant.proto";
import "sgpolicy.proto";

// ----------------------------- PolicerProfile Object -----------------------------

message PolicerAction {
    enum Action {
        DROP    = 0;
    }
    string PolicerAction    = 1 [(gogoproto.jsontag) = "policer-action,omitempty", (venice.check) = "StrEnum(PolicerAction.Action)"];
}

message PolicerCriteria {
    // Maximum permissible bytes per second before policer will start dropping traffic. Either BytesPerSecond/PacketsPerSecond can be specified
    uint64 BytesPerSecond   = 1 [(gogoproto.jsontag) = "bytes-per-second,omitempty"];
    // Maximum permissible packets per second before policer will start dropping traffic. Either BytesPerSecond/PacketsPerSecond can be specified
    uint64 PacketsPerSecond = 2 [(gogoproto.jsontag) = "packets-per-second,omitempty"];
    // Burst size in number of packets/bytes as policer criteria
    uint64 BurstSize        = 3 [(gogoproto.jsontag) = "burst-size,omitempty"];
}


message PolicerProfileSpec {
    // Traffic Policer Criteria
    PolicerCriteria Criteria    = 1 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "criteria"];

    // Traffc Policer Action
    PolicerAction ExceedAction  = 2 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "exceed-action"];
}

message PolicerProfileStatus {
    // The status of the configuration propagation to the Naples
    security.PropagationStatus  PropagationStatus   = 1 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "propagation-status"];
}

// PolicerProfile
message PolicerProfile {
    option (venice.objectPrefix)        = {Collection: "policer-profile", Path: "/{O.Tenant}"};
    api.TypeMeta T                      = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = ",inline"];
    api.ObjectMeta O                    = 2 [(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = "meta,omitempty"];
    // Spec contains the configuration of the Traffic Policer
    PolicerProfileSpec Spec             = 3 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "spec"];
    // Status contains the current state of the Traffic Policer
    PolicerProfileStatus Status         = 4 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "status,omitempty"];
}
