// {C} Copyright 2017 Pensando Systems Inc. All rights reserved.

syntax = "proto3";
package security;

// Mandatory imports.
import "google/api/annotations.proto";
import public "github.com/pensando/sw/venice/utils/apigen/annotations/includes.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/pensando/sw/api/meta.proto";
import "sgpolicy.proto";

// ----------------------------- App Object -----------------------------

// AppSpec - spec part of App object
message AppSpec {
    // list of (protocol, ports) pairs
    repeated ProtoPort ProtoPorts  = 1 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "proto-ports,omitempty"];
    // Timeout specifies for how long the connection be kept before removing the flow entry, specified in string as '200s', '5m', etc.
    string Timeout                          = 2 [(gogoproto.jsontag) = "timeout,omitempty", (venice.check) = "Duration()"];
    // ALG configuration if specified
    ALG    ALG                              = 3 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "alg,omitempty"];
}

// ALG specifies the application specific configuration for the list of applications mentioned below.
message ALG {
    enum ALGType
    {
        ICMP    = 0;
        DNS     = 1;
        FTP     = 2;
        SunRPC  = 3;
        MSRPC   = 4;
        TFTP    = 5;
        RTSP    = 6;
    }
    string     Type       = 1 [(venice.check) = "StrEnum(ALG.ALGType)"];
    IcmpAlg    IcmpAlg    = 2 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "icmp,omitempty"];
    DnsAlg     DnsAlg     = 3 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "dns,omitempty"];
    FtpAlg     FtpAlg     = 4 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "ftp,omitempty"];
    SunrpcAlg  SunrpcAlg  = 5 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "sunrpc,omitempty"];
    MsrpcAlg   MsrpcAlg   = 6 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "msrpc,omitempty"];
}

// ICMP ALG configuration
message IcmpAlg {
    // ICMP Type
    string Type = 1 [(gogoproto.jsontag) = "type,omitempty"];
    // ICMP Code is sub-command for a given ICMP Type
    string Code = 2 [(gogoproto.jsontag) = "code,omitempty"];
}

// DNS ALG configuration
message DnsAlg {
    // Drop packet if number of questions is more than one
    bool DropMultiQuestionPackets   = 1 [(gogoproto.jsontag) = "drop-multi-question-packets,omitempty"];
    // Drop if domain name size is > 255 bytes
    bool DropLargeDomainNamePackets = 2 [(gogoproto.jsontag) = "drop-large-domain-name-packets,omitempty"];
    // Drop if label length is 64 bytes or higher
    bool DropLongLabelPackets       = 3 [(gogoproto.jsontag) = "drop-long-label-packets,omitempty"];
    // Drop if number of zones in the request is more tha one
    bool DropMultiZonePackets       = 4 [(gogoproto.jsontag) = "drop-multi-zone-packets,omitempty"];
    // Maximum message length, default value is 512, maximum specified user value is 8129
    uint32 MaxMessageLength         = 5 [(gogoproto.jsontag) = "max-message-length,omitempty"];
    // Timeout for DHCP Query, default 60s
    string QueryResponseTimeout     = 6 [(gogoproto.jsontag) = "query-response-timeout,omitempty"];
}

// FTP ALG configuration
message FtpAlg {
    // Allow Mismatch IP Address in the payload compared to what is present in the IP header
    bool AllowMismatchIPAddress  = 1 [(gogoproto.jsontag) = "allow-mismatch-ip-address,omitempty"];
}

// SunRPC ALG configuration
message SunrpcAlg {
    // RPC Program identifier
    string ProgramID        = 1 [(gogoproto.jsontag) = "program-id,omitempty"];
    // Timeout for this program id is waht session timeout in the app defines
}

// MSRPC ALG configuration
message MsrpcAlg {
    // MSRPC Program identifier
    string ProgramUUID      = 1 [(gogoproto.jsontag) = "program-uuid,omitempty"];
    // Timeout for this program uuid is waht session timeout in the app defines
}

// AppStatus - status part of App object
message AppStatus {
    // List of security group policies attached to the app
    repeated string AttachedPolicies = 1 [(gogoproto.jsontag) = "attached-policies,omitempty"];
}

// App - Read-only objects auto-created by Venice
// One object per App that can be identified by Naples
message App {
    option (venice.objectPrefix) = {Collection: "apps", Path: "/{O.Tenant}"};
    api.TypeMeta T = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = ",inline"];
    api.ObjectMeta O = 2 [(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = "meta,omitempty"];

    AppSpec Spec = 3 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "spec,omitempty"];
    AppStatus Status = 4 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "status,omitempty"];
}
