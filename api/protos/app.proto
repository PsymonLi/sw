// {C} Copyright 2017 Pensando Systems Inc. All rights reserved.

syntax = "proto3";
package security;

// Mandatory imports.
import "google/api/annotations.proto";
import public "github.com/pensando/sw/venice/utils/apigen/annotations/includes.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/pensando/sw/api/meta.proto";

// ----------------------------- App Object -----------------------------

// AppSpec - spec part of App object
message AppSpec {
    // List of proto/port
    repeated string Protocol    = 1 [(gogoproto.nullable) = true, (gogoproto.jsontag) = "protocol,omitempty"];
    // ALG configuration if specified
    ALG             ALG         = 2 [(gogoproto.nullable) = true, (gogoproto.jsontag) = "alg,omitempty"];
}

// ALG specifies the application specific configuration for the list of applications mentioned below.
// TODO Investigate configuration for other ALGs
message ALG {
    DNS     DNS     = 1 [(gogoproto.nullable) = true, (gogoproto.jsontag) = "dns,omitempty"];
    SIP     SIP     = 2 [(gogoproto.nullable) = true, (gogoproto.jsontag) = "sip,omitempty"];
    SunRPC  SunRPC  = 3 [(gogoproto.nullable) = true, (gogoproto.jsontag) = "sunrpc,omitempty"];
    FTP     FTP     = 4 [(gogoproto.nullable) = true, (gogoproto.jsontag) = "ftp,omitempty"];
    MSRPC   MSRPC   = 5 [(gogoproto.nullable) = true, (gogoproto.jsontag) = "msrpc,omitempty"];
    TFTP    TFTP    = 6 [(gogoproto.nullable) = true, (gogoproto.jsontag) = "tftp,omitempty"];
    RSTP    RSTP    = 7 [(gogoproto.nullable) = true, (gogoproto.jsontag) = "rstp,omitempty"];
}

// DNS ALG configuration
message DNS {
    bool DropMultiQuestionPackets = 1 [(gogoproto.nullable) = true, (gogoproto.jsontag) = "drop-multi-question-packets,omitempty"];
}

// SIP ALG configuration
message SIP {
    uint32 MaxCallDuration = 1 [(gogoproto.nullable) = true, (gogoproto.jsontag) = "max-call-duration,omitemtpy"];
}

// SunRPC ALG configuration
message SunRPC {
    // RPC Program identifier
    string ProgramID        = 1 [(gogoproto.nullable) = true, (gogoproto.jsontag) = "program-id,omitempty"];
    // Defines timeout in hours, minutes, eg 24h, 300m
    string MapEntryTimeout  = 2 [(gogoproto.nullable) = true, (gogoproto.jsontag) = "map-entry-timeout"];
}

// FTP ALG configuration
message FTP {

}

// MSRPC ALG configuration
message MSRPC {

}

// TFTP ALG configuration
message TFTP {

}

// RSTP ALG configuration
message RSTP {

}

// AppStatus - status part of App object
message AppStatus {
    // List of security group policies attached to the app
    repeated string AttachedPolicies = 1 [(gogoproto.jsontag) = "attached-policies,omitempty"];
}

// App - Read-only objects auto-created by Venice
// One object per App that can be identified by Naples
message App {
    option (venice.objectPrefix) = { Collection: "apps" };
    api.TypeMeta T = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = ",inline"];
    api.ObjectMeta O = 2 [(gogoproto.embed) = true, (gogoproto.nullable) = false, (gogoproto.jsontag) = "meta,omitempty"];

    AppSpec Spec = 3 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "spec,omitempty"];
    AppStatus Status = 4 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "status,omitempty"];
}
