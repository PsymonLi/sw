{
  "swagger": "2.0",
  "info": {
    "title": "Service name",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/{O.Tenant}/flowExportPolicy": {
      "get": {
        "operationId": "AutoListFlowExportPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/telemetryFlowExportPolicyList"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "description": "Name of the object, unique within a Namespace for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "LabelSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "FieldSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "PrefixWatch",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "FieldChangeSelector",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "FlowExportPolicyV1"
        ]
      },
      "post": {
        "operationId": "AutoAddFlowExportPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/telemetryFlowExportPolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/telemetryFlowExportPolicy"
            }
          }
        ],
        "tags": [
          "FlowExportPolicyV1"
        ]
      }
    },
    "/{O.Tenant}/flowExportPolicy/{O.Name}": {
      "get": {
        "operationId": "AutoGetFlowExportPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/telemetryFlowExportPolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.Kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.APIVersion",
            "description": "APIVersion defines the version of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "FlowExportPolicyV1"
        ]
      },
      "delete": {
        "operationId": "AutoDeleteFlowExportPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/telemetryFlowExportPolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "FlowExportPolicyV1"
        ]
      },
      "put": {
        "operationId": "AutoUpdateFlowExportPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/telemetryFlowExportPolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/telemetryFlowExportPolicy"
            }
          }
        ],
        "tags": [
          "FlowExportPolicyV1"
        ]
      }
    },
    "/{O.Tenant}/fwlogPolicy": {
      "get": {
        "operationId": "AutoListFwlogPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/telemetryFwlogPolicyList"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "description": "Name of the object, unique within a Namespace for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "LabelSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "FieldSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "PrefixWatch",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "FieldChangeSelector",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "FwlogPolicyV1"
        ]
      }
    },
    "/{O.Tenant}/fwlogPolicy/{O.Name}": {
      "get": {
        "operationId": "AutoGetFwlogPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/telemetryFwlogPolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.Kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.APIVersion",
            "description": "APIVersion defines the version of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.RetentionTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.Filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "FwlogPolicyV1"
        ]
      },
      "put": {
        "operationId": "AutoUpdateFwlogPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/telemetryFwlogPolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/telemetryFwlogPolicy"
            }
          }
        ],
        "tags": [
          "FwlogPolicyV1"
        ]
      }
    },
    "/{O.Tenant}/statsPolicy": {
      "get": {
        "operationId": "AutoListStatsPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/telemetryStatsPolicyList"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "description": "Name of the object, unique within a Namespace for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "LabelSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "FieldSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "PrefixWatch",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "FieldChangeSelector",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "StatsPolicyV1"
        ]
      }
    },
    "/{O.Tenant}/statsPolicy/{O.Name}": {
      "get": {
        "operationId": "AutoGetStatsPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/telemetryStatsPolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.Kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.APIVersion",
            "description": "APIVersion defines the version of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.CompactionInterval",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.RetentionTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.DownSampleRetentionTime",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "StatsPolicyV1"
        ]
      },
      "put": {
        "operationId": "AutoUpdateStatsPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/telemetryStatsPolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/telemetryStatsPolicy"
            }
          }
        ],
        "tags": [
          "StatsPolicyV1"
        ]
      }
    }
  },
  "definitions": {
    "apiExportConfig": {
      "type": "object",
      "properties": {
        "Destination": {
          "type": "string",
          "title": "IP address or URL of the collector/entity to which the data is to be exported"
        },
        "Transport": {
          "type": "string",
          "title": "protocol and Port number where an external collector is gathering the data\nexample \"TCP/2055\""
        },
        "Credentials": {
          "$ref": "#/definitions/apiExternalCred",
          "title": "Credentials provide secure access to the collector"
        }
      },
      "title": "----------------------------- Export Config -----------------------------\nExport Config specifies server address and user credentials"
    },
    "apiExternalCred": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string",
          "title": "UserName is the login id to be used towards the external entity"
        },
        "Password": {
          "type": "string",
          "title": "Password is one time specified, not visibile on read operations\nOnly valid when UserName is defined\nTBD: need to add (venice.secret) = \"true\" support for this"
        },
        "BearerToken": {
          "type": "string",
          "title": "External entity supports bearer tokens for authentication and authorization\nToken refresh is not supported using OAuth2\nTBD: need to add (venice.secret) = \"true\" support for this"
        },
        "CertData": {
          "type": "string",
          "format": "byte",
          "description": "CertData holds PEM-encoded bytes (typically read from a client certificate file)."
        },
        "KeyData": {
          "type": "string",
          "format": "byte",
          "title": "KeyData holds PEM-encoded bytes (typically read from a client certificate key file).\nTBD: need to add (venice.secret) = \"true\" support for this"
        },
        "CaData": {
          "type": "string",
          "format": "byte",
          "description": "CaData holds PEM-encoded bytes (typically read from a root certificates bundle)."
        }
      },
      "title": "------------------------ ExternalCred Object ----------------------------\nExternalCred defines credentials required to access an external entity, such as\na stats collector, compute orchestration entity, or a syslog server.\nExternal entity may support a variety of methods, like username/password,\nTLS Client authentication, or Bearer Token based authentication. User is\nexpected to configure one of the methods"
    },
    "apiListMeta": {
      "type": "object",
      "properties": {
        "ResourceVersion": {
          "type": "string",
          "description": "Resource version of object store at the time of list generation."
        }
      },
      "description": "ListMeta contains the metadata for list of objects."
    },
    "apiListWatchOptions": {
      "type": "object",
      "properties": {
        "O": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "LabelSelector": {
          "type": "string"
        },
        "FieldSelector": {
          "type": "string"
        },
        "PrefixWatch": {
          "type": "boolean",
          "format": "boolean"
        },
        "FieldChangeSelector": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "apiObjectMeta": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "Name of the object, unique within a Namespace for scoped objects."
        },
        "Tenant": {
          "type": "string",
          "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go."
        },
        "Namespace": {
          "type": "string",
          "description": "Namespace of the object, for scoped objects."
        },
        "ResourceVersion": {
          "type": "string",
          "description": "Resource version in the object store. This can only be set by the server."
        },
        "UUID": {
          "type": "string",
          "description": "UUID is the unique identifier for the object. This can only be set by the server."
        },
        "Labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels are arbitrary (key,value) pairs associated with any object."
        },
        "CreationTime": {
          "$ref": "#/definitions/apiTimestamp",
          "title": "CreationTime is the creation time of Object"
        },
        "ModTime": {
          "$ref": "#/definitions/apiTimestamp",
          "title": "ModTime is the Last Modification time of Object"
        },
        "SelfLink": {
          "type": "string",
          "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway."
        }
      },
      "description": "ObjectMeta contains metadata that all objects stored in kvstore must have."
    },
    "apiSyslogExportConfig": {
      "type": "object",
      "properties": {
        "FacilityOverride": {
          "type": "string",
          "title": "override default facility with this in exported logs"
        },
        "Prefix": {
          "type": "string",
          "title": "add prefix in exported logs"
        }
      },
      "title": "syslog export configurations"
    },
    "apiTimestamp": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "apiTypeMeta": {
      "type": "object",
      "properties": {
        "Kind": {
          "type": "string",
          "description": "Kind represents the type of the API object."
        },
        "APIVersion": {
          "type": "string",
          "description": "APIVersion defines the version of the API object."
        }
      },
      "description": "TypeMeta contains the metadata about kind and version for all API objects."
    },
    "telemetryAutoMsgFlowExportPolicyWatchHelper": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Object": {
          "$ref": "#/definitions/telemetryFlowExportPolicy"
        }
      },
      "description": "=========================================================================================\n stats policy\n=========================================================================================",
      "title": "telemetry policies:\n-------------------------------------------------------------------------------\npolicy name         |  intended for        |     description                 |\n-------------------------------------------------------------------------------\nstats               |  sys admins          |    for all stats other than     |\n                    |                      |    fwlog/netflow.               |\n                    |                      |    includes retention,compaction|\n-------------------------------------------------------------------------------\nfwlog               |  security admins     |    firewall log policy          |\n                    |                      |    includes retention,          |\n                    |                      |    export parameters            |\n-------------------------------------------------------------------------------\n                    |                      |                                 |\nflowexport          |  network admins      |    netflow export policy        |\n                    |                      |    includes interval,           |\n                    |                      |    export parameters            |\n-------------------------------------------------------------------------------"
    },
    "telemetryAutoMsgFwlogPolicyWatchHelper": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string",
          "title": "Compaction Interval is the down sampling interval in minutes, hours or days\nthis would be mapped to GROUP BY TIME() in influxdb CQ\nexample: SELECT MAX(*) INTO downsampled_xxx FROM xxx GROUP BY time(CompactionInterval),host"
        },
        "Object": {
          "$ref": "#/definitions/telemetryFwlogPolicy",
          "title": "RetentionTime defines for how long to keep the stats data before it is deleted\nThe value is specified as a string format to be hours, days, or months etc.\ne.g. '24hrs', '72hours', '4days', '6d', '2months', '4mo', '1yr'"
        }
      },
      "title": "compaction method will be selected by Venice based on the mesaurement/table\ncollection interval will be selected by Venice based on workloads"
    },
    "telemetryAutoMsgStatsPolicyWatchHelper": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Object": {
          "$ref": "#/definitions/telemetryStatsPolicy"
        }
      }
    },
    "telemetryFlowExportPolicy": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "Spec": {
          "$ref": "#/definitions/telemetryFlowExportSpec"
        },
        "Status": {
          "$ref": "#/definitions/telemetryFlowExportStatus"
        }
      }
    },
    "telemetryFlowExportPolicyList": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta",
          "title": "Target contains ip/port/protocol"
        },
        "ListMeta": {
          "$ref": "#/definitions/apiListMeta",
          "title": "fwlog format, SYSLOG_BSD default"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/telemetryFlowExportPolicy"
          },
          "title": "filter firewall logs, FWLOG_ALL default"
        }
      },
      "title": "firewall log export config"
    },
    "telemetryFlowExportSpec": {
      "type": "object",
      "properties": {
        "Targets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/telemetryFlowExportTarget"
          },
          "title": "RetentionTime defines for how long to keep the fwlog before it is deleted"
        }
      },
      "title": "Venice collects fwlog irrespective of the export config"
    },
    "telemetryFlowExportStatus": {
      "type": "object"
    },
    "telemetryFlowExportTarget": {
      "type": "object",
      "properties": {
        "Interval": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Exports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiExportConfig"
          }
        }
      },
      "title": "========================================================================================\n flow export policy\n========================================================================================"
    },
    "telemetryFwlogExport": {
      "type": "object",
      "properties": {
        "Targets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiExportConfig"
          },
          "title": "Interval defines how often to push the records to an external or internal collector\nThe value is specified as a string format to be '10s', '20m', '20mins', '10secs', '10seconds'"
        },
        "Format": {
          "type": "string"
        },
        "Filter": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Export contains export parameters."
        },
        "SyslogConfig": {
          "$ref": "#/definitions/apiSyslogExportConfig"
        }
      }
    },
    "telemetryFwlogPolicy": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "Spec": {
          "$ref": "#/definitions/telemetryFwlogSpec"
        },
        "Status": {
          "$ref": "#/definitions/telemetryFwlogStatus"
        }
      }
    },
    "telemetryFwlogPolicyList": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "ListMeta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/telemetryFwlogPolicy"
          }
        }
      }
    },
    "telemetryFwlogSpec": {
      "type": "object",
      "properties": {
        "RetentionTime": {
          "type": "string"
        },
        "Filter": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Exports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/telemetryFwlogExport"
          }
        }
      }
    },
    "telemetryFwlogStatus": {
      "type": "object"
    },
    "telemetryStatsPolicy": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "Spec": {
          "$ref": "#/definitions/telemetryStatsSpec"
        },
        "Status": {
          "$ref": "#/definitions/telemetryStatsStatus"
        }
      }
    },
    "telemetryStatsPolicyList": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "ListMeta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/telemetryStatsPolicy"
          }
        }
      }
    },
    "telemetryStatsSpec": {
      "type": "object",
      "properties": {
        "CompactionInterval": {
          "type": "string"
        },
        "RetentionTime": {
          "type": "string"
        },
        "DownSampleRetentionTime": {
          "type": "string"
        }
      }
    },
    "telemetryStatsStatus": {
      "type": "object"
    }
  }
}
