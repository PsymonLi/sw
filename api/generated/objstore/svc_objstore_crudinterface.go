// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

package objstore

import (
	"context"

	api "github.com/pensando/sw/api"
	"github.com/pensando/sw/api/interfaces"
	"github.com/pensando/sw/venice/utils/kvstore"
)

// Dummy vars to suppress unused imports message
var _ context.Context
var _ api.ObjectMeta
var _ kvstore.Interface

// ObjstoreV1BucketInterface exposes the CRUD methods for Bucket
type ObjstoreV1BucketInterface interface {
	Create(ctx context.Context, in *Bucket) (*Bucket, error)
	Update(ctx context.Context, in *Bucket) (*Bucket, error)
	UpdateStatus(ctx context.Context, in *Bucket) (*Bucket, error)
	Label(ctx context.Context, in *api.Label) (*Bucket, error)
	Get(ctx context.Context, objMeta *api.ObjectMeta) (*Bucket, error)
	Delete(ctx context.Context, objMeta *api.ObjectMeta) (*Bucket, error)
	List(ctx context.Context, options *api.ListWatchOptions) ([]*Bucket, error)
	Watch(ctx context.Context, options *api.ListWatchOptions) (kvstore.Watcher, error)
	Allowed(oper apiintf.APIOperType) bool
}

// ObjstoreV1ObjectInterface exposes the CRUD methods for Object
type ObjstoreV1ObjectInterface interface {
	Create(ctx context.Context, in *Object) (*Object, error)
	Update(ctx context.Context, in *Object) (*Object, error)
	UpdateStatus(ctx context.Context, in *Object) (*Object, error)
	Label(ctx context.Context, in *api.Label) (*Object, error)
	Get(ctx context.Context, objMeta *api.ObjectMeta) (*Object, error)
	Delete(ctx context.Context, objMeta *api.ObjectMeta) (*Object, error)
	List(ctx context.Context, options *api.ListWatchOptions) ([]*Object, error)
	Watch(ctx context.Context, options *api.ListWatchOptions) (kvstore.Watcher, error)
	Allowed(oper apiintf.APIOperType) bool
}

// ObjstoreV1Interface exposes objects with CRUD operations allowed by the service
type ObjstoreV1Interface interface {
	Bucket() ObjstoreV1BucketInterface
	Object() ObjstoreV1ObjectInterface
	Watch(ctx context.Context, options *api.ListWatchOptions) (kvstore.Watcher, error)
}
