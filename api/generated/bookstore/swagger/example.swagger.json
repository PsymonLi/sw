{
  "swagger": "2.0",
  "info": {
    "title": "Service name",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/books/Restock": {
      "post": {
        "operationId": "Restock",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/bookstoreRestockResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bookstoreRestockRequest"
            }
          }
        ],
        "tags": [
          "BookstoreV1"
        ]
      }
    },
    "/books/{O.Name}": {
      "get": {
        "operationId": "AutoGetBook",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/bookstoreBook"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.Kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.APIVersion",
            "description": "APIVersion defines the version of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.ISBNId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.Author",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.IdProvider",
            "description": "Spec is not allowed to be Null hence disabling nullable.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.Category",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.UpdateTimestamp.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Spec.Terminate",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "Status.Inventory",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "BookstoreV1"
        ]
      },
      "put": {
        "operationId": "AutoUpdateBook",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/bookstoreBook"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bookstoreBook"
            }
          }
        ],
        "tags": [
          "BookstoreV1"
        ]
      }
    },
    "/orders": {
      "get": {
        "operationId": "AutoListOrder",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/bookstoreOrderList"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "description": "Name of the object, unique within a Namespace for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "LabelSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "FieldSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "PrefixWatch",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "BookstoreV1"
        ]
      },
      "post": {
        "operationId": "AutoAddOrder",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/bookstoreOrder"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bookstoreOrder"
            }
          }
        ],
        "tags": [
          "BookstoreV1"
        ]
      }
    },
    "/orders/{O.Name}": {
      "get": {
        "operationId": "AutoGetOrder",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/bookstoreOrder"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.Kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.APIVersion",
            "description": "APIVersion defines the version of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.Id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Status.Status",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "BookstoreV1"
        ]
      },
      "delete": {
        "operationId": "AutoDeleteOrder",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/bookstoreOrder"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BookstoreV1"
        ]
      },
      "put": {
        "operationId": "AutoUpdateOrder",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/bookstoreOrder"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bookstoreOrder"
            }
          }
        ],
        "tags": [
          "BookstoreV1"
        ]
      }
    },
    "/orders/{O.Name}/applydiscount": {
      "post": {
        "operationId": "Applydiscount",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/bookstoreOrder"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bookstoreApplyDiscountReq"
            }
          }
        ],
        "tags": [
          "BookstoreV1"
        ]
      }
    },
    "/orders/{O.Name}/cleardiscount": {
      "post": {
        "operationId": "Cleardiscount",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/bookstoreOrder"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bookstoreApplyDiscountReq"
            }
          }
        ],
        "tags": [
          "BookstoreV1"
        ]
      }
    },
    "/store": {
      "get": {
        "operationId": "AutoGetStore",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/bookstoreStore"
            }
          }
        },
        "parameters": [
          {
            "name": "T.Kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.APIVersion",
            "description": "APIVersion defines the version of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Name",
            "description": "Name of the object, unique within a Namespace for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.Contact",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Status.CurrentOutages",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "BookstoreV1"
        ]
      },
      "delete": {
        "operationId": "AutoDeleteStore",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/bookstoreStore"
            }
          }
        },
        "tags": [
          "BookstoreV1"
        ]
      },
      "post": {
        "operationId": "AutoAddStore",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/bookstoreStore"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bookstoreStore"
            }
          }
        ],
        "tags": [
          "BookstoreV1"
        ]
      },
      "put": {
        "operationId": "AutoUpdateStore",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/bookstoreStore"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bookstoreStore"
            }
          }
        ],
        "tags": [
          "BookstoreV1"
        ]
      }
    },
    "/store/AddOutage": {
      "post": {
        "operationId": "AddOutage",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/bookstoreStore"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/bookstoreOutageRequest"
            }
          }
        ],
        "tags": [
          "BookstoreV1"
        ]
      }
    }
  },
  "definitions": {
    "apiListMeta": {
      "type": "object",
      "properties": {
        "ResourceVersion": {
          "type": "string",
          "description": "Resource version of object store at the time of list generation."
        }
      },
      "description": "ListMeta contains the metadata for list of objects."
    },
    "apiListWatchOptions": {
      "type": "object",
      "properties": {
        "O": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "LabelSelector": {
          "type": "string"
        },
        "FieldSelector": {
          "type": "string"
        },
        "PrefixWatch": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "apiObjectMeta": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "Name of the object, unique within a Namespace for scoped objects."
        },
        "Tenant": {
          "type": "string",
          "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go."
        },
        "Namespace": {
          "type": "string",
          "description": "Namespace of the object, for scoped objects."
        },
        "ResourceVersion": {
          "type": "string",
          "description": "Resource version in the object store. This can only be set by the server."
        },
        "UUID": {
          "type": "string",
          "description": "UUID is the unique identifier for the object. This can only be set by the server."
        },
        "Labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels are arbitrary (key,value) pairs associated with any object."
        },
        "CreationTime": {
          "$ref": "#/definitions/apiTimestamp",
          "title": "CreationTime is the creation time of Object"
        },
        "ModTime": {
          "$ref": "#/definitions/apiTimestamp",
          "title": "ModTime is the Last Modification time of Object"
        },
        "SelfLink": {
          "type": "string",
          "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway."
        }
      },
      "description": "ObjectMeta contains metadata that all objects stored in kvstore must have."
    },
    "apiTimestamp": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "apiTypeMeta": {
      "type": "object",
      "properties": {
        "Kind": {
          "type": "string",
          "description": "Kind represents the type of the API object."
        },
        "APIVersion": {
          "type": "string",
          "description": "APIVersion defines the version of the API object."
        }
      },
      "description": "TypeMeta contains the metadata about kind and version for all API objects."
    },
    "bookstoreApplyDiscountReq": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "Coupon": {
          "type": "string"
        }
      }
    },
    "bookstoreAutoMsgBookWatchHelper": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Object": {
          "$ref": "#/definitions/bookstoreBook"
        }
      }
    },
    "bookstoreAutoMsgCouponWatchHelper": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Object": {
          "$ref": "#/definitions/bookstoreCoupon"
        }
      }
    },
    "bookstoreAutoMsgOrderWatchHelper": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Object": {
          "$ref": "#/definitions/bookstoreOrder"
        }
      }
    },
    "bookstoreAutoMsgPublisherWatchHelper": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Object": {
          "$ref": "#/definitions/bookstorePublisher"
        }
      }
    },
    "bookstoreAutoMsgStoreWatchHelper": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Object": {
          "$ref": "#/definitions/bookstoreStore"
        }
      }
    },
    "bookstoreBook": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "Spec": {
          "$ref": "#/definitions/bookstoreBookSpec",
          "description": "Added in  version 2 of the API."
        },
        "Status": {
          "$ref": "#/definitions/bookstoreBookStatus"
        }
      }
    },
    "bookstoreBookList": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "ListMeta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bookstoreBook"
          }
        }
      }
    },
    "bookstoreBookSpec": {
      "type": "object",
      "properties": {
        "ISBNId": {
          "type": "string"
        },
        "Author": {
          "type": "string"
        },
        "IdProvider": {
          "type": "string",
          "description": "Spec is not allowed to be Null hence disabling nullable."
        },
        "Category": {
          "type": "string"
        },
        "UpdateTimestamp": {
          "$ref": "#/definitions/apiTimestamp"
        },
        "Terminate": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "bookstoreBookStatus": {
      "type": "object",
      "properties": {
        "Inventory": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "bookstoreCoupon": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "DiscountCode": {
          "type": "string"
        }
      }
    },
    "bookstoreCouponList": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "ListMeta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bookstoreCoupon"
          }
        }
      }
    },
    "bookstoreOrder": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "Spec": {
          "$ref": "#/definitions/bookstoreOrderSpec"
        },
        "Status": {
          "$ref": "#/definitions/bookstoreOrderStatus"
        }
      }
    },
    "bookstoreOrderItem": {
      "type": "object",
      "properties": {
        "ISBNId": {
          "type": "string"
        },
        "Quantity": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "bookstoreOrderList": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "ListMeta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bookstoreOrder"
          }
        }
      }
    },
    "bookstoreOrderSpec": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Order": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bookstoreOrderItem"
          }
        }
      }
    },
    "bookstoreOrderStatus": {
      "type": "object",
      "properties": {
        "Status": {
          "type": "string"
        },
        "Filled": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bookstoreOrderSpec"
          }
        }
      }
    },
    "bookstoreOutageRequest": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "Reason": {
          "type": "string"
        }
      }
    },
    "bookstorePublisher": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "Spec": {
          "$ref": "#/definitions/bookstorePublisherSpec"
        }
      }
    },
    "bookstorePublisherList": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "ListMeta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bookstorePublisher"
          }
        }
      }
    },
    "bookstorePublisherSpec": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "WebAddr": {
          "type": "string"
        }
      }
    },
    "bookstoreRestockRequest": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "Reason": {
          "type": "string"
        }
      }
    },
    "bookstoreRestockResponse": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "Books": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "bookstoreStore": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "Spec": {
          "$ref": "#/definitions/bookstoreStoreSpec"
        },
        "Status": {
          "$ref": "#/definitions/bookstoreStoreStatus"
        }
      }
    },
    "bookstoreStoreList": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "ListMeta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/bookstoreStore"
          }
        }
      }
    },
    "bookstoreStoreSpec": {
      "type": "object",
      "properties": {
        "Contact": {
          "type": "string"
        }
      }
    },
    "bookstoreStoreStatus": {
      "type": "object",
      "properties": {
        "CurrentOutages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}
