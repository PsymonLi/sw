// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package monitoringApiServer is a auto generated package.
Input file: eventpolicy.proto
*/
package monitoring

import (
	"github.com/pensando/sw/venice/utils/runtime"
)

var typesMapEventpolicy = map[string]*runtime.Struct{

	"monitoring.EventExport": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"Format": runtime.Field{Name: "Format", JSONTag: "format", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"Selector": runtime.Field{Name: "Selector", JSONTag: "selector", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "fields.Selector"},

			"Target": runtime.Field{Name: "Target", JSONTag: "target", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.ExportConfig"},

			"SyslogConfig": runtime.Field{Name: "SyslogConfig", JSONTag: "syslog-config", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.SyslogExportConfig"},
		},
	},
	"monitoring.EventPolicy": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"T": runtime.Field{Name: "T", JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.TypeMeta"},

			"O": runtime.Field{Name: "O", JSONTag: "meta", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.ObjectMeta"},

			"Spec": runtime.Field{Name: "Spec", JSONTag: "spec", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "monitoring.EventPolicySpec"},

			"Status": runtime.Field{Name: "Status", JSONTag: "status", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "monitoring.EventPolicyStatus"},
		},
	},
	"monitoring.EventPolicySpec": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"Exports": runtime.Field{Name: "Exports", JSONTag: "exports", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "monitoring.EventExport"},
		},
	},
	"monitoring.EventPolicyStatus": &runtime.Struct{
		Fields: map[string]runtime.Field{},
	},
}

func init() {
	schema := runtime.GetDefaultScheme()
	schema.AddSchema(typesMapEventpolicy)
}
