// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package monitoring is a auto generated package.
Input file: techsupport.proto
*/
package monitoring

import (
	"context"
	"encoding/json"
	"net/http"

	"github.com/pensando/sw/api"
)

// Dummy definitions to suppress nonused warnings
var _ api.ObjectMeta

func encodeHTTPTechSupportNodeResult(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPTechSupportNodeResult(_ context.Context, r *http.Request) (interface{}, error) {
	var req TechSupportNodeResult
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqTechSupportNodeResult encodes GRPC request
func EncodeGrpcReqTechSupportNodeResult(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*TechSupportNodeResult)
	return req, nil
}

// DecodeGrpcReqTechSupportNodeResult decodes GRPC request
func DecodeGrpcReqTechSupportNodeResult(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*TechSupportNodeResult)
	return req, nil
}

// EncodeGrpcRespTechSupportNodeResult encodes GRC response
func EncodeGrpcRespTechSupportNodeResult(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespTechSupportNodeResult decodes GRPC response
func DecodeGrpcRespTechSupportNodeResult(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

func encodeHTTPTechSupportRequest(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPTechSupportRequest(_ context.Context, r *http.Request) (interface{}, error) {
	var req TechSupportRequest
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqTechSupportRequest encodes GRPC request
func EncodeGrpcReqTechSupportRequest(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*TechSupportRequest)
	return req, nil
}

// DecodeGrpcReqTechSupportRequest decodes GRPC request
func DecodeGrpcReqTechSupportRequest(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*TechSupportRequest)
	return req, nil
}

// EncodeGrpcRespTechSupportRequest encodes GRC response
func EncodeGrpcRespTechSupportRequest(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespTechSupportRequest decodes GRPC response
func DecodeGrpcRespTechSupportRequest(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

func encodeHTTPTechSupportRequestSpec(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPTechSupportRequestSpec(_ context.Context, r *http.Request) (interface{}, error) {
	var req TechSupportRequestSpec
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqTechSupportRequestSpec encodes GRPC request
func EncodeGrpcReqTechSupportRequestSpec(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*TechSupportRequestSpec)
	return req, nil
}

// DecodeGrpcReqTechSupportRequestSpec decodes GRPC request
func DecodeGrpcReqTechSupportRequestSpec(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*TechSupportRequestSpec)
	return req, nil
}

// EncodeGrpcRespTechSupportRequestSpec encodes GRC response
func EncodeGrpcRespTechSupportRequestSpec(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespTechSupportRequestSpec decodes GRPC response
func DecodeGrpcRespTechSupportRequestSpec(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

func encodeHTTPTechSupportRequestStatus(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPTechSupportRequestStatus(_ context.Context, r *http.Request) (interface{}, error) {
	var req TechSupportRequestStatus
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqTechSupportRequestStatus encodes GRPC request
func EncodeGrpcReqTechSupportRequestStatus(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*TechSupportRequestStatus)
	return req, nil
}

// DecodeGrpcReqTechSupportRequestStatus decodes GRPC request
func DecodeGrpcReqTechSupportRequestStatus(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*TechSupportRequestStatus)
	return req, nil
}

// EncodeGrpcRespTechSupportRequestStatus encodes GRC response
func EncodeGrpcRespTechSupportRequestStatus(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespTechSupportRequestStatus decodes GRPC response
func DecodeGrpcRespTechSupportRequestStatus(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}
