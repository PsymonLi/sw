// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package security is a auto generated package.
Input file: svc_security.proto
*/
package security

import (
	fmt "fmt"

	listerwatcher "github.com/pensando/sw/api/listerwatcher"
	"github.com/pensando/sw/venice/utils/kvstore"
	"github.com/pensando/sw/venice/utils/log"
)

// Dummy definitions to suppress nonused warnings
var _ kvstore.Interface
var _ log.Logger
var _ listerwatcher.WatcherClient

// MakeKey generates a KV store key for the object
func (m *AppList) MakeKey(prefix string) string {
	obj := App{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *AppUserGrpList) MakeKey(prefix string) string {
	obj := AppUserGrp{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *AppUserList) MakeKey(prefix string) string {
	obj := AppUser{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *CertificateList) MakeKey(prefix string) string {
	obj := Certificate{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *SecurityGroupList) MakeKey(prefix string) string {
	obj := SecurityGroup{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *SgpolicyList) MakeKey(prefix string) string {
	obj := Sgpolicy{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *TrafficEncryptionPolicyList) MakeKey(prefix string) string {
	obj := TrafficEncryptionPolicy{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *AutoMsgAppUserGrpWatchHelper) MakeKey(prefix string) string {
	obj := AppUserGrp{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *AutoMsgAppUserWatchHelper) MakeKey(prefix string) string {
	obj := AppUser{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *AutoMsgAppWatchHelper) MakeKey(prefix string) string {
	obj := App{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *AutoMsgCertificateWatchHelper) MakeKey(prefix string) string {
	obj := Certificate{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *AutoMsgSecurityGroupWatchHelper) MakeKey(prefix string) string {
	obj := SecurityGroup{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *AutoMsgSgpolicyWatchHelper) MakeKey(prefix string) string {
	obj := Sgpolicy{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *AutoMsgTrafficEncryptionPolicyWatchHelper) MakeKey(prefix string) string {
	obj := TrafficEncryptionPolicy{}
	return obj.MakeKey(prefix)
}

// Clone clones the object into into or creates one of into is nil
func (m *AppList) Clone(into interface{}) (interface{}, error) {
	var out *AppList
	var ok bool
	if into == nil {
		out = &AppList{}
	} else {
		out, ok = into.(*AppList)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *AppList) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *AppUserGrpList) Clone(into interface{}) (interface{}, error) {
	var out *AppUserGrpList
	var ok bool
	if into == nil {
		out = &AppUserGrpList{}
	} else {
		out, ok = into.(*AppUserGrpList)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *AppUserGrpList) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *AppUserList) Clone(into interface{}) (interface{}, error) {
	var out *AppUserList
	var ok bool
	if into == nil {
		out = &AppUserList{}
	} else {
		out, ok = into.(*AppUserList)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *AppUserList) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *AutoMsgAppUserGrpWatchHelper) Clone(into interface{}) (interface{}, error) {
	var out *AutoMsgAppUserGrpWatchHelper
	var ok bool
	if into == nil {
		out = &AutoMsgAppUserGrpWatchHelper{}
	} else {
		out, ok = into.(*AutoMsgAppUserGrpWatchHelper)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *AutoMsgAppUserGrpWatchHelper) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *AutoMsgAppUserGrpWatchHelper_WatchEvent) Clone(into interface{}) (interface{}, error) {
	var out *AutoMsgAppUserGrpWatchHelper_WatchEvent
	var ok bool
	if into == nil {
		out = &AutoMsgAppUserGrpWatchHelper_WatchEvent{}
	} else {
		out, ok = into.(*AutoMsgAppUserGrpWatchHelper_WatchEvent)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *AutoMsgAppUserGrpWatchHelper_WatchEvent) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *AutoMsgAppUserWatchHelper) Clone(into interface{}) (interface{}, error) {
	var out *AutoMsgAppUserWatchHelper
	var ok bool
	if into == nil {
		out = &AutoMsgAppUserWatchHelper{}
	} else {
		out, ok = into.(*AutoMsgAppUserWatchHelper)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *AutoMsgAppUserWatchHelper) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *AutoMsgAppUserWatchHelper_WatchEvent) Clone(into interface{}) (interface{}, error) {
	var out *AutoMsgAppUserWatchHelper_WatchEvent
	var ok bool
	if into == nil {
		out = &AutoMsgAppUserWatchHelper_WatchEvent{}
	} else {
		out, ok = into.(*AutoMsgAppUserWatchHelper_WatchEvent)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *AutoMsgAppUserWatchHelper_WatchEvent) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *AutoMsgAppWatchHelper) Clone(into interface{}) (interface{}, error) {
	var out *AutoMsgAppWatchHelper
	var ok bool
	if into == nil {
		out = &AutoMsgAppWatchHelper{}
	} else {
		out, ok = into.(*AutoMsgAppWatchHelper)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *AutoMsgAppWatchHelper) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *AutoMsgAppWatchHelper_WatchEvent) Clone(into interface{}) (interface{}, error) {
	var out *AutoMsgAppWatchHelper_WatchEvent
	var ok bool
	if into == nil {
		out = &AutoMsgAppWatchHelper_WatchEvent{}
	} else {
		out, ok = into.(*AutoMsgAppWatchHelper_WatchEvent)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *AutoMsgAppWatchHelper_WatchEvent) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *AutoMsgCertificateWatchHelper) Clone(into interface{}) (interface{}, error) {
	var out *AutoMsgCertificateWatchHelper
	var ok bool
	if into == nil {
		out = &AutoMsgCertificateWatchHelper{}
	} else {
		out, ok = into.(*AutoMsgCertificateWatchHelper)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *AutoMsgCertificateWatchHelper) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *AutoMsgCertificateWatchHelper_WatchEvent) Clone(into interface{}) (interface{}, error) {
	var out *AutoMsgCertificateWatchHelper_WatchEvent
	var ok bool
	if into == nil {
		out = &AutoMsgCertificateWatchHelper_WatchEvent{}
	} else {
		out, ok = into.(*AutoMsgCertificateWatchHelper_WatchEvent)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *AutoMsgCertificateWatchHelper_WatchEvent) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *AutoMsgSecurityGroupWatchHelper) Clone(into interface{}) (interface{}, error) {
	var out *AutoMsgSecurityGroupWatchHelper
	var ok bool
	if into == nil {
		out = &AutoMsgSecurityGroupWatchHelper{}
	} else {
		out, ok = into.(*AutoMsgSecurityGroupWatchHelper)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *AutoMsgSecurityGroupWatchHelper) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *AutoMsgSecurityGroupWatchHelper_WatchEvent) Clone(into interface{}) (interface{}, error) {
	var out *AutoMsgSecurityGroupWatchHelper_WatchEvent
	var ok bool
	if into == nil {
		out = &AutoMsgSecurityGroupWatchHelper_WatchEvent{}
	} else {
		out, ok = into.(*AutoMsgSecurityGroupWatchHelper_WatchEvent)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *AutoMsgSecurityGroupWatchHelper_WatchEvent) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *AutoMsgSgpolicyWatchHelper) Clone(into interface{}) (interface{}, error) {
	var out *AutoMsgSgpolicyWatchHelper
	var ok bool
	if into == nil {
		out = &AutoMsgSgpolicyWatchHelper{}
	} else {
		out, ok = into.(*AutoMsgSgpolicyWatchHelper)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *AutoMsgSgpolicyWatchHelper) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *AutoMsgSgpolicyWatchHelper_WatchEvent) Clone(into interface{}) (interface{}, error) {
	var out *AutoMsgSgpolicyWatchHelper_WatchEvent
	var ok bool
	if into == nil {
		out = &AutoMsgSgpolicyWatchHelper_WatchEvent{}
	} else {
		out, ok = into.(*AutoMsgSgpolicyWatchHelper_WatchEvent)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *AutoMsgSgpolicyWatchHelper_WatchEvent) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *AutoMsgTrafficEncryptionPolicyWatchHelper) Clone(into interface{}) (interface{}, error) {
	var out *AutoMsgTrafficEncryptionPolicyWatchHelper
	var ok bool
	if into == nil {
		out = &AutoMsgTrafficEncryptionPolicyWatchHelper{}
	} else {
		out, ok = into.(*AutoMsgTrafficEncryptionPolicyWatchHelper)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *AutoMsgTrafficEncryptionPolicyWatchHelper) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *AutoMsgTrafficEncryptionPolicyWatchHelper_WatchEvent) Clone(into interface{}) (interface{}, error) {
	var out *AutoMsgTrafficEncryptionPolicyWatchHelper_WatchEvent
	var ok bool
	if into == nil {
		out = &AutoMsgTrafficEncryptionPolicyWatchHelper_WatchEvent{}
	} else {
		out, ok = into.(*AutoMsgTrafficEncryptionPolicyWatchHelper_WatchEvent)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *AutoMsgTrafficEncryptionPolicyWatchHelper_WatchEvent) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *CertificateList) Clone(into interface{}) (interface{}, error) {
	var out *CertificateList
	var ok bool
	if into == nil {
		out = &CertificateList{}
	} else {
		out, ok = into.(*CertificateList)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *CertificateList) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *SecurityGroupList) Clone(into interface{}) (interface{}, error) {
	var out *SecurityGroupList
	var ok bool
	if into == nil {
		out = &SecurityGroupList{}
	} else {
		out, ok = into.(*SecurityGroupList)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *SecurityGroupList) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *SgpolicyList) Clone(into interface{}) (interface{}, error) {
	var out *SgpolicyList
	var ok bool
	if into == nil {
		out = &SgpolicyList{}
	} else {
		out, ok = into.(*SgpolicyList)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *SgpolicyList) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *TrafficEncryptionPolicyList) Clone(into interface{}) (interface{}, error) {
	var out *TrafficEncryptionPolicyList
	var ok bool
	if into == nil {
		out = &TrafficEncryptionPolicyList{}
	} else {
		out, ok = into.(*TrafficEncryptionPolicyList)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *TrafficEncryptionPolicyList) Defaults(ver string) bool {
	return false
}

// Validators

func (m *AppList) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *AppUserGrpList) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *AppUserList) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *AutoMsgAppUserGrpWatchHelper) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *AutoMsgAppUserGrpWatchHelper_WatchEvent) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *AutoMsgAppUserWatchHelper) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *AutoMsgAppUserWatchHelper_WatchEvent) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *AutoMsgAppWatchHelper) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *AutoMsgAppWatchHelper_WatchEvent) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *AutoMsgCertificateWatchHelper) Validate(ver string, ignoreStatus bool) bool {
	for _, v := range m.Events {
		if !v.Validate(ver, ignoreStatus) {
			return false
		}
	}
	return true
}

func (m *AutoMsgCertificateWatchHelper_WatchEvent) Validate(ver string, ignoreStatus bool) bool {
	if m.Object != nil && !m.Object.Validate(ver, ignoreStatus) {
		return false
	}
	return true
}

func (m *AutoMsgSecurityGroupWatchHelper) Validate(ver string, ignoreStatus bool) bool {
	for _, v := range m.Events {
		if !v.Validate(ver, ignoreStatus) {
			return false
		}
	}
	return true
}

func (m *AutoMsgSecurityGroupWatchHelper_WatchEvent) Validate(ver string, ignoreStatus bool) bool {
	if m.Object != nil && !m.Object.Validate(ver, ignoreStatus) {
		return false
	}
	return true
}

func (m *AutoMsgSgpolicyWatchHelper) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *AutoMsgSgpolicyWatchHelper_WatchEvent) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *AutoMsgTrafficEncryptionPolicyWatchHelper) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *AutoMsgTrafficEncryptionPolicyWatchHelper_WatchEvent) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *CertificateList) Validate(ver string, ignoreStatus bool) bool {
	for _, v := range m.Items {
		if !v.Validate(ver, ignoreStatus) {
			return false
		}
	}
	return true
}

func (m *SecurityGroupList) Validate(ver string, ignoreStatus bool) bool {
	for _, v := range m.Items {
		if !v.Validate(ver, ignoreStatus) {
			return false
		}
	}
	return true
}

func (m *SgpolicyList) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *TrafficEncryptionPolicyList) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func init() {

}
