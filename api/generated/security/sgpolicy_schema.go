// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package securityApiServer is a auto generated package.
Input file: sgpolicy.proto
*/
package security

import (
	"github.com/pensando/sw/venice/utils/runtime"
)

var typesMapSgpolicy = map[string]*runtime.Struct{

	"security.SGRule": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"Ports": runtime.Field{Name: "Ports", JSONTag: "ports", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"Action": runtime.Field{Name: "Action", JSONTag: "action", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"PeerGroup": runtime.Field{Name: "PeerGroup", JSONTag: "peer-group", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"Apps": runtime.Field{Name: "Apps", JSONTag: "apps", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"AppUser": runtime.Field{Name: "AppUser", JSONTag: "app-user", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"AppUserGrp": runtime.Field{Name: "AppUserGrp", JSONTag: "app-user-group", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},
		},
	},
	"security.Sgpolicy": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"T": runtime.Field{Name: "T", JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.TypeMeta"},

			"O": runtime.Field{Name: "O", JSONTag: "meta", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.ObjectMeta"},

			"Spec": runtime.Field{Name: "Spec", JSONTag: "spec", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "security.SgpolicySpec"},

			"Status": runtime.Field{Name: "Status", JSONTag: "status", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "security.SgpolicyStatus"},
		},
	},
	"security.SgpolicySpec": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"AttachGroups": runtime.Field{Name: "AttachGroups", JSONTag: "attach-groups", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"InRules": runtime.Field{Name: "InRules", JSONTag: "in-rules", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "security.SGRule"},

			"OutRules": runtime.Field{Name: "OutRules", JSONTag: "out-rules", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "security.SGRule"},
		},
	},
	"security.SgpolicyStatus": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"Workloads": runtime.Field{Name: "Workloads", JSONTag: "workloads", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "TYPE_STRING"},
		},
	},
}

func init() {
	schema := runtime.GetDefaultScheme()
	schema.AddSchema(typesMapSgpolicy)
}
