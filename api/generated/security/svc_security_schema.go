// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package securityApiServer is a auto generated package.
Input file: svc_security.proto
*/
package security

import (
	"reflect"

	"github.com/pensando/sw/venice/utils/runtime"
)

var typesMapSvc_security = map[string]*runtime.Struct{

	"security.AppList": &runtime.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(AppList{}) },
		Fields: map[string]runtime.Field{
			"T": runtime.Field{Name: "T", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.TypeMeta"},

			"ListMeta": runtime.Field{Name: "ListMeta", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.ListMeta"},

			"Items": runtime.Field{Name: "Items", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "security.App"},
		},
	},
	"security.AutoMsgAppWatchHelper": &runtime.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(AutoMsgAppWatchHelper{}) },
		Fields: map[string]runtime.Field{
			"Events": runtime.Field{Name: "Events", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "security.AutoMsgAppWatchHelper.WatchEvent"},
		},
	},
	"security.AutoMsgAppWatchHelper.WatchEvent": &runtime.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(AutoMsgAppWatchHelper_WatchEvent{}) },
		Fields: map[string]runtime.Field{
			"Type": runtime.Field{Name: "Type", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"Object": runtime.Field{Name: "Object", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "security.App"},
		},
	},
	"security.AutoMsgCertificateWatchHelper": &runtime.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(AutoMsgCertificateWatchHelper{}) },
		Fields: map[string]runtime.Field{
			"Events": runtime.Field{Name: "Events", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "security.AutoMsgCertificateWatchHelper.WatchEvent"},
		},
	},
	"security.AutoMsgCertificateWatchHelper.WatchEvent": &runtime.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(AutoMsgCertificateWatchHelper_WatchEvent{}) },
		Fields: map[string]runtime.Field{
			"Type": runtime.Field{Name: "Type", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"Object": runtime.Field{Name: "Object", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "security.Certificate"},
		},
	},
	"security.AutoMsgSecurityGroupWatchHelper": &runtime.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(AutoMsgSecurityGroupWatchHelper{}) },
		Fields: map[string]runtime.Field{
			"Events": runtime.Field{Name: "Events", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "security.AutoMsgSecurityGroupWatchHelper.WatchEvent"},
		},
	},
	"security.AutoMsgSecurityGroupWatchHelper.WatchEvent": &runtime.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(AutoMsgSecurityGroupWatchHelper_WatchEvent{}) },
		Fields: map[string]runtime.Field{
			"Type": runtime.Field{Name: "Type", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"Object": runtime.Field{Name: "Object", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "security.SecurityGroup"},
		},
	},
	"security.AutoMsgSgpolicyWatchHelper": &runtime.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(AutoMsgSgpolicyWatchHelper{}) },
		Fields: map[string]runtime.Field{
			"Events": runtime.Field{Name: "Events", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "security.AutoMsgSgpolicyWatchHelper.WatchEvent"},
		},
	},
	"security.AutoMsgSgpolicyWatchHelper.WatchEvent": &runtime.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(AutoMsgSgpolicyWatchHelper_WatchEvent{}) },
		Fields: map[string]runtime.Field{
			"Type": runtime.Field{Name: "Type", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"Object": runtime.Field{Name: "Object", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "security.Sgpolicy"},
		},
	},
	"security.AutoMsgTrafficEncryptionPolicyWatchHelper": &runtime.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(AutoMsgTrafficEncryptionPolicyWatchHelper{}) },
		Fields: map[string]runtime.Field{
			"Events": runtime.Field{Name: "Events", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "security.AutoMsgTrafficEncryptionPolicyWatchHelper.WatchEvent"},
		},
	},
	"security.AutoMsgTrafficEncryptionPolicyWatchHelper.WatchEvent": &runtime.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(AutoMsgTrafficEncryptionPolicyWatchHelper_WatchEvent{}) },
		Fields: map[string]runtime.Field{
			"Type": runtime.Field{Name: "Type", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"Object": runtime.Field{Name: "Object", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "security.TrafficEncryptionPolicy"},
		},
	},
	"security.CertificateList": &runtime.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(CertificateList{}) },
		Fields: map[string]runtime.Field{
			"T": runtime.Field{Name: "T", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.TypeMeta"},

			"ListMeta": runtime.Field{Name: "ListMeta", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.ListMeta"},

			"Items": runtime.Field{Name: "Items", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "security.Certificate"},
		},
	},
	"security.SecurityGroupList": &runtime.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(SecurityGroupList{}) },
		Fields: map[string]runtime.Field{
			"T": runtime.Field{Name: "T", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.TypeMeta"},

			"ListMeta": runtime.Field{Name: "ListMeta", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.ListMeta"},

			"Items": runtime.Field{Name: "Items", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "security.SecurityGroup"},
		},
	},
	"security.SgpolicyList": &runtime.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(SgpolicyList{}) },
		Fields: map[string]runtime.Field{
			"T": runtime.Field{Name: "T", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.TypeMeta"},

			"ListMeta": runtime.Field{Name: "ListMeta", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.ListMeta"},

			"Items": runtime.Field{Name: "Items", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "security.Sgpolicy"},
		},
	},
	"security.TrafficEncryptionPolicyList": &runtime.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(TrafficEncryptionPolicyList{}) },
		Fields: map[string]runtime.Field{
			"T": runtime.Field{Name: "T", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.TypeMeta"},

			"ListMeta": runtime.Field{Name: "ListMeta", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.ListMeta"},

			"Items": runtime.Field{Name: "Items", CLITag: runtime.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "security.TrafficEncryptionPolicy"},
		},
	},
}

func init() {
	schema := runtime.GetDefaultScheme()
	schema.AddSchema(typesMapSvc_security)
}
