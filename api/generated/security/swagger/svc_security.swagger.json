{
  "swagger": "2.0",
  "info": {
    "title": "Security API reference",
    "description": "Configure and manage security features like Security Groups, Rules, Certificates etc.\n\n API Objects are: App Certificate SGPolicy SecurityGroup TrafficEncryptionPolicy ",
    "version": "v1"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/configs/security/v1/apps": {
      "get": {
        "summary": "List App objects",
        "operationId": "ListApp",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityAppList"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "post": {
        "summary": "Create App object",
        "operationId": "AddApp",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityApp"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityApp"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/apps/{O.Name}": {
      "get": {
        "summary": "Get App object",
        "operationId": "GetApp",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityApp"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.api-version",
            "description": "APIVersion defines the version of the API object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.protocol",
            "description": "List of proto/port.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "dns.drop-multi-question-packets",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "sip.max-call-duration",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "sunrpc.program-id",
            "description": "RPC Program identifier.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sunrpc.map-entry-timeout",
            "description": "Defines timeout in hours, minutes, eg 24h, 300m.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.attached-policies",
            "description": "List of security group policies attached to the app.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "delete": {
        "summary": "Delete App object",
        "operationId": "DeleteApp",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityApp"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "put": {
        "summary": "Update App object",
        "operationId": "UpdateApp",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityApp"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityApp"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/certificates": {
      "get": {
        "summary": "List Certificate objects",
        "operationId": "ListCertificate_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityCertificateList"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "post": {
        "summary": "Create Certificate object",
        "operationId": "AddCertificate_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityCertificate"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityCertificate"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/certificates/{O.Name}": {
      "get": {
        "summary": "Get Certificate object",
        "operationId": "GetCertificate_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityCertificate"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.api-version",
            "description": "APIVersion defines the version of the API object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.description",
            "description": "Description of the purpose of this certificate.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.usages",
            "description": "Usage can be \"client\", \"server\" or \"trust-root\" in any combination.\nA \"server\" certificate is used by a server to authenticate itself to the client\nA \"client\" certificate is used by a client to authenticate itself to a server\nA \"trust-root\" certificate is self-signed and is only used to validate\ncertificates presented by peers.\n\"client\" and \"server\" certificates are always accompanied by a private key,\nwhereas \"trust-root\"-only certificates are not.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "spec.body",
            "description": "Body of the certificate in PEM encoding.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.trust-chain",
            "description": "Trust chain of the certificate in PEM encoding.\nThese certificates are treated opaquely. We do not process them in any way\nother than decoding them for informational purposes.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.validity",
            "description": "Status of the certificate: \"valid\", \"invalid\", \"expired\"\n\"invalid\" means that the signature of the certificate does not match or\nthere are inconsistencies in the trust chain.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.workloads",
            "description": "The workloads where this certificate has been deployed.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "delete": {
        "summary": "Delete Certificate object",
        "operationId": "DeleteCertificate_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityCertificate"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "put": {
        "summary": "Update Certificate object",
        "operationId": "UpdateCertificate_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityCertificate"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityCertificate"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/security-groups": {
      "get": {
        "summary": "List SecurityGroup objects",
        "operationId": "ListSecurityGroup_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySecurityGroupList"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "post": {
        "summary": "Create SecurityGroup object",
        "operationId": "AddSecurityGroup_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySecurityGroup"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitySecurityGroup"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/security-groups/{O.Name}": {
      "get": {
        "summary": "Get SecurityGroup object",
        "operationId": "GetSecurityGroup_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySecurityGroup"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.api-version",
            "description": "APIVersion defines the version of the API object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.service-labels",
            "description": "Service object selector.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "spec.match-prefixes",
            "description": "list of CIDRs that are part of this security group.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "status.workloads",
            "description": "list of workloads that are part of this security group.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "status.Policies",
            "description": "list of all policies attached to this security group.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "delete": {
        "summary": "Delete SecurityGroup object",
        "operationId": "DeleteSecurityGroup_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySecurityGroup"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "put": {
        "summary": "Update SecurityGroup object",
        "operationId": "UpdateSecurityGroup_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySecurityGroup"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitySecurityGroup"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/sgpolicies": {
      "get": {
        "summary": "List SGPolicy objects",
        "operationId": "ListSGPolicy_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySGPolicyList"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "post": {
        "summary": "Create SGPolicy object",
        "operationId": "AddSGPolicy_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySGPolicy"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitySGPolicy"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/sgpolicies/{O.Name}": {
      "get": {
        "summary": "Get SGPolicy object",
        "operationId": "GetSGPolicy_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySGPolicy"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.api-version",
            "description": "APIVersion defines the version of the API object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.attach-groups",
            "description": "list of security groups this policy is attached to.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "spec.attach-tenant",
            "description": "specifies if the set of rules need to be attached globally to a tenant.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "status.workloads",
            "description": "list of workloads in this group.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "propagation-status.generation-id",
            "description": "The Generation ID this status is for.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "propagation-status.updated",
            "description": "The number of Naples that this version has already been pushed to.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "propagation-status.pending",
            "description": "Number of Naples pending. If this is 0 it can be assumed that everything is up to date.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "propagation-status.min-version",
            "description": "The Version running on the slowest Naples.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "delete": {
        "summary": "Delete SGPolicy object",
        "operationId": "DeleteSGPolicy_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySGPolicy"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "put": {
        "summary": "Update SGPolicy object",
        "operationId": "UpdateSGPolicy_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySGPolicy"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitySGPolicy"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/tenant/{O.Tenant}/certificates": {
      "get": {
        "summary": "List Certificate objects",
        "operationId": "ListCertificate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityCertificateList"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "post": {
        "summary": "Create Certificate object",
        "operationId": "AddCertificate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityCertificate"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityCertificate"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/tenant/{O.Tenant}/certificates/{O.Name}": {
      "get": {
        "summary": "Get Certificate object",
        "operationId": "GetCertificate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityCertificate"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.api-version",
            "description": "APIVersion defines the version of the API object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.description",
            "description": "Description of the purpose of this certificate.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.usages",
            "description": "Usage can be \"client\", \"server\" or \"trust-root\" in any combination.\nA \"server\" certificate is used by a server to authenticate itself to the client\nA \"client\" certificate is used by a client to authenticate itself to a server\nA \"trust-root\" certificate is self-signed and is only used to validate\ncertificates presented by peers.\n\"client\" and \"server\" certificates are always accompanied by a private key,\nwhereas \"trust-root\"-only certificates are not.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "spec.body",
            "description": "Body of the certificate in PEM encoding.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.trust-chain",
            "description": "Trust chain of the certificate in PEM encoding.\nThese certificates are treated opaquely. We do not process them in any way\nother than decoding them for informational purposes.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.validity",
            "description": "Status of the certificate: \"valid\", \"invalid\", \"expired\"\n\"invalid\" means that the signature of the certificate does not match or\nthere are inconsistencies in the trust chain.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.workloads",
            "description": "The workloads where this certificate has been deployed.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "delete": {
        "summary": "Delete Certificate object",
        "operationId": "DeleteCertificate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityCertificate"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "put": {
        "summary": "Update Certificate object",
        "operationId": "UpdateCertificate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityCertificate"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityCertificate"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/tenant/{O.Tenant}/security-groups": {
      "get": {
        "summary": "List SecurityGroup objects",
        "operationId": "ListSecurityGroup",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySecurityGroupList"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "post": {
        "summary": "Create SecurityGroup object",
        "operationId": "AddSecurityGroup",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySecurityGroup"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitySecurityGroup"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/tenant/{O.Tenant}/security-groups/{O.Name}": {
      "get": {
        "summary": "Get SecurityGroup object",
        "operationId": "GetSecurityGroup",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySecurityGroup"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.api-version",
            "description": "APIVersion defines the version of the API object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.service-labels",
            "description": "Service object selector.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "spec.match-prefixes",
            "description": "list of CIDRs that are part of this security group.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "status.workloads",
            "description": "list of workloads that are part of this security group.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "status.Policies",
            "description": "list of all policies attached to this security group.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "delete": {
        "summary": "Delete SecurityGroup object",
        "operationId": "DeleteSecurityGroup",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySecurityGroup"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "put": {
        "summary": "Update SecurityGroup object",
        "operationId": "UpdateSecurityGroup",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySecurityGroup"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitySecurityGroup"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/tenant/{O.Tenant}/sgpolicies": {
      "get": {
        "summary": "List SGPolicy objects",
        "operationId": "ListSGPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySGPolicyList"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "post": {
        "summary": "Create SGPolicy object",
        "operationId": "AddSGPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySGPolicy"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitySGPolicy"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/tenant/{O.Tenant}/sgpolicies/{O.Name}": {
      "get": {
        "summary": "Get SGPolicy object",
        "operationId": "GetSGPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySGPolicy"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.api-version",
            "description": "APIVersion defines the version of the API object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.attach-groups",
            "description": "list of security groups this policy is attached to.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "spec.attach-tenant",
            "description": "specifies if the set of rules need to be attached globally to a tenant.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "status.workloads",
            "description": "list of workloads in this group.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "propagation-status.generation-id",
            "description": "The Generation ID this status is for.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "propagation-status.updated",
            "description": "The number of Naples that this version has already been pushed to.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "propagation-status.pending",
            "description": "Number of Naples pending. If this is 0 it can be assumed that everything is up to date.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "propagation-status.min-version",
            "description": "The Version running on the slowest Naples.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "delete": {
        "summary": "Delete SGPolicy object",
        "operationId": "DeleteSGPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySGPolicy"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "put": {
        "summary": "Update SGPolicy object",
        "operationId": "UpdateSGPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySGPolicy"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitySGPolicy"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/tenant/{O.Tenant}/trafficEncryptionPolicy": {
      "post": {
        "summary": "Create TrafficEncryptionPolicy object",
        "operationId": "AddTrafficEncryptionPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityTrafficEncryptionPolicy"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityTrafficEncryptionPolicy"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/tenant/{O.Tenant}/trafficEncryptionPolicy/{O.Name}": {
      "get": {
        "summary": "Get TrafficEncryptionPolicy object",
        "operationId": "GetTrafficEncryptionPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityTrafficEncryptionPolicy"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.api-version",
            "description": "APIVersion defines the version of the API object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.mode",
            "description": "Possible values: TLS, IPsec.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tls.version",
            "description": "TLS version: only supported value at present is 1.2.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tls.cipher-suite",
            "description": "The name of the cipher suite in IANA format\ndefault is TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ipsec.encryption-transform",
            "description": "ESP encryption algorithm. Default is \"aes-256-gcm-128\" (See RFC4106).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ipsec.integrity-transform",
            "description": "ESP integrity algorithm.\nDefault is \"NULL\" (must be \"NULL\" if AES-GCM is used for encryption).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.key-rotation-interval-secs",
            "description": "How often the keys should be rotated, in seconds.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "delete": {
        "summary": "Delete TrafficEncryptionPolicy object",
        "operationId": "DeleteTrafficEncryptionPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityTrafficEncryptionPolicy"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "put": {
        "summary": "Update TrafficEncryptionPolicy object",
        "operationId": "UpdateTrafficEncryptionPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityTrafficEncryptionPolicy"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityTrafficEncryptionPolicy"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/trafficEncryptionPolicy": {
      "post": {
        "summary": "Create TrafficEncryptionPolicy object",
        "operationId": "AddTrafficEncryptionPolicy_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityTrafficEncryptionPolicy"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityTrafficEncryptionPolicy"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/trafficEncryptionPolicy/{O.Name}": {
      "get": {
        "summary": "Get TrafficEncryptionPolicy object",
        "operationId": "GetTrafficEncryptionPolicy_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityTrafficEncryptionPolicy"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.api-version",
            "description": "APIVersion defines the version of the API object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.mode",
            "description": "Possible values: TLS, IPsec.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tls.version",
            "description": "TLS version: only supported value at present is 1.2.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tls.cipher-suite",
            "description": "The name of the cipher suite in IANA format\ndefault is TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ipsec.encryption-transform",
            "description": "ESP encryption algorithm. Default is \"aes-256-gcm-128\" (See RFC4106).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ipsec.integrity-transform",
            "description": "ESP integrity algorithm.\nDefault is \"NULL\" (must be \"NULL\" if AES-GCM is used for encryption).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.key-rotation-interval-secs",
            "description": "How often the keys should be rotated, in seconds.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "delete": {
        "summary": "Delete TrafficEncryptionPolicy object",
        "operationId": "DeleteTrafficEncryptionPolicy_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityTrafficEncryptionPolicy"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "security/v1"
        ]
      },
      "put": {
        "summary": "Update TrafficEncryptionPolicy object",
        "operationId": "UpdateTrafficEncryptionPolicy_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityTrafficEncryptionPolicy"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityTrafficEncryptionPolicy"
            }
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/watch/apps": {
      "get": {
        "summary": "Watch App objects",
        "operationId": "WatchApp",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/securityAutoMsgAppWatchHelper"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/watch/certificates": {
      "get": {
        "summary": "Watch Certificate objects",
        "operationId": "WatchCertificate_1",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/securityAutoMsgCertificateWatchHelper"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/watch/security-groups": {
      "get": {
        "summary": "Watch SecurityGroup objects",
        "operationId": "WatchSecurityGroup_1",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/securityAutoMsgSecurityGroupWatchHelper"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/watch/sgpolicies": {
      "get": {
        "summary": "Watch SGPolicy objects",
        "operationId": "WatchSGPolicy_1",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/securityAutoMsgSGPolicyWatchHelper"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/watch/tenant/{O.Tenant}/certificates": {
      "get": {
        "summary": "Watch Certificate objects",
        "operationId": "WatchCertificate",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/securityAutoMsgCertificateWatchHelper"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/watch/tenant/{O.Tenant}/security-groups": {
      "get": {
        "summary": "Watch SecurityGroup objects",
        "operationId": "WatchSecurityGroup",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/securityAutoMsgSecurityGroupWatchHelper"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/watch/tenant/{O.Tenant}/sgpolicies": {
      "get": {
        "summary": "Watch SGPolicy objects",
        "operationId": "WatchSGPolicy",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/securityAutoMsgSGPolicyWatchHelper"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/watch/tenant/{O.Tenant}/trafficEncryptionPolicy": {
      "get": {
        "summary": "Watch TrafficEncryptionPolicy objects",
        "operationId": "WatchTrafficEncryptionPolicy",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/securityAutoMsgTrafficEncryptionPolicyWatchHelper"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    },
    "/configs/security/v1/watch/trafficEncryptionPolicy": {
      "get": {
        "summary": "Watch TrafficEncryptionPolicy objects",
        "operationId": "WatchTrafficEncryptionPolicy_1",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/securityAutoMsgTrafficEncryptionPolicyWatchHelper"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "security/v1"
        ]
      }
    }
  },
  "definitions": {
    "apiListMeta": {
      "type": "object",
      "properties": {
        "resource-version": {
          "type": "string",
          "description": "Resource version of object store at the time of list generation."
        }
      },
      "description": "ListMeta contains the metadata for list of objects."
    },
    "apiListWatchOptions": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "generation-id": {
          "type": "string"
        },
        "resource-version": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "creation-time": {
          "type": "string",
          "format": "date-time"
        },
        "mod-time": {
          "type": "string",
          "format": "date-time"
        },
        "self-link": {
          "type": "string"
        },
        "label-selector": {
          "type": "string",
          "description": "LabelSelector to select on labels in list or watch results."
        },
        "field-selector": {
          "type": "string",
          "title": "FieldSelector to select on field values in list or watch results"
        },
        "field-change-selector": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified."
        },
        "from": {
          "type": "integer",
          "format": "int32",
          "title": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1]"
        },
        "max-results": {
          "type": "integer",
          "format": "int32",
          "description": "max. number of events to be fetched for the request."
        }
      }
    },
    "apiObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters"
        },
        "tenant": {
          "type": "string",
          "title": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters"
        },
        "generation-id": {
          "type": "string",
          "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user."
        },
        "resource-version": {
          "type": "string",
          "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user."
        },
        "uuid": {
          "type": "string",
          "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels are arbitrary (key,value) pairs associated with any object."
        },
        "creation-time": {
          "type": "string",
          "format": "date-time",
          "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user."
        },
        "mod-time": {
          "type": "string",
          "format": "date-time",
          "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user."
        },
        "self-link": {
          "type": "string",
          "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user."
        }
      },
      "description": "ObjectMeta contains metadata that all objects stored in kvstore must have."
    },
    "apiObjectRef": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string",
          "description": "Tenant of the object."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace of the object, for scoped objects."
        },
        "kind": {
          "type": "string",
          "description": "Kind represents the type of the API object."
        },
        "name": {
          "type": "string",
          "description": "Name of the object, unique within a Namespace for scoped objects."
        },
        "uri": {
          "type": "string",
          "description": "URI is a link to accessing the referenced object."
        }
      },
      "description": "ObjectRef contains identifying information about an object."
    },
    "apiStatus": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/apiStatusResult",
          "description": "Result contains the status of the operation, success or failure."
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Message contains human readable form of the error."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Code is the HTTP status code."
        },
        "object-ref": {
          "$ref": "#/definitions/apiObjectRef",
          "description": "Reference to the object (optional) for which this status is being sent."
        }
      },
      "description": "Status is returned for calls that dont return objects."
    },
    "apiStatusResult": {
      "type": "object",
      "properties": {
        "Str": {
          "type": "string"
        }
      },
      "description": "StatusResult contains possible statuses for a NIC."
    },
    "apiTimestamp": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "apiTypeMeta": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind represents the type of the API object."
        },
        "api-version": {
          "type": "string",
          "title": "APIVersion defines the version of the API object. This can only be set by the server"
        }
      },
      "description": "TypeMeta contains the metadata about kind and version for all API objects."
    },
    "apiWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/googleprotobufAny"
        }
      }
    },
    "apiWatchEventList": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiWatchEvent"
          }
        }
      }
    },
    "googleprotobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name whose content describes the type of the\nserialized protocol buffer message.\n\nFor URLs which use the scheme `http`, `https`, or no scheme, the\nfollowing restrictions and interpretations apply:\n\n* If no scheme is provided, `https` is assumed.\n* The last segment of the URL's path must represent the fully\n  qualified name of the type (as in `path/google.protobuf.Duration`).\n  The name should be in a canonical form (e.g., leading \".\" is\n  not accepted).\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "labelsRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The label key that the condition applies to."
        },
        "operator": {
          "type": "string",
          "enum": [
            "equals",
            "notEquals",
            "in",
            "notIn"
          ],
          "default": "equals",
          "x-ui-hints": {
            "notEquals": "not equals",
            "notIn": "not in"
          },
          "description": "Condition checked for the key."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Values contains one or more values corresponding to the label key. \"equals\" and\n\"notEquals\" operators need a single Value. \"in\" and \"notIn\" operators can have\none or more values."
        }
      },
      "description": "Requirement defines a single matching condition for a selector."
    },
    "labelsSelector": {
      "type": "object",
      "properties": {
        "requirements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/labelsRequirement"
          },
          "description": "Requirements are ANDed."
        }
      },
      "description": "Selector is used to select objects by labels. Requirements in the selector are ANDed.\nA selector with no Requirements does not select anything."
    },
    "securityALG": {
      "type": "object",
      "properties": {
        "dns": {
          "$ref": "#/definitions/securityDNS"
        },
        "sip": {
          "$ref": "#/definitions/securitySIP"
        },
        "sunrpc": {
          "$ref": "#/definitions/securitySunRPC"
        },
        "ftp": {
          "$ref": "#/definitions/securityFTP"
        },
        "msrpc": {
          "$ref": "#/definitions/securityMSRPC"
        },
        "tftp": {
          "$ref": "#/definitions/securityTFTP"
        },
        "rstp": {
          "$ref": "#/definitions/securityRSTP"
        }
      },
      "title": "ALG specifies the application specific configuration for the list of applications mentioned below.\nTODO Investigate configuration for other ALGs"
    },
    "securityApp": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/securityAppSpec"
        },
        "status": {
          "$ref": "#/definitions/securityAppStatus"
        }
      },
      "title": "App - Read-only objects auto-created by Venice\nOne object per App that can be identified by Naples"
    },
    "securityAppList": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "list-meta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityApp"
          },
          "title": "List of App objects"
        }
      },
      "title": "AppList is a container object for list of App objects"
    },
    "securityAppSpec": {
      "type": "object",
      "properties": {
        "protocol": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of proto/port"
        },
        "alg": {
          "$ref": "#/definitions/securityALG",
          "title": "ALG configuration if specified"
        }
      },
      "title": "AppSpec - spec part of App object"
    },
    "securityAppStatus": {
      "type": "object",
      "properties": {
        "attached-policies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of security group policies attached to the app"
        }
      },
      "title": "AppStatus - status part of App object"
    },
    "securityAutoMsgAppWatchHelper": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityAutoMsgAppWatchHelperWatchEvent"
          }
        }
      },
      "title": "AutoMsgAppWatchHelper is a wrapper object for watch events for App objects"
    },
    "securityAutoMsgAppWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/securityApp"
        }
      }
    },
    "securityAutoMsgCertificateWatchHelper": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityAutoMsgCertificateWatchHelperWatchEvent"
          }
        }
      },
      "title": "AutoMsgCertificateWatchHelper is a wrapper object for watch events for Certificate objects"
    },
    "securityAutoMsgCertificateWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/securityCertificate"
        }
      }
    },
    "securityAutoMsgSGPolicyWatchHelper": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityAutoMsgSGPolicyWatchHelperWatchEvent"
          }
        }
      },
      "title": "AutoMsgSGPolicyWatchHelper is a wrapper object for watch events for SGPolicy objects"
    },
    "securityAutoMsgSGPolicyWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/securitySGPolicy"
        }
      }
    },
    "securityAutoMsgSecurityGroupWatchHelper": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityAutoMsgSecurityGroupWatchHelperWatchEvent"
          }
        }
      },
      "title": "AutoMsgSecurityGroupWatchHelper is a wrapper object for watch events for SecurityGroup objects"
    },
    "securityAutoMsgSecurityGroupWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/securitySecurityGroup"
        }
      }
    },
    "securityAutoMsgTrafficEncryptionPolicyWatchHelper": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityAutoMsgTrafficEncryptionPolicyWatchHelperWatchEvent"
          }
        }
      },
      "title": "AutoMsgTrafficEncryptionPolicyWatchHelper is a wrapper object for watch events for TrafficEncryptionPolicy objects"
    },
    "securityAutoMsgTrafficEncryptionPolicyWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/securityTrafficEncryptionPolicy"
        }
      }
    },
    "securityCertificate": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/securityCertificateSpec",
          "description": "Spec contains the configuration of the certificate."
        },
        "status": {
          "$ref": "#/definitions/securityCertificateStatus",
          "description": "Status contains the current state of the certificate."
        }
      },
      "title": "Certificate represents a certificate with associated chain of trust"
    },
    "securityCertificateList": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "list-meta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityCertificate"
          },
          "title": "List of Certificate objects"
        }
      },
      "title": "CertificateList is a container object for list of Certificate objects"
    },
    "securityCertificateSpec": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "title": "Description of the purpose of this certificate"
        },
        "usages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "enum": [
            "Server",
            "Client",
            "TrustRoot"
          ],
          "default": "Server",
          "description": "Usage can be \"client\", \"server\" or \"trust-root\" in any combination.\nA \"server\" certificate is used by a server to authenticate itself to the client\nA \"client\" certificate is used by a client to authenticate itself to a server\nA \"trust-root\" certificate is self-signed and is only used to validate\ncertificates presented by peers.\n\"client\" and \"server\" certificates are always accompanied by a private key,\nwhereas \"trust-root\"-only certificates are not."
        },
        "body": {
          "type": "string",
          "title": "Body of the certificate in PEM encoding"
        },
        "trust-chain": {
          "type": "string",
          "description": "Trust chain of the certificate in PEM encoding.\nThese certificates are treated opaquely. We do not process them in any way\nother than decoding them for informational purposes."
        }
      }
    },
    "securityCertificateStatus": {
      "type": "object",
      "properties": {
        "validity": {
          "type": "string",
          "enum": [
            "Unknown",
            "Valid",
            "Invalid",
            "Expired"
          ],
          "default": "Unknown",
          "description": "Status of the certificate: \"valid\", \"invalid\", \"expired\"\n\"invalid\" means that the signature of the certificate does not match or\nthere are inconsistencies in the trust chain."
        },
        "workloads": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The workloads where this certificate has been deployed"
        }
      }
    },
    "securityDNS": {
      "type": "object",
      "properties": {
        "drop-multi-question-packets": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "DNS ALG configuration"
    },
    "securityFTP": {
      "type": "object",
      "title": "FTP ALG configuration"
    },
    "securityIPsecProtocolSpec": {
      "type": "object",
      "properties": {
        "encryption-transform": {
          "type": "string",
          "title": "ESP encryption algorithm. Default is \"aes-256-gcm-128\" (See RFC4106)"
        },
        "integrity-transform": {
          "type": "string",
          "title": "ESP integrity algorithm.\nDefault is \"NULL\" (must be \"NULL\" if AES-GCM is used for encryption)"
        }
      }
    },
    "securityMSRPC": {
      "type": "object",
      "title": "MSRPC ALG configuration"
    },
    "securityRSTP": {
      "type": "object",
      "title": "RSTP ALG configuration"
    },
    "securitySGPolicy": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/securitySGPolicySpec",
          "description": "Spec contains the configuration of the sgpolicy."
        },
        "status": {
          "$ref": "#/definitions/securitySGPolicyStatus",
          "description": "Status contains the current state of the sgpolicy."
        }
      },
      "title": "Sgpolicy represents a security policy for security groups"
    },
    "securitySGPolicyList": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "list-meta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securitySGPolicy"
          },
          "title": "List of SGPolicy objects"
        }
      },
      "title": "SGPolicyList is a container object for list of SGPolicy objects"
    },
    "securitySGPolicyPropagationStatus": {
      "type": "object",
      "properties": {
        "generation-id": {
          "type": "string",
          "title": "The Generation ID this status is for"
        },
        "updated": {
          "type": "integer",
          "format": "int32",
          "title": "The number of Naples that this version has already been pushed to"
        },
        "pending": {
          "type": "integer",
          "format": "int32",
          "description": "Number of Naples pending. If this is 0 it can be assumed that everything is up to date."
        },
        "min-version": {
          "type": "string",
          "title": "The Version running on the slowest Naples"
        }
      }
    },
    "securitySGPolicySpec": {
      "type": "object",
      "properties": {
        "attach-groups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of security groups this policy is attached to"
        },
        "attach-tenant": {
          "type": "boolean",
          "format": "boolean",
          "title": "specifies if the set of rules need to be attached globally to a tenant"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securitySGRule"
          },
          "title": "list of rules"
        }
      }
    },
    "securitySGPolicyStatus": {
      "type": "object",
      "properties": {
        "workloads": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of workloads in this group"
        },
        "propagation-status": {
          "$ref": "#/definitions/securitySGPolicyPropagationStatus",
          "title": "The status of the configuration propagation to the Naples"
        }
      }
    },
    "securitySGRule": {
      "type": "object",
      "properties": {
        "apps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of apps. proto/port format, or predefined apps and alg config"
        },
        "action": {
          "type": "string",
          "enum": [
            "PERMIT",
            "DENY",
            "REJECT"
          ],
          "default": "PERMIT",
          "title": "SGRule action, either PERMIT, DENY or REJECT"
        },
        "from-ip-addresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "inbound rule from a given ip-address/ip-mask/ip-range. Use any to refer to all ipaddresses\ncli-tags: id=from-ip"
        },
        "to-ip-addresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "outbound rule from a given ip-address/ip-mask/ip-range. Use any to refer to all ipaddresses\ncli-tags: id=to-ip"
        },
        "from-security-groups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "inbound rule from a given security group"
        },
        "to-security-groups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "outbound rule from a given security group"
        }
      }
    },
    "securitySIP": {
      "type": "object",
      "properties": {
        "max-call-duration": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "SIP ALG configuration"
    },
    "securitySecurityGroup": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/securitySecurityGroupSpec",
          "description": "Spec contains the configuration of the security group."
        },
        "status": {
          "$ref": "#/definitions/securitySecurityGroupStatus",
          "description": "Status contains the current state of the security group."
        }
      },
      "title": "SecurityGroup represents a security zone or domain"
    },
    "securitySecurityGroupList": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "list-meta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securitySecurityGroup"
          },
          "title": "List of SecurityGroup objects"
        }
      },
      "title": "SecurityGroupList is a container object for list of SecurityGroup objects"
    },
    "securitySecurityGroupSpec": {
      "type": "object",
      "properties": {
        "workload-selector": {
          "$ref": "#/definitions/labelsSelector",
          "title": "Workload selector (list of labels)"
        },
        "service-labels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Service object selector"
        },
        "match-prefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of CIDRs that are part of this security group"
        }
      },
      "title": "security group configuration"
    },
    "securitySecurityGroupStatus": {
      "type": "object",
      "properties": {
        "workloads": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of workloads that are part of this security group"
        },
        "Policies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of all policies attached to this security group"
        }
      },
      "title": "security group status"
    },
    "securitySunRPC": {
      "type": "object",
      "properties": {
        "program-id": {
          "type": "string",
          "title": "RPC Program identifier"
        },
        "map-entry-timeout": {
          "type": "string",
          "title": "Defines timeout in hours, minutes, eg 24h, 300m"
        }
      },
      "title": "SunRPC ALG configuration"
    },
    "securityTFTP": {
      "type": "object",
      "title": "TFTP ALG configuration"
    },
    "securityTLSProtocolSpec": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "title": "TLS version: only supported value at present is 1.2"
        },
        "cipher-suite": {
          "type": "string",
          "title": "The name of the cipher suite in IANA format\ndefault is TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
        }
      }
    },
    "securityTrafficEncryptionPolicy": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/securityTrafficEncryptionPolicySpec",
          "description": "Spec contains the configuration of the encryption policy."
        },
        "status": {
          "$ref": "#/definitions/securityTrafficEncryptionPolicyStatus",
          "description": "Status contains the current state of the encryption policy."
        }
      }
    },
    "securityTrafficEncryptionPolicyList": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "list-meta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityTrafficEncryptionPolicy"
          },
          "title": "List of TrafficEncryptionPolicy objects"
        }
      },
      "title": "TrafficEncryptionPolicyList is a container object for list of TrafficEncryptionPolicy objects"
    },
    "securityTrafficEncryptionPolicySpec": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "title": "Possible values: TLS, IPsec"
        },
        "tls": {
          "$ref": "#/definitions/securityTLSProtocolSpec",
          "title": "TLS Parameters for workload-to-workload connections"
        },
        "ipsec": {
          "$ref": "#/definitions/securityIPsecProtocolSpec",
          "title": "IPsec Parameters for node-to-node connections"
        },
        "key-rotation-interval-secs": {
          "type": "integer",
          "format": "int64",
          "title": "How often the keys should be rotated, in seconds"
        }
      }
    },
    "securityTrafficEncryptionPolicyStatus": {
      "type": "object"
    }
  }
}
