{
  "swagger": "2.0",
  "info": {
    "title": "Service name",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/apps": {
      "get": {
        "operationId": "AutoListApp",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityAppList"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "description": "Name of the object, unique within a Namespace for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "LabelSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "FieldSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "PrefixWatch",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "FieldChangeSelector",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      }
    },
    "/apps/{O.Name}": {
      "get": {
        "operationId": "AutoGetApp",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityApp"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.Kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.APIVersion",
            "description": "APIVersion defines the version of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Status.Description",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      }
    },
    "/{O.Tenant}/app-users": {
      "get": {
        "operationId": "AutoListAppUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityAppUserList"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "description": "Name of the object, unique within a Namespace for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "LabelSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "FieldSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "PrefixWatch",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "FieldChangeSelector",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      },
      "post": {
        "operationId": "AutoAddAppUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityAppUser"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityAppUser"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      }
    },
    "/{O.Tenant}/app-users-groups": {
      "get": {
        "operationId": "AutoListAppUserGrp",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityAppUserGrpList"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "description": "Name of the object, unique within a Namespace for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "LabelSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "FieldSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "PrefixWatch",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "FieldChangeSelector",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      },
      "post": {
        "operationId": "AutoAddAppUserGrp",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityAppUserGrp"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityAppUserGrp"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      }
    },
    "/{O.Tenant}/app-users-groups/{O.Name}": {
      "get": {
        "operationId": "AutoGetAppUserGrp",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityAppUserGrp"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.Kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.APIVersion",
            "description": "APIVersion defines the version of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.AppUsers",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "Spec.Description",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      },
      "delete": {
        "operationId": "AutoDeleteAppUserGrp",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityAppUserGrp"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      },
      "put": {
        "operationId": "AutoUpdateAppUserGrp",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityAppUserGrp"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityAppUserGrp"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      }
    },
    "/{O.Tenant}/app-users/{O.Name}": {
      "get": {
        "operationId": "AutoGetAppUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityAppUser"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.Kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.APIVersion",
            "description": "APIVersion defines the version of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.Description",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      },
      "delete": {
        "operationId": "AutoDeleteAppUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityAppUser"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      },
      "put": {
        "operationId": "AutoUpdateAppUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityAppUser"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityAppUser"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      }
    },
    "/{O.Tenant}/certificates": {
      "get": {
        "operationId": "AutoListCertificate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityCertificateList"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "description": "Name of the object, unique within a Namespace for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "LabelSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "FieldSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "PrefixWatch",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "FieldChangeSelector",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      },
      "post": {
        "operationId": "AutoAddCertificate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityCertificate"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityCertificate"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      }
    },
    "/{O.Tenant}/certificates/{O.Name}": {
      "get": {
        "operationId": "AutoGetCertificate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityCertificate"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.Kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.APIVersion",
            "description": "APIVersion defines the version of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.Description",
            "description": "Status of the certificate: \"valid\", \"invalid\", \"expired\"\n\"invalid\" means that the signature of the certificate does not match or\nthere are inconsistencies in the trust chain.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.Usages",
            "description": "The workloads where this certificate has been deployed.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "Spec.Body",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.TrustChain",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Status.Validity",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Status.Workloads",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      },
      "delete": {
        "operationId": "AutoDeleteCertificate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityCertificate"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      },
      "put": {
        "operationId": "AutoUpdateCertificate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityCertificate"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityCertificate"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      }
    },
    "/{O.Tenant}/security-groups": {
      "get": {
        "operationId": "AutoListSecurityGroup",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySecurityGroupList"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "description": "Name of the object, unique within a Namespace for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "LabelSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "FieldSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "PrefixWatch",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "FieldChangeSelector",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      },
      "post": {
        "operationId": "AutoAddSecurityGroup",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySecurityGroup"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitySecurityGroup"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      }
    },
    "/{O.Tenant}/security-groups/{O.Name}": {
      "get": {
        "operationId": "AutoGetSecurityGroup",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySecurityGroup"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.Kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.APIVersion",
            "description": "APIVersion defines the version of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.ServiceSelector",
            "description": "list of all policies attached to this security group.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "Spec.MatchPrefixes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "Status.Workloads",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "Status.Policies",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      },
      "delete": {
        "operationId": "AutoDeleteSecurityGroup",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySecurityGroup"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      },
      "put": {
        "operationId": "AutoUpdateSecurityGroup",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySecurityGroup"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitySecurityGroup"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      }
    },
    "/{O.Tenant}/sgpolicy": {
      "get": {
        "operationId": "AutoListSgpolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySgpolicyList"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "description": "Name of the object, unique within a Namespace for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "LabelSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "FieldSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "PrefixWatch",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "FieldChangeSelector",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      },
      "post": {
        "operationId": "AutoAddSgpolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySgpolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitySgpolicy"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      }
    },
    "/{O.Tenant}/sgpolicy/{O.Name}": {
      "get": {
        "operationId": "AutoGetSgpolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySgpolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.Kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.APIVersion",
            "description": "APIVersion defines the version of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.AttachGroups",
            "description": "list of workloads in this group.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "Status.Workloads",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      },
      "delete": {
        "operationId": "AutoDeleteSgpolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySgpolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      },
      "put": {
        "operationId": "AutoUpdateSgpolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securitySgpolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securitySgpolicy"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      }
    },
    "/{O.Tenant}/trafficEncryptionPolicy": {
      "post": {
        "operationId": "AutoAddTrafficEncryptionPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityTrafficEncryptionPolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityTrafficEncryptionPolicy"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      }
    },
    "/{O.Tenant}/trafficEncryptionPolicy/{O.Name}": {
      "get": {
        "operationId": "AutoGetTrafficEncryptionPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityTrafficEncryptionPolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.Kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.APIVersion",
            "description": "APIVersion defines the version of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.SelfLink",
            "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.Mode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.Tls.Version",
            "description": "ESP encryption algorithm. Default is \"aes-256-gcm-128\" (See RFC4106).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.Tls.CipherSuite",
            "description": "ESP integrity algorithm.\nDefault is \"NULL\" (must be \"NULL\" if AES-GCM is used for encryption).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.IPsec.EncryptionTransform",
            "description": "TLS version: only supported value at present is 1.2.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.IPsec.IntegrityTransform",
            "description": "The name of the cipher suite in IANA format\ndefault is TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.KeyRotationIntervalSecs",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      },
      "delete": {
        "operationId": "AutoDeleteTrafficEncryptionPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityTrafficEncryptionPolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      },
      "put": {
        "operationId": "AutoUpdateTrafficEncryptionPolicy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/securityTrafficEncryptionPolicy"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/securityTrafficEncryptionPolicy"
            }
          }
        ],
        "tags": [
          "SecurityV1"
        ]
      }
    }
  },
  "definitions": {
    "apiListMeta": {
      "type": "object",
      "properties": {
        "ResourceVersion": {
          "type": "string",
          "description": "Resource version of object store at the time of list generation."
        }
      },
      "description": "ListMeta contains the metadata for list of objects."
    },
    "apiListWatchOptions": {
      "type": "object",
      "properties": {
        "O": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "LabelSelector": {
          "type": "string"
        },
        "FieldSelector": {
          "type": "string"
        },
        "PrefixWatch": {
          "type": "boolean",
          "format": "boolean"
        },
        "FieldChangeSelector": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "apiObjectMeta": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "Name of the object, unique within a Namespace for scoped objects."
        },
        "Tenant": {
          "type": "string",
          "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go."
        },
        "Namespace": {
          "type": "string",
          "description": "Namespace of the object, for scoped objects."
        },
        "ResourceVersion": {
          "type": "string",
          "description": "Resource version in the object store. This can only be set by the server."
        },
        "UUID": {
          "type": "string",
          "description": "UUID is the unique identifier for the object. This can only be set by the server."
        },
        "Labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels are arbitrary (key,value) pairs associated with any object."
        },
        "CreationTime": {
          "$ref": "#/definitions/apiTimestamp",
          "title": "CreationTime is the creation time of Object"
        },
        "ModTime": {
          "$ref": "#/definitions/apiTimestamp",
          "title": "ModTime is the Last Modification time of Object"
        },
        "SelfLink": {
          "type": "string",
          "description": "SelfLink is a link to accessing this object. When stored in the KV store this is\n the key in the kvstore and when the object is served from the API-GW it is the\n URI path. Examples\n   - \"/venice/tenants/tenants/tenant2\" in the kvstore\n   - \"/v1/tenants/tenants/tenant2\" when served by API Gateway."
        }
      },
      "description": "ObjectMeta contains metadata that all objects stored in kvstore must have."
    },
    "apiTimestamp": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "apiTypeMeta": {
      "type": "object",
      "properties": {
        "Kind": {
          "type": "string",
          "description": "Kind represents the type of the API object."
        },
        "APIVersion": {
          "type": "string",
          "description": "APIVersion defines the version of the API object."
        }
      },
      "description": "TypeMeta contains the metadata about kind and version for all API objects."
    },
    "labelsRequirement": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "description": "The label key that the condition applies to."
        },
        "Operator": {
          "type": "string",
          "description": "Condition checked for the key."
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Values contains one or more values corresponding to the label key. \"equals\" and\n\"notEquals\" operators need a single Value. \"in\" and \"notIn\" operators can have\none or more values."
        }
      },
      "description": "Requirement defines a single matching condition for a selector."
    },
    "labelsSelector": {
      "type": "object",
      "properties": {
        "Requirements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/labelsRequirement"
          },
          "description": "Requirements are ANDed."
        }
      },
      "description": "Selector is used to select objects by labels. Requirements in the selector are ANDed.\nA selector with no Requirements does not select anything."
    },
    "securityApp": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "Spec": {
          "$ref": "#/definitions/securityAppSpec"
        },
        "Status": {
          "$ref": "#/definitions/securityAppStatus"
        }
      },
      "title": "AppSpec - spec part of App object"
    },
    "securityAppList": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "ListMeta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityApp"
          }
        }
      }
    },
    "securityAppSpec": {
      "type": "object",
      "title": "AppStatus - status part of App object"
    },
    "securityAppStatus": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        }
      },
      "title": "App - Read-only objects auto-created by Venice\nOne object per App that can be identified by Naples"
    },
    "securityAppUser": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta",
          "title": "Name is part of the meta\nDescription of the AppUser - example \"cassandra user\""
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "Spec": {
          "$ref": "#/definitions/securityAppUserSpec"
        },
        "Status": {
          "$ref": "#/definitions/securityAppUserStatus"
        }
      },
      "title": "AppUserSpec - spec part of AppUser object"
    },
    "securityAppUserGrp": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "Spec": {
          "$ref": "#/definitions/securityAppUserGrpSpec"
        },
        "Status": {
          "$ref": "#/definitions/securityAppUserGrpStatus"
        }
      },
      "title": "AppUserStatus - status part of AppUser object"
    },
    "securityAppUserGrpList": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "ListMeta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityAppUserGrp"
          }
        }
      }
    },
    "securityAppUserGrpSpec": {
      "type": "object",
      "properties": {
        "AppUsers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Description": {
          "type": "string"
        }
      },
      "title": "AppUser is derived from application payload such as database login or\nother application authentication mechanisms.\nCreated by Venice Admin or Tenant Admin"
    },
    "securityAppUserGrpStatus": {
      "type": "object",
      "title": "AppUserGrpSpec - spec part of AppUserGrp object"
    },
    "securityAppUserList": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "ListMeta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityAppUser"
          }
        }
      }
    },
    "securityAppUserSpec": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        }
      },
      "title": "AppUserGrpStatus - status part of AppUserGrp object"
    },
    "securityAppUserStatus": {
      "type": "object",
      "title": "AppUserGrp - Object representing group of AppUsers\nCreated by Venice Admin or Tenant Admin"
    },
    "securityAutoMsgAppUserGrpWatchHelper": {
      "type": "object",
      "properties": {
        "Events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityAutoMsgAppUserGrpWatchHelperWatchEvent"
          }
        }
      }
    },
    "securityAutoMsgAppUserGrpWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Object": {
          "$ref": "#/definitions/securityAppUserGrp"
        }
      }
    },
    "securityAutoMsgAppUserWatchHelper": {
      "type": "object",
      "properties": {
        "Events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityAutoMsgAppUserWatchHelperWatchEvent"
          }
        }
      }
    },
    "securityAutoMsgAppUserWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Object": {
          "$ref": "#/definitions/securityAppUser"
        }
      }
    },
    "securityAutoMsgAppWatchHelper": {
      "type": "object",
      "properties": {
        "Events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityAutoMsgAppWatchHelperWatchEvent"
          }
        }
      }
    },
    "securityAutoMsgAppWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Object": {
          "$ref": "#/definitions/securityApp"
        }
      }
    },
    "securityAutoMsgCertificateWatchHelper": {
      "type": "object",
      "properties": {
        "Events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityAutoMsgCertificateWatchHelperWatchEvent"
          }
        }
      }
    },
    "securityAutoMsgCertificateWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Object": {
          "$ref": "#/definitions/securityCertificate"
        }
      }
    },
    "securityAutoMsgSecurityGroupWatchHelper": {
      "type": "object",
      "properties": {
        "Events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityAutoMsgSecurityGroupWatchHelperWatchEvent"
          }
        }
      }
    },
    "securityAutoMsgSecurityGroupWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Object": {
          "$ref": "#/definitions/securitySecurityGroup"
        }
      }
    },
    "securityAutoMsgSgpolicyWatchHelper": {
      "type": "object",
      "properties": {
        "Events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityAutoMsgSgpolicyWatchHelperWatchEvent"
          }
        }
      }
    },
    "securityAutoMsgSgpolicyWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Object": {
          "$ref": "#/definitions/securitySgpolicy"
        }
      }
    },
    "securityAutoMsgTrafficEncryptionPolicyWatchHelper": {
      "type": "object",
      "properties": {
        "Events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityAutoMsgTrafficEncryptionPolicyWatchHelperWatchEvent"
          }
        }
      }
    },
    "securityAutoMsgTrafficEncryptionPolicyWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Object": {
          "$ref": "#/definitions/securityTrafficEncryptionPolicy"
        }
      }
    },
    "securityCertificate": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta",
          "title": "Description of the purpose of this certificate"
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta",
          "description": "Usage can be \"client\", \"server\" or \"trust-root\" in any combination.\nA \"server\" certificate is used by a server to authenticate itself to the client\nA \"client\" certificate is used by a client to authenticate itself to a server\nA \"trust-root\" certificate is self-signed and is only used to validate\ncertificates presented by peers.\n\"client\" and \"server\" certificates are always accompanied by a private key,\nwhereas \"trust-root\"-only certificates are not."
        },
        "Spec": {
          "$ref": "#/definitions/securityCertificateSpec",
          "title": "Body of the certificate in PEM encoding"
        },
        "Status": {
          "$ref": "#/definitions/securityCertificateStatus",
          "description": "Trust chain of the certificate in PEM encoding.\nThese certificates are treated opaquely. We do not process them in any way\nother than decoding them for informational purposes."
        }
      }
    },
    "securityCertificateList": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "ListMeta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityCertificate"
          }
        }
      }
    },
    "securityCertificateSpec": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string",
          "description": "Status of the certificate: \"valid\", \"invalid\", \"expired\"\n\"invalid\" means that the signature of the certificate does not match or\nthere are inconsistencies in the trust chain."
        },
        "Usages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The workloads where this certificate has been deployed"
        },
        "Body": {
          "type": "string"
        },
        "TrustChain": {
          "type": "string"
        }
      }
    },
    "securityCertificateStatus": {
      "type": "object",
      "properties": {
        "Validity": {
          "type": "string"
        },
        "Workloads": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Certificate represents a certificate with associated chain of trust"
    },
    "securityIPsecProtocolSpec": {
      "type": "object",
      "properties": {
        "EncryptionTransform": {
          "type": "string",
          "title": "TLS version: only supported value at present is 1.2"
        },
        "IntegrityTransform": {
          "type": "string",
          "title": "The name of the cipher suite in IANA format\ndefault is TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
        }
      }
    },
    "securitySGRule": {
      "type": "object",
      "properties": {
        "Ports": {
          "type": "string",
          "title": "match ports for the rule"
        },
        "Action": {
          "type": "string",
          "title": "Rule action (allow/deny/log/train)"
        },
        "PeerGroup": {
          "type": "string",
          "title": "Peer group for the rule (from/to group depending on direction)"
        },
        "Apps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of Apps to match for the rule"
        },
        "AppUser": {
          "type": "string",
          "title": "AppUser or AppUserGroup to match for the rule\nAppUser is derived from application payload such as database login or\nother application authentication mechanisms\nFIXME: oneof does not translate well in golang - will enforce via validation\nUsed when policy is applied on a single user"
        },
        "AppUserGrp": {
          "type": "string",
          "title": "Used when policy is applied on a group of users"
        }
      }
    },
    "securitySecurityGroup": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta",
          "title": "Workload selector (list of labels)"
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta",
          "title": "Service object selector"
        },
        "Spec": {
          "$ref": "#/definitions/securitySecurityGroupSpec",
          "title": "list of CIDRs that are part of this security group"
        },
        "Status": {
          "$ref": "#/definitions/securitySecurityGroupStatus"
        }
      },
      "title": "security group configuration"
    },
    "securitySecurityGroupList": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "ListMeta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securitySecurityGroup"
          }
        }
      }
    },
    "securitySecurityGroupSpec": {
      "type": "object",
      "properties": {
        "WorkloadSelector": {
          "$ref": "#/definitions/labelsSelector",
          "title": "list of workloads that are part of this security group"
        },
        "ServiceSelector": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of all policies attached to this security group"
        },
        "MatchPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "security group status"
    },
    "securitySecurityGroupStatus": {
      "type": "object",
      "properties": {
        "Workloads": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Policies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "SecurityGroup represents a security zone or domain"
    },
    "securitySgpolicy": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta",
          "title": "list of security groups this policy is attached to"
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta",
          "title": "Incoming rules"
        },
        "Spec": {
          "$ref": "#/definitions/securitySgpolicySpec",
          "title": "Outgoing rules"
        },
        "Status": {
          "$ref": "#/definitions/securitySgpolicyStatus"
        }
      }
    },
    "securitySgpolicyList": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "ListMeta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securitySgpolicy"
          }
        }
      }
    },
    "securitySgpolicySpec": {
      "type": "object",
      "properties": {
        "AttachGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of workloads in this group"
        },
        "InRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securitySGRule"
          }
        },
        "OutRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securitySGRule"
          }
        }
      }
    },
    "securitySgpolicyStatus": {
      "type": "object",
      "properties": {
        "Workloads": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Sgpolicy represents a security policy for security groups"
    },
    "securityTLSProtocolSpec": {
      "type": "object",
      "properties": {
        "Version": {
          "type": "string",
          "title": "ESP encryption algorithm. Default is \"aes-256-gcm-128\" (See RFC4106)"
        },
        "CipherSuite": {
          "type": "string",
          "title": "ESP integrity algorithm.\nDefault is \"NULL\" (must be \"NULL\" if AES-GCM is used for encryption)"
        }
      }
    },
    "securityTrafficEncryptionPolicy": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta",
          "title": "Possible values: TLS, IPsec"
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta",
          "title": "TLS Parameters for workload-to-workload connections"
        },
        "Spec": {
          "$ref": "#/definitions/securityTrafficEncryptionPolicySpec",
          "title": "IPsec Parameters for node-to-node connections"
        },
        "Status": {
          "$ref": "#/definitions/securityTrafficEncryptionPolicyStatus",
          "title": "How often the keys should be rotated, in seconds"
        }
      }
    },
    "securityTrafficEncryptionPolicyList": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "ListMeta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securityTrafficEncryptionPolicy"
          }
        }
      }
    },
    "securityTrafficEncryptionPolicySpec": {
      "type": "object",
      "properties": {
        "Mode": {
          "type": "string"
        },
        "Tls": {
          "$ref": "#/definitions/securityTLSProtocolSpec"
        },
        "IPsec": {
          "$ref": "#/definitions/securityIPsecProtocolSpec"
        },
        "KeyRotationIntervalSecs": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "securityTrafficEncryptionPolicyStatus": {
      "type": "object"
    }
  }
}
