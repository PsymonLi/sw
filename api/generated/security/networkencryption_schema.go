// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package securityApiServer is a auto generated package.
Input file: networkencryption.proto
*/
package security

import (
	"reflect"

	"github.com/pensando/sw/api"
	"github.com/pensando/sw/venice/utils/runtime"
)

var typesMapNetworkencryption = map[string]*api.Struct{

	"security.IPsecProtocolSpec": &api.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(IPsecProtocolSpec{}) },
		Fields: map[string]api.Field{
			"EncryptionTransform": api.Field{Name: "EncryptionTransform", CLITag: api.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "encryption-transform", Pointer: true, Slice: false, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_STRING"},

			"IntegrityTransform": api.Field{Name: "IntegrityTransform", CLITag: api.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "integrity-transform", Pointer: true, Slice: false, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_STRING"},
		},
	},
	"security.TLSProtocolSpec": &api.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(TLSProtocolSpec{}) },
		Fields: map[string]api.Field{
			"Version": api.Field{Name: "Version", CLITag: api.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "version", Pointer: true, Slice: false, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_STRING"},

			"CipherSuite": api.Field{Name: "CipherSuite", CLITag: api.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "cipher-suite", Pointer: true, Slice: false, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_STRING"},
		},
	},
	"security.TrafficEncryptionPolicy": &api.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(TrafficEncryptionPolicy{}) },
		Fields: map[string]api.Field{
			"TypeMeta": api.Field{Name: "TypeMeta", CLITag: api.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "", Pointer: false, Slice: false, Map: false, Inline: true, FromInline: false, KeyType: "", Type: "api.TypeMeta"},

			"Kind": api.Field{Name: "Kind", CLITag: api.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "kind", Pointer: true, Slice: false, Map: false, Inline: false, FromInline: true, KeyType: "", Type: "TYPE_STRING"},

			"APIVersion": api.Field{Name: "APIVersion", CLITag: api.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "api-version", Pointer: true, Slice: false, Map: false, Inline: false, FromInline: true, KeyType: "", Type: "TYPE_STRING"},

			"O": api.Field{Name: "O", CLITag: api.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "meta", Pointer: false, Slice: false, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "api.ObjectMeta"},

			"Spec": api.Field{Name: "Spec", CLITag: api.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "spec", Pointer: false, Slice: false, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "security.TrafficEncryptionPolicySpec"},

			"Status": api.Field{Name: "Status", CLITag: api.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "status", Pointer: false, Slice: false, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "security.TrafficEncryptionPolicyStatus"},
		},

		CLITags: map[string]api.CLIInfo{
			"api-version":                api.CLIInfo{Path: "APIVersion", Skip: false, Insert: "", Help: ""},
			"cipher-suite":               api.CLIInfo{Path: "Spec.Tls.CipherSuite", Skip: false, Insert: "", Help: ""},
			"encryption-transform":       api.CLIInfo{Path: "Spec.IPsec.EncryptionTransform", Skip: false, Insert: "", Help: ""},
			"integrity-transform":        api.CLIInfo{Path: "Spec.IPsec.IntegrityTransform", Skip: false, Insert: "", Help: ""},
			"key-rotation-interval-secs": api.CLIInfo{Path: "Spec.KeyRotationIntervalSecs", Skip: false, Insert: "", Help: ""},
			"kind":    api.CLIInfo{Path: "Kind", Skip: false, Insert: "", Help: ""},
			"mode":    api.CLIInfo{Path: "Spec.Mode", Skip: false, Insert: "", Help: ""},
			"version": api.CLIInfo{Path: "Spec.Tls.Version", Skip: false, Insert: "", Help: ""},
		},
	},
	"security.TrafficEncryptionPolicySpec": &api.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(TrafficEncryptionPolicySpec{}) },
		Fields: map[string]api.Field{
			"Mode": api.Field{Name: "Mode", CLITag: api.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "mode", Pointer: true, Slice: false, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_STRING"},

			"Tls": api.Field{Name: "Tls", CLITag: api.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "tls", Pointer: false, Slice: false, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "security.TLSProtocolSpec"},

			"IPsec": api.Field{Name: "IPsec", CLITag: api.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "ipsec", Pointer: false, Slice: false, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "security.IPsecProtocolSpec"},

			"KeyRotationIntervalSecs": api.Field{Name: "KeyRotationIntervalSecs", CLITag: api.CLIInfo{Path: "", Skip: false, Insert: "", Help: ""}, JSONTag: "key-rotation-interval-secs", Pointer: true, Slice: false, Map: false, Inline: false, FromInline: false, KeyType: "", Type: "TYPE_UINT32"},
		},
	},
	"security.TrafficEncryptionPolicyStatus": &api.Struct{
		GetTypeFn: func() reflect.Type { return reflect.TypeOf(TrafficEncryptionPolicyStatus{}) },
		Fields:    map[string]api.Field{},
	},
}

func init() {
	schema := runtime.GetDefaultScheme()
	schema.AddSchema(typesMapNetworkencryption)
}
