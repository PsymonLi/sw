// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package security is a auto generated package.
Input file: fwprofile.proto
*/
package security

import (
	"context"
	"encoding/json"
	"net/http"

	"github.com/pensando/sw/api"
)

// Dummy definitions to suppress nonused warnings
var _ api.ObjectMeta

func encodeHTTPFirewallProfile(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPFirewallProfile(_ context.Context, r *http.Request) (interface{}, error) {
	var req FirewallProfile
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqFirewallProfile encodes GRPC request
func EncodeGrpcReqFirewallProfile(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*FirewallProfile)
	return req, nil
}

// DecodeGrpcReqFirewallProfile decodes GRPC request
func DecodeGrpcReqFirewallProfile(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*FirewallProfile)
	return req, nil
}

// EncodeGrpcRespFirewallProfile encodes GRC response
func EncodeGrpcRespFirewallProfile(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespFirewallProfile decodes GRPC response
func DecodeGrpcRespFirewallProfile(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

func encodeHTTPFirewallProfileSpec(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPFirewallProfileSpec(_ context.Context, r *http.Request) (interface{}, error) {
	var req FirewallProfileSpec
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqFirewallProfileSpec encodes GRPC request
func EncodeGrpcReqFirewallProfileSpec(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*FirewallProfileSpec)
	return req, nil
}

// DecodeGrpcReqFirewallProfileSpec decodes GRPC request
func DecodeGrpcReqFirewallProfileSpec(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*FirewallProfileSpec)
	return req, nil
}

// EncodeGrpcRespFirewallProfileSpec encodes GRC response
func EncodeGrpcRespFirewallProfileSpec(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespFirewallProfileSpec decodes GRPC response
func DecodeGrpcRespFirewallProfileSpec(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

func encodeHTTPFirewallProfileStatus(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPFirewallProfileStatus(_ context.Context, r *http.Request) (interface{}, error) {
	var req FirewallProfileStatus
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqFirewallProfileStatus encodes GRPC request
func EncodeGrpcReqFirewallProfileStatus(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*FirewallProfileStatus)
	return req, nil
}

// DecodeGrpcReqFirewallProfileStatus decodes GRPC request
func DecodeGrpcReqFirewallProfileStatus(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*FirewallProfileStatus)
	return req, nil
}

// EncodeGrpcRespFirewallProfileStatus encodes GRC response
func EncodeGrpcRespFirewallProfileStatus(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespFirewallProfileStatus decodes GRPC response
func DecodeGrpcRespFirewallProfileStatus(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}
