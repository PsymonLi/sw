{
  "swagger": "2.0",
  "info": {
    "title": "Rollout API reference",
    "description": "Service name\n\n API Objects are: Rollout ",
    "version": "v1"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/configs/rollout/v1/rollout": {
      "get": {
        "summary": "List Rollout objects",
        "operationId": "ListRollout",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/rolloutRolloutList"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort-order",
            "description": "order to sort List results in.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "rollout/v1"
        ]
      },
      "post": {
        "summary": "Create Rollout object",
        "operationId": "AddRollout",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/rolloutRollout"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rolloutRollout"
            }
          }
        ],
        "tags": [
          "rollout/v1"
        ]
      }
    },
    "/configs/rollout/v1/rollout/{O.Name}": {
      "get": {
        "summary": "Get Rollout object",
        "operationId": "GetRollout",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/rolloutRollout"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.api-version",
            "description": "APIVersion defines the version of the API object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.version",
            "description": "New Version of the image to rollout to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.scheduled-start-time",
            "description": "Time, if specified, at which the rollout is supposed to start.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "spec.duration",
            "description": "Duration, if specified, after which the rollout is supposed to stop, if not completed by that time\nTypically represents the end of Maintenance window. should be a valid time duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.strategy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.max-parallel",
            "description": "MaxParallel is the maximum number of nodes getting updated at any time\nThis setting is applicable only to SmartNICs.\nController nodes are always upgraded one after another.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "spec.max-nic-failures-before-abort",
            "description": "After these many failures are observed during NIC upgrade, the rollout process stops\nThis setting applies to smartNICs only.\nThe controller nodes are rollout first and any failure there stops the rollout of SmartNICs.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "spec.suspend",
            "description": "When Set to true, the current rollout is suspended. Existing Nodes/Services/SmartNICs in the middle of rollout continue\n rollout execution but any Nodes/Services/SmartNICs which has not started Rollout will not be scheduled one.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "spec.smartnics-only",
            "description": "Dont upgrade Controller but only upgrade SmartNICs.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "spec.smartnic-must-match-constraint",
            "description": "When SmartNICMustMatchConstraint is true, Any smartNIC which does not match OrderConstraints does not go through rollout.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "spec.upgrade-type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.state",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.completion-percent",
            "description": "Heuristic value of percentage completion of the rollout.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "status.start-time",
            "description": "Start time of Rollout.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "status.end-time",
            "description": "End time of Rollout.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "status.prev-version",
            "description": "Version of the cluster before the start of rollout.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "rollout/v1"
        ]
      },
      "delete": {
        "summary": "Delete Rollout object",
        "operationId": "DeleteRollout",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/rolloutRollout"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "rollout/v1"
        ]
      },
      "put": {
        "summary": "Update Rollout object",
        "operationId": "UpdateRollout",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/rolloutRollout"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rolloutRollout"
            }
          }
        ],
        "tags": [
          "rollout/v1"
        ]
      }
    },
    "/configs/rollout/v1/watch/rollout": {
      "get": {
        "summary": "Watch Rollout objects. Supports WebSockets or HTTP long poll",
        "operationId": "WatchRollout",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/rolloutAutoMsgRolloutWatchHelper"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort-order",
            "description": "order to sort List results in.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "rollout/v1"
        ]
      }
    }
  },
  "definitions": {
    "apiListMeta": {
      "type": "object",
      "properties": {
        "resource-version": {
          "type": "string",
          "description": "Resource version of object store at the time of list generation."
        }
      },
      "description": "ListMeta contains the metadata for list of objects."
    },
    "apiListWatchOptions": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "generation-id": {
          "type": "string"
        },
        "resource-version": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "creation-time": {
          "type": "string",
          "format": "date-time"
        },
        "mod-time": {
          "type": "string",
          "format": "date-time"
        },
        "self-link": {
          "type": "string"
        },
        "label-selector": {
          "type": "string",
          "description": "LabelSelector to select on labels in list or watch results."
        },
        "field-selector": {
          "type": "string",
          "title": "FieldSelector to select on field values in list or watch results"
        },
        "field-change-selector": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified."
        },
        "from": {
          "type": "integer",
          "format": "int32",
          "title": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1]"
        },
        "max-results": {
          "type": "integer",
          "format": "int32",
          "description": "max. number of events to be fetched for the request."
        },
        "sort-order": {
          "type": "string",
          "enum": [
            "None",
            "ByName",
            "ByNameReverse",
            "ByVersion",
            "ByVersionReverse",
            "ByCreationTime",
            "ByCreationTimeReverse",
            "ByModTime",
            "ByModTimeReverse"
          ],
          "default": "None",
          "x-ui-hints": {
            "ByCreationTime": "By Creation Time",
            "ByCreationTimeReverse": "By Creation Time Reverse",
            "ByModTime": "By Modification Time",
            "ByModTimeReverse": "By Modification Time Reverse",
            "ByName": "By Name",
            "ByNameReverse": "By Name Reverse",
            "ByVersion": "By Version",
            "ByVersionReverse": "By Version Reverse",
            "None": "None"
          },
          "description": "order to sort List results in."
        }
      }
    },
    "apiObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters"
        },
        "tenant": {
          "type": "string",
          "title": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters"
        },
        "generation-id": {
          "type": "string",
          "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user."
        },
        "resource-version": {
          "type": "string",
          "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user."
        },
        "uuid": {
          "type": "string",
          "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels are arbitrary (key,value) pairs associated with any object."
        },
        "creation-time": {
          "type": "string",
          "format": "date-time",
          "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user."
        },
        "mod-time": {
          "type": "string",
          "format": "date-time",
          "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user."
        },
        "self-link": {
          "type": "string",
          "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user."
        }
      },
      "description": "ObjectMeta contains metadata that all objects stored in kvstore must have."
    },
    "apiObjectRef": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string",
          "description": "Tenant of the object."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace of the object, for scoped objects."
        },
        "kind": {
          "type": "string",
          "description": "Kind represents the type of the API object."
        },
        "name": {
          "type": "string",
          "description": "Name of the object, unique within a Namespace for scoped objects."
        },
        "uri": {
          "type": "string",
          "description": "URI is a link to accessing the referenced object."
        }
      },
      "description": "ObjectRef contains identifying information about an object."
    },
    "apiStatus": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/apiStatusResult",
          "description": "Result contains the status of the operation, success or failure."
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Message contains human readable form of the error."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Code is the HTTP status code."
        },
        "object-ref": {
          "$ref": "#/definitions/apiObjectRef",
          "description": "Reference to the object (optional) for which this status is being sent."
        }
      },
      "description": "Status is returned for calls that dont return objects."
    },
    "apiStatusResult": {
      "type": "object",
      "properties": {
        "Str": {
          "type": "string"
        }
      },
      "description": "StatusResult contains possible statuses for a NIC."
    },
    "apiTimestamp": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "apiTypeMeta": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind represents the type of the API object."
        },
        "api-version": {
          "type": "string",
          "title": "APIVersion defines the version of the API object. This can only be set by the server"
        }
      },
      "description": "TypeMeta contains the metadata about kind and version for all API objects."
    },
    "apiWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/googleprotobufAny"
        }
      }
    },
    "apiWatchEventList": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiWatchEvent"
          }
        }
      }
    },
    "googleprotobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name whose content describes the type of the\nserialized protocol buffer message.\n\nFor URLs which use the scheme `http`, `https`, or no scheme, the\nfollowing restrictions and interpretations apply:\n\n* If no scheme is provided, `https` is assumed.\n* The last segment of the URL's path must represent the fully\n  qualified name of the type (as in `path/google.protobuf.Duration`).\n  The name should be in a canonical form (e.g., leading \".\" is\n  not accepted).\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "labelsRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "The label key that the condition applies to."
        },
        "operator": {
          "type": "string",
          "enum": [
            "equals",
            "notEquals",
            "in",
            "notIn"
          ],
          "default": "equals",
          "x-ui-hints": {
            "notEquals": "not equals",
            "notIn": "not in"
          },
          "description": "Condition checked for the key."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Values contains one or more values corresponding to the label key. \"equals\" and\n\"notEquals\" operators need a single Value. \"in\" and \"notIn\" operators can have\none or more values."
        }
      },
      "description": "Requirement defines a single matching condition for a selector."
    },
    "labelsSelector": {
      "type": "object",
      "properties": {
        "requirements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/labelsRequirement"
          },
          "description": "Requirements are ANDed."
        }
      },
      "description": "Selector is used to select objects by labels. Requirements in the selector are ANDed.\nA selector with no Requirements does not select anything."
    },
    "rolloutAutoMsgRolloutWatchHelper": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rolloutAutoMsgRolloutWatchHelperWatchEvent"
          }
        }
      },
      "title": "AutoMsgRolloutWatchHelper is a wrapper object for watch events for Rollout objects"
    },
    "rolloutAutoMsgRolloutWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/rolloutRollout"
        }
      }
    },
    "rolloutRollout": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/rolloutRolloutSpec"
        },
        "status": {
          "$ref": "#/definitions/rolloutRolloutStatus"
        }
      },
      "title": "Rollout object captures the admin's intent and status of the software version running on the cluster\n It is incorrect to have two different Rollouts active at the same time"
    },
    "rolloutRolloutList": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "list-meta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rolloutRollout"
          },
          "title": "List of Rollout objects"
        }
      },
      "title": "RolloutList is a container object for list of Rollout objects"
    },
    "rolloutRolloutPhase": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the Node, Service or SmartNIC"
        },
        "phase": {
          "type": "string",
          "enum": [
            "PRE_CHECK",
            "DEPENDENCIES_CHECK",
            "WAITING_FOR_TURN",
            "PROGRESSING",
            "COMPLETE",
            "FAIL"
          ],
          "default": "PRE_CHECK",
          "x-ui-hints": {
            "COMPLETE": "Complete",
            "DEPENDENCIES_CHECK": "DependenciesCheck",
            "FAIL": "Fail",
            "PRE_CHECK": "PreCheck",
            "PROGRESSING": "Processing",
            "WAITING_FOR_TURN": "WaitingForTurn"
          },
          "title": "Phase indicates a certain rollout phase/condition"
        },
        "start-time": {
          "type": "string",
          "format": "date-time",
          "description": "The time of starting the rollout for this node/service. \nThis does not include the pre-check which can happen way before the actual rollout."
        },
        "end-time": {
          "type": "string",
          "format": "date-time",
          "title": "Time at which rollout completed for this node/service"
        },
        "reason": {
          "type": "string",
          "title": "The reason for the Phase last transition, if any"
        },
        "message": {
          "type": "string",
          "description": "A detailed message indicating details about the transition."
        }
      },
      "title": "RolloutPhase gives details of status of Rollout on each Node/Service/SmartNIC"
    },
    "rolloutRolloutSpec": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "title": "New Version of the image to rollout to"
        },
        "scheduled-start-time": {
          "type": "string",
          "format": "date-time",
          "title": "Time, if specified, at which the rollout is supposed to start"
        },
        "duration": {
          "type": "string",
          "example": "2h",
          "description": "should be a valid time duration\n",
          "title": "Duration, if specified, after which the rollout is supposed to stop, if not completed by that time\nTypically represents the end of Maintenance window"
        },
        "strategy": {
          "type": "string",
          "enum": [
            "LINEAR",
            "EXPONENTIAL"
          ],
          "default": "LINEAR",
          "x-ui-hints": {
            "EXPONENTIAL": "Exponential",
            "LINEAR": "Linear"
          }
        },
        "max-parallel": {
          "type": "integer",
          "format": "int64",
          "description": "MaxParallel is the maximum number of nodes getting updated at any time\nThis setting is applicable only to SmartNICs.\nController nodes are always upgraded one after another."
        },
        "max-nic-failures-before-abort": {
          "type": "integer",
          "format": "int64",
          "title": "After these many failures are observed during NIC upgrade, the rollout process stops\nThis setting applies to smartNICs only.\nThe controller nodes are rollout first and any failure there stops the rollout of SmartNICs"
        },
        "order-constraints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/labelsSelector"
          },
          "title": "If specified, this is the sequence in which the SmartNICs are upgraded based on their labels.\nif a SmartNIC matches multiple constraints, the first one is used.\n Any SmartNIC which does not match the constraints is upgraded at the end.\nThis order is mainly for the smartNICs on Hosts\nController nodes are always rollout one after other"
        },
        "suspend": {
          "type": "boolean",
          "format": "boolean",
          "description": "When Set to true, the current rollout is suspended. Existing Nodes/Services/SmartNICs in the middle of rollout continue\n rollout execution but any Nodes/Services/SmartNICs which has not started Rollout will not be scheduled one."
        },
        "smartnics-only": {
          "type": "boolean",
          "format": "boolean",
          "title": "Dont upgrade Controller but only upgrade SmartNICs"
        },
        "smartnic-must-match-constraint": {
          "type": "boolean",
          "format": "boolean",
          "title": "When SmartNICMustMatchConstraint is true, Any smartNIC which does not match OrderConstraints does not go through rollout"
        },
        "upgrade-type": {
          "type": "string",
          "enum": [
            "Disruptive",
            "OnNextHostReboot"
          ],
          "default": "Disruptive",
          "x-ui-hints": {
            "Disruptive": "Disruptive",
            "OnNextHostReboot": "OnNextHostReboot"
          }
        }
      },
      "title": "RolloutSpec is the Spec of a Rollout"
    },
    "rolloutRolloutStatus": {
      "type": "object",
      "properties": {
        "controller-nodes-status": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rolloutRolloutPhase"
          },
          "title": "Rollout status of Controller Node"
        },
        "controller-services-status": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rolloutRolloutPhase"
          },
          "title": "Rollout status of Various Controller Services"
        },
        "smartnics-status": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rolloutRolloutPhase"
          },
          "description": "Rollout status of SmartNICs in the cluster. Has entries for SmartNICs on Controller nodes as well as workload nodes\nThe entries are group by parallelism based on the order-constraints and max-parallel specified by the user."
        },
        "state": {
          "type": "string",
          "enum": [
            "PROGRESSING",
            "FAILURE",
            "SUCCESS",
            "SCHEDULED",
            "SUSPENDED",
            "SUSPEND_IN_PROGRESS",
            "DEADLINE_EXCEEDED"
          ],
          "default": "PROGRESSING"
        },
        "completion-percent": {
          "type": "integer",
          "format": "int64",
          "title": "Heuristic value of percentage completion of the rollout"
        },
        "start-time": {
          "type": "string",
          "format": "date-time",
          "title": "Start time of Rollout"
        },
        "end-time": {
          "type": "string",
          "format": "date-time",
          "title": "End time of Rollout"
        },
        "prev-version": {
          "type": "string",
          "title": "Version of the cluster before the start of rollout"
        }
      },
      "title": "Rollout Status gives the status of the rollout at the top level as well as details of\n individual components"
    }
  }
}
