// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package workload is a auto generated package.
Input file: svc_workload.proto
*/
package workload

import (
	fmt "fmt"

	listerwatcher "github.com/pensando/sw/api/listerwatcher"
	"github.com/pensando/sw/venice/utils/kvstore"
	"github.com/pensando/sw/venice/utils/log"
)

// Dummy definitions to suppress nonused warnings
var _ kvstore.Interface
var _ log.Logger
var _ listerwatcher.WatcherClient

// MakeKey generates a KV store key for the object
func (m *EndpointList) MakeKey(prefix string) string {
	obj := Endpoint{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *AutoMsgEndpointWatchHelper) MakeKey(prefix string) string {
	obj := Endpoint{}
	return obj.MakeKey(prefix)
}

// Clone clones the object into into or creates one of into is nil
func (m *AutoMsgEndpointWatchHelper) Clone(into interface{}) (interface{}, error) {
	var out *AutoMsgEndpointWatchHelper
	var ok bool
	if into == nil {
		out = &AutoMsgEndpointWatchHelper{}
	} else {
		out, ok = into.(*AutoMsgEndpointWatchHelper)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *AutoMsgEndpointWatchHelper) Defaults(ver string) bool {
	return false
}

// Clone clones the object into into or creates one of into is nil
func (m *EndpointList) Clone(into interface{}) (interface{}, error) {
	var out *EndpointList
	var ok bool
	if into == nil {
		out = &EndpointList{}
	} else {
		out, ok = into.(*EndpointList)
		if !ok {
			return nil, fmt.Errorf("mismatched object types")
		}
	}
	*out = *m
	return out, nil
}

// Default sets up the defaults for the object
func (m *EndpointList) Defaults(ver string) bool {
	return false
}

// Validators

func (m *AutoMsgEndpointWatchHelper) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *EndpointList) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func init() {

}
