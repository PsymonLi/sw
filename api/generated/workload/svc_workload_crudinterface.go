// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

package workload

import (
	"context"

	api "github.com/pensando/sw/api"
	"github.com/pensando/sw/api/interfaces"
	"github.com/pensando/sw/venice/utils/kvstore"
)

// Dummy vars to suppress unused imports message
var _ context.Context
var _ api.ObjectMeta
var _ kvstore.Interface

// WorkloadV1EndpointInterface exposes the CRUD methods for Endpoint
type WorkloadV1EndpointInterface interface {
	Create(ctx context.Context, in *Endpoint) (*Endpoint, error)
	Update(ctx context.Context, in *Endpoint) (*Endpoint, error)
	UpdateStatus(ctx context.Context, in *Endpoint) (*Endpoint, error)
	Label(ctx context.Context, in *api.Label) (*Endpoint, error)
	Get(ctx context.Context, objMeta *api.ObjectMeta) (*Endpoint, error)
	Delete(ctx context.Context, objMeta *api.ObjectMeta) (*Endpoint, error)
	List(ctx context.Context, options *api.ListWatchOptions) ([]*Endpoint, error)
	Watch(ctx context.Context, options *api.ListWatchOptions) (kvstore.Watcher, error)
	Allowed(oper apiintf.APIOperType) bool
}

// WorkloadV1WorkloadInterface exposes the CRUD methods for Workload
type WorkloadV1WorkloadInterface interface {
	Create(ctx context.Context, in *Workload) (*Workload, error)
	Update(ctx context.Context, in *Workload) (*Workload, error)
	UpdateStatus(ctx context.Context, in *Workload) (*Workload, error)
	Label(ctx context.Context, in *api.Label) (*Workload, error)
	Get(ctx context.Context, objMeta *api.ObjectMeta) (*Workload, error)
	Delete(ctx context.Context, objMeta *api.ObjectMeta) (*Workload, error)
	List(ctx context.Context, options *api.ListWatchOptions) ([]*Workload, error)
	Watch(ctx context.Context, options *api.ListWatchOptions) (kvstore.Watcher, error)
	Allowed(oper apiintf.APIOperType) bool
	StartMigration(ctx context.Context, in *Workload) (*Workload, error)
	FinalSyncMigration(ctx context.Context, in *Workload) (*Workload, error)
	FinishMigration(ctx context.Context, in *Workload) (*Workload, error)
	AbortMigration(ctx context.Context, in *Workload) (*Workload, error)
}

// WorkloadV1Interface exposes objects with CRUD operations allowed by the service
type WorkloadV1Interface interface {
	Endpoint() WorkloadV1EndpointInterface
	Workload() WorkloadV1WorkloadInterface
	Watch(ctx context.Context, options *api.AggWatchOptions) (kvstore.Watcher, error)
}
