// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package workloadApiServer is a auto generated package.
Input file: workload.proto
*/
package workload

import (
	"github.com/pensando/sw/venice/utils/runtime"
)

var typesMapWorkload = map[string]*runtime.Struct{

	"workload.Workload": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"T": runtime.Field{Name: "T", JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.TypeMeta"},

			"O": runtime.Field{Name: "O", JSONTag: "meta", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.ObjectMeta"},

			"Spec": runtime.Field{Name: "Spec", JSONTag: "spec", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "workload.WorkloadSpec"},

			"Status": runtime.Field{Name: "Status", JSONTag: "status", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "workload.WorkloadStatus"},
		},
	},
	"workload.WorkloadIntfSpec": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"MicroSegVlan": runtime.Field{Name: "MicroSegVlan", JSONTag: "micro-seg-vlan", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_UINT32"},

			"ExternalVlan": runtime.Field{Name: "ExternalVlan", JSONTag: "external-vlan", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_UINT32"},
		},
	},
	"workload.WorkloadIntfStatus": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"IpAddrs": runtime.Field{Name: "IpAddrs", JSONTag: "ip-addrs", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "TYPE_STRING"},
		},
	},
	"workload.WorkloadSpec": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"HostName": runtime.Field{Name: "HostName", JSONTag: "host-name", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"Interfaces": runtime.Field{Name: "Interfaces", JSONTag: "interfaces", Pointer: false, Slice: false, Map: true, KeyType: "TYPE_STRING", Type: "workload.WorkloadIntfSpec"},
		},
	},
	"workload.WorkloadSpec.InterfacesEntry": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"key": runtime.Field{Name: "key", JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"value": runtime.Field{Name: "value", JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "workload.WorkloadIntfSpec"},
		},
	},
	"workload.WorkloadStatus": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"Interfaces": runtime.Field{Name: "Interfaces", JSONTag: "interfaces", Pointer: false, Slice: false, Map: true, KeyType: "TYPE_STRING", Type: "workload.WorkloadIntfStatus"},

			"Endpoints": runtime.Field{Name: "Endpoints", JSONTag: "endpoints", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "TYPE_STRING"},
		},
	},
	"workload.WorkloadStatus.InterfacesEntry": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"key": runtime.Field{Name: "key", JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"value": runtime.Field{Name: "value", JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "workload.WorkloadIntfStatus"},
		},
	},
}

func init() {
	schema := runtime.GetDefaultScheme()
	schema.AddSchema(typesMapWorkload)
}
