// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package workload is a auto generated package.
Input file: endpoint.proto
*/
package workload

import (
	"context"
	"encoding/json"
	"net/http"

	"github.com/pensando/sw/api"
)

// Dummy definitions to suppress nonused warnings
var _ api.ObjectMeta

func encodeHTTPEndpoint(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPEndpoint(_ context.Context, r *http.Request) (interface{}, error) {
	var req Endpoint
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqEndpoint encodes GRPC request
func EncodeGrpcReqEndpoint(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*Endpoint)
	return req, nil
}

// DecodeGrpcReqEndpoint decodes GRPC request
func DecodeGrpcReqEndpoint(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*Endpoint)
	return req, nil
}

// EncodeGrpcRespEndpoint encodes GRC response
func EncodeGrpcRespEndpoint(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespEndpoint decodes GRPC response
func DecodeGrpcRespEndpoint(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

func encodeHTTPEndpointMigrationStatus(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPEndpointMigrationStatus(_ context.Context, r *http.Request) (interface{}, error) {
	var req EndpointMigrationStatus
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqEndpointMigrationStatus encodes GRPC request
func EncodeGrpcReqEndpointMigrationStatus(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*EndpointMigrationStatus)
	return req, nil
}

// DecodeGrpcReqEndpointMigrationStatus decodes GRPC request
func DecodeGrpcReqEndpointMigrationStatus(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*EndpointMigrationStatus)
	return req, nil
}

// EncodeGrpcRespEndpointMigrationStatus encodes GRC response
func EncodeGrpcRespEndpointMigrationStatus(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespEndpointMigrationStatus decodes GRPC response
func DecodeGrpcRespEndpointMigrationStatus(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

func encodeHTTPEndpointSpec(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPEndpointSpec(_ context.Context, r *http.Request) (interface{}, error) {
	var req EndpointSpec
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqEndpointSpec encodes GRPC request
func EncodeGrpcReqEndpointSpec(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*EndpointSpec)
	return req, nil
}

// DecodeGrpcReqEndpointSpec decodes GRPC request
func DecodeGrpcReqEndpointSpec(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*EndpointSpec)
	return req, nil
}

// EncodeGrpcRespEndpointSpec encodes GRC response
func EncodeGrpcRespEndpointSpec(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespEndpointSpec decodes GRPC response
func DecodeGrpcRespEndpointSpec(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

func encodeHTTPEndpointStatus(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPEndpointStatus(_ context.Context, r *http.Request) (interface{}, error) {
	var req EndpointStatus
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqEndpointStatus encodes GRPC request
func EncodeGrpcReqEndpointStatus(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*EndpointStatus)
	return req, nil
}

// DecodeGrpcReqEndpointStatus decodes GRPC request
func DecodeGrpcReqEndpointStatus(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*EndpointStatus)
	return req, nil
}

// EncodeGrpcRespEndpointStatus encodes GRC response
func EncodeGrpcRespEndpointStatus(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespEndpointStatus decodes GRPC response
func DecodeGrpcRespEndpointStatus(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}
