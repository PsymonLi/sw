// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package collection is a auto generated package.
Input file: protos/collection.proto
*/
package collection

import (
	fmt "fmt"

	listerwatcher "github.com/pensando/sw/api/listerwatcher"
	"github.com/pensando/sw/venice/utils/kvstore"
	"github.com/pensando/sw/venice/utils/log"
)

// Dummy definitions to suppress nonused warnings
var _ kvstore.Interface
var _ log.Logger
var _ listerwatcher.WatcherClient

// MakeKey generates a KV store key for the object
func (m *CollectionPolicy) MakeKey(prefix string) string {
	return fmt.Sprint("/venice/", prefix, "/", "collectionPolicy/", m.Name)
}

// MakeKey generates a KV store key for the object
func (m *CollectionPolicyList) MakeKey(prefix string) string {
	obj := CollectionPolicy{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *AutoMsgCollectionPolicyWatchHelper) MakeKey(prefix string) string {
	obj := CollectionPolicy{}
	return obj.MakeKey(prefix)
}

func (m *AutoMsgCollectionPolicyWatchHelper) Clone(into interface{}) error {
	out, ok := into.(*AutoMsgCollectionPolicyWatchHelper)
	if !ok {
		return fmt.Errorf("mismatched object types")
	}
	*out = *m
	return nil
}

func (m *CollectionPolicy) Clone(into interface{}) error {
	out, ok := into.(*CollectionPolicy)
	if !ok {
		return fmt.Errorf("mismatched object types")
	}
	*out = *m
	return nil
}

func (m *CollectionPolicyList) Clone(into interface{}) error {
	out, ok := into.(*CollectionPolicyList)
	if !ok {
		return fmt.Errorf("mismatched object types")
	}
	*out = *m
	return nil
}

func (m *CollectionPolicySpec) Clone(into interface{}) error {
	out, ok := into.(*CollectionPolicySpec)
	if !ok {
		return fmt.Errorf("mismatched object types")
	}
	*out = *m
	return nil
}

func (m *CollectionPolicyStatus) Clone(into interface{}) error {
	out, ok := into.(*CollectionPolicyStatus)
	if !ok {
		return fmt.Errorf("mismatched object types")
	}
	*out = *m
	return nil
}

func (m *CollectionTrigger) Clone(into interface{}) error {
	out, ok := into.(*CollectionTrigger)
	if !ok {
		return fmt.Errorf("mismatched object types")
	}
	*out = *m
	return nil
}

// Validators

func (m *AutoMsgCollectionPolicyWatchHelper) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *CollectionPolicy) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *CollectionPolicyList) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *CollectionPolicySpec) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *CollectionPolicyStatus) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *CollectionTrigger) Validate(ver string, ignoreStatus bool) bool {
	return true
}
