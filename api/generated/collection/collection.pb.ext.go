// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package collection is a auto generated package.
Input file: protos/collection.proto
*/
package collection

import (
	fmt "fmt"
	listerwatcher "github.com/pensando/sw/api/listerwatcher"
	"github.com/pensando/sw/venice/utils/kvstore"
	"github.com/pensando/sw/venice/utils/log"
)

// Dummy definitions to suppress nonused warnings
var _ kvstore.Interface
var _ log.Logger
var _ listerwatcher.WatcherClient

// MakeKey generates a KV store key for the object
func (m *CollectionPolicy) MakeKey(prefix string) string {
	return fmt.Sprint("/venice/", prefix, "/", "collectionPolicy/", m.Name)
}

// MakeKey generates a KV store key for the object
func (m *CollectionPolicyList) MakeKey(prefix string) string {
	obj := CollectionPolicy{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *AutoMsgCollectionPolicyWatchHelper) MakeKey(prefix string) string {
	obj := CollectionPolicy{}
	return obj.MakeKey(prefix)
}

// Validators

func (m *AutoMsgCollectionPolicyWatchHelper) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *CollectionPolicy) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *CollectionPolicyList) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *CollectionPolicySpec) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *CollectionPolicyStatus) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *CollectionTrigger) Validate(ver string, ignoreStatus bool) bool {
	return true
}
