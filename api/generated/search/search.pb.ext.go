// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package search is a auto generated package.
Input file: protos/search.proto
*/
package search

import (
	fmt "fmt"

	listerwatcher "github.com/pensando/sw/api/listerwatcher"
	"github.com/pensando/sw/venice/utils/kvstore"
	"github.com/pensando/sw/venice/utils/log"
)

// Dummy definitions to suppress nonused warnings
var _ kvstore.Interface
var _ log.Logger
var _ listerwatcher.WatcherClient

func (m *Aggregation) Clone(into interface{}) error {
	out, ok := into.(*Aggregation)
	if !ok {
		return fmt.Errorf("mismatched object types")
	}
	*out = *m
	return nil
}

func (m *Entry) Clone(into interface{}) error {
	out, ok := into.(*Entry)
	if !ok {
		return fmt.Errorf("mismatched object types")
	}
	*out = *m
	return nil
}

func (m *EntryList) Clone(into interface{}) error {
	out, ok := into.(*EntryList)
	if !ok {
		return fmt.Errorf("mismatched object types")
	}
	*out = *m
	return nil
}

func (m *Error) Clone(into interface{}) error {
	out, ok := into.(*Error)
	if !ok {
		return fmt.Errorf("mismatched object types")
	}
	*out = *m
	return nil
}

func (m *NestedAggregation) Clone(into interface{}) error {
	out, ok := into.(*NestedAggregation)
	if !ok {
		return fmt.Errorf("mismatched object types")
	}
	*out = *m
	return nil
}

func (m *Requirement) Clone(into interface{}) error {
	out, ok := into.(*Requirement)
	if !ok {
		return fmt.Errorf("mismatched object types")
	}
	*out = *m
	return nil
}

func (m *SearchCriteria) Clone(into interface{}) error {
	out, ok := into.(*SearchCriteria)
	if !ok {
		return fmt.Errorf("mismatched object types")
	}
	*out = *m
	return nil
}

func (m *SearchRequest) Clone(into interface{}) error {
	out, ok := into.(*SearchRequest)
	if !ok {
		return fmt.Errorf("mismatched object types")
	}
	*out = *m
	return nil
}

func (m *SearchResponse) Clone(into interface{}) error {
	out, ok := into.(*SearchResponse)
	if !ok {
		return fmt.Errorf("mismatched object types")
	}
	*out = *m
	return nil
}

func (m *SearchResult) Clone(into interface{}) error {
	out, ok := into.(*SearchResult)
	if !ok {
		return fmt.Errorf("mismatched object types")
	}
	*out = *m
	return nil
}

// Validators

func (m *Aggregation) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *Entry) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *EntryList) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *Error) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *NestedAggregation) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *Requirement) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *SearchCriteria) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *SearchRequest) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *SearchResponse) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *SearchResult) Validate(ver string, ignoreStatus bool) bool {
	return true
}
