// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package searchApiServer is a auto generated package.
Input file: search.proto
*/
package search

import (
	"github.com/pensando/sw/venice/utils/runtime"
)

var typesMapSearch = map[string]*runtime.Struct{

	"search.Aggregation": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"Entries": runtime.Field{Name: "Entries", JSONTag: "entries", Pointer: false, Slice: false, Map: true, KeyType: "TYPE_STRING", Type: "search.EntryList"},
		},
	},
	"search.Aggregation.EntriesEntry": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"key": runtime.Field{Name: "key", JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"value": runtime.Field{Name: "value", JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "search.EntryList"},
		},
	},
	"search.Category": &runtime.Struct{
		Fields: map[string]runtime.Field{},
	},
	"search.Entry": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"T": runtime.Field{Name: "T", JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.TypeMeta"},

			"O": runtime.Field{Name: "O", JSONTag: "meta", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.ObjectMeta"},
		},
	},
	"search.EntryList": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"Entries": runtime.Field{Name: "Entries", JSONTag: "entries", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "search.Entry"},
		},
	},
	"search.Error": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"Type": runtime.Field{Name: "Type", JSONTag: "type", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"Reason": runtime.Field{Name: "Reason", JSONTag: "reason", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},
		},
	},
	"search.Kind": &runtime.Struct{
		Fields: map[string]runtime.Field{},
	},
	"search.NestedAggregation": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"Entries": runtime.Field{Name: "Entries", JSONTag: "entries", Pointer: false, Slice: false, Map: true, KeyType: "TYPE_STRING", Type: "search.Aggregation"},
		},
	},
	"search.NestedAggregation.EntriesEntry": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"key": runtime.Field{Name: "key", JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"value": runtime.Field{Name: "value", JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "search.Aggregation"},
		},
	},
	"search.SearchQuery": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"Texts": runtime.Field{Name: "Texts", JSONTag: "texts", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "search.TextRequirement"},

			"Categories": runtime.Field{Name: "Categories", JSONTag: "categories", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"Kinds": runtime.Field{Name: "Kinds", JSONTag: "kinds", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"Fields": runtime.Field{Name: "Fields", JSONTag: "fields", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "fields.Selector"},

			"Labels": runtime.Field{Name: "Labels", JSONTag: "labels", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "labels.Selector"},
		},
	},
	"search.SearchRequest": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"QueryString": runtime.Field{Name: "QueryString", JSONTag: "query-string", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"From": runtime.Field{Name: "From", JSONTag: "from", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_INT32"},

			"MaxResults": runtime.Field{Name: "MaxResults", JSONTag: "max-results", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_INT32"},

			"Query": runtime.Field{Name: "Query", JSONTag: "query", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "search.SearchQuery"},
		},
	},
	"search.SearchResponse": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"T": runtime.Field{Name: "T", JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.TypeMeta"},

			"O": runtime.Field{Name: "O", JSONTag: "meta", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.ObjectMeta"},

			"TotalHits": runtime.Field{Name: "TotalHits", JSONTag: "total-hits", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_INT64"},

			"ActualHits": runtime.Field{Name: "ActualHits", JSONTag: "actual-hits", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_INT64"},

			"TimeTakenMsecs": runtime.Field{Name: "TimeTakenMsecs", JSONTag: "time-taken-msecs", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_INT64"},

			"Error": runtime.Field{Name: "Error", JSONTag: "error", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "search.Error"},

			"Entries": runtime.Field{Name: "Entries", JSONTag: "entries", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "search.Entry"},

			"AggregatedEntries": runtime.Field{Name: "AggregatedEntries", JSONTag: "aggregated-entries", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "search.NestedAggregation"},
		},
	},
	"search.TextRequirement": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"Text": runtime.Field{Name: "Text", JSONTag: "text", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "TYPE_STRING"},
		},
	},
}

func init() {
	schema := runtime.GetDefaultScheme()
	schema.AddSchema(typesMapSearch)
}
