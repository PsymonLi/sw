// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package network is a auto generated package.
Input file: vrf.proto
*/
package network

import (
	"context"
	"encoding/json"
	"net/http"

	"github.com/pensando/sw/api"
)

// Dummy definitions to suppress nonused warnings
var _ api.ObjectMeta

func encodeHTTPVirtualRouter(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPVirtualRouter(_ context.Context, r *http.Request) (interface{}, error) {
	var req VirtualRouter
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqVirtualRouter encodes GRPC request
func EncodeGrpcReqVirtualRouter(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*VirtualRouter)
	return req, nil
}

// DecodeGrpcReqVirtualRouter decodes GRPC request
func DecodeGrpcReqVirtualRouter(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*VirtualRouter)
	return req, nil
}

// EncodeGrpcRespVirtualRouter encodes GRC response
func EncodeGrpcRespVirtualRouter(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespVirtualRouter decodes GRPC response
func DecodeGrpcRespVirtualRouter(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

func encodeHTTPVirtualRouterSpec(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPVirtualRouterSpec(_ context.Context, r *http.Request) (interface{}, error) {
	var req VirtualRouterSpec
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqVirtualRouterSpec encodes GRPC request
func EncodeGrpcReqVirtualRouterSpec(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*VirtualRouterSpec)
	return req, nil
}

// DecodeGrpcReqVirtualRouterSpec decodes GRPC request
func DecodeGrpcReqVirtualRouterSpec(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*VirtualRouterSpec)
	return req, nil
}

// EncodeGrpcRespVirtualRouterSpec encodes GRC response
func EncodeGrpcRespVirtualRouterSpec(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespVirtualRouterSpec decodes GRPC response
func DecodeGrpcRespVirtualRouterSpec(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

func encodeHTTPVirtualRouterStatus(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPVirtualRouterStatus(_ context.Context, r *http.Request) (interface{}, error) {
	var req VirtualRouterStatus
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqVirtualRouterStatus encodes GRPC request
func EncodeGrpcReqVirtualRouterStatus(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*VirtualRouterStatus)
	return req, nil
}

// DecodeGrpcReqVirtualRouterStatus decodes GRPC request
func DecodeGrpcReqVirtualRouterStatus(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*VirtualRouterStatus)
	return req, nil
}

// EncodeGrpcRespVirtualRouterStatus encodes GRC response
func EncodeGrpcRespVirtualRouterStatus(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespVirtualRouterStatus decodes GRPC response
func DecodeGrpcRespVirtualRouterStatus(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}
