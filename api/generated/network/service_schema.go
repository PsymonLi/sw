// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package networkApiServer is a auto generated package.
Input file: service.proto
*/
package network

import (
	"github.com/pensando/sw/venice/utils/runtime"
)

var typesMapService = map[string]*runtime.Struct{

	"network.Service": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"T": runtime.Field{Name: "T", JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.TypeMeta"},

			"O": runtime.Field{Name: "O", JSONTag: "meta", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.ObjectMeta"},

			"Spec": runtime.Field{Name: "Spec", JSONTag: "spec", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "network.ServiceSpec"},

			"Status": runtime.Field{Name: "Status", JSONTag: "status", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "network.ServiceStatus"},
		},
	},
	"network.ServiceSpec": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"WorkloadSelector": runtime.Field{Name: "WorkloadSelector", JSONTag: "workload-labels", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"VirtualIp": runtime.Field{Name: "VirtualIp", JSONTag: "virtual-ip", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"Ports": runtime.Field{Name: "Ports", JSONTag: "ports", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"LBPolicy": runtime.Field{Name: "LBPolicy", JSONTag: "lb-policy", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"TLSServerPolicy": runtime.Field{Name: "TLSServerPolicy", JSONTag: "tls-server-policy", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "network.TLSServerPolicySpec"},

			"TLSClientPolicy": runtime.Field{Name: "TLSClientPolicy", JSONTag: "tls-client-policy", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "network.TLSClientPolicySpec"},
		},
	},
	"network.ServiceStatus": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"Workloads": runtime.Field{Name: "Workloads", JSONTag: "workloads", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "TYPE_STRING"},
		},
	},
	"network.TLSClientPolicySpec": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"CertificatesSelector": runtime.Field{Name: "CertificatesSelector", JSONTag: "tls-client-certificates-selector", Pointer: false, Slice: false, Map: true, KeyType: "TYPE_STRING", Type: "TYPE_STRING"},

			"TrustRoots": runtime.Field{Name: "TrustRoots", JSONTag: "tls-client-trust-roots", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"AllowedPeerId": runtime.Field{Name: "AllowedPeerId", JSONTag: "tls-client-allowed-peer-id", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "TYPE_STRING"},
		},
	},
	"network.TLSClientPolicySpec.CertificatesSelectorEntry": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"key": runtime.Field{Name: "key", JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"value": runtime.Field{Name: "value", JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},
		},
	},
	"network.TLSServerPolicySpec": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"Certificates": runtime.Field{Name: "Certificates", JSONTag: "tls-server-certificates", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"ClientAuthentication": runtime.Field{Name: "ClientAuthentication", JSONTag: "client-authentication", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"TrustRoots": runtime.Field{Name: "TrustRoots", JSONTag: "tls-server-trust-roots", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"AllowedPeerId": runtime.Field{Name: "AllowedPeerId", JSONTag: "tls-server-allowed-peer-id", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "TYPE_STRING"},
		},
	},
}

func init() {
	schema := runtime.GetDefaultScheme()
	schema.AddSchema(typesMapService)
}
