// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package network is a auto generated package.
Input file: protos/network.proto
*/
package network

import (
	"context"
	"github.com/pensando/sw/api"
)

// Dummy definitions to suppress nonused warnings
var _ api.ObjectMeta

// ServiceTenantV1Client  is the client interface for the service.
type ServiceTenantV1Client interface {
	AutoAddTenant(ctx context.Context, t *Tenant) (*Tenant, error)
	AutoUpdateTenant(ctx context.Context, t *Tenant) (*Tenant, error)
	AutoGetTenant(ctx context.Context, t *Tenant) (*Tenant, error)
	AutoDeleteTenant(ctx context.Context, t *Tenant) (*Tenant, error)
	AutoListTenant(ctx context.Context, t *api.ListWatchOptions) (*AutoMsgTenantListHelper, error)

	AutoWatchTenant(ctx context.Context, in *api.ListWatchOptions) (TenantV1_AutoWatchTenantClient, error)
}

// ServiceNetworkV1Client  is the client interface for the service.
type ServiceNetworkV1Client interface {
	AutoAddNetwork(ctx context.Context, t *Network) (*Network, error)
	AutoUpdateNetwork(ctx context.Context, t *Network) (*Network, error)
	AutoGetNetwork(ctx context.Context, t *Network) (*Network, error)
	AutoDeleteNetwork(ctx context.Context, t *Network) (*Network, error)
	AutoListNetwork(ctx context.Context, t *api.ListWatchOptions) (*AutoMsgNetworkListHelper, error)

	AutoWatchNetwork(ctx context.Context, in *api.ListWatchOptions) (NetworkV1_AutoWatchNetworkClient, error)
}

// ServiceSecurityGroupV1Client  is the client interface for the service.
type ServiceSecurityGroupV1Client interface {
	AutoAddSecurityGroup(ctx context.Context, t *SecurityGroup) (*SecurityGroup, error)
	AutoUpdateSecurityGroup(ctx context.Context, t *SecurityGroup) (*SecurityGroup, error)
	AutoGetSecurityGroup(ctx context.Context, t *SecurityGroup) (*SecurityGroup, error)
	AutoDeleteSecurityGroup(ctx context.Context, t *SecurityGroup) (*SecurityGroup, error)
	AutoListSecurityGroup(ctx context.Context, t *api.ListWatchOptions) (*AutoMsgSecurityGroupListHelper, error)

	AutoWatchSecurityGroup(ctx context.Context, in *api.ListWatchOptions) (SecurityGroupV1_AutoWatchSecurityGroupClient, error)
}

// ServiceSgpolicyV1Client  is the client interface for the service.
type ServiceSgpolicyV1Client interface {
	AutoAddSgpolicy(ctx context.Context, t *Sgpolicy) (*Sgpolicy, error)
	AutoUpdateSgpolicy(ctx context.Context, t *Sgpolicy) (*Sgpolicy, error)
	AutoGetSgpolicy(ctx context.Context, t *Sgpolicy) (*Sgpolicy, error)
	AutoDeleteSgpolicy(ctx context.Context, t *Sgpolicy) (*Sgpolicy, error)
	AutoListSgpolicy(ctx context.Context, t *api.ListWatchOptions) (*AutoMsgSgpolicyListHelper, error)

	AutoWatchSgpolicy(ctx context.Context, in *api.ListWatchOptions) (SgpolicyV1_AutoWatchSgpolicyClient, error)
}

// ServiceServiceV1Client  is the client interface for the service.
type ServiceServiceV1Client interface {
	AutoAddService(ctx context.Context, t *Service) (*Service, error)
	AutoUpdateService(ctx context.Context, t *Service) (*Service, error)
	AutoGetService(ctx context.Context, t *Service) (*Service, error)
	AutoDeleteService(ctx context.Context, t *Service) (*Service, error)
	AutoListService(ctx context.Context, t *api.ListWatchOptions) (*AutoMsgServiceListHelper, error)

	AutoWatchService(ctx context.Context, in *api.ListWatchOptions) (ServiceV1_AutoWatchServiceClient, error)
}

// ServiceLbPolicyV1Client  is the client interface for the service.
type ServiceLbPolicyV1Client interface {
	AutoAddLbPolicy(ctx context.Context, t *LbPolicy) (*LbPolicy, error)
	AutoUpdateLbPolicy(ctx context.Context, t *LbPolicy) (*LbPolicy, error)
	AutoGetLbPolicy(ctx context.Context, t *LbPolicy) (*LbPolicy, error)
	AutoDeleteLbPolicy(ctx context.Context, t *LbPolicy) (*LbPolicy, error)
	AutoListLbPolicy(ctx context.Context, t *api.ListWatchOptions) (*AutoMsgLbPolicyListHelper, error)

	AutoWatchLbPolicy(ctx context.Context, in *api.ListWatchOptions) (LbPolicyV1_AutoWatchLbPolicyClient, error)
}

// ServiceEndpointV1Client  is the client interface for the service.
type ServiceEndpointV1Client interface {
	AutoAddEndpoint(ctx context.Context, t *Endpoint) (*Endpoint, error)
	AutoUpdateEndpoint(ctx context.Context, t *Endpoint) (*Endpoint, error)
	AutoGetEndpoint(ctx context.Context, t *Endpoint) (*Endpoint, error)
	AutoDeleteEndpoint(ctx context.Context, t *Endpoint) (*Endpoint, error)
	AutoListEndpoint(ctx context.Context, t *api.ListWatchOptions) (*AutoMsgEndpointListHelper, error)

	AutoWatchEndpoint(ctx context.Context, in *api.ListWatchOptions) (EndpointV1_AutoWatchEndpointClient, error)
}

// ServiceTenantV1Server is the server interface for the service.
type ServiceTenantV1Server interface {
	AutoAddTenant(ctx context.Context, t Tenant) (Tenant, error)
	AutoUpdateTenant(ctx context.Context, t Tenant) (Tenant, error)
	AutoGetTenant(ctx context.Context, t Tenant) (Tenant, error)
	AutoDeleteTenant(ctx context.Context, t Tenant) (Tenant, error)
	AutoListTenant(ctx context.Context, t api.ListWatchOptions) (AutoMsgTenantListHelper, error)

	AutoWatchTenant(in *api.ListWatchOptions, stream TenantV1_AutoWatchTenantServer) error
}

// ServiceNetworkV1Server is the server interface for the service.
type ServiceNetworkV1Server interface {
	AutoAddNetwork(ctx context.Context, t Network) (Network, error)
	AutoUpdateNetwork(ctx context.Context, t Network) (Network, error)
	AutoGetNetwork(ctx context.Context, t Network) (Network, error)
	AutoDeleteNetwork(ctx context.Context, t Network) (Network, error)
	AutoListNetwork(ctx context.Context, t api.ListWatchOptions) (AutoMsgNetworkListHelper, error)

	AutoWatchNetwork(in *api.ListWatchOptions, stream NetworkV1_AutoWatchNetworkServer) error
}

// ServiceSecurityGroupV1Server is the server interface for the service.
type ServiceSecurityGroupV1Server interface {
	AutoAddSecurityGroup(ctx context.Context, t SecurityGroup) (SecurityGroup, error)
	AutoUpdateSecurityGroup(ctx context.Context, t SecurityGroup) (SecurityGroup, error)
	AutoGetSecurityGroup(ctx context.Context, t SecurityGroup) (SecurityGroup, error)
	AutoDeleteSecurityGroup(ctx context.Context, t SecurityGroup) (SecurityGroup, error)
	AutoListSecurityGroup(ctx context.Context, t api.ListWatchOptions) (AutoMsgSecurityGroupListHelper, error)

	AutoWatchSecurityGroup(in *api.ListWatchOptions, stream SecurityGroupV1_AutoWatchSecurityGroupServer) error
}

// ServiceSgpolicyV1Server is the server interface for the service.
type ServiceSgpolicyV1Server interface {
	AutoAddSgpolicy(ctx context.Context, t Sgpolicy) (Sgpolicy, error)
	AutoUpdateSgpolicy(ctx context.Context, t Sgpolicy) (Sgpolicy, error)
	AutoGetSgpolicy(ctx context.Context, t Sgpolicy) (Sgpolicy, error)
	AutoDeleteSgpolicy(ctx context.Context, t Sgpolicy) (Sgpolicy, error)
	AutoListSgpolicy(ctx context.Context, t api.ListWatchOptions) (AutoMsgSgpolicyListHelper, error)

	AutoWatchSgpolicy(in *api.ListWatchOptions, stream SgpolicyV1_AutoWatchSgpolicyServer) error
}

// ServiceServiceV1Server is the server interface for the service.
type ServiceServiceV1Server interface {
	AutoAddService(ctx context.Context, t Service) (Service, error)
	AutoUpdateService(ctx context.Context, t Service) (Service, error)
	AutoGetService(ctx context.Context, t Service) (Service, error)
	AutoDeleteService(ctx context.Context, t Service) (Service, error)
	AutoListService(ctx context.Context, t api.ListWatchOptions) (AutoMsgServiceListHelper, error)

	AutoWatchService(in *api.ListWatchOptions, stream ServiceV1_AutoWatchServiceServer) error
}

// ServiceLbPolicyV1Server is the server interface for the service.
type ServiceLbPolicyV1Server interface {
	AutoAddLbPolicy(ctx context.Context, t LbPolicy) (LbPolicy, error)
	AutoUpdateLbPolicy(ctx context.Context, t LbPolicy) (LbPolicy, error)
	AutoGetLbPolicy(ctx context.Context, t LbPolicy) (LbPolicy, error)
	AutoDeleteLbPolicy(ctx context.Context, t LbPolicy) (LbPolicy, error)
	AutoListLbPolicy(ctx context.Context, t api.ListWatchOptions) (AutoMsgLbPolicyListHelper, error)

	AutoWatchLbPolicy(in *api.ListWatchOptions, stream LbPolicyV1_AutoWatchLbPolicyServer) error
}

// ServiceEndpointV1Server is the server interface for the service.
type ServiceEndpointV1Server interface {
	AutoAddEndpoint(ctx context.Context, t Endpoint) (Endpoint, error)
	AutoUpdateEndpoint(ctx context.Context, t Endpoint) (Endpoint, error)
	AutoGetEndpoint(ctx context.Context, t Endpoint) (Endpoint, error)
	AutoDeleteEndpoint(ctx context.Context, t Endpoint) (Endpoint, error)
	AutoListEndpoint(ctx context.Context, t api.ListWatchOptions) (AutoMsgEndpointListHelper, error)

	AutoWatchEndpoint(in *api.ListWatchOptions, stream EndpointV1_AutoWatchEndpointServer) error
}
