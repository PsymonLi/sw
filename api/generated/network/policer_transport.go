// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package network is a auto generated package.
Input file: policer.proto
*/
package network

import (
	"context"
	"encoding/json"
	"net/http"

	"github.com/pensando/sw/api"
)

// Dummy definitions to suppress nonused warnings
var _ api.ObjectMeta

func encodeHTTPPolicerAction(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPPolicerAction(_ context.Context, r *http.Request) (interface{}, error) {
	var req PolicerAction
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqPolicerAction encodes GRPC request
func EncodeGrpcReqPolicerAction(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*PolicerAction)
	return req, nil
}

// DecodeGrpcReqPolicerAction decodes GRPC request
func DecodeGrpcReqPolicerAction(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*PolicerAction)
	return req, nil
}

// EncodeGrpcRespPolicerAction encodes GRC response
func EncodeGrpcRespPolicerAction(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespPolicerAction decodes GRPC response
func DecodeGrpcRespPolicerAction(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

func encodeHTTPPolicerCriteria(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPPolicerCriteria(_ context.Context, r *http.Request) (interface{}, error) {
	var req PolicerCriteria
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqPolicerCriteria encodes GRPC request
func EncodeGrpcReqPolicerCriteria(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*PolicerCriteria)
	return req, nil
}

// DecodeGrpcReqPolicerCriteria decodes GRPC request
func DecodeGrpcReqPolicerCriteria(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*PolicerCriteria)
	return req, nil
}

// EncodeGrpcRespPolicerCriteria encodes GRC response
func EncodeGrpcRespPolicerCriteria(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespPolicerCriteria decodes GRPC response
func DecodeGrpcRespPolicerCriteria(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

func encodeHTTPPolicerProfile(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPPolicerProfile(_ context.Context, r *http.Request) (interface{}, error) {
	var req PolicerProfile
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqPolicerProfile encodes GRPC request
func EncodeGrpcReqPolicerProfile(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*PolicerProfile)
	return req, nil
}

// DecodeGrpcReqPolicerProfile decodes GRPC request
func DecodeGrpcReqPolicerProfile(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*PolicerProfile)
	return req, nil
}

// EncodeGrpcRespPolicerProfile encodes GRC response
func EncodeGrpcRespPolicerProfile(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespPolicerProfile decodes GRPC response
func DecodeGrpcRespPolicerProfile(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

func encodeHTTPPolicerProfileSpec(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPPolicerProfileSpec(_ context.Context, r *http.Request) (interface{}, error) {
	var req PolicerProfileSpec
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqPolicerProfileSpec encodes GRPC request
func EncodeGrpcReqPolicerProfileSpec(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*PolicerProfileSpec)
	return req, nil
}

// DecodeGrpcReqPolicerProfileSpec decodes GRPC request
func DecodeGrpcReqPolicerProfileSpec(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*PolicerProfileSpec)
	return req, nil
}

// EncodeGrpcRespPolicerProfileSpec encodes GRC response
func EncodeGrpcRespPolicerProfileSpec(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespPolicerProfileSpec decodes GRPC response
func DecodeGrpcRespPolicerProfileSpec(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

func encodeHTTPPolicerProfileStatus(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPPolicerProfileStatus(_ context.Context, r *http.Request) (interface{}, error) {
	var req PolicerProfileStatus
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqPolicerProfileStatus encodes GRPC request
func EncodeGrpcReqPolicerProfileStatus(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*PolicerProfileStatus)
	return req, nil
}

// DecodeGrpcReqPolicerProfileStatus decodes GRPC request
func DecodeGrpcReqPolicerProfileStatus(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*PolicerProfileStatus)
	return req, nil
}

// EncodeGrpcRespPolicerProfileStatus encodes GRC response
func EncodeGrpcRespPolicerProfileStatus(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespPolicerProfileStatus decodes GRPC response
func DecodeGrpcRespPolicerProfileStatus(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}
