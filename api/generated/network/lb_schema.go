// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package networkApiServer is a auto generated package.
Input file: lb.proto
*/
package network

import (
	"github.com/pensando/sw/venice/utils/runtime"
)

var typesMapLb = map[string]*runtime.Struct{

	"network.HealthCheckSpec": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"Interval": runtime.Field{Name: "Interval", JSONTag: "interval", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_UINT32"},

			"ProbesPerInterval": runtime.Field{Name: "ProbesPerInterval", JSONTag: "probes-per-interval", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_UINT32"},

			"ProbePortOrUrl": runtime.Field{Name: "ProbePortOrUrl", JSONTag: "probe-port-or-url", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"MaxTimeouts": runtime.Field{Name: "MaxTimeouts", JSONTag: "max-timeouts", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_UINT32"},

			"DeclareHealthyCount": runtime.Field{Name: "DeclareHealthyCount", JSONTag: "declare-healthy-count", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_UINT32"},
		},
	},
	"network.LbPolicy": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"T": runtime.Field{Name: "T", JSONTag: "", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.TypeMeta"},

			"O": runtime.Field{Name: "O", JSONTag: "meta", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "api.ObjectMeta"},

			"Spec": runtime.Field{Name: "Spec", JSONTag: "spec", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "network.LbPolicySpec"},

			"Status": runtime.Field{Name: "Status", JSONTag: "status", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "network.LbPolicyStatus"},
		},
	},
	"network.LbPolicySpec": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"Type": runtime.Field{Name: "Type", JSONTag: "type", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"Algorithm": runtime.Field{Name: "Algorithm", JSONTag: "algorithm", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"SessionAffinity": runtime.Field{Name: "SessionAffinity", JSONTag: "session-affinity", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "TYPE_STRING"},

			"HealthCheck": runtime.Field{Name: "HealthCheck", JSONTag: "health-check", Pointer: true, Slice: false, Map: false, KeyType: "", Type: "network.HealthCheckSpec"},
		},
	},
	"network.LbPolicyStatus": &runtime.Struct{
		Fields: map[string]runtime.Field{
			"Services": runtime.Field{Name: "Services", JSONTag: "type", Pointer: false, Slice: true, Map: false, KeyType: "", Type: "TYPE_STRING"},
		},
	},
}

func init() {
	schema := runtime.GetDefaultScheme()
	schema.AddSchema(typesMapLb)
}
