{
  "swagger": "2.0",
  "info": {
    "title": "Cluster API reference",
    "description": "Configure and manage the Venice cluster.\n\n API Objects are: Cluster DistributedServiceCard Host Node Tenant Version ",
    "version": "v1"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/configs/cluster/v1/cluster": {
      "get": {
        "summary": "Get Cluster object",
        "operationId": "GetCluster",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterCluster"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "T.kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.api-version",
            "description": "APIVersion defines the version of the API object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nminimum length is 2 and maximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.tenant",
            "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters. must be alpha-numericslength of string should be between 1 and 48",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.quorum-nodes",
            "description": "QuorumNodes contains the list of hostnames for nodes configured to be quorum\nnodes in the cluster.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "spec.virtual-ip",
            "description": "VirtualIP is the IP address for managing the cluster. It will be hosted by\nthe winner of election between quorum nodes.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.ntp-servers",
            "description": "NTPServers contains the list of NTP servers for the cluster.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "spec.auto-admit-dscs",
            "description": "AutoAdmitDSCs when enabled auto-admits DSCs that are validated\ninto Venice Cluster. When it is disabled, DSCs validated by CMD are\nset to Pending state and it requires Manual approval to be admitted\ninto the cluster.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "spec.certs",
            "description": "Certs is the pem encoded certificate bundle used for API Gateway TLS.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.key",
            "description": "Key is the pem encoded private key used for API Gateway TLS. We support RSA or ECDSA.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.leader",
            "description": "Leader contains the node name of the cluster leader.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.last-leader-transition-time",
            "description": "LastLeaderTransitionTime is when the leadership changed last time.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "status.auth-bootstrapped",
            "description": "AuthBootstrapped indicates whether the Cluster has Completed BootStrap of Auth.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      },
      "put": {
        "summary": "Update Cluster object",
        "operationId": "UpdateCluster",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterCluster"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clusterCluster"
            }
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      }
    },
    "/configs/cluster/v1/cluster/AuthBootstrapComplete": {
      "post": {
        "operationId": "AuthBootstrapComplete",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterCluster"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clusterClusterAuthBootstrapRequest"
            }
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      }
    },
    "/configs/cluster/v1/cluster/UpdateTLSConfig": {
      "post": {
        "operationId": "UpdateTLSConfig",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterCluster"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clusterUpdateTLSConfigRequest"
            }
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      }
    },
    "/configs/cluster/v1/distributedservicecards": {
      "get": {
        "summary": "List DistributedServiceCard objects",
        "operationId": "ListDistributedServiceCard",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterDistributedServiceCardList"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nminimum length is 2 and maximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters. must be alpha-numericslength of string should be between 1 and 48",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort-order",
            "description": "order to sort List results in.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      }
    },
    "/configs/cluster/v1/distributedservicecards/{O.Name}": {
      "get": {
        "summary": "Get DistributedServiceCard object",
        "operationId": "GetDistributedServiceCard",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterDistributedServiceCard"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.api-version",
            "description": "APIVersion defines the version of the API object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.tenant",
            "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters. must be alpha-numericslength of string should be between 1 and 48",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.admit",
            "description": "Admit allows a DistributedServiceCard to join the cluster.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "spec.id",
            "description": "ID is used as a user friendly identifier in logs/events.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip-config.ip-address",
            "description": "IPAddress contains the Management IP address of the DistributedServiceCard in CIDR format.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip-config.default-gw",
            "description": "DefaultGW contains the default gateway's IP address.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip-config.dns-servers",
            "description": "DNSServers contains a list of DNS Servers that can be used on DistributedServiceCard.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "spec.mgmt-mode",
            "description": "MgmtMode defines the management mode of the DistributedServiceCard.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.network-mode",
            "description": "MgmtMode defines the management mode of the DistributedServiceCard.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.mgmt-vlan",
            "description": "MgmtVlan defines the vlan to be used in network managed mode. The default of 0\nmeans we use untagged-vlan for doing inband management. value should be between 0 and 4095",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "spec.controllers",
            "description": "Controllers contains the list of remote controllers IP addresses or hostnames.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "status.admission-phase",
            "description": "Current admission phase of the DistributedServiceCard.\nWhen auto-admission is enabled, AdmissionPhase will be set to NIC_ADMITTED\nby CMD for validated NICs.\nWhen auto-admission is not enabled, AdmissionPhase will be set to NIC_PENDING\nby CMD for validated NICs since it requires manual approval.\nTo admit the NIC as a part of manual admission, user is expected to\nset Spec.Admit to true for the NICs that are in NIC_PENDING\nstate. Note : Whitelist mode is not supported yet.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.serial-num",
            "description": "Serial number.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.primary-mac",
            "description": "PrimaryMAC is the MAC address of the primary PF exposed by DistributedServiceCard. should be a valid MAC address",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip-config.ip-address",
            "description": "IPAddress contains the Management IP address of the DistributedServiceCard in CIDR format.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip-config.default-gw",
            "description": "DefaultGW contains the default gateway's IP address.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip-config.dns-servers",
            "description": "DNSServers contains a list of DNS Servers that can be used on DistributedServiceCard.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "bios-info.vendor",
            "description": "Vendor name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bios-info.version",
            "description": "BIOS version.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bios-info.fw-major-ver",
            "description": "Firmware major release info.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bios-info.fw-minor-ver",
            "description": "Firmware minor release info.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "os-info.type",
            "description": "OS Name\nEg: GNU/Linux.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "os-info.kernel-release",
            "description": "Kernel release\nEg: 3.10.0-514.10.2.el7.x86_64.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "os-info.kernel-version",
            "description": "Kernel version\nEg: #1 SMP Fri Mar 3 00:04:05 UTC 2017.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "os-info.processor",
            "description": "Processor Info\nEg: x86_64.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cpu-info.speed",
            "description": "CPU speed per core, eg: 2099998101.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cpu-info.num-sockets",
            "description": "Number of CPU sockets, eg: 2, 4.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cpu-info.num-cores",
            "description": "Number of physical CPU cores per socket, eg: 36.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cpu-info.num-threads",
            "description": "Number of threads per core, eg: 2.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "memory-info.type",
            "description": "Type.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "memory-info.size",
            "description": "Memory size in bytes, eg: 274760318976.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.interfaces",
            "description": "Network Interfaces.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "status.DSCVersion",
            "description": "DSC Version.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.DSCSku",
            "description": "DSC SKU.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.host",
            "description": "The name of the host this DistributedServiceCard is plugged into.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.adm-phase-reason",
            "description": "The reason why the DistributedServiceCard is not in ADMITTED state.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      },
      "delete": {
        "summary": "Delete DistributedServiceCard object",
        "operationId": "DeleteDistributedServiceCard",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterDistributedServiceCard"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      },
      "put": {
        "summary": "Update DistributedServiceCard object",
        "operationId": "UpdateDistributedServiceCard",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterDistributedServiceCard"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clusterDistributedServiceCard"
            }
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      }
    },
    "/configs/cluster/v1/hosts": {
      "get": {
        "summary": "List Host objects",
        "operationId": "ListHost",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterHostList"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nminimum length is 2 and maximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters. must be alpha-numericslength of string should be between 1 and 48",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort-order",
            "description": "order to sort List results in.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      },
      "post": {
        "summary": "Create Host object",
        "operationId": "AddHost",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterHost"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clusterHost"
            }
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      }
    },
    "/configs/cluster/v1/hosts/{O.Name}": {
      "get": {
        "summary": "Get Host object",
        "operationId": "GetHost",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterHost"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.api-version",
            "description": "APIVersion defines the version of the API object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.tenant",
            "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters. must be alpha-numericslength of string should be between 1 and 48",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.admitted-dscs",
            "description": "AdmittedDSCs contains a list of admitted DistributedServiceCards that are on this host.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      },
      "delete": {
        "summary": "Delete Host object",
        "operationId": "DeleteHost",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterHost"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      },
      "put": {
        "summary": "Update Host object",
        "operationId": "UpdateHost",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterHost"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clusterHost"
            }
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      }
    },
    "/configs/cluster/v1/nodes": {
      "get": {
        "summary": "List Node objects",
        "operationId": "ListNode",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterNodeList"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nminimum length is 2 and maximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters. must be alpha-numericslength of string should be between 1 and 48",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort-order",
            "description": "order to sort List results in.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      },
      "post": {
        "summary": "Create Node object",
        "operationId": "AddNode",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterNode"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clusterNode"
            }
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      }
    },
    "/configs/cluster/v1/nodes/{O.Name}": {
      "get": {
        "summary": "Get Node object",
        "operationId": "GetNode",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterNode"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.api-version",
            "description": "APIVersion defines the version of the API object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.tenant",
            "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters. must be alpha-numericslength of string should be between 1 and 48",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.phase",
            "description": "Current lifecycle phase of the node.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.quorum",
            "description": "Quorum node or not.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      },
      "delete": {
        "summary": "Delete Node object",
        "operationId": "DeleteNode",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterNode"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      },
      "put": {
        "summary": "Update Node object",
        "operationId": "UpdateNode",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterNode"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clusterNode"
            }
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      }
    },
    "/configs/cluster/v1/tenants": {
      "get": {
        "summary": "List Tenant objects",
        "operationId": "ListTenant",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterTenantList"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nminimum length is 2 and maximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters. must be alpha-numericslength of string should be between 1 and 48",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort-order",
            "description": "order to sort List results in.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      },
      "post": {
        "summary": "Create Tenant object",
        "operationId": "AddTenant",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterTenant"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clusterTenant"
            }
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      }
    },
    "/configs/cluster/v1/tenants/{O.Name}": {
      "get": {
        "summary": "Get Tenant object",
        "operationId": "GetTenant",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterTenant"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.api-version",
            "description": "APIVersion defines the version of the API object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.tenant",
            "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters. must be alpha-numericslength of string should be between 1 and 48",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.admin-user",
            "description": "Tenant admin user.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      },
      "delete": {
        "summary": "Delete Tenant object",
        "operationId": "DeleteTenant",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterTenant"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      },
      "put": {
        "summary": "Update Tenant object",
        "operationId": "UpdateTenant",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterTenant"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clusterTenant"
            }
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      }
    },
    "/configs/cluster/v1/version": {
      "get": {
        "summary": "Get Version object",
        "operationId": "GetVersion",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/clusterVersion"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "T.kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.api-version",
            "description": "APIVersion defines the version of the API object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nminimum length is 2 and maximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.tenant",
            "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters. must be alpha-numericslength of string should be between 1 and 48",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.build-version",
            "description": "Human friendly build version.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.vcs-commit",
            "description": "Representation of ommit in version control system - e.g: hash in git.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.build-date",
            "description": "Date and Time at which the source code was built.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.rollout-build-version",
            "description": "RolloutBuildVersion shows in progress rollout version.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      }
    },
    "/configs/cluster/v1/watch/cluster": {
      "get": {
        "summary": "Watch Cluster objects. Supports WebSockets or HTTP long poll",
        "operationId": "WatchCluster",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/clusterAutoMsgClusterWatchHelper"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nminimum length is 2 and maximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters. must be alpha-numericslength of string should be between 1 and 48",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort-order",
            "description": "order to sort List results in.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      }
    },
    "/configs/cluster/v1/watch/distributedservicecards": {
      "get": {
        "summary": "Watch DistributedServiceCard objects. Supports WebSockets or HTTP long poll",
        "operationId": "WatchDistributedServiceCard",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/clusterAutoMsgDistributedServiceCardWatchHelper"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nminimum length is 2 and maximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters. must be alpha-numericslength of string should be between 1 and 48",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort-order",
            "description": "order to sort List results in.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      }
    },
    "/configs/cluster/v1/watch/hosts": {
      "get": {
        "summary": "Watch Host objects. Supports WebSockets or HTTP long poll",
        "operationId": "WatchHost",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/clusterAutoMsgHostWatchHelper"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nminimum length is 2 and maximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters. must be alpha-numericslength of string should be between 1 and 48",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort-order",
            "description": "order to sort List results in.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      }
    },
    "/configs/cluster/v1/watch/nodes": {
      "get": {
        "summary": "Watch Node objects. Supports WebSockets or HTTP long poll",
        "operationId": "WatchNode",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/clusterAutoMsgNodeWatchHelper"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nminimum length is 2 and maximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters. must be alpha-numericslength of string should be between 1 and 48",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort-order",
            "description": "order to sort List results in.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      }
    },
    "/configs/cluster/v1/watch/tenants": {
      "get": {
        "summary": "Watch Tenant objects. Supports WebSockets or HTTP long poll",
        "operationId": "WatchTenant",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/clusterAutoMsgTenantWatchHelper"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nminimum length is 2 and maximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters. must be alpha-numericslength of string should be between 1 and 48",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort-order",
            "description": "order to sort List results in.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      }
    },
    "/configs/cluster/v1/watch/version": {
      "get": {
        "summary": "Watch Version objects. Supports WebSockets or HTTP long poll",
        "operationId": "WatchVersion",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/clusterAutoMsgVersionWatchHelper"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nminimum length is 2 and maximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters. must be alpha-numericslength of string should be between 1 and 48",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort-order",
            "description": "order to sort List results in.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "cluster/v1"
        ]
      }
    }
  },
  "definitions": {
    "apiListMeta": {
      "type": "object",
      "properties": {
        "resource-version": {
          "type": "string",
          "description": "Resource version of object store at the time of list generation."
        }
      },
      "description": "ListMeta contains the metadata for list of objects."
    },
    "apiListWatchOptions": {
      "type": "object",
      "required": [
        "sort-order"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 2,
          "maxLength": 64,
          "pattern": "^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$",
          "description": "must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64"
        },
        "tenant": {
          "type": "string",
          "minLength": 1,
          "maxLength": 48,
          "pattern": "^[a-zA-Z0-9]+$",
          "description": "must be alpha-numericslength of string should be between 1 and 48"
        },
        "namespace": {
          "type": "string",
          "minLength": 2,
          "maxLength": 64,
          "pattern": "^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$",
          "description": "must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64"
        },
        "generation-id": {
          "type": "string"
        },
        "resource-version": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "creation-time": {
          "type": "string",
          "format": "date-time"
        },
        "mod-time": {
          "type": "string",
          "format": "date-time"
        },
        "self-link": {
          "type": "string"
        },
        "label-selector": {
          "type": "string",
          "description": "LabelSelector to select on labels in list or watch results."
        },
        "field-selector": {
          "type": "string",
          "title": "FieldSelector to select on field values in list or watch results"
        },
        "field-change-selector": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified."
        },
        "from": {
          "type": "integer",
          "format": "int32",
          "title": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1]"
        },
        "max-results": {
          "type": "integer",
          "format": "int32",
          "description": "max. number of events to be fetched for the request."
        },
        "sort-order": {
          "type": "string",
          "enum": [
            "none",
            "by-name",
            "by-name-reverse",
            "by-version",
            "by-version-reverse",
            "by-creation-time",
            "by-creation-time-reverse",
            "by-mod-time",
            "by-mod-time-reverse"
          ],
          "default": "none",
          "x-ui-hints": {
            "by-creation-time": "By Creation Time",
            "by-creation-time-reverse": "By Creation Time Reverse",
            "by-mod-time": "By Modification Time",
            "by-mod-time-reverse": "By Modification Time Reverse",
            "by-name": "By Name",
            "by-name-reverse": "By Name Reverse",
            "by-version": "By Version",
            "by-version-reverse": "By Version Reverse",
            "none": "None"
          },
          "description": "order to sort List results in."
        }
      }
    },
    "apiObjectMeta": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 2,
          "maxLength": 64,
          "pattern": "^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$",
          "description": "must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
          "title": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nminimum length is 2 and maximum length is 64 characters"
        },
        "tenant": {
          "type": "string",
          "minLength": 1,
          "maxLength": 48,
          "pattern": "^[a-zA-Z0-9]+$",
          "description": "must be alpha-numericslength of string should be between 1 and 48",
          "title": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters"
        },
        "namespace": {
          "type": "string",
          "minLength": 2,
          "maxLength": 64,
          "pattern": "^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$",
          "description": "must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
          "title": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters"
        },
        "generation-id": {
          "type": "string",
          "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user."
        },
        "resource-version": {
          "type": "string",
          "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user."
        },
        "uuid": {
          "type": "string",
          "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels are arbitrary (key,value) pairs associated with any object."
        },
        "creation-time": {
          "type": "string",
          "format": "date-time",
          "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user."
        },
        "mod-time": {
          "type": "string",
          "format": "date-time",
          "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user."
        },
        "self-link": {
          "type": "string",
          "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user."
        }
      },
      "description": "ObjectMeta contains metadata that all objects stored in kvstore must have."
    },
    "apiObjectRef": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string",
          "description": "Tenant of the object."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace of the object, for scoped objects."
        },
        "kind": {
          "type": "string",
          "description": "Kind represents the type of the API object."
        },
        "name": {
          "type": "string",
          "description": "Name of the object, unique within a Namespace for scoped objects."
        },
        "uri": {
          "type": "string",
          "description": "URI is a link to accessing the referenced object."
        }
      },
      "description": "ObjectRef contains identifying information about an object."
    },
    "apiStatus": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/apiStatusResult",
          "description": "Result contains the status of the operation, success or failure."
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Message contains human readable form of the error."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Code is the HTTP status code."
        },
        "object-ref": {
          "$ref": "#/definitions/apiObjectRef",
          "description": "Reference to the object (optional) for which this status is being sent."
        }
      },
      "description": "Status is returned for calls that dont return objects."
    },
    "apiStatusResult": {
      "type": "object",
      "properties": {
        "Str": {
          "type": "string"
        }
      },
      "description": "StatusResult contains possible statuses for a NIC."
    },
    "apiTimestamp": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "apiTypeMeta": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind represents the type of the API object."
        },
        "api-version": {
          "type": "string",
          "title": "APIVersion defines the version of the API object. This can only be set by the server"
        }
      },
      "description": "TypeMeta contains the metadata about kind and version for all API objects."
    },
    "apiWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/googleprotobufAny"
        }
      }
    },
    "apiWatchEventList": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiWatchEvent"
          }
        }
      }
    },
    "clusterAutoMsgClusterWatchHelper": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterAutoMsgClusterWatchHelperWatchEvent"
          }
        }
      },
      "title": "AutoMsgClusterWatchHelper is a wrapper object for watch events for Cluster objects"
    },
    "clusterAutoMsgClusterWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/clusterCluster"
        }
      }
    },
    "clusterAutoMsgDistributedServiceCardWatchHelper": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterAutoMsgDistributedServiceCardWatchHelperWatchEvent"
          }
        }
      },
      "title": "AutoMsgDistributedServiceCardWatchHelper is a wrapper object for watch events for DistributedServiceCard objects"
    },
    "clusterAutoMsgDistributedServiceCardWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/clusterDistributedServiceCard"
        }
      }
    },
    "clusterAutoMsgHostWatchHelper": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterAutoMsgHostWatchHelperWatchEvent"
          }
        }
      },
      "title": "AutoMsgHostWatchHelper is a wrapper object for watch events for Host objects"
    },
    "clusterAutoMsgHostWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/clusterHost"
        }
      }
    },
    "clusterAutoMsgNodeWatchHelper": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterAutoMsgNodeWatchHelperWatchEvent"
          }
        }
      },
      "title": "AutoMsgNodeWatchHelper is a wrapper object for watch events for Node objects"
    },
    "clusterAutoMsgNodeWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/clusterNode"
        }
      }
    },
    "clusterAutoMsgTenantWatchHelper": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterAutoMsgTenantWatchHelperWatchEvent"
          }
        }
      },
      "title": "AutoMsgTenantWatchHelper is a wrapper object for watch events for Tenant objects"
    },
    "clusterAutoMsgTenantWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/clusterTenant"
        }
      }
    },
    "clusterAutoMsgVersionWatchHelper": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterAutoMsgVersionWatchHelperWatchEvent"
          }
        }
      },
      "title": "AutoMsgVersionWatchHelper is a wrapper object for watch events for Version objects"
    },
    "clusterAutoMsgVersionWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/clusterVersion"
        }
      }
    },
    "clusterBiosInfo": {
      "type": "object",
      "properties": {
        "vendor": {
          "type": "string",
          "title": "Vendor name"
        },
        "version": {
          "type": "string",
          "title": "BIOS version"
        },
        "fw-major-ver": {
          "type": "string",
          "title": "Firmware major release info"
        },
        "fw-minor-ver": {
          "type": "string",
          "title": "Firmware minor release info"
        }
      },
      "title": "BIOS information"
    },
    "clusterCPUInfo": {
      "type": "object",
      "properties": {
        "speed": {
          "type": "string",
          "title": "CPU speed per core, eg: 2099998101"
        },
        "num-sockets": {
          "type": "integer",
          "format": "int32",
          "title": "Number of CPU sockets, eg: 2, 4"
        },
        "num-cores": {
          "type": "integer",
          "format": "int32",
          "title": "Number of physical CPU cores per socket, eg: 36"
        },
        "num-threads": {
          "type": "integer",
          "format": "int32",
          "title": "Number of threads per core, eg: 2"
        }
      },
      "title": "CPU information"
    },
    "clusterCluster": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/clusterClusterSpec",
          "description": "Spec contains the configuration of the cluster."
        },
        "status": {
          "$ref": "#/definitions/clusterClusterStatus",
          "description": "Status contains the current state of the cluster."
        }
      },
      "description": "Cluster represents a full cluster venice and workload nodes\n\nEntity responsible \u0026 scenarios involved in managing this object:\n\n     Create:\n         o NetOps-admin\n             - initial cluster creation\n     Modify:\n         o NetOps-admin\n             - update spec attributes\n         o CMD\n             - update status attributes\n     Delete:\n         o NetOps-admin\n             - TBD",
      "title": "--------------------------------- CLUSTER ---------------------------------------------"
    },
    "clusterClusterAuthBootstrapRequest": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/apiObjectMeta"
        }
      },
      "title": "ClusterAuthBootstrapRequest is to set auth bootstrap flag in cluster"
    },
    "clusterClusterCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "healthy"
          ],
          "default": "healthy",
          "x-ui-hints": {
            "healthy": "Healthy"
          },
          "title": "Type indicates a certain DSC condition"
        },
        "status": {
          "type": "string",
          "enum": [
            "unknown",
            "true",
            "false"
          ],
          "default": "unknown",
          "x-ui-hints": {
            "false": "False",
            "true": "True",
            "unknown": "Unknown"
          },
          "title": "Condition Status"
        },
        "last-transition-time": {
          "type": "string",
          "title": "The last time the condition transitioned"
        },
        "reason": {
          "type": "string",
          "title": "The reason for the condition's last transition"
        },
        "message": {
          "type": "string",
          "description": "A detailed message indicating details about the transition."
        }
      },
      "description": "ClusterCondition describes the state of a cluster at a certain point."
    },
    "clusterClusterList": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "list-meta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterCluster"
          },
          "title": "List of Cluster objects"
        }
      },
      "title": "ClusterList is a container object for list of Cluster objects"
    },
    "clusterClusterSpec": {
      "type": "object",
      "properties": {
        "quorum-nodes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "QuorumNodes contains the list of hostnames for nodes configured to be quorum\nnodes in the cluster."
        },
        "virtual-ip": {
          "type": "string",
          "description": "VirtualIP is the IP address for managing the cluster. It will be hosted by\nthe winner of election between quorum nodes."
        },
        "ntp-servers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "NTPServers contains the list of NTP servers for the cluster."
        },
        "auto-admit-dscs": {
          "type": "boolean",
          "format": "boolean",
          "description": "AutoAdmitDSCs when enabled auto-admits DSCs that are validated\ninto Venice Cluster. When it is disabled, DSCs validated by CMD are\nset to Pending state and it requires Manual approval to be admitted\ninto the cluster."
        },
        "certs": {
          "type": "string",
          "title": "Certs is the pem encoded certificate bundle used for API Gateway TLS"
        },
        "key": {
          "type": "string",
          "title": "Key is the pem encoded private key used for API Gateway TLS. We support RSA or ECDSA"
        }
      },
      "description": "ClusterSpec contains the configuration of the cluster."
    },
    "clusterClusterStatus": {
      "type": "object",
      "properties": {
        "leader": {
          "type": "string",
          "description": "Leader contains the node name of the cluster leader."
        },
        "last-leader-transition-time": {
          "type": "string",
          "format": "date-time",
          "title": "LastLeaderTransitionTime is when the leadership changed last time"
        },
        "auth-bootstrapped": {
          "type": "boolean",
          "format": "boolean",
          "title": "AuthBootstrapped indicates whether the Cluster has Completed BootStrap of Auth"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterClusterCondition"
          },
          "title": "List of current cluster conditions"
        },
        "quorum-status": {
          "$ref": "#/definitions/clusterQuorumStatus",
          "title": "Quorum represents the current state of the quorum, including registered members and health"
        }
      },
      "description": "ClusterStatus contains the current state of the Cluster."
    },
    "clusterDSCCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "healthy",
            "nic_health_unknown",
            "reboot_needed"
          ],
          "default": "healthy",
          "x-ui-hints": {
            "healthy": "Healthy",
            "nic_health_unknown": "Not Reachable",
            "reboot_needed": "Reboot needed"
          },
          "title": "Type indicates a certain NIC condition"
        },
        "status": {
          "type": "string",
          "enum": [
            "unknown",
            "true",
            "false"
          ],
          "default": "unknown",
          "x-ui-hints": {
            "false": "False",
            "true": "True",
            "unknown": "Unknown"
          },
          "title": "Condition Status"
        },
        "last-transition-time": {
          "type": "string",
          "title": "The last time the condition transitioned"
        },
        "reason": {
          "type": "string",
          "title": "The reason for the condition's last transition"
        },
        "message": {
          "type": "string",
          "description": "A detailed message indicating details about the transition."
        }
      },
      "description": "DSCCondition describes the state of a DistributedServiceCard at a certain point."
    },
    "clusterDSCInfo": {
      "type": "object",
      "properties": {
        "bios-info": {
          "$ref": "#/definitions/clusterBiosInfo",
          "title": "BIOS details"
        },
        "os-info": {
          "$ref": "#/definitions/clusterOsInfo",
          "title": "OS details"
        },
        "cpu-info": {
          "$ref": "#/definitions/clusterCPUInfo",
          "title": "CPU details"
        },
        "memory-info": {
          "$ref": "#/definitions/clusterMemInfo",
          "title": "RAM/Memory details"
        },
        "storage-info": {
          "$ref": "#/definitions/clusterStorageInfo",
          "title": "Storage details"
        }
      },
      "title": "Distributed service card (DSC) subsystem information"
    },
    "clusterDistributedServiceCard": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/apiObjectMeta",
          "title": "Object name is Serial-Number of the DistributedServiceCard"
        },
        "spec": {
          "$ref": "#/definitions/clusterDistributedServiceCardSpec",
          "description": "DistributedServiceCardSpec contains the configuration of the network adapter."
        },
        "status": {
          "$ref": "#/definitions/clusterDistributedServiceCardStatus",
          "description": "DistributedServiceCardStatus contains the current state of the network adapter."
        }
      },
      "description": "DistributedServiceCard represents the Naples I/O subsystem\n\nEntity responsible \u0026 scenarios involved in managing this object:\n\n     Create:\n         o CMD\n             - created as part of NIC registration, Admittance\n     Modify:\n         o CMD\n             - update spec attributes\n             - update status attributes\n     Delete:\n         o CMD\n             - aging out stale or rejected NICs (TBD)\n         o NetOps, SecOps\n             - Decomission a NIC (TBD)",
      "title": "------------------------------------ Distributed Service Card  -------------------------------------------"
    },
    "clusterDistributedServiceCardID": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Name contains the name of the DistributedServiceCard on a host"
        },
        "mac-address": {
          "type": "string",
          "example": "aabb.ccdd.0000, aabb.ccdd.0000, aabb.ccdd.0000",
          "description": "should be a valid MAC address",
          "title": "MACAddress contains the primary MAC address of a DistributedServiceCard"
        }
      },
      "title": "DistributedServiceCardID contains the identifying information of a DistributedServiceCard"
    },
    "clusterDistributedServiceCardList": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "list-meta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterDistributedServiceCard"
          },
          "title": "List of DistributedServiceCard objects"
        }
      },
      "title": "DistributedServiceCardList is a container object for list of DistributedServiceCard objects"
    },
    "clusterDistributedServiceCardSpec": {
      "type": "object",
      "required": [
        "mgmt-mode",
        "network-mode",
        "mgmt-vlan"
      ],
      "properties": {
        "admit": {
          "type": "boolean",
          "format": "boolean",
          "title": "Admit allows a DistributedServiceCard to join the cluster"
        },
        "id": {
          "type": "string",
          "title": "ID is used as a user friendly identifier in logs/events"
        },
        "ip-config": {
          "$ref": "#/definitions/clusterIPConfig",
          "title": "IPConfig defines the static IP configuration. If not specified, DHCP will be attempted"
        },
        "mgmt-mode": {
          "type": "string",
          "enum": [
            "host",
            "network"
          ],
          "default": "host",
          "x-ui-hints": {
            "host": "Host",
            "network": "Network"
          },
          "title": "MgmtMode defines the management mode of the DistributedServiceCard"
        },
        "network-mode": {
          "type": "string",
          "enum": [
            "oob",
            "inband"
          ],
          "default": "oob",
          "x-ui-hints": {
            "inband": "Inband",
            "oob": "Out of Band"
          },
          "title": "MgmtMode defines the management mode of the DistributedServiceCard"
        },
        "mgmt-vlan": {
          "type": "integer",
          "format": "int64",
          "maximum": 4095,
          "description": "value should be between 0 and 4095",
          "title": "MgmtVlan defines the vlan to be used in network managed mode. The default of 0\nmeans we use untagged-vlan for doing inband management"
        },
        "controllers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Controllers contains the list of remote controllers IP addresses or hostnames"
        }
      },
      "title": "DistributedServiceCardSpec contains configuration of the DistributedServiceCard (Naples I/O subsystem)"
    },
    "clusterDistributedServiceCardStatus": {
      "type": "object",
      "required": [
        "admission-phase"
      ],
      "properties": {
        "admission-phase": {
          "type": "string",
          "enum": [
            "unknown",
            "registering",
            "rejected",
            "pending",
            "admitted",
            "decommissioned"
          ],
          "default": "unknown",
          "x-ui-hints": {
            "admitted": "Admitted",
            "decommissioned": "Decommissioned",
            "pending": "Pending",
            "registering": "Registering",
            "rejected": "Rejected",
            "unknown": "Unknown"
          },
          "description": "Current admission phase of the DistributedServiceCard.\nWhen auto-admission is enabled, AdmissionPhase will be set to NIC_ADMITTED\nby CMD for validated NICs.\nWhen auto-admission is not enabled, AdmissionPhase will be set to NIC_PENDING\nby CMD for validated NICs since it requires manual approval.\nTo admit the NIC as a part of manual admission, user is expected to\nset Spec.Admit to true for the NICs that are in NIC_PENDING\nstate. Note : Whitelist mode is not supported yet."
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterDSCCondition"
          },
          "title": "List of current NIC conditions"
        },
        "serial-num": {
          "type": "string",
          "title": "Serial number"
        },
        "primary-mac": {
          "type": "string",
          "example": "aabb.ccdd.0000, aabb.ccdd.0000, aabb.ccdd.0000",
          "description": "should be a valid MAC address",
          "title": "PrimaryMAC is the MAC address of the primary PF exposed by DistributedServiceCard"
        },
        "ip-config": {
          "$ref": "#/definitions/clusterIPConfig",
          "title": "IPConfig is the ip address related configuration obtained from DHCP"
        },
        "system-info": {
          "$ref": "#/definitions/clusterDSCInfo",
          "title": "Distributed service card system info"
        },
        "interfaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Network Interfaces"
        },
        "DSCVersion": {
          "type": "string",
          "title": "DSC Version"
        },
        "DSCSku": {
          "type": "string",
          "title": "DSC SKU"
        },
        "host": {
          "type": "string",
          "title": "The name of the host this DistributedServiceCard is plugged into"
        },
        "adm-phase-reason": {
          "type": "string",
          "title": "The reason why the DistributedServiceCard is not in ADMITTED state"
        }
      },
      "title": "DistributedServiceCardStatus contains current status of a DistributedServiceCard"
    },
    "clusterHost": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/clusterHostSpec",
          "description": "Spec contains the configuration of the host."
        },
        "status": {
          "$ref": "#/definitions/clusterHostStatus",
          "description": "Status contains the current state of the host."
        }
      },
      "description": "Host represents a Baremetal or Hypervisor server.",
      "title": "---------------------------------- HOST ------------------------------------"
    },
    "clusterHostList": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "list-meta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterHost"
          },
          "title": "List of Host objects"
        }
      },
      "title": "HostList is a container object for list of Host objects"
    },
    "clusterHostSpec": {
      "type": "object",
      "properties": {
        "dscs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterDistributedServiceCardID"
          },
          "title": "DSCs contains the information about all DistributedServiceCards on a host"
        }
      },
      "description": "HostSpec contains the configuration of the Host."
    },
    "clusterHostStatus": {
      "type": "object",
      "properties": {
        "admitted-dscs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "AdmittedDSCs contains a list of admitted DistributedServiceCards that are on this host"
        }
      },
      "description": "HostStatus contains the current state of the Host."
    },
    "clusterIPConfig": {
      "type": "object",
      "properties": {
        "ip-address": {
          "type": "string",
          "title": "IPAddress contains the Management IP address of the DistributedServiceCard in CIDR format"
        },
        "default-gw": {
          "type": "string",
          "title": "DefaultGW contains the default gateway's IP address"
        },
        "dns-servers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "DNSServers contains a list of DNS Servers that can be used on DistributedServiceCard"
        }
      },
      "title": "IPConfig defines the static IP configuration for a DistributedServiceCard"
    },
    "clusterMemInfo": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "unknown",
            "hbm",
            "ddr"
          ],
          "default": "unknown",
          "title": "Type"
        },
        "size": {
          "type": "string",
          "title": "Memory size in bytes, eg: 274760318976"
        }
      },
      "title": "Memory/RAM information"
    },
    "clusterNode": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/clusterNodeSpec",
          "description": "Spec contains the configuration of the node."
        },
        "status": {
          "$ref": "#/definitions/clusterNodeStatus",
          "description": "Status contains the current state of the node."
        }
      },
      "description": "Node is representation of a single Venice node in the system.",
      "title": "---------------------------------- NODE -------------------------------------------"
    },
    "clusterNodeCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "leader",
            "healthy"
          ],
          "default": "leader",
          "x-ui-hints": {
            "healthy": "Healthy",
            "leader": "Leader"
          },
          "title": "Type indicates a certain node condition"
        },
        "status": {
          "type": "string",
          "enum": [
            "unknown",
            "true",
            "false"
          ],
          "default": "unknown",
          "x-ui-hints": {
            "false": "False",
            "true": "True",
            "unknown": "Unknown"
          },
          "title": "Condition Status"
        },
        "last-transition-time": {
          "type": "string",
          "title": "The last time the condition transitioned"
        },
        "reason": {
          "type": "string",
          "title": "The reason for the condition's last transition"
        },
        "message": {
          "type": "string",
          "description": "A detailed message indicating details about the transition."
        }
      },
      "description": "NodeCondition describes the state of a Node at a certain point."
    },
    "clusterNodeList": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "list-meta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterNode"
          },
          "title": "List of Node objects"
        }
      },
      "title": "NodeList is a container object for list of Node objects"
    },
    "clusterNodeSpec": {
      "type": "object",
      "description": "NodeSpec contains the configuration of the node."
    },
    "clusterNodeStatus": {
      "type": "object",
      "required": [
        "phase"
      ],
      "properties": {
        "phase": {
          "type": "string",
          "enum": [
            "unknown",
            "pending",
            "joined",
            "failed"
          ],
          "default": "unknown",
          "x-ui-hints": {
            "failed": "Failed",
            "joined": "Joined",
            "pending": "Pending",
            "unknown": "Unknown"
          },
          "description": "Current lifecycle phase of the node."
        },
        "quorum": {
          "type": "boolean",
          "format": "boolean",
          "description": "Quorum node or not."
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterNodeCondition"
          },
          "title": "List of current node conditions"
        }
      },
      "description": "NodeStatus contains the current state of the node."
    },
    "clusterOsInfo": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "OS Name\nEg: GNU/Linux"
        },
        "kernel-release": {
          "type": "string",
          "title": "Kernel release\nEg: 3.10.0-514.10.2.el7.x86_64"
        },
        "kernel-version": {
          "type": "string",
          "title": "Kernel version\nEg: #1 SMP Fri Mar 3 00:04:05 UTC 2017"
        },
        "processor": {
          "type": "string",
          "title": "Processor Info\nEg: x86_64"
        }
      },
      "title": "OS information"
    },
    "clusterQuorumMemberCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "healthy"
          ],
          "default": "healthy",
          "x-ui-hints": {
            "healthy": "Healthy"
          },
          "title": "Type indicates a certain node condition"
        },
        "status": {
          "type": "string",
          "enum": [
            "unknown",
            "true",
            "false"
          ],
          "default": "unknown",
          "x-ui-hints": {
            "false": "False",
            "true": "True",
            "unknown": "Unknown"
          },
          "title": "Condition Status"
        },
        "last-transition-time": {
          "type": "string",
          "format": "date-time",
          "title": "The last time the condition transitioned"
        }
      },
      "title": "QuorumMemberCondition represents conditions that can affect quorum members"
    },
    "clusterQuorumMemberStatus": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "A unique identifier for this quorum member"
        },
        "name": {
          "type": "string",
          "title": "The name of the quorum member, matching the node name"
        },
        "status": {
          "type": "string",
          "title": "\"Started\" if the member succesfully joined the quorum, \"Unstarted\" otherwise"
        },
        "term": {
          "type": "string",
          "title": "The last election term this member has participated in"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterQuorumMemberCondition"
          },
          "title": "Conditions reported by the quorum member"
        }
      },
      "title": "QuorumMemberStatus represents the overall status of a quorum member"
    },
    "clusterQuorumStatus": {
      "type": "object",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterQuorumMemberStatus"
          }
        }
      },
      "title": "QuorumStatus contains the current state of the quorum, including registered members and health"
    },
    "clusterStorageDeviceInfo": {
      "type": "object",
      "properties": {
        "serial-num": {
          "type": "string",
          "title": "Serial Number"
        },
        "type": {
          "type": "string",
          "title": "Storage Type (TBD for Naples)\nEg: SATA, SCSI, NVMe  or HDD, SSD, NVMe"
        },
        "vendor": {
          "type": "string",
          "title": "Vendor info"
        },
        "capacity": {
          "type": "string",
          "title": "Capacity in bytes"
        },
        "percent-life-used-A": {
          "type": "integer",
          "format": "int32",
          "title": "Used life in percentage"
        },
        "percent-life-used-B": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Storage device information"
    },
    "clusterStorageInfo": {
      "type": "object",
      "properties": {
        "devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterStorageDeviceInfo"
          },
          "title": "List of storage devices"
        }
      },
      "title": "Storage information"
    },
    "clusterTenant": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/clusterTenantSpec",
          "description": "Spec contains the configuration of the tenant."
        },
        "status": {
          "$ref": "#/definitions/clusterTenantStatus",
          "description": "Status contains the current state of the tenant."
        }
      },
      "title": "Tenant represents an org or a tenant"
    },
    "clusterTenantList": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "list-meta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterTenant"
          },
          "title": "List of Tenant objects"
        }
      },
      "title": "TenantList is a container object for list of Tenant objects"
    },
    "clusterTenantSpec": {
      "type": "object",
      "properties": {
        "admin-user": {
          "type": "string",
          "title": "Tenant admin user"
        }
      },
      "title": "spec part of tenant object"
    },
    "clusterTenantStatus": {
      "type": "object",
      "title": "status part of tenant object"
    },
    "clusterUpdateTLSConfigRequest": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "certs": {
          "type": "string",
          "title": "Certs is the pem encoded certificate bundle used for API Gateway TLS"
        },
        "key": {
          "type": "string",
          "title": "Key is the pem encoded private key used for API Gateway TLS. We support RSA or ECDSA"
        }
      },
      "title": "UpdateTLSConfigRequest is to update certs and key for API Gateway TLS"
    },
    "clusterVersion": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/clusterVersionSpec",
          "description": "Spec contains the configuration of the cluster."
        },
        "status": {
          "$ref": "#/definitions/clusterVersionStatus",
          "description": "Status contains the current state of the Version."
        }
      },
      "description": "Version is public accessible object that holds build information."
    },
    "clusterVersionList": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "list-meta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusterVersion"
          },
          "title": "List of Version objects"
        }
      },
      "title": "VersionList is a container object for list of Version objects"
    },
    "clusterVersionSpec": {
      "type": "object",
      "description": "VersionSpec contains the configuration of the Version."
    },
    "clusterVersionStatus": {
      "type": "object",
      "properties": {
        "build-version": {
          "type": "string",
          "title": "Human friendly build version"
        },
        "vcs-commit": {
          "type": "string",
          "title": "Representation of ommit in version control system - e.g: hash in git"
        },
        "build-date": {
          "type": "string",
          "title": "Date and Time at which the source code was built"
        },
        "rollout-build-version": {
          "type": "string",
          "title": "RolloutBuildVersion shows in progress rollout version"
        }
      },
      "description": "VersionStatus contains the current state of the Version."
    },
    "googleprotobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name whose content describes the type of the\nserialized protocol buffer message.\n\nFor URLs which use the scheme `http`, `https`, or no scheme, the\nfollowing restrictions and interpretations apply:\n\n* If no scheme is provided, `https` is assumed.\n* The last segment of the URL's path must represent the fully\n  qualified name of the type (as in `path/google.protobuf.Duration`).\n  The name should be in a canonical form (e.g., leading \".\" is\n  not accepted).\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    }
  }
}
