{
  "swagger": "2.0",
  "info": {
    "title": "Telemetry_query API reference",
    "description": "Service name\n\n",
    "version": "v1"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/telemetry/v1/fwlogs": {
      "get": {
        "summary": "Fwlogs is the telemetry fwlog query RPC, http://localhost:9000/telemetry/v1/fwlogs",
        "operationId": "GetFwlogs_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/telemetry_queryFwlogsQueryResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "Tenant for the request.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace for the request.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "telemetry_query/v1"
        ]
      },
      "post": {
        "summary": "Fwlogs is the telemetry fwlog query RPC, http://localhost:9000/telemetry/v1/fwlogs",
        "operationId": "PostFwlogs",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/telemetry_queryFwlogsQueryResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/telemetry_queryFwlogsQueryList"
            }
          }
        ],
        "tags": [
          "telemetry_query/v1"
        ]
      }
    },
    "/telemetry/v1/metrics": {
      "get": {
        "summary": "Metrics is the telemetry metrics query RPC, http://localhost:9000/telemetry/v1/metrics",
        "operationId": "GetMetrics_1",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/telemetry_queryMetricsQueryResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant",
            "description": "Tenant for the request.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Namespace for the request.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "telemetry_query/v1"
        ]
      },
      "post": {
        "summary": "Metrics is the telemetry metrics query RPC, http://localhost:9000/telemetry/v1/metrics",
        "operationId": "PostMetrics",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/telemetry_queryMetricsQueryResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/telemetry_queryMetricsQueryList"
            }
          }
        ],
        "tags": [
          "telemetry_query/v1"
        ]
      }
    }
  },
  "definitions": {
    "apiInterface": {
      "type": "object",
      "properties": {
        "Str": {
          "type": "string"
        },
        "Int64": {
          "type": "string",
          "format": "int64"
        },
        "Bool": {
          "type": "boolean",
          "format": "boolean"
        },
        "Float": {
          "type": "number",
          "format": "double"
        },
        "Interfaces": {
          "$ref": "#/definitions/apiInterfaceSlice"
        }
      }
    },
    "apiInterfaceSlice": {
      "type": "object",
      "properties": {
        "Values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiInterface"
          }
        }
      }
    },
    "apiListWatchOptions": {
      "type": "object",
      "required": [
        "sort-order"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "generation-id": {
          "type": "string"
        },
        "resource-version": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "creation-time": {
          "type": "string",
          "format": "date-time"
        },
        "mod-time": {
          "type": "string",
          "format": "date-time"
        },
        "self-link": {
          "type": "string"
        },
        "label-selector": {
          "type": "string",
          "description": "LabelSelector to select on labels in list or watch results."
        },
        "field-selector": {
          "type": "string",
          "title": "FieldSelector to select on field values in list or watch results"
        },
        "field-change-selector": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified."
        },
        "from": {
          "type": "integer",
          "format": "int32",
          "title": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1]"
        },
        "max-results": {
          "type": "integer",
          "format": "int32",
          "description": "max. number of events to be fetched for the request."
        },
        "sort-order": {
          "type": "string",
          "enum": [
            "None",
            "ByName",
            "ByNameReverse",
            "ByVersion",
            "ByVersionReverse",
            "ByCreationTime",
            "ByCreationTimeReverse",
            "ByModTime",
            "ByModTimeReverse"
          ],
          "default": "None",
          "x-ui-hints": {
            "ByCreationTime": "By Creation Time",
            "ByCreationTimeReverse": "By Creation Time Reverse",
            "ByModTime": "By Modification Time",
            "ByModTimeReverse": "By Modification Time Reverse",
            "ByName": "By Name",
            "ByNameReverse": "By Name Reverse",
            "ByVersion": "By Version",
            "ByVersionReverse": "By Version Reverse",
            "None": "None"
          },
          "description": "order to sort List results in."
        }
      }
    },
    "apiObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nminimum length is 2 and maximum length is 64 characters"
        },
        "tenant": {
          "type": "string",
          "title": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumner or ._-: characters\nmaximum length is 64 characters"
        },
        "generation-id": {
          "type": "string",
          "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user."
        },
        "resource-version": {
          "type": "string",
          "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user."
        },
        "uuid": {
          "type": "string",
          "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels are arbitrary (key,value) pairs associated with any object."
        },
        "creation-time": {
          "type": "string",
          "format": "date-time",
          "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user."
        },
        "mod-time": {
          "type": "string",
          "format": "date-time",
          "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user."
        },
        "self-link": {
          "type": "string",
          "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user."
        }
      },
      "description": "ObjectMeta contains metadata that all objects stored in kvstore must have."
    },
    "apiObjectRef": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string",
          "description": "Tenant of the object."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace of the object, for scoped objects."
        },
        "kind": {
          "type": "string",
          "description": "Kind represents the type of the API object."
        },
        "name": {
          "type": "string",
          "description": "Name of the object, unique within a Namespace for scoped objects."
        },
        "uri": {
          "type": "string",
          "description": "URI is a link to accessing the referenced object."
        }
      },
      "description": "ObjectRef contains identifying information about an object."
    },
    "apiStatus": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/apiStatusResult",
          "description": "Result contains the status of the operation, success or failure."
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Message contains human readable form of the error."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Code is the HTTP status code."
        },
        "object-ref": {
          "$ref": "#/definitions/apiObjectRef",
          "description": "Reference to the object (optional) for which this status is being sent."
        }
      },
      "description": "Status is returned for calls that dont return objects."
    },
    "apiStatusResult": {
      "type": "object",
      "properties": {
        "Str": {
          "type": "string"
        }
      },
      "description": "StatusResult contains possible statuses for a NIC."
    },
    "apiTimestamp": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "apiTypeMeta": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind represents the type of the API object."
        },
        "api-version": {
          "type": "string",
          "title": "APIVersion defines the version of the API object. This can only be set by the server"
        }
      },
      "description": "TypeMeta contains the metadata about kind and version for all API objects."
    },
    "apiWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/googleprotobufAny"
        }
      }
    },
    "apiWatchEventList": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiWatchEvent"
          }
        }
      }
    },
    "googleprotobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name whose content describes the type of the\nserialized protocol buffer message.\n\nFor URLs which use the scheme `http`, `https`, or no scheme, the\nfollowing restrictions and interpretations apply:\n\n* If no scheme is provided, `https` is assumed.\n* The last segment of the URL's path must represent the fully\n  qualified name of the type (as in `path/google.protobuf.Duration`).\n  The name should be in a canonical form (e.g., leading \".\" is\n  not accepted).\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "labelsRequirement": {
      "type": "object",
      "required": [
        "operator"
      ],
      "properties": {
        "key": {
          "type": "string",
          "description": "The label key that the condition applies to."
        },
        "operator": {
          "type": "string",
          "enum": [
            "equals",
            "notEquals",
            "in",
            "notIn"
          ],
          "default": "equals",
          "x-ui-hints": {
            "notEquals": "not equals",
            "notIn": "not in"
          },
          "description": "Condition checked for the key."
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Values contains one or more values corresponding to the label key. \"equals\" and\n\"notEquals\" operators need a single Value. \"in\" and \"notIn\" operators can have\none or more values."
        }
      },
      "description": "Requirement defines a single matching condition for a selector."
    },
    "labelsSelector": {
      "type": "object",
      "properties": {
        "requirements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/labelsRequirement"
          },
          "description": "Requirements are ANDed."
        }
      },
      "description": "Selector is used to select objects by labels. Requirements in the selector are ANDed.\nA selector with no Requirements does not select anything."
    },
    "telemetry_queryFwlog": {
      "type": "object",
      "required": [
        "action",
        "direction"
      ],
      "properties": {
        "tenant": {
          "type": "string",
          "title": "Tenant"
        },
        "src": {
          "type": "string",
          "title": "Source IP,"
        },
        "dest": {
          "type": "string",
          "title": "Destination IP"
        },
        "src-port": {
          "type": "integer",
          "format": "int64",
          "title": "Source Port"
        },
        "dest-port": {
          "type": "integer",
          "format": "int64",
          "title": "Destination Port"
        },
        "protocol": {
          "type": "string",
          "title": "Protocol,"
        },
        "action": {
          "type": "string",
          "enum": [
            "ALLOW",
            "DENY",
            "REJECT"
          ],
          "default": "ALLOW",
          "x-ui-hints": {
            "ALLOW": "Allow",
            "DENY": "Deny",
            "REJECT": "Reject"
          },
          "title": "Action"
        },
        "direction": {
          "type": "string",
          "enum": [
            "FROM_HOST",
            "FROM_UPLINK"
          ],
          "default": "FROM_HOST",
          "x-ui-hints": {
            "FROM_HOST": "From Host",
            "FROM_UPLINK": "From Uplink"
          },
          "title": "Flow Direction"
        },
        "rule-id": {
          "type": "string",
          "title": "Rule ID"
        },
        "policy-name": {
          "type": "string",
          "title": "policy name"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "Time the log was created"
        }
      }
    },
    "telemetry_queryFwlogsQueryList": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string",
          "title": "Tenant for the request"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace for the request"
        },
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/telemetry_queryFwlogsQuerySpec"
          },
          "title": "List of queries to execute"
        }
      },
      "title": "FwlogsQueryList contains a list of queries to execute"
    },
    "telemetry_queryFwlogsQueryResponse": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string",
          "title": "Tenant for the request"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace for the request"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/telemetry_queryFwlogsQueryResult"
          }
        }
      },
      "title": "FwlogsQueryResponse is the response for Fwlogs Query"
    },
    "telemetry_queryFwlogsQueryResult": {
      "type": "object",
      "properties": {
        "statement_id": {
          "type": "integer",
          "format": "int32"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/telemetry_queryFwlog"
          }
        }
      },
      "title": "FwlogsQueryResult contains fwlogs returned from a fwlogQuery"
    },
    "telemetry_queryFwlogsQuerySpec": {
      "type": "object",
      "required": [
        "source-ips",
        "dest-ips",
        "source-ports",
        "dest-ports",
        "actions",
        "directions"
      ],
      "properties": {
        "source-ips": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": "10.1.1.1, ff02::5 ",
          "description": "should be a valid v4 or v6 IP address\n",
          "title": "OR of sources IPs to be matched"
        },
        "dest-ips": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": "10.1.1.1, ff02::5 ",
          "description": "should be a valid v4 or v6 IP address\n",
          "title": "OR of dest IPs to be matched"
        },
        "source-ports": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "maximum": 65535,
          "description": "value should be between 0 and 65535\n",
          "title": "OR of source ports to be matched"
        },
        "dest-ports": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "maximum": 65535,
          "description": "value should be between 0 and 65535\n",
          "title": "OR of dest ports to be matched"
        },
        "protocols": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "OR of protocols to be matched"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "enum": [
            "ALL",
            "ACTION_ALLOW",
            "ACTION_DENY",
            "ACTION_REJECT"
          ],
          "default": "ALL",
          "x-ui-hints": {
            "ACTION_ALLOW": "Allow",
            "ACTION_DENY": "Deny",
            "ACTION_REJECT": "Reject",
            "ALL": "All"
          },
          "title": "OR of actions to be matched"
        },
        "directions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "enum": [
            "DIRECTION_ALL",
            "DIRECTION_FROM_HOST",
            "DIRECTION_FROM_UPLINK"
          ],
          "default": "DIRECTION_ALL",
          "x-ui-hints": {
            "DIRECTION_ALL": "All",
            "DIRECTION_FROM_HOST": "From Host",
            "DIRECTION_FROM_UPLINK": "From Uplink"
          },
          "title": "OR of directions to be matched"
        },
        "rule-ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "OR of ruleID to be matched"
        },
        "policy-names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "OR of policy names to be matched"
        },
        "start-time": {
          "type": "string",
          "format": "date-time",
          "title": "StartTime selects all logs with timestamp greater than the StartTime, example 2018-10-18T00:12:00Z"
        },
        "end-time": {
          "type": "string",
          "format": "date-time",
          "title": "EndTime selects all logs with timestamp less than the EndTime, example 2018-09-18T00:12:00Z"
        },
        "pagination": {
          "$ref": "#/definitions/telemetry_queryPaginationSpec",
          "title": "PaginationSpec specifies the number of series to include"
        }
      },
      "title": "FwlogsQuerySpec allows selecting logs by all attributes\nAll fields are ANDed together"
    },
    "telemetry_queryMetricsQueryList": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string",
          "title": "Tenant for the request"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace for the request"
        },
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/telemetry_queryMetricsQuerySpec"
          },
          "title": "List of queries to execute"
        }
      },
      "title": "MetricsQueryList contains a list of queries to execute"
    },
    "telemetry_queryMetricsQueryResponse": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string",
          "title": "Tenant for the request"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace for the request"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/telemetry_queryMetricsQueryResult"
          }
        }
      },
      "title": "MetricsQueryResponse is the response for Metrics Query"
    },
    "telemetry_queryMetricsQueryResult": {
      "type": "object",
      "properties": {
        "statement_id": {
          "type": "integer",
          "format": "int32"
        },
        "series": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/telemetry_queryResultSeries"
          }
        }
      },
      "title": "MetricsQueryResult contains tsdb series from a metrics query"
    },
    "telemetry_queryMetricsQuerySpec": {
      "type": "object",
      "required": [
        "function"
      ],
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9][\\w\\-\\.\\:]*[a-zA-Z0-9]$",
          "description": "Name is the name of the API object."
        },
        "selector": {
          "$ref": "#/definitions/labelsSelector"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "pattern": "^[a-zA-Z0-9][\\w\\-\\.\\:]*[a-zA-Z0-9]$",
          "description": "must start and end with alpha numeric and can have alphanumeric, -, _, ., :",
          "title": "Fields select the metric fields to be included in the result\nEmpty will include all fields, must contain at least one non-tag field"
        },
        "function": {
          "type": "string",
          "enum": [
            "NONE",
            "MEAN",
            "MAX"
          ],
          "default": "NONE",
          "title": "Functions specify an operation function to be applied, example mean()/max()"
        },
        "start-time": {
          "type": "string",
          "format": "date-time",
          "title": "StartTime selects all metrics with timestamp greater than the StartTime, example 2018-10-18T00:12:00Z"
        },
        "end-time": {
          "type": "string",
          "format": "date-time",
          "title": "EndTime selects all metrics with timestamp less than the EndTime, example 2018-09-18T00:12:00Z"
        },
        "group-by-time": {
          "type": "string",
          "example": "2h",
          "description": "should be a valid time duration\n",
          "title": "GroupbyTime groups series based on the interval specified"
        },
        "group-by-field": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9][\\w\\-\\.\\:]*[a-zA-Z0-9]$",
          "description": "must start and end with alpha numeric and can have alphanumeric, -, _, ., :",
          "title": "GroupbyField groups series based on the field specified"
        },
        "pagination": {
          "$ref": "#/definitions/telemetry_queryPaginationSpec",
          "title": "PaginationSpec specifies the number of series to include"
        }
      },
      "title": "MetricsQuerySpec requires a structured body consisting of:\n    -  Object Selector (selects one more more objects of same Kind)\n    -  Time Range (for the time series)\n    -  A set of Metric Specs\n    -  A pagination spec"
    },
    "telemetry_queryPaginationSpec": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32",
          "title": "Offset specifies the starting point"
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count specifies the number of series to include"
        }
      },
      "description": "PaginationSpec specifies how many metrics instances to include\nin the result."
    },
    "telemetry_queryResultSeries": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the series"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Tags are the TSDB tags in the query response"
        },
        "columns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "columns list all available fields in tsdb"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiInterfaceSlice"
          },
          "title": "values contain field values received frpm tsdb, it is in the form of [][]interface{}"
        }
      }
    }
  }
}
