{
  "swagger": "2.0",
  "info": {
    "title": "Orchestration API reference",
    "description": "Configure and manage the Orchestrator.\n\n API Objects are: Orchestrator ",
    "version": "v1"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/configs/orchestration/v1/orchestrator": {
      "get": {
        "summary": "List Orchestrator objects",
        "operationId": "ListOrchestrator",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/orchestrationOrchestratorList"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nminimum length is 2 and maximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters. must be alpha-numericslength of string should be between 1 and 48",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort-order",
            "description": "order to sort List results in.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "orchestration/v1"
        ]
      },
      "post": {
        "summary": "Create Orchestrator object",
        "operationId": "AddOrchestrator",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/orchestrationOrchestrator"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/orchestrationOrchestrator"
            }
          }
        ],
        "tags": [
          "orchestration/v1"
        ]
      }
    },
    "/configs/orchestration/v1/orchestrator/{O.Name}": {
      "get": {
        "summary": "Get Orchestrator object",
        "operationId": "GetOrchestrator",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/orchestrationOrchestrator"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.api-version",
            "description": "APIVersion defines the version of the API object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.tenant",
            "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters. must be alpha-numericslength of string should be between 1 and 48",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "meta.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.type",
            "description": "Type of orchestrator.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "spec.uri",
            "description": "URI of the orchestrator. length of string should be at least 1",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials.auth-type",
            "description": "AuthType is the authentication type used in this config.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials.username",
            "description": "UserName is the login id to be used towards the external entity.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials.password",
            "description": "Password is one time specified, not visibile on read operations\nOnly valid when UserName is defined\nTBD: need to add (venice.secret) = \"true\" support for this.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials.bearer-token",
            "description": "External entity supports bearer tokens for authentication and authorization\nToken refresh is not supported using OAuth2\nTBD: need to add (venice.secret) = \"true\" support for this.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials.cert-data",
            "description": "CertData holds PEM-encoded bytes (typically read from a client certificate file).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "credentials.key-data",
            "description": "KeyData holds PEM-encoded bytes (typically read from a client certificate key file).\nTBD: need to add (venice.secret) = \"true\" support for this.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "credentials.ca-data",
            "description": "CaData holds PEM-encoded bytes (typically read from a root certificates bundle).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "status.connection-status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status.last-connected",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "status.last-sync",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "status.session-id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "orchestration/v1"
        ]
      },
      "delete": {
        "summary": "Delete Orchestrator object",
        "operationId": "DeleteOrchestrator",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/orchestrationOrchestrator"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "orchestration/v1"
        ]
      },
      "put": {
        "summary": "Update Orchestrator object",
        "operationId": "UpdateOrchestrator",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/orchestrationOrchestrator"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/orchestrationOrchestrator"
            }
          }
        ],
        "tags": [
          "orchestration/v1"
        ]
      }
    },
    "/configs/orchestration/v1/watch/orchestrator": {
      "get": {
        "summary": "Watch Orchestrator objects. Supports WebSockets or HTTP long poll",
        "operationId": "WatchOrchestrator",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/orchestrationAutoMsgOrchestratorWatchHelper"
            }
          },
          "400": {
            "description": "Bad request parameters",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "401": {
            "description": "Unauthorized request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "409": {
            "description": "Conflict while processing request",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "412": {
            "description": "Pre-condition failed",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "501": {
            "description": "Request not implemented",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "O.name",
            "description": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nminimum length is 2 and maximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.tenant",
            "description": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters. must be alpha-numericslength of string should be between 1 and 48",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.namespace",
            "description": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters. must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.generation-id",
            "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.resource-version",
            "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.uuid",
            "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.creation-time",
            "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.mod-time",
            "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.self-link",
            "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label-selector",
            "description": "LabelSelector to select on labels in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-selector",
            "description": "FieldSelector to select on field values in list or watch results.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "field-change-selector",
            "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "description": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1].",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max-results",
            "description": "max. number of events to be fetched for the request.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort-order",
            "description": "order to sort List results in.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "orchestration/v1"
        ]
      }
    }
  },
  "definitions": {
    "apiListMeta": {
      "type": "object",
      "properties": {
        "resource-version": {
          "type": "string",
          "description": "Resource version of object store at the time of list generation."
        }
      },
      "description": "ListMeta contains the metadata for list of objects."
    },
    "apiListWatchOptions": {
      "type": "object",
      "required": [
        "sort-order"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 2,
          "maxLength": 64,
          "pattern": "^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$",
          "description": "must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64"
        },
        "tenant": {
          "type": "string",
          "minLength": 1,
          "maxLength": 48,
          "pattern": "^[a-zA-Z0-9]+$",
          "description": "must be alpha-numericslength of string should be between 1 and 48"
        },
        "namespace": {
          "type": "string",
          "minLength": 2,
          "maxLength": 64,
          "pattern": "^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$",
          "description": "must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64"
        },
        "generation-id": {
          "type": "string"
        },
        "resource-version": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "creation-time": {
          "type": "string",
          "format": "date-time"
        },
        "mod-time": {
          "type": "string",
          "format": "date-time"
        },
        "self-link": {
          "type": "string"
        },
        "label-selector": {
          "type": "string",
          "description": "LabelSelector to select on labels in list or watch results."
        },
        "field-selector": {
          "type": "string",
          "title": "FieldSelector to select on field values in list or watch results"
        },
        "field-change-selector": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified."
        },
        "from": {
          "type": "integer",
          "format": "int32",
          "title": "from represents the start offset (zero based), used for pagination.\nresults returned would be in the range [from ... from+max-results-1]"
        },
        "max-results": {
          "type": "integer",
          "format": "int32",
          "description": "max. number of events to be fetched for the request."
        },
        "sort-order": {
          "type": "string",
          "enum": [
            "none",
            "by-name",
            "by-name-reverse",
            "by-version",
            "by-version-reverse",
            "by-creation-time",
            "by-creation-time-reverse",
            "by-mod-time",
            "by-mod-time-reverse"
          ],
          "default": "none",
          "x-ui-hints": {
            "by-creation-time": "By Creation Time",
            "by-creation-time-reverse": "By Creation Time Reverse",
            "by-mod-time": "By Modification Time",
            "by-mod-time-reverse": "By Modification Time Reverse",
            "by-name": "By Name",
            "by-name-reverse": "By Name Reverse",
            "by-version": "By Version",
            "by-version-reverse": "By Version Reverse",
            "none": "None"
          },
          "description": "order to sort List results in."
        }
      }
    },
    "apiObjectMeta": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 2,
          "maxLength": 64,
          "pattern": "^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$",
          "description": "must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
          "title": "Name of the object, unique within a Namespace for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nminimum length is 2 and maximum length is 64 characters"
        },
        "tenant": {
          "type": "string",
          "minLength": 1,
          "maxLength": 48,
          "pattern": "^[a-zA-Z0-9]+$",
          "description": "must be alpha-numericslength of string should be between 1 and 48",
          "title": "Tenant to which the object belongs to. This can be automatically filled in many cases based on\nthe tenant the user, who created the object, belongs to.\nShould start and end in an alphanumeric character and can contain only alphanumerics.\nMinimum length is 1 and maximum length is 48 characters"
        },
        "namespace": {
          "type": "string",
          "minLength": 2,
          "maxLength": 64,
          "pattern": "^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$",
          "description": "must start and end with alpha numeric and can have alphanumeric, -, _, .length of string should be between 2 and 64",
          "title": "Namespace of the object, for scoped objects.\nShould start and end in an alphanumeric character and can contain alphanumeric or ._- characters\nmaximum length is 64 characters"
        },
        "generation-id": {
          "type": "string",
          "description": "GenerationID is the generation Id for the object. This is incremented anytime there\n is an update to the user intent, including Spec update and any update to ObjectMeta.\n System generated and updated, not updatable by user."
        },
        "resource-version": {
          "type": "string",
          "description": "Resource version in the object store. This is updated anytime there is any change to the object.\n System generated and updated, not updatable by user."
        },
        "uuid": {
          "type": "string",
          "description": "UUID is the unique identifier for the object. This is generated on creation of the object.\nSystem generated, not updatable by user."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels are arbitrary (key,value) pairs associated with any object."
        },
        "creation-time": {
          "type": "string",
          "format": "date-time",
          "description": "CreationTime is the creation time of the object\n System generated and updated, not updatable by user."
        },
        "mod-time": {
          "type": "string",
          "format": "date-time",
          "description": "ModTime is the Last Modification time of the object\n System generated and updated, not updatable by user."
        },
        "self-link": {
          "type": "string",
          "description": "SelfLink is a link for accessing this object. When the object is served from the API-GW it is the\n URI path. Example:\n   - \"/v1/tenants/tenants/tenant2\" \n System generated and updated, not updatable by user."
        }
      },
      "description": "ObjectMeta contains metadata that all objects stored in kvstore must have."
    },
    "apiObjectRef": {
      "type": "object",
      "properties": {
        "tenant": {
          "type": "string",
          "description": "Tenant of the object."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace of the object, for scoped objects."
        },
        "kind": {
          "type": "string",
          "description": "Kind represents the type of the API object."
        },
        "name": {
          "type": "string",
          "description": "Name of the object, unique within a Namespace for scoped objects."
        },
        "uri": {
          "type": "string",
          "description": "URI is a link to accessing the referenced object."
        }
      },
      "description": "ObjectRef contains identifying information about an object."
    },
    "apiStatus": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/apiStatusResult",
          "description": "Result contains the status of the operation, success or failure."
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Message contains human readable form of the error."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Code is the HTTP status code."
        },
        "object-ref": {
          "$ref": "#/definitions/apiObjectRef",
          "description": "Reference to the object (optional) for which this status is being sent."
        }
      },
      "description": "Status is returned for calls that dont return objects."
    },
    "apiStatusResult": {
      "type": "object",
      "properties": {
        "Str": {
          "type": "string"
        }
      },
      "description": "StatusResult contains possible statuses for a NIC."
    },
    "apiTimestamp": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "apiTypeMeta": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind represents the type of the API object."
        },
        "api-version": {
          "type": "string",
          "title": "APIVersion defines the version of the API object. This can only be set by the server"
        }
      },
      "description": "TypeMeta contains the metadata about kind and version for all API objects."
    },
    "apiWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/googleprotobufAny"
        }
      }
    },
    "apiWatchEventList": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiWatchEvent"
          }
        }
      }
    },
    "googleprotobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name whose content describes the type of the\nserialized protocol buffer message.\n\nFor URLs which use the scheme `http`, `https`, or no scheme, the\nfollowing restrictions and interpretations apply:\n\n* If no scheme is provided, `https` is assumed.\n* The last segment of the URL's path must represent the fully\n  qualified name of the type (as in `path/google.protobuf.Duration`).\n  The name should be in a canonical form (e.g., leading \".\" is\n  not accepted).\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "monitoringExternalCred": {
      "type": "object",
      "required": [
        "auth-type"
      ],
      "properties": {
        "auth-type": {
          "type": "string",
          "enum": [
            "none",
            "username-password",
            "token",
            "certs"
          ],
          "default": "none",
          "x-ui-hints": {
            "certs": "Certs",
            "none": "None",
            "token": "Token",
            "username-password": "Username/Password"
          },
          "title": "AuthType is the authentication type used in this config"
        },
        "username": {
          "type": "string",
          "title": "UserName is the login id to be used towards the external entity"
        },
        "password": {
          "type": "string",
          "title": "Password is one time specified, not visibile on read operations\nOnly valid when UserName is defined\nTBD: need to add (venice.secret) = \"true\" support for this"
        },
        "bearer-token": {
          "type": "string",
          "title": "External entity supports bearer tokens for authentication and authorization\nToken refresh is not supported using OAuth2\nTBD: need to add (venice.secret) = \"true\" support for this"
        },
        "cert-data": {
          "type": "string",
          "format": "byte",
          "description": "CertData holds PEM-encoded bytes (typically read from a client certificate file)."
        },
        "key-data": {
          "type": "string",
          "format": "byte",
          "title": "KeyData holds PEM-encoded bytes (typically read from a client certificate key file).\nTBD: need to add (venice.secret) = \"true\" support for this"
        },
        "ca-data": {
          "type": "string",
          "format": "byte",
          "description": "CaData holds PEM-encoded bytes (typically read from a root certificates bundle)."
        }
      },
      "title": "------------------------ ExternalCred Object ----------------------------\nExternalCred defines credentials required to access an external entity, such as\na stats collector, compute orchestration entity, or a syslog server.\nExternal entity may support a variety of methods, like username/password,\nTLS Client authentication, or Bearer Token based authentication. User is\nexpected to configure one of the methods"
    },
    "orchestrationAutoMsgOrchestratorWatchHelper": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/orchestrationAutoMsgOrchestratorWatchHelperWatchEvent"
          }
        }
      },
      "title": "AutoMsgOrchestratorWatchHelper is a wrapper object for watch events for Orchestrator objects"
    },
    "orchestrationAutoMsgOrchestratorWatchHelperWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/orchestrationOrchestrator"
        }
      }
    },
    "orchestrationOrchestrator": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/orchestrationOrchestratorSpec",
          "description": "Spec contains the configuration of the vcenter."
        },
        "status": {
          "$ref": "#/definitions/orchestrationOrchestratorStatus",
          "description": "Status contains the current state of the cluster."
        }
      },
      "description": "Orchestrator represents the config object which allows Venice to connect to the appropriate orchestrator",
      "title": "--------------------------------- ORCHESTRATOR ---------------------------------------------"
    },
    "orchestrationOrchestratorList": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "api-version": {
          "type": "string"
        },
        "list-meta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/orchestrationOrchestrator"
          },
          "title": "List of Orchestrator objects"
        }
      },
      "title": "OrchestratorList is a container object for list of Orchestrator objects"
    },
    "orchestrationOrchestratorSpec": {
      "type": "object",
      "required": [
        "type",
        "uri"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "vcenter"
          ],
          "default": "vcenter",
          "x-ui-hints": {
            "vcenter": "vcenter"
          },
          "title": "Type of orchestrator"
        },
        "uri": {
          "type": "string",
          "minLength": 1,
          "description": "length of string should be at least 1",
          "title": "URI of the orchestrator"
        },
        "credentials": {
          "$ref": "#/definitions/monitoringExternalCred",
          "title": "Credentials for the orchestrator"
        },
        "login-data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "OrchestratorSpec contains the configuration of the cluster."
    },
    "orchestrationOrchestratorStatus": {
      "type": "object",
      "required": [
        "connection-status"
      ],
      "properties": {
        "connection-status": {
          "type": "string",
          "enum": [
            "unknown",
            "success",
            "failure"
          ],
          "default": "unknown",
          "x-ui-hints": {
            "failure": "Failure",
            "success": "Success",
            "unknown": "Unknown"
          }
        },
        "last-connected": {
          "type": "string",
          "format": "date-time"
        },
        "last-sync": {
          "type": "string",
          "format": "date-time"
        },
        "session-id": {
          "type": "string"
        }
      },
      "description": "OrchestratorStatus contains the current state of connection with the orchestrator."
    }
  }
}
