// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package audit is a auto generated package.
Input file: audit.proto
*/
package audit

import (
	"context"
	"encoding/json"
	"net/http"

	"github.com/pensando/sw/api"
)

// Dummy definitions to suppress nonused warnings
var _ api.ObjectMeta

func encodeHTTPAuditEvent(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPAuditEvent(_ context.Context, r *http.Request) (interface{}, error) {
	var req AuditEvent
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqAuditEvent encodes GRPC request
func EncodeGrpcReqAuditEvent(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*AuditEvent)
	return req, nil
}

// DecodeGrpcReqAuditEvent decodes GRPC request
func DecodeGrpcReqAuditEvent(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*AuditEvent)
	return req, nil
}

// EncodeGrpcRespAuditEvent encodes GRC response
func EncodeGrpcRespAuditEvent(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespAuditEvent decodes GRPC response
func DecodeGrpcRespAuditEvent(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

func encodeHTTPAuditEventList(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPAuditEventList(_ context.Context, r *http.Request) (interface{}, error) {
	var req AuditEventList
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqAuditEventList encodes GRPC request
func EncodeGrpcReqAuditEventList(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*AuditEventList)
	return req, nil
}

// DecodeGrpcReqAuditEventList decodes GRPC request
func DecodeGrpcReqAuditEventList(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*AuditEventList)
	return req, nil
}

// EncodeGrpcRespAuditEventList encodes GRC response
func EncodeGrpcRespAuditEventList(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespAuditEventList decodes GRPC response
func DecodeGrpcRespAuditEventList(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

func encodeHTTPAuditEventRequest(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPAuditEventRequest(_ context.Context, r *http.Request) (interface{}, error) {
	var req AuditEventRequest
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqAuditEventRequest encodes GRPC request
func EncodeGrpcReqAuditEventRequest(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*AuditEventRequest)
	return req, nil
}

// DecodeGrpcReqAuditEventRequest decodes GRPC request
func DecodeGrpcReqAuditEventRequest(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*AuditEventRequest)
	return req, nil
}

// EncodeGrpcRespAuditEventRequest encodes GRC response
func EncodeGrpcRespAuditEventRequest(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespAuditEventRequest decodes GRPC response
func DecodeGrpcRespAuditEventRequest(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

func encodeHTTPEventAttributes(ctx context.Context, req *http.Request, request interface{}) error {
	return encodeHTTPRequest(ctx, req, request)
}

func decodeHTTPEventAttributes(_ context.Context, r *http.Request) (interface{}, error) {
	var req EventAttributes
	if e := json.NewDecoder(r.Body).Decode(&req); e != nil {
		return nil, e
	}
	return req, nil
}

// EncodeGrpcReqEventAttributes encodes GRPC request
func EncodeGrpcReqEventAttributes(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*EventAttributes)
	return req, nil
}

// DecodeGrpcReqEventAttributes decodes GRPC request
func DecodeGrpcReqEventAttributes(ctx context.Context, request interface{}) (interface{}, error) {
	req := request.(*EventAttributes)
	return req, nil
}

// EncodeGrpcRespEventAttributes encodes GRC response
func EncodeGrpcRespEventAttributes(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}

// DecodeGrpcRespEventAttributes decodes GRPC response
func DecodeGrpcRespEventAttributes(ctx context.Context, response interface{}) (interface{}, error) {
	return response, nil
}
