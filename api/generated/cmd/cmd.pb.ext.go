// Code generated by protoc-gen-grpc-pensando DO NOT EDIT.

/*
Package cmd is a auto generated package.
Input file: protos/cmd.proto
*/
package cmd

import (
	fmt "fmt"
	listerwatcher "github.com/pensando/sw/api/listerwatcher"
	"github.com/pensando/sw/venice/utils/kvstore"
	"github.com/pensando/sw/venice/utils/log"
)

// Dummy definitions to suppress nonused warnings
var _ kvstore.Interface
var _ log.Logger
var _ listerwatcher.WatcherClient

// MakeKey generates a KV store key for the object
func (m *Cluster) MakeKey(prefix string) string {
	return fmt.Sprint("/venice/", prefix, "/", "cluster/", m.Name)
}

// MakeKey generates a KV store key for the object
func (m *Node) MakeKey(prefix string) string {
	return fmt.Sprint("/venice/", prefix, "/", "nodes/", m.Name)
}

// MakeKey generates a KV store key for the object
func (m *SmartNIC) MakeKey(prefix string) string {
	return fmt.Sprint("/venice/", prefix, "/", "smartnics/", m.Name)
}

// MakeKey generates a KV store key for the object
func (m *ClusterList) MakeKey(prefix string) string {
	obj := Cluster{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *NodeList) MakeKey(prefix string) string {
	obj := Node{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *SmartNICList) MakeKey(prefix string) string {
	obj := SmartNIC{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *AutoMsgClusterWatchHelper) MakeKey(prefix string) string {
	obj := Cluster{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *AutoMsgNodeWatchHelper) MakeKey(prefix string) string {
	obj := Node{}
	return obj.MakeKey(prefix)
}

// MakeKey generates a KV store key for the object
func (m *AutoMsgSmartNICWatchHelper) MakeKey(prefix string) string {
	obj := SmartNIC{}
	return obj.MakeKey(prefix)
}

// Validators

func (m *AutoMsgClusterWatchHelper) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *AutoMsgNodeWatchHelper) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *AutoMsgSmartNICWatchHelper) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *Cluster) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *ClusterList) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *ClusterSpec) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *ClusterStatus) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *Node) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *NodeCondition) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *NodeList) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *NodeSpec) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *NodeStatus) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *PortCondition) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *PortSpec) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *PortStatus) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *SmartNIC) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *SmartNICCondition) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *SmartNICList) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *SmartNICSpec) Validate(ver string, ignoreStatus bool) bool {
	return true
}

func (m *SmartNICStatus) Validate(ver string, ignoreStatus bool) bool {
	return true
}
