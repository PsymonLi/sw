package authGwService

import (
	"github.com/GeertJohan/go.rice/embedded"
	"time"
)

func init() {

	// define files
	file2 := &embedded.EmbeddedFile{
		Filename:    "auth.swagger.json",
		FileModTime: time.Unix(1516227461, 0),
		Content:     string("{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"Service name\",\n    \"version\": \"version not set\"\n  },\n  \"schemes\": [\n    \"http\",\n    \"https\"\n  ],\n  \"consumes\": [\n    \"application/json\"\n  ],\n  \"produces\": [\n    \"application/json\"\n  ],\n  \"paths\": {\n    \"/authn-policy\": {\n      \"post\": {\n        \"operationId\": \"AutoAddAuthenticationPolicy\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/authAuthenticationPolicy\"\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/definitions/authAuthenticationPolicy\"\n            }\n          }\n        ],\n        \"tags\": [\n          \"AuthV1\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"AutoUpdateAuthenticationPolicy\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/authAuthenticationPolicy\"\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/definitions/authAuthenticationPolicy\"\n            }\n          }\n        ],\n        \"tags\": [\n          \"AuthV1\"\n        ]\n      }\n    },\n    \"/authn-policy/{O.Name}\": {\n      \"get\": {\n        \"operationId\": \"AutoGetAuthenticationPolicy\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/authAuthenticationPolicy\"\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"O.Name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"T.Kind\",\n            \"description\": \"Kind represents the type of the API object.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"T.APIVersion\",\n            \"description\": \"APIVersion defines the version of the API object.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"O.Tenant\",\n            \"description\": \"Tenant is global namespace isolation for various objects. This can be automatically\\nfilled in many cases based on the tenant a user, who created the object, belongs go.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"O.Namespace\",\n            \"description\": \"Namespace of the object, for scoped objects.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"O.ResourceVersion\",\n            \"description\": \"Resource version in the object store. This can only be set by the server.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"O.UUID\",\n            \"description\": \"UUID is the unique identifier for the object. This can only be set by the server.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"O.CreationTime.time\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          {\n            \"name\": \"O.ModTime.time\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Ldap.Enabled\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"boolean\",\n            \"format\": \"boolean\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Ldap.Url\",\n            \"description\": \"UserObjectClass is the STRUCTURAL object class for user entry in LDAP. It is used as a filter for user search.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Ldap.TLSOptions.StartTLS\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"boolean\",\n            \"format\": \"boolean\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Ldap.TLSOptions.SkipServerCertVerification\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"boolean\",\n            \"format\": \"boolean\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Ldap.TLSOptions.ServerName\",\n            \"description\": \"Spec contains configuration of authentication mechanisms.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Ldap.TLSOptions.TrustedCerts\",\n            \"description\": \"Status contains the current state of the authentication policy.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Ldap.BaseDN\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Ldap.BindDN\",\n            \"description\": \"GroupObjectClass is the STRUCTURAL object class for group entry in LDAP. It is used as a filter for group search.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Ldap.BindPassword\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Ldap.AttributeMapping.User\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Ldap.AttributeMapping.UserObjectClass\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Ldap.AttributeMapping.Tenant\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Ldap.AttributeMapping.Group\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Ldap.AttributeMapping.GroupObjectClass\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Ldap.AttributeMapping.Email\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Ldap.AttributeMapping.Fullname\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Local.Enabled\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"boolean\",\n            \"format\": \"boolean\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Radius.Enabled\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"boolean\",\n            \"format\": \"boolean\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Radius.Ip\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Radius.Port\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Radius.NasIp\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.Radius.Secret\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Authenticators.AuthenticatorOrder\",\n            \"description\": \"Order in which authenticators are applied. If an authenticator returns success, others are skipped.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"tags\": [\n          \"AuthV1\"\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"AutoDeleteAuthenticationPolicy\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/authAuthenticationPolicy\"\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"O.Name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\"\n          }\n        ],\n        \"tags\": [\n          \"AuthV1\"\n        ]\n      }\n    },\n    \"/{O.Tenant}/users\": {\n      \"get\": {\n        \"operationId\": \"AutoListUser\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/authUserList\"\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"O.Tenant\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"O.Name\",\n            \"description\": \"Name of the object, unique within a Namespace for scoped objects.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"O.Namespace\",\n            \"description\": \"Namespace of the object, for scoped objects.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"O.ResourceVersion\",\n            \"description\": \"Resource version in the object store. This can only be set by the server.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"O.UUID\",\n            \"description\": \"UUID is the unique identifier for the object. This can only be set by the server.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"O.CreationTime.time\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          {\n            \"name\": \"O.ModTime.time\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          {\n            \"name\": \"LabelSelector\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"FieldSelector\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"PrefixWatch\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"boolean\",\n            \"format\": \"boolean\"\n          }\n        ],\n        \"tags\": [\n          \"AuthV1\"\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"AutoAddUser\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/authUser\"\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"O.Tenant\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/definitions/authUser\"\n            }\n          }\n        ],\n        \"tags\": [\n          \"AuthV1\"\n        ]\n      }\n    },\n    \"/{O.Tenant}/users/{O.Name}\": {\n      \"get\": {\n        \"operationId\": \"AutoGetUser\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/authUser\"\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"O.Tenant\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"O.Name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"T.Kind\",\n            \"description\": \"Kind represents the type of the API object.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"T.APIVersion\",\n            \"description\": \"APIVersion defines the version of the API object.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"O.Namespace\",\n            \"description\": \"Namespace of the object, for scoped objects.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"O.ResourceVersion\",\n            \"description\": \"Resource version in the object store. This can only be set by the server.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"O.UUID\",\n            \"description\": \"UUID is the unique identifier for the object. This can only be set by the server.\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"O.CreationTime.time\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          {\n            \"name\": \"O.ModTime.time\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          {\n            \"name\": \"Spec.Fullname\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Email\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Password\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Spec.Type\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"Status.Roles\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Status.UserGroups\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Status.IsLoggedIn\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"boolean\",\n            \"format\": \"boolean\"\n          },\n          {\n            \"name\": \"Status.LastSuccessfulLogin.time\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        ],\n        \"tags\": [\n          \"AuthV1\"\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"AutoDeleteUser\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/authUser\"\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"O.Tenant\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"O.Name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\"\n          }\n        ],\n        \"tags\": [\n          \"AuthV1\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"AutoUpdateUser\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/authUser\"\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"O.Tenant\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"O.Name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"type\": \"string\"\n          },\n          {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/definitions/authUser\"\n            }\n          }\n        ],\n        \"tags\": [\n          \"AuthV1\"\n        ]\n      }\n    }\n  },\n  \"definitions\": {\n    \"apiListMeta\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"ResourceVersion\": {\n          \"type\": \"string\",\n          \"description\": \"Resource version of object store at the time of list generation.\"\n        }\n      },\n      \"description\": \"ListMeta contains the metadata for list of objects.\"\n    },\n    \"apiListWatchOptions\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"O\": {\n          \"$ref\": \"#/definitions/apiObjectMeta\"\n        },\n        \"LabelSelector\": {\n          \"type\": \"string\"\n        },\n        \"FieldSelector\": {\n          \"type\": \"string\"\n        },\n        \"PrefixWatch\": {\n          \"type\": \"boolean\",\n          \"format\": \"boolean\"\n        }\n      }\n    },\n    \"apiObjectMeta\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Name\": {\n          \"type\": \"string\",\n          \"description\": \"Name of the object, unique within a Namespace for scoped objects.\"\n        },\n        \"Tenant\": {\n          \"type\": \"string\",\n          \"description\": \"Tenant is global namespace isolation for various objects. This can be automatically\\nfilled in many cases based on the tenant a user, who created the object, belongs go.\"\n        },\n        \"Namespace\": {\n          \"type\": \"string\",\n          \"description\": \"Namespace of the object, for scoped objects.\"\n        },\n        \"ResourceVersion\": {\n          \"type\": \"string\",\n          \"description\": \"Resource version in the object store. This can only be set by the server.\"\n        },\n        \"UUID\": {\n          \"type\": \"string\",\n          \"description\": \"UUID is the unique identifier for the object. This can only be set by the server.\"\n        },\n        \"Labels\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          },\n          \"description\": \"Labels are arbitrary (key,value) pairs associated with any object.\"\n        },\n        \"CreationTime\": {\n          \"$ref\": \"#/definitions/apiTimestamp\",\n          \"title\": \"CreationTime is the creation time of Object\"\n        },\n        \"ModTime\": {\n          \"$ref\": \"#/definitions/apiTimestamp\",\n          \"title\": \"ModTime is the Last Modification time of Object\"\n        }\n      },\n      \"description\": \"ObjectMeta contains metadata that all objects stored in kvstore must have.\"\n    },\n    \"apiTimestamp\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"time\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        }\n      }\n    },\n    \"apiTypeMeta\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Kind\": {\n          \"type\": \"string\",\n          \"description\": \"Kind represents the type of the API object.\"\n        },\n        \"APIVersion\": {\n          \"type\": \"string\",\n          \"description\": \"APIVersion defines the version of the API object.\"\n        }\n      },\n      \"description\": \"TypeMeta contains the metadata about kind and version for all API objects.\"\n    },\n    \"authAuthenticationPolicy\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"T\": {\n          \"$ref\": \"#/definitions/apiTypeMeta\"\n        },\n        \"O\": {\n          \"$ref\": \"#/definitions/apiObjectMeta\"\n        },\n        \"Spec\": {\n          \"$ref\": \"#/definitions/authAuthenticationPolicySpec\"\n        },\n        \"Status\": {\n          \"$ref\": \"#/definitions/authAuthenticationPolicyStatus\"\n        }\n      },\n      \"title\": \"spec part of user object\"\n    },\n    \"authAuthenticationPolicyList\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"T\": {\n          \"$ref\": \"#/definitions/apiTypeMeta\"\n        },\n        \"ListMeta\": {\n          \"$ref\": \"#/definitions/apiListMeta\"\n        },\n        \"Items\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/authAuthenticationPolicy\"\n          }\n        }\n      },\n      \"title\": \"status part of user object\"\n    },\n    \"authAuthenticationPolicySpec\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Authenticators\": {\n          \"$ref\": \"#/definitions/authAuthenticators\"\n        }\n      },\n      \"title\": \"User could be local or external\"\n    },\n    \"authAuthenticationPolicyStatus\": {\n      \"type\": \"object\",\n      \"title\": \"spec part of authentication policy object\"\n    },\n    \"authAuthenticators\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Ldap\": {\n          \"$ref\": \"#/definitions/authLdap\"\n        },\n        \"Local\": {\n          \"$ref\": \"#/definitions/authLocal\"\n        },\n        \"Radius\": {\n          \"$ref\": \"#/definitions/authRadius\"\n        },\n        \"AuthenticatorOrder\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"title\": \"Order in which authenticators are applied. If an authenticator returns success, others are skipped\"\n        }\n      }\n    },\n    \"authAutoMsgAuthenticationPolicyWatchHelper\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Type\": {\n          \"type\": \"string\"\n        },\n        \"Object\": {\n          \"$ref\": \"#/definitions/authAuthenticationPolicy\"\n        }\n      }\n    },\n    \"authAutoMsgUserWatchHelper\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Type\": {\n          \"type\": \"string\",\n          \"title\": \"StartTLS determines if ldap connection uses TLS\"\n        },\n        \"Object\": {\n          \"$ref\": \"#/definitions/authUser\",\n          \"description\": \"SkipServerCertVerification controls whether a client verifies the server's certificate chain and host name.\\nIf SkipServerCertVerification is true, TLS accepts any certificate presented by the server and any host name in that certificate.\\nIn this mode, TLS is susceptible to man-in-the-middle attacks. This should be used only for testing.\"\n        }\n      }\n    },\n    \"authLdap\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Enabled\": {\n          \"type\": \"boolean\",\n          \"format\": \"boolean\"\n        },\n        \"Url\": {\n          \"type\": \"string\",\n          \"title\": \"UserObjectClass is the STRUCTURAL object class for user entry in LDAP. It is used as a filter for user search\"\n        },\n        \"TLSOptions\": {\n          \"$ref\": \"#/definitions/authTLSOptions\"\n        },\n        \"BaseDN\": {\n          \"type\": \"string\"\n        },\n        \"BindDN\": {\n          \"type\": \"string\",\n          \"title\": \"GroupObjectClass is the STRUCTURAL object class for group entry in LDAP. It is used as a filter for group search\"\n        },\n        \"BindPassword\": {\n          \"type\": \"string\"\n        },\n        \"AttributeMapping\": {\n          \"$ref\": \"#/definitions/authLdapAttributeMapping\"\n        }\n      }\n    },\n    \"authLdapAttributeMapping\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"User\": {\n          \"type\": \"string\"\n        },\n        \"UserObjectClass\": {\n          \"type\": \"string\"\n        },\n        \"Tenant\": {\n          \"type\": \"string\"\n        },\n        \"Group\": {\n          \"type\": \"string\"\n        },\n        \"GroupObjectClass\": {\n          \"type\": \"string\"\n        },\n        \"Email\": {\n          \"type\": \"string\"\n        },\n        \"Fullname\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"authLocal\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Enabled\": {\n          \"type\": \"boolean\",\n          \"format\": \"boolean\"\n        }\n      }\n    },\n    \"authRadius\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Enabled\": {\n          \"type\": \"boolean\",\n          \"format\": \"boolean\"\n        },\n        \"Ip\": {\n          \"type\": \"string\"\n        },\n        \"Port\": {\n          \"type\": \"string\"\n        },\n        \"NasIp\": {\n          \"type\": \"string\"\n        },\n        \"Secret\": {\n          \"type\": \"string\"\n        }\n      },\n      \"title\": \"status part of authentication policy object\"\n    },\n    \"authTLSOptions\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"StartTLS\": {\n          \"type\": \"boolean\",\n          \"format\": \"boolean\"\n        },\n        \"SkipServerCertVerification\": {\n          \"type\": \"boolean\",\n          \"format\": \"boolean\"\n        },\n        \"ServerName\": {\n          \"type\": \"string\",\n          \"description\": \"Spec contains configuration of authentication mechanisms.\"\n        },\n        \"TrustedCerts\": {\n          \"type\": \"string\",\n          \"description\": \"Status contains the current state of the authentication policy.\"\n        }\n      },\n      \"title\": \"AuthenticationPolicy defines various authentication mechanisms available and order in which they are used\"\n    },\n    \"authUser\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"T\": {\n          \"$ref\": \"#/definitions/apiTypeMeta\"\n        },\n        \"O\": {\n          \"$ref\": \"#/definitions/apiObjectMeta\"\n        },\n        \"Spec\": {\n          \"$ref\": \"#/definitions/authUserSpec\"\n        },\n        \"Status\": {\n          \"$ref\": \"#/definitions/authUserStatus\"\n        }\n      }\n    },\n    \"authUserList\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"T\": {\n          \"$ref\": \"#/definitions/apiTypeMeta\"\n        },\n        \"ListMeta\": {\n          \"$ref\": \"#/definitions/apiListMeta\"\n        },\n        \"Items\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/authUser\"\n          }\n        }\n      }\n    },\n    \"authUserSpec\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Fullname\": {\n          \"type\": \"string\"\n        },\n        \"Email\": {\n          \"type\": \"string\"\n        },\n        \"Password\": {\n          \"type\": \"string\"\n        },\n        \"Type\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"authUserStatus\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Roles\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"UserGroups\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"IsLoggedIn\": {\n          \"type\": \"boolean\",\n          \"format\": \"boolean\"\n        },\n        \"LastSuccessfulLogin\": {\n          \"$ref\": \"#/definitions/apiTimestamp\"\n        }\n      }\n    }\n  }\n}\n"),
	}

	// define dirs
	dir1 := &embedded.EmbeddedDir{
		Filename:   "",
		DirModTime: time.Unix(1516226813, 0),
		ChildFiles: []*embedded.EmbeddedFile{
			file2, // "auth.swagger.json"

		},
	}

	// link ChildDirs
	dir1.ChildDirs = []*embedded.EmbeddedDir{}

	// register embeddedBox
	embedded.RegisterEmbeddedBox(`../../../../../sw/api/generated/auth/swagger`, &embedded.EmbeddedBox{
		Name: `../../../../../sw/api/generated/auth/swagger`,
		Time: time.Unix(1516226813, 0),
		Dirs: map[string]*embedded.EmbeddedDir{
			"": dir1,
		},
		Files: map[string]*embedded.EmbeddedFile{
			"auth.swagger.json": file2,
		},
	})
}
