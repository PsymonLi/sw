{
  "swagger": "2.0",
  "info": {
    "title": "Service name",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/{O.Tenant}/certificates": {
      "get": {
        "operationId": "AutoListCertificate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/x509CertificateList"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "description": "Name of the object, unique within a Namespace for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "LabelSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "FieldSelector",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "PrefixWatch",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "CertificateV1"
        ]
      },
      "post": {
        "operationId": "AutoAddCertificate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/x509Certificate"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/x509Certificate"
            }
          }
        ],
        "tags": [
          "CertificateV1"
        ]
      }
    },
    "/{O.Tenant}/certificates/{O.Name}": {
      "get": {
        "operationId": "AutoGetCertificate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/x509Certificate"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "T.Kind",
            "description": "Kind represents the type of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "T.APIVersion",
            "description": "APIVersion defines the version of the API object.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.Namespace",
            "description": "Namespace of the object, for scoped objects.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.ResourceVersion",
            "description": "Resource version in the object store. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.UUID",
            "description": "UUID is the unique identifier for the object. This can only be set by the server.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "O.CreationTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "O.ModTime.time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Spec.Description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.Usages",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "Spec.Body",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Spec.TrustChain",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Status.Validity",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Status.Workloads",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CertificateV1"
        ]
      },
      "delete": {
        "operationId": "AutoDeleteCertificate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/x509Certificate"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CertificateV1"
        ]
      },
      "put": {
        "operationId": "AutoUpdateCertificate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/x509Certificate"
            }
          }
        },
        "parameters": [
          {
            "name": "O.Tenant",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "O.Name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/x509Certificate"
            }
          }
        ],
        "tags": [
          "CertificateV1"
        ]
      }
    }
  },
  "definitions": {
    "apiListMeta": {
      "type": "object",
      "properties": {
        "ResourceVersion": {
          "type": "string",
          "description": "Resource version of object store at the time of list generation."
        }
      },
      "description": "ListMeta contains the metadata for list of objects."
    },
    "apiListWatchOptions": {
      "type": "object",
      "properties": {
        "O": {
          "$ref": "#/definitions/apiObjectMeta"
        },
        "LabelSelector": {
          "type": "string"
        },
        "FieldSelector": {
          "type": "string"
        },
        "PrefixWatch": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "apiObjectMeta": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "Name of the object, unique within a Namespace for scoped objects."
        },
        "Tenant": {
          "type": "string",
          "description": "Tenant is global namespace isolation for various objects. This can be automatically\nfilled in many cases based on the tenant a user, who created the object, belongs go."
        },
        "Namespace": {
          "type": "string",
          "description": "Namespace of the object, for scoped objects."
        },
        "ResourceVersion": {
          "type": "string",
          "description": "Resource version in the object store. This can only be set by the server."
        },
        "UUID": {
          "type": "string",
          "description": "UUID is the unique identifier for the object. This can only be set by the server."
        },
        "Labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels are arbitrary (key,value) pairs associated with any object."
        },
        "CreationTime": {
          "$ref": "#/definitions/apiTimestamp",
          "title": "CreationTime is the creation time of Object"
        },
        "ModTime": {
          "$ref": "#/definitions/apiTimestamp",
          "title": "ModTime is the Last Modification time of Object"
        }
      },
      "description": "ObjectMeta contains metadata that all objects stored in kvstore must have."
    },
    "apiTimestamp": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "apiTypeMeta": {
      "type": "object",
      "properties": {
        "Kind": {
          "type": "string",
          "description": "Kind represents the type of the API object."
        },
        "APIVersion": {
          "type": "string",
          "description": "APIVersion defines the version of the API object."
        }
      },
      "description": "TypeMeta contains the metadata about kind and version for all API objects."
    },
    "x509AutoMsgCertificateWatchHelper": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string",
          "title": "Description of the purpose of this certificate"
        },
        "Object": {
          "$ref": "#/definitions/x509Certificate",
          "description": "Usage can be \"client\", \"server\" or \"trust-root\" in any combination.\nA \"server\" certificate is used by a server to authenticate itself to the client\nA \"client\" certificate is used by a client to authenticate itself to a server\nA \"trust-root\" certificate is self-signed and is only used to validate\ncertificates presented by peers.\n\"client\" and \"server\" certificates are always accompanied by a private key,\nwhereas \"trust-root\"-only certificates are not."
        }
      }
    },
    "x509Certificate": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta",
          "description": "Status of the certificate: \"valid\", \"invalid\", \"expired\"\n\"invalid\" means that the signature of the certificate does not match or\nthere are inconsistencies in the trust chain."
        },
        "O": {
          "$ref": "#/definitions/apiObjectMeta",
          "title": "The workloads where this certificate has been deployed"
        },
        "Spec": {
          "$ref": "#/definitions/x509CertificateSpec"
        },
        "Status": {
          "$ref": "#/definitions/x509CertificateStatus"
        }
      }
    },
    "x509CertificateList": {
      "type": "object",
      "properties": {
        "T": {
          "$ref": "#/definitions/apiTypeMeta"
        },
        "ListMeta": {
          "$ref": "#/definitions/apiListMeta"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/x509Certificate"
          },
          "description": "Spec contains the configuration of the certificate."
        }
      },
      "title": "Certificate represents a certificate with associated chain of trust"
    },
    "x509CertificateSpec": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Body": {
          "type": "string"
        },
        "TrustChain": {
          "type": "string"
        }
      }
    },
    "x509CertificateStatus": {
      "type": "object",
      "properties": {
        "Validity": {
          "type": "string"
        },
        "Workloads": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}
