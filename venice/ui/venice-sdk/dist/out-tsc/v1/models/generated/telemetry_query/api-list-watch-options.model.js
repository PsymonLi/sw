"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiListWatchOptions = void 0;
/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
var forms_1 = require("@angular/forms");
var validators_1 = require("../../../utils/validators");
var base_model_1 = require("../basemodel/base-model");
var enums_1 = require("./enums");
var ApiListWatchOptions = /** @class */ (function (_super) {
    __extends(ApiListWatchOptions, _super);
    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    function ApiListWatchOptions(values, setDefaults) {
        if (setDefaults === void 0) { setDefaults = true; }
        var _this = _super.call(this) || this;
        /** Field for holding arbitrary ui state */
        _this['_ui'] = {};
        /** Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64. */
        _this['name'] = null;
        /** Must be alpha-numerics. Length of string should be between 1 and 48. */
        _this['tenant'] = null;
        /** Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64. */
        _this['namespace'] = null;
        _this['generation-id'] = null;
        _this['resource-version'] = null;
        _this['uuid'] = null;
        _this['labels'] = null;
        _this['creation-time'] = null;
        _this['mod-time'] = null;
        _this['self-link'] = null;
        /** LabelSelector to select on labels in list or watch results. */
        _this['label-selector'] = null;
        /** FieldSelector to select on field values in list or watch results. */
        _this['field-selector'] = null;
        /** FieldChangeSelector specifies to generate a watch notification on change in field(s) specified. */
        _this['field-change-selector'] = null;
        /** From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination. */
        _this['from'] = null;
        /** MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination. */
        _this['max-results'] = null;
        /** Order to sort List results in. */
        _this['sort-order'] = null;
        _this['field-change-selector'] = new Array();
        _this._inputValue = values;
        _this.setValues(values, setDefaults);
        return _this;
    }
    ApiListWatchOptions.prototype.getPropInfo = function (propName) {
        return ApiListWatchOptions.propInfo[propName];
    };
    ApiListWatchOptions.prototype.getPropInfoConfig = function () {
        return ApiListWatchOptions.propInfo;
    };
    /**
     * Returns whether or not there is an enum property with a default value
    */
    ApiListWatchOptions.hasDefaultValue = function (prop) {
        return (ApiListWatchOptions.propInfo[prop] != null &&
            ApiListWatchOptions.propInfo[prop].default != null);
    };
    /**
     * set the values for both the Model and the Form Group. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    ApiListWatchOptions.prototype.setValues = function (values, fillDefaults) {
        if (fillDefaults === void 0) { fillDefaults = true; }
        if (values && values['_ui']) {
            this['_ui'] = values['_ui'];
        }
        if (values && values['name'] != null) {
            this['name'] = values['name'];
        }
        else if (fillDefaults && ApiListWatchOptions.hasDefaultValue('name')) {
            this['name'] = ApiListWatchOptions.propInfo['name'].default;
        }
        else {
            this['name'] = null;
        }
        if (values && values['tenant'] != null) {
            this['tenant'] = values['tenant'];
        }
        else if (fillDefaults && ApiListWatchOptions.hasDefaultValue('tenant')) {
            this['tenant'] = ApiListWatchOptions.propInfo['tenant'].default;
        }
        else {
            this['tenant'] = null;
        }
        if (values && values['namespace'] != null) {
            this['namespace'] = values['namespace'];
        }
        else if (fillDefaults && ApiListWatchOptions.hasDefaultValue('namespace')) {
            this['namespace'] = ApiListWatchOptions.propInfo['namespace'].default;
        }
        else {
            this['namespace'] = null;
        }
        if (values && values['generation-id'] != null) {
            this['generation-id'] = values['generation-id'];
        }
        else if (fillDefaults && ApiListWatchOptions.hasDefaultValue('generation-id')) {
            this['generation-id'] = ApiListWatchOptions.propInfo['generation-id'].default;
        }
        else {
            this['generation-id'] = null;
        }
        if (values && values['resource-version'] != null) {
            this['resource-version'] = values['resource-version'];
        }
        else if (fillDefaults && ApiListWatchOptions.hasDefaultValue('resource-version')) {
            this['resource-version'] = ApiListWatchOptions.propInfo['resource-version'].default;
        }
        else {
            this['resource-version'] = null;
        }
        if (values && values['uuid'] != null) {
            this['uuid'] = values['uuid'];
        }
        else if (fillDefaults && ApiListWatchOptions.hasDefaultValue('uuid')) {
            this['uuid'] = ApiListWatchOptions.propInfo['uuid'].default;
        }
        else {
            this['uuid'] = null;
        }
        if (values && values['labels'] != null) {
            this['labels'] = values['labels'];
        }
        else if (fillDefaults && ApiListWatchOptions.hasDefaultValue('labels')) {
            this['labels'] = ApiListWatchOptions.propInfo['labels'].default;
        }
        else {
            this['labels'] = null;
        }
        if (values && values['creation-time'] != null) {
            this['creation-time'] = values['creation-time'];
        }
        else if (fillDefaults && ApiListWatchOptions.hasDefaultValue('creation-time')) {
            this['creation-time'] = ApiListWatchOptions.propInfo['creation-time'].default;
        }
        else {
            this['creation-time'] = null;
        }
        if (values && values['mod-time'] != null) {
            this['mod-time'] = values['mod-time'];
        }
        else if (fillDefaults && ApiListWatchOptions.hasDefaultValue('mod-time')) {
            this['mod-time'] = ApiListWatchOptions.propInfo['mod-time'].default;
        }
        else {
            this['mod-time'] = null;
        }
        if (values && values['self-link'] != null) {
            this['self-link'] = values['self-link'];
        }
        else if (fillDefaults && ApiListWatchOptions.hasDefaultValue('self-link')) {
            this['self-link'] = ApiListWatchOptions.propInfo['self-link'].default;
        }
        else {
            this['self-link'] = null;
        }
        if (values && values['label-selector'] != null) {
            this['label-selector'] = values['label-selector'];
        }
        else if (fillDefaults && ApiListWatchOptions.hasDefaultValue('label-selector')) {
            this['label-selector'] = ApiListWatchOptions.propInfo['label-selector'].default;
        }
        else {
            this['label-selector'] = null;
        }
        if (values && values['field-selector'] != null) {
            this['field-selector'] = values['field-selector'];
        }
        else if (fillDefaults && ApiListWatchOptions.hasDefaultValue('field-selector')) {
            this['field-selector'] = ApiListWatchOptions.propInfo['field-selector'].default;
        }
        else {
            this['field-selector'] = null;
        }
        if (values && values['field-change-selector'] != null) {
            this['field-change-selector'] = values['field-change-selector'];
        }
        else if (fillDefaults && ApiListWatchOptions.hasDefaultValue('field-change-selector')) {
            this['field-change-selector'] = [ApiListWatchOptions.propInfo['field-change-selector'].default];
        }
        else {
            this['field-change-selector'] = [];
        }
        if (values && values['from'] != null) {
            this['from'] = values['from'];
        }
        else if (fillDefaults && ApiListWatchOptions.hasDefaultValue('from')) {
            this['from'] = ApiListWatchOptions.propInfo['from'].default;
        }
        else {
            this['from'] = null;
        }
        if (values && values['max-results'] != null) {
            this['max-results'] = values['max-results'];
        }
        else if (fillDefaults && ApiListWatchOptions.hasDefaultValue('max-results')) {
            this['max-results'] = ApiListWatchOptions.propInfo['max-results'].default;
        }
        else {
            this['max-results'] = null;
        }
        if (values && values['sort-order'] != null) {
            this['sort-order'] = values['sort-order'];
        }
        else if (fillDefaults && ApiListWatchOptions.hasDefaultValue('sort-order')) {
            this['sort-order'] = ApiListWatchOptions.propInfo['sort-order'].default;
        }
        else {
            this['sort-order'] = null;
        }
        this.setFormGroupValuesToBeModelValues();
    };
    ApiListWatchOptions.prototype.getFormGroup = function () {
        if (!this._formGroup) {
            this._formGroup = new forms_1.FormGroup({
                'name': validators_1.CustomFormControl(new forms_1.FormControl(this['name'], [validators_1.minLengthValidator(2), validators_1.maxLengthValidator(64), validators_1.patternValidator('^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$', 'Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.'),]), ApiListWatchOptions.propInfo['name']),
                'tenant': validators_1.CustomFormControl(new forms_1.FormControl(this['tenant'], [validators_1.minLengthValidator(1), validators_1.maxLengthValidator(48), validators_1.patternValidator('^[a-zA-Z0-9]+$', 'Must be alpha-numerics. Length of string should be between 1 and 48.'),]), ApiListWatchOptions.propInfo['tenant']),
                'namespace': validators_1.CustomFormControl(new forms_1.FormControl(this['namespace'], [validators_1.minLengthValidator(2), validators_1.maxLengthValidator(64), validators_1.patternValidator('^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$', 'Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.'),]), ApiListWatchOptions.propInfo['namespace']),
                'generation-id': validators_1.CustomFormControl(new forms_1.FormControl(this['generation-id']), ApiListWatchOptions.propInfo['generation-id']),
                'resource-version': validators_1.CustomFormControl(new forms_1.FormControl(this['resource-version']), ApiListWatchOptions.propInfo['resource-version']),
                'uuid': validators_1.CustomFormControl(new forms_1.FormControl(this['uuid']), ApiListWatchOptions.propInfo['uuid']),
                'labels': validators_1.CustomFormControl(new forms_1.FormControl(this['labels']), ApiListWatchOptions.propInfo['labels']),
                'creation-time': validators_1.CustomFormControl(new forms_1.FormControl(this['creation-time']), ApiListWatchOptions.propInfo['creation-time']),
                'mod-time': validators_1.CustomFormControl(new forms_1.FormControl(this['mod-time']), ApiListWatchOptions.propInfo['mod-time']),
                'self-link': validators_1.CustomFormControl(new forms_1.FormControl(this['self-link']), ApiListWatchOptions.propInfo['self-link']),
                'label-selector': validators_1.CustomFormControl(new forms_1.FormControl(this['label-selector']), ApiListWatchOptions.propInfo['label-selector']),
                'field-selector': validators_1.CustomFormControl(new forms_1.FormControl(this['field-selector']), ApiListWatchOptions.propInfo['field-selector']),
                'field-change-selector': validators_1.CustomFormControl(new forms_1.FormControl(this['field-change-selector']), ApiListWatchOptions.propInfo['field-change-selector']),
                'from': validators_1.CustomFormControl(new forms_1.FormControl(this['from']), ApiListWatchOptions.propInfo['from']),
                'max-results': validators_1.CustomFormControl(new forms_1.FormControl(this['max-results']), ApiListWatchOptions.propInfo['max-results']),
                'sort-order': validators_1.CustomFormControl(new forms_1.FormControl(this['sort-order'], [validators_1.required, validators_1.enumValidator(enums_1.ApiListWatchOptions_sort_order),]), ApiListWatchOptions.propInfo['sort-order']),
            });
        }
        return this._formGroup;
    };
    ApiListWatchOptions.prototype.setModelToBeFormGroupValues = function () {
        this.setValues(this.$formGroup.value, false);
    };
    ApiListWatchOptions.prototype.setFormGroupValuesToBeModelValues = function () {
        if (this._formGroup) {
            this._formGroup.controls['name'].setValue(this['name']);
            this._formGroup.controls['tenant'].setValue(this['tenant']);
            this._formGroup.controls['namespace'].setValue(this['namespace']);
            this._formGroup.controls['generation-id'].setValue(this['generation-id']);
            this._formGroup.controls['resource-version'].setValue(this['resource-version']);
            this._formGroup.controls['uuid'].setValue(this['uuid']);
            this._formGroup.controls['labels'].setValue(this['labels']);
            this._formGroup.controls['creation-time'].setValue(this['creation-time']);
            this._formGroup.controls['mod-time'].setValue(this['mod-time']);
            this._formGroup.controls['self-link'].setValue(this['self-link']);
            this._formGroup.controls['label-selector'].setValue(this['label-selector']);
            this._formGroup.controls['field-selector'].setValue(this['field-selector']);
            this._formGroup.controls['field-change-selector'].setValue(this['field-change-selector']);
            this._formGroup.controls['from'].setValue(this['from']);
            this._formGroup.controls['max-results'].setValue(this['max-results']);
            this._formGroup.controls['sort-order'].setValue(this['sort-order']);
        }
    };
    ApiListWatchOptions.propInfo = {
        'name': {
            description: "Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
            required: false,
            type: 'string'
        },
        'tenant': {
            description: "Must be alpha-numerics. Length of string should be between 1 and 48.",
            required: false,
            type: 'string'
        },
        'namespace': {
            description: "Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.",
            required: false,
            type: 'string'
        },
        'generation-id': {
            required: false,
            type: 'string'
        },
        'resource-version': {
            required: false,
            type: 'string'
        },
        'uuid': {
            required: false,
            type: 'string'
        },
        'labels': {
            required: false,
            type: 'object'
        },
        'creation-time': {
            required: false,
            type: 'Date'
        },
        'mod-time': {
            required: false,
            type: 'Date'
        },
        'self-link': {
            required: false,
            type: 'string'
        },
        'label-selector': {
            description: "LabelSelector to select on labels in list or watch results.",
            required: false,
            type: 'string'
        },
        'field-selector': {
            description: "FieldSelector to select on field values in list or watch results.",
            required: false,
            type: 'string'
        },
        'field-change-selector': {
            description: "FieldChangeSelector specifies to generate a watch notification on change in field(s) specified.",
            required: false,
            type: 'Array<string>'
        },
        'from': {
            description: "From represents the start index number (1 based - first object starts from index 1), of the results list. The results returned would be in the range [from ... (from + (max-results - 1))]. If From = 0, the server will attempt to return all the results in the list without pagination.",
            required: false,
            type: 'number'
        },
        'max-results': {
            description: "MaxResults is the maximum number of results to be returned as part of the response, per page If MaxResults is more than the maximum number of results per page supported by the server, the server will return an err If MaxResults is 0, the server will return all the results without pagination.",
            required: false,
            type: 'number'
        },
        'sort-order': {
            enum: enums_1.ApiListWatchOptions_sort_order_uihint,
            default: 'none',
            description: "Order to sort List results in.",
            required: true,
            type: 'string'
        },
    };
    return ApiListWatchOptions;
}(base_model_1.BaseModel));
exports.ApiListWatchOptions = ApiListWatchOptions;
