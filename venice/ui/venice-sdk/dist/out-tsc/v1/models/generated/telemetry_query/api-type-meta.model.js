"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiTypeMeta = void 0;
/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
var forms_1 = require("@angular/forms");
var validators_1 = require("../../../utils/validators");
var base_model_1 = require("../basemodel/base-model");
var ApiTypeMeta = /** @class */ (function (_super) {
    __extends(ApiTypeMeta, _super);
    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    function ApiTypeMeta(values, setDefaults) {
        if (setDefaults === void 0) { setDefaults = true; }
        var _this = _super.call(this) || this;
        /** Field for holding arbitrary ui state */
        _this['_ui'] = {};
        /** Kind represents the type of the API object. */
        _this['kind'] = null;
        /** APIVersion defines the version of the API object. This can only be set by the server. */
        _this['api-version'] = null;
        _this._inputValue = values;
        _this.setValues(values, setDefaults);
        return _this;
    }
    ApiTypeMeta.prototype.getPropInfo = function (propName) {
        return ApiTypeMeta.propInfo[propName];
    };
    ApiTypeMeta.prototype.getPropInfoConfig = function () {
        return ApiTypeMeta.propInfo;
    };
    /**
     * Returns whether or not there is an enum property with a default value
    */
    ApiTypeMeta.hasDefaultValue = function (prop) {
        return (ApiTypeMeta.propInfo[prop] != null &&
            ApiTypeMeta.propInfo[prop].default != null);
    };
    /**
     * set the values for both the Model and the Form Group. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    ApiTypeMeta.prototype.setValues = function (values, fillDefaults) {
        if (fillDefaults === void 0) { fillDefaults = true; }
        if (values && values['_ui']) {
            this['_ui'] = values['_ui'];
        }
        if (values && values['kind'] != null) {
            this['kind'] = values['kind'];
        }
        else if (fillDefaults && ApiTypeMeta.hasDefaultValue('kind')) {
            this['kind'] = ApiTypeMeta.propInfo['kind'].default;
        }
        else {
            this['kind'] = null;
        }
        if (values && values['api-version'] != null) {
            this['api-version'] = values['api-version'];
        }
        else if (fillDefaults && ApiTypeMeta.hasDefaultValue('api-version')) {
            this['api-version'] = ApiTypeMeta.propInfo['api-version'].default;
        }
        else {
            this['api-version'] = null;
        }
        this.setFormGroupValuesToBeModelValues();
    };
    ApiTypeMeta.prototype.getFormGroup = function () {
        if (!this._formGroup) {
            this._formGroup = new forms_1.FormGroup({
                'kind': validators_1.CustomFormControl(new forms_1.FormControl(this['kind']), ApiTypeMeta.propInfo['kind']),
                'api-version': validators_1.CustomFormControl(new forms_1.FormControl(this['api-version']), ApiTypeMeta.propInfo['api-version']),
            });
        }
        return this._formGroup;
    };
    ApiTypeMeta.prototype.setModelToBeFormGroupValues = function () {
        this.setValues(this.$formGroup.value, false);
    };
    ApiTypeMeta.prototype.setFormGroupValuesToBeModelValues = function () {
        if (this._formGroup) {
            this._formGroup.controls['kind'].setValue(this['kind']);
            this._formGroup.controls['api-version'].setValue(this['api-version']);
        }
    };
    ApiTypeMeta.propInfo = {
        'kind': {
            description: "Kind represents the type of the API object.",
            required: false,
            type: 'string'
        },
        'api-version': {
            description: "APIVersion defines the version of the API object. This can only be set by the server.",
            required: false,
            type: 'string'
        },
    };
    return ApiTypeMeta;
}(base_model_1.BaseModel));
exports.ApiTypeMeta = ApiTypeMeta;
