"use strict";
/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AllEnums = exports.FieldsRequirement_operator_uihint = exports.ApiListWatchOptions_sort_order_uihint = exports.Telemetry_queryMetricsQuerySpec_sort_order = exports.Telemetry_queryMetricsQuerySpec_function = exports.FieldsRequirement_operator = exports.ApiListWatchOptions_sort_order = void 0;
// generate enum based on strings instead of numbers
// (see https://blog.rsuter.com/how-to-implement-an-enum-with-string-values-in-typescript/)
var ApiListWatchOptions_sort_order;
(function (ApiListWatchOptions_sort_order) {
    ApiListWatchOptions_sort_order["none"] = "none";
    ApiListWatchOptions_sort_order["by-name"] = "by-name";
    ApiListWatchOptions_sort_order["by-name-reverse"] = "by-name-reverse";
    ApiListWatchOptions_sort_order["by-version"] = "by-version";
    ApiListWatchOptions_sort_order["by-version-reverse"] = "by-version-reverse";
    ApiListWatchOptions_sort_order["by-creation-time"] = "by-creation-time";
    ApiListWatchOptions_sort_order["by-creation-time-reverse"] = "by-creation-time-reverse";
    ApiListWatchOptions_sort_order["by-mod-time"] = "by-mod-time";
    ApiListWatchOptions_sort_order["by-mod-time-reverse"] = "by-mod-time-reverse";
})(ApiListWatchOptions_sort_order = exports.ApiListWatchOptions_sort_order || (exports.ApiListWatchOptions_sort_order = {}));
var FieldsRequirement_operator;
(function (FieldsRequirement_operator) {
    FieldsRequirement_operator["equals"] = "equals";
    FieldsRequirement_operator["notequals"] = "notequals";
    FieldsRequirement_operator["in"] = "in";
    FieldsRequirement_operator["notin"] = "notin";
    FieldsRequirement_operator["gt"] = "gt";
    FieldsRequirement_operator["gte"] = "gte";
    FieldsRequirement_operator["lt"] = "lt";
    FieldsRequirement_operator["lte"] = "lte";
    FieldsRequirement_operator["infield"] = "infield";
})(FieldsRequirement_operator = exports.FieldsRequirement_operator || (exports.FieldsRequirement_operator = {}));
var Telemetry_queryMetricsQuerySpec_function;
(function (Telemetry_queryMetricsQuerySpec_function) {
    Telemetry_queryMetricsQuerySpec_function["none"] = "none";
    Telemetry_queryMetricsQuerySpec_function["mean"] = "mean";
    Telemetry_queryMetricsQuerySpec_function["max"] = "max";
    Telemetry_queryMetricsQuerySpec_function["median"] = "median";
    Telemetry_queryMetricsQuerySpec_function["derivative"] = "derivative";
    Telemetry_queryMetricsQuerySpec_function["difference"] = "difference";
    Telemetry_queryMetricsQuerySpec_function["last"] = "last";
    Telemetry_queryMetricsQuerySpec_function["top"] = "top";
    Telemetry_queryMetricsQuerySpec_function["bottom"] = "bottom";
    Telemetry_queryMetricsQuerySpec_function["min"] = "min";
})(Telemetry_queryMetricsQuerySpec_function = exports.Telemetry_queryMetricsQuerySpec_function || (exports.Telemetry_queryMetricsQuerySpec_function = {}));
var Telemetry_queryMetricsQuerySpec_sort_order;
(function (Telemetry_queryMetricsQuerySpec_sort_order) {
    Telemetry_queryMetricsQuerySpec_sort_order["ascending"] = "ascending";
    Telemetry_queryMetricsQuerySpec_sort_order["descending"] = "descending";
})(Telemetry_queryMetricsQuerySpec_sort_order = exports.Telemetry_queryMetricsQuerySpec_sort_order || (exports.Telemetry_queryMetricsQuerySpec_sort_order = {}));
var ApiListWatchOptions_sort_order_uihint;
(function (ApiListWatchOptions_sort_order_uihint) {
    ApiListWatchOptions_sort_order_uihint["by-creation-time"] = "By Creation Time";
    ApiListWatchOptions_sort_order_uihint["by-creation-time-reverse"] = "By Creation Time Reverse";
    ApiListWatchOptions_sort_order_uihint["by-mod-time"] = "By Modification Time";
    ApiListWatchOptions_sort_order_uihint["by-mod-time-reverse"] = "By Modification Time Reverse";
    ApiListWatchOptions_sort_order_uihint["by-name"] = "By Name";
    ApiListWatchOptions_sort_order_uihint["by-name-reverse"] = "By Name Reverse";
    ApiListWatchOptions_sort_order_uihint["by-version"] = "By Version";
    ApiListWatchOptions_sort_order_uihint["by-version-reverse"] = "By Version Reverse";
    ApiListWatchOptions_sort_order_uihint["none"] = "None";
})(ApiListWatchOptions_sort_order_uihint = exports.ApiListWatchOptions_sort_order_uihint || (exports.ApiListWatchOptions_sort_order_uihint = {}));
var FieldsRequirement_operator_uihint;
(function (FieldsRequirement_operator_uihint) {
    FieldsRequirement_operator_uihint["gt"] = "greater than";
    FieldsRequirement_operator_uihint["gte"] = "greater than or equals";
    FieldsRequirement_operator_uihint["lt"] = "less than";
    FieldsRequirement_operator_uihint["lte"] = "less than or equals";
    FieldsRequirement_operator_uihint["notequals"] = "not equals";
    FieldsRequirement_operator_uihint["notin"] = "not in";
})(FieldsRequirement_operator_uihint = exports.FieldsRequirement_operator_uihint || (exports.FieldsRequirement_operator_uihint = {}));
/**
 * bundle of all enums for databinding to options, radio-buttons etc.
 * usage in component:
 *   import { AllEnums, minValueValidator, maxValueValidator } from '../../models/webapi';
 *
 *   @Component({
 *       ...
 *   })
 *   export class xxxComponent implements OnInit {
 *       allEnums = AllEnums;
 *       ...
 *       ngOnInit() {
 *           this.allEnums = AllEnums.instance;
 *       }
 *   }
*/
var AllEnums = /** @class */ (function () {
    function AllEnums() {
        this.ApiListWatchOptions_sort_order = ApiListWatchOptions_sort_order;
        this.FieldsRequirement_operator = FieldsRequirement_operator;
        this.Telemetry_queryMetricsQuerySpec_function = Telemetry_queryMetricsQuerySpec_function;
        this.Telemetry_queryMetricsQuerySpec_sort_order = Telemetry_queryMetricsQuerySpec_sort_order;
        this.ApiListWatchOptions_sort_order_uihint = ApiListWatchOptions_sort_order_uihint;
        this.FieldsRequirement_operator_uihint = FieldsRequirement_operator_uihint;
        if (AllEnums._instance) {
            throw new Error("Error: Instantiation failed: Use AllEnums.instance instead of new");
        }
        AllEnums._instance = this;
    }
    Object.defineProperty(AllEnums, "instance", {
        get: function () {
            return AllEnums._instance;
        },
        enumerable: false,
        configurable: true
    });
    AllEnums._instance = new AllEnums();
    return AllEnums;
}());
exports.AllEnums = AllEnums;
