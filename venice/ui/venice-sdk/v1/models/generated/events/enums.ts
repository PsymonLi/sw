/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */

// generate enum based on strings instead of numbers
// (see https://blog.rsuter.com/how-to-implement-an-enum-with-string-values-in-typescript/)
export enum ApiListWatchOptions_sort_order {
    'None' = "None",
    'ByName' = "ByName",
    'ByNameReverse' = "ByNameReverse",
    'ByVersion' = "ByVersion",
    'ByVersionReverse' = "ByVersionReverse",
    'ByCreationTime' = "ByCreationTime",
    'ByCreationTimeReverse' = "ByCreationTimeReverse",
    'ByModTime' = "ByModTime",
    'ByModTimeReverse' = "ByModTimeReverse",
}

export enum EventsEvent_severity {
    'INFO' = "INFO",
    'WARN' = "WARN",
    'CRITICAL' = "CRITICAL",
    'DEBUG' = "DEBUG",
}

export enum EventsEvent_type {
    'AUDITING_FAILED' = "AUDITING_FAILED",
    'AUTO_GENERATED_TLS_CERT' = "AUTO_GENERATED_TLS_CERT",
    'ELECTION_CANCELLED' = "ELECTION_CANCELLED",
    'ELECTION_NOTIFICATION_FAILED' = "ELECTION_NOTIFICATION_FAILED",
    'ELECTION_STARTED' = "ELECTION_STARTED",
    'ELECTION_STOPPED' = "ELECTION_STOPPED",
    'HOST_SMART_NIC_SPEC_CONFLICT' = "HOST_SMART_NIC_SPEC_CONFLICT",
    'LEADER_CHANGED' = "LEADER_CHANGED",
    'LEADER_ELECTED' = "LEADER_ELECTED",
    'LEADER_LOST' = "LEADER_LOST",
    'LOGIN_FAILED' = "LOGIN_FAILED",
    'MODULE_CREATION_FAILED' = "MODULE_CREATION_FAILED",
    'NIC_ADMITTED' = "NIC_ADMITTED",
    'NIC_HEALTHY' = "NIC_HEALTHY",
    'NIC_HEALTH_UNKNOWN' = "NIC_HEALTH_UNKNOWN",
    'NIC_REJECTED' = "NIC_REJECTED",
    'NIC_UNHEALTHY' = "NIC_UNHEALTHY",
    'NODE_DISJOINED' = "NODE_DISJOINED",
    'NODE_JOINED' = "NODE_JOINED",
    'LINK_DOWN' = "LINK_DOWN",
    'LINK_UP' = "LINK_UP",
    'ROLLOUT_FAILED' = "ROLLOUT_FAILED",
    'ROLLOUT_STARTED' = "ROLLOUT_STARTED",
    'ROLLOUT_SUCCESS' = "ROLLOUT_SUCCESS",
    'ROLLOUT_SUSPENDED' = "ROLLOUT_SUSPENDED",
    'NAPLES_SERVICE_STOPPED' = "NAPLES_SERVICE_STOPPED",
    'SERVICE_PENDING' = "SERVICE_PENDING",
    'SERVICE_RUNNING' = "SERVICE_RUNNING",
    'SERVICE_STARTED' = "SERVICE_STARTED",
    'SERVICE_STOPPED' = "SERVICE_STOPPED",
    'SERVICE_UNRESPONSIVE' = "SERVICE_UNRESPONSIVE",
    'SYSTEM_COLDBOOT' = "SYSTEM_COLDBOOT",
}

export enum EventsEvent_category {
    'Cluster' = "Cluster",
    'Network' = "Network",
    'System' = "System",
    'Rollout' = "Rollout",
}

export enum EventsEventAttributes_severity {
    'INFO' = "INFO",
    'WARN' = "WARN",
    'CRITICAL' = "CRITICAL",
    'DEBUG' = "DEBUG",
}

export enum EventsEventAttributes_category {
    'Cluster' = "Cluster",
    'Network' = "Network",
    'System' = "System",
    'Rollout' = "Rollout",
}


export enum ApiListWatchOptions_sort_order_uihint {
    'ByCreationTime' = "By Creation Time",
    'ByCreationTimeReverse' = "By Creation Time Reverse",
    'ByModTime' = "By Modification Time",
    'ByModTimeReverse' = "By Modification Time Reverse",
    'ByName' = "By Name",
    'ByNameReverse' = "By Name Reverse",
    'ByVersion' = "By Version",
    'ByVersionReverse' = "By Version Reverse",
    'None' = "None",
}




/**
 * bundle of all enums for databinding to options, radio-buttons etc.
 * usage in component:
 *   import { AllEnums, minValueValidator, maxValueValidator } from '../../models/webapi';
 *
 *   @Component({
 *       ...
 *   })
 *   export class xxxComponent implements OnInit {
 *       allEnums = AllEnums;
 *       ...
 *       ngOnInit() {
 *           this.allEnums = AllEnums.instance;
 *       }
 *   }
*/
export class AllEnums {
    private static _instance: AllEnums = new AllEnums();
    constructor() {
        if (AllEnums._instance) {
            throw new Error("Error: Instantiation failed: Use AllEnums.instance instead of new");
        }
        AllEnums._instance = this;
    }
    static get instance(): AllEnums {
        return AllEnums._instance;
    }

    ApiListWatchOptions_sort_order = ApiListWatchOptions_sort_order;
    EventsEvent_severity = EventsEvent_severity;
    EventsEvent_type = EventsEvent_type;
    EventsEvent_category = EventsEvent_category;
    EventsEventAttributes_severity = EventsEventAttributes_severity;
    EventsEventAttributes_category = EventsEventAttributes_category;

    ApiListWatchOptions_sort_order_uihint = ApiListWatchOptions_sort_order_uihint;
}
