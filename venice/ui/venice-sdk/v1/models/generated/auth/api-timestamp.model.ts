/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel, EnumDef } from './base-model';


export interface IApiTimestamp {
    'seconds'?: string;
    'nanos'?: number;
}


export class ApiTimestamp extends BaseModel implements IApiTimestamp {
    'seconds': string = null;
    'nanos': number = null;
    public static enumProperties: { [key: string] : EnumDef } = {
    }

    /**
     * Returns whether or not there is an enum property with a default value
    */
    public static hasDefaultEnumValue(prop) {
        return (ApiTimestamp.enumProperties[prop] != null &&
                        ApiTimestamp.enumProperties[prop].default != null &&
                        ApiTimestamp.enumProperties[prop].default != '');
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        this.setValues(values);
    }

    /**
     * set the values. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any): void {
        if (values && values['seconds'] != null) {
            this['seconds'] = values['seconds'];
        }
        if (values && values['nanos'] != null) {
            this['nanos'] = values['nanos'];
        }
    }




    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'seconds': new FormControl(this['seconds']),
                'nanos': new FormControl(this['nanos']),
            });
        }
        return this._formGroup;
    }

    setFormGroupValues() {
        if (this._formGroup) {
            this._formGroup.controls['seconds'].setValue(this['seconds']);
            this._formGroup.controls['nanos'].setValue(this['nanos']);
        }
    }
}

