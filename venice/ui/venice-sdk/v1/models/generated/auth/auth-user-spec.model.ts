/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel } from './base-model';

import { AuthUserSpec_type } from './enums';

export interface IAuthUserSpec {
    'fullname'?: string;
    'email'?: string;
    'password'?: string;
    'type'?: AuthUserSpec_type;
}


export class AuthUserSpec extends BaseModel implements IAuthUserSpec {
    'fullname': string;
    'email': string;
    'password': string;
    'type': AuthUserSpec_type;
    public static enumProperties = {
        'type': AuthUserSpec_type,
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any): void {
        if (values) {
            this['fullname'] = values['fullname'];
            this['email'] = values['email'];
            this['password'] = values['password'];
            this['type'] = values['type'];
        }
    }

    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'fullname': new FormControl(this['fullname']),
                'email': new FormControl(this['email']),
                'password': new FormControl(this['password']),
                'type': new FormControl(this['type'], [enumValidator(AuthUserSpec_type), ]),
            });
        }
        return this._formGroup;
    }

    setFormGroupValues() {
        if (this._formGroup) {
            this._formGroup.controls['fullname'].setValue(this['fullname']);
            this._formGroup.controls['email'].setValue(this['email']);
            this._formGroup.controls['password'].setValue(this['password']);
            this._formGroup.controls['type'].setValue(this['type']);
        }
    }
}

