/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel } from './base-model';

import { AuthLdap } from './auth-ldap.model';
import { AuthLocal } from './auth-local.model';
import { AuthRadius } from './auth-radius.model';

export interface IAuthAuthenticators {
    'ldap'?: AuthLdap;
    'local'?: AuthLocal;
    'radius'?: AuthRadius;
    'authenticator-order'?: Array<string>;
}


export class AuthAuthenticators extends BaseModel implements IAuthAuthenticators {
    'ldap': AuthLdap;
    'local': AuthLocal;
    'radius': AuthRadius;
    'authenticator-order': Array<string>;
    public static enumProperties = {
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        this['ldap'] = new AuthLdap();
        this['local'] = new AuthLocal();
        this['radius'] = new AuthRadius();
        this['authenticator-order'] = new Array<string>();
        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any): void {
        if (values) {
            this['ldap'].setValues(values['ldap']);
            this['local'].setValues(values['local']);
            this['radius'].setValues(values['radius']);
            this.fillModelArray<string>(this, 'authenticator-order', values['authenticator-order']);
        }
    }

    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'ldap': this['ldap'].$formGroup,
                'local': this['local'].$formGroup,
                'radius': this['radius'].$formGroup,
                'authenticator-order': new FormArray([]),
            });
            // generate FormArray control elements
            this.fillFormArray<string>('authenticator-order', this['authenticator-order']);
        }
        return this._formGroup;
    }

    setFormGroupValues() {
        if (this._formGroup) {
            this['ldap'].setFormGroupValues();
            this['local'].setFormGroupValues();
            this['radius'].setFormGroupValues();
            this.fillModelArray<string>(this, 'authenticator-order', this['authenticator-order']);
        }
    }
}

