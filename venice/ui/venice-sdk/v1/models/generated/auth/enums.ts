/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */

// generate enum based on strings instead of numbers
// (see https://blog.rsuter.com/how-to-implement-an-enum-with-string-values-in-typescript/)
export enum ApiListWatchOptions_sort_order {
    'none' = "none",
    'by-name' = "by-name",
    'by-name-reverse' = "by-name-reverse",
    'by-version' = "by-version",
    'by-version-reverse' = "by-version-reverse",
    'by-creation-time' = "by-creation-time",
    'by-creation-time-reverse' = "by-creation-time-reverse",
    'by-mod-time' = "by-mod-time",
    'by-mod-time-reverse' = "by-mod-time-reverse",
}

export enum AuthAuthenticators_authenticator_order {
    'local' = "local",
    'ldap' = "ldap",
    'radius' = "radius",
}

export enum AuthLdapServerStatus_result {
    'connect-success' = "connect-success",
    'connect-failure' = "connect-failure",
    'bind-success' = "bind-success",
    'bind-failure' = "bind-failure",
}

export enum AuthOperation_action {
    'all-actions' = "all-actions",
    'create' = "create",
    'read' = "read",
    'update' = "update",
    'delete' = "delete",
    'commit' = "commit",
    'clear' = "clear",
}

export enum AuthPermission_actions {
    'all-actions' = "all-actions",
    'create' = "create",
    'read' = "read",
    'update' = "update",
    'delete' = "delete",
    'commit' = "commit",
    'clear' = "clear",
}

export enum AuthRadiusServer_auth_method {
    'pap' = "pap",
    'peap-mschapv2' = "peap-mschapv2",
    'eap-ttls-pap' = "eap-ttls-pap",
}

export enum AuthRadiusServerStatus_result {
    'connect-success' = "connect-success",
    'connect-failure' = "connect-failure",
}

export enum AuthUserSpec_type {
    'local' = "local",
    'external' = "external",
}

export enum AuthUserStatus_authenticators {
    'local' = "local",
    'ldap' = "ldap",
    'radius' = "radius",
}


export enum ApiListWatchOptions_sort_order_uihint {
    'by-creation-time' = "By Creation Time",
    'by-creation-time-reverse' = "By Creation Time Reverse",
    'by-mod-time' = "By Modification Time",
    'by-mod-time-reverse' = "By Modification Time Reverse",
    'by-name' = "By Name",
    'by-name-reverse' = "By Name Reverse",
    'by-version' = "By Version",
    'by-version-reverse' = "By Version Reverse",
    'none' = "None",
}

export enum AuthAuthenticators_authenticator_order_uihint {
    'local' = "Local",
}

export enum AuthOperation_action_uihint {
    'all-actions' = "All Actions",
    'clear' = "Clear Config",
    'commit' = "Commit Config",
    'create' = "Create",
    'delete' = "Delete",
    'read' = "Read",
    'update' = "Update",
}

export enum AuthPermission_actions_uihint {
    'all-actions' = "All Actions",
    'clear' = "Clear Config",
    'commit' = "Commit Config",
    'create' = "Create",
    'delete' = "Delete",
    'read' = "Read",
    'update' = "Update",
}

export enum AuthUserSpec_type_uihint {
    'external' = "External",
    'local' = "Local",
}

export enum AuthUserStatus_authenticators_uihint {
    'local' = "Local",
}




/**
 * bundle of all enums for databinding to options, radio-buttons etc.
 * usage in component:
 *   import { AllEnums, minValueValidator, maxValueValidator } from '../../models/webapi';
 *
 *   @Component({
 *       ...
 *   })
 *   export class xxxComponent implements OnInit {
 *       allEnums = AllEnums;
 *       ...
 *       ngOnInit() {
 *           this.allEnums = AllEnums.instance;
 *       }
 *   }
*/
export class AllEnums {
    private static _instance: AllEnums = new AllEnums();
    constructor() {
        if (AllEnums._instance) {
            throw new Error("Error: Instantiation failed: Use AllEnums.instance instead of new");
        }
        AllEnums._instance = this;
    }
    static get instance(): AllEnums {
        return AllEnums._instance;
    }

    ApiListWatchOptions_sort_order = ApiListWatchOptions_sort_order;
    AuthAuthenticators_authenticator_order = AuthAuthenticators_authenticator_order;
    AuthLdapServerStatus_result = AuthLdapServerStatus_result;
    AuthOperation_action = AuthOperation_action;
    AuthPermission_actions = AuthPermission_actions;
    AuthRadiusServer_auth_method = AuthRadiusServer_auth_method;
    AuthRadiusServerStatus_result = AuthRadiusServerStatus_result;
    AuthUserSpec_type = AuthUserSpec_type;
    AuthUserStatus_authenticators = AuthUserStatus_authenticators;

    ApiListWatchOptions_sort_order_uihint = ApiListWatchOptions_sort_order_uihint;
    AuthAuthenticators_authenticator_order_uihint = AuthAuthenticators_authenticator_order_uihint;
    AuthOperation_action_uihint = AuthOperation_action_uihint;
    AuthPermission_actions_uihint = AuthPermission_actions_uihint;
    AuthUserSpec_type_uihint = AuthUserSpec_type_uihint;
    AuthUserStatus_authenticators_uihint = AuthUserStatus_authenticators_uihint;
}
