/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */

// generate enum based on strings instead of numbers
// (see https://blog.rsuter.com/how-to-implement-an-enum-with-string-values-in-typescript/)
export enum AuditEvent_stage {
    'RequestAuthorization' = "RequestAuthorization",
    'RequestProcessing' = "RequestProcessing",
    'RequestCompleted' = "RequestCompleted",
}

export enum AuditEvent_level {
    'Basic' = "Basic",
    'Request' = "Request",
    'Response' = "Response",
    'RequestResponse' = "RequestResponse",
}

export enum AuditEvent_outcome {
    'Unknown' = "Unknown",
    'Success' = "Success",
    'Failure' = "Failure",
}

export enum AuditEventAttributes_stage {
    'RequestAuthorization' = "RequestAuthorization",
    'RequestProcessing' = "RequestProcessing",
    'RequestCompleted' = "RequestCompleted",
}

export enum AuditEventAttributes_level {
    'Basic' = "Basic",
    'Request' = "Request",
    'Response' = "Response",
    'RequestResponse' = "RequestResponse",
}

export enum AuditEventAttributes_outcome {
    'Unknown' = "Unknown",
    'Success' = "Success",
    'Failure' = "Failure",
}





/**
 * bundle of all enums for databinding to options, radio-buttons etc.
 * usage in component:
 *   import { AllEnums, minValueValidator, maxValueValidator } from '../../models/webapi';
 *
 *   @Component({
 *       ...
 *   })
 *   export class xxxComponent implements OnInit {
 *       allEnums = AllEnums;
 *       ...
 *       ngOnInit() {
 *           this.allEnums = AllEnums.instance;
 *       }
 *   }
*/
export class AllEnums {
    private static _instance: AllEnums = new AllEnums();
    constructor() {
        if (AllEnums._instance) {
            throw new Error("Error: Instantiation failed: Use AllEnums.instance instead of new");
        }
        AllEnums._instance = this;
    }
    static get instance(): AllEnums {
        return AllEnums._instance;
    }

    AuditEvent_stage = AuditEvent_stage;
    AuditEvent_level = AuditEvent_level;
    AuditEvent_outcome = AuditEvent_outcome;
    AuditEventAttributes_stage = AuditEventAttributes_stage;
    AuditEventAttributes_level = AuditEventAttributes_level;
    AuditEventAttributes_outcome = AuditEventAttributes_outcome;

}
