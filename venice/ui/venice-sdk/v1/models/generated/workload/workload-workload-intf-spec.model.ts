/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, minLengthValidator, maxLengthValidator, required, enumValidator, patternValidator, CustomFormControl, CustomFormGroup } from '../../../utils/validators';
import { BaseModel, PropInfoItem } from '../basemodel/base-model';


export interface IWorkloadWorkloadIntfSpec {
    'mac-address'?: string;
    'micro-seg-vlan': number;
    'external-vlan': number;
    'ip-addresses'?: Array<string>;
    'network'?: string;
    'dsc-interfaces'?: Array<string>;
    '_ui'?: any;
}


export class WorkloadWorkloadIntfSpec extends BaseModel implements IWorkloadWorkloadIntfSpec {
    /** Field for holding arbitrary ui state */
    '_ui': any = {};
    /** MACAddress contains the MAC address of the interface as seen by the workload. Should be a valid MAC address. */
    'mac-address': string = null;
    /** Micro-segmentation vlan assigned for this interface. Value should be between 1 and 4095. */
    'micro-seg-vlan': number = null;
    /** External vlan assigned for this interface. Value should be between 0 and 4095. */
    'external-vlan': number = null;
    /** List of all IP addresses configured on a Workload Interface. */
    'ip-addresses': Array<string> = null;
    /** Network this interface will belong to. */
    'network': string = null;
    /** List of all DSC interfaces that can be used. The DSC interface is identified using the MAC address assigned to the DSC port. If not specified, DSCs from workload's host object are used. */
    'dsc-interfaces': Array<string> = null;
    public static propInfo: { [prop in keyof IWorkloadWorkloadIntfSpec]: PropInfoItem } = {
        'mac-address': {
            description:  `MACAddress contains the MAC address of the interface as seen by the workload. Should be a valid MAC address.`,
            hint:  'aabb.ccdd.0000, aabb.ccdd.0000, aabb.ccdd.0000',
            required: false,
            type: 'string'
        },
        'micro-seg-vlan': {
            description:  `Micro-segmentation vlan assigned for this interface. Value should be between 1 and 4095.`,
            required: true,
            type: 'number'
        },
        'external-vlan': {
            description:  `External vlan assigned for this interface. Value should be between 0 and 4095.`,
            required: true,
            type: 'number'
        },
        'ip-addresses': {
            description:  `List of all IP addresses configured on a Workload Interface.`,
            required: false,
            type: 'Array<string>'
        },
        'network': {
            description:  `Network this interface will belong to.`,
            required: false,
            type: 'string'
        },
        'dsc-interfaces': {
            description:  `List of all DSC interfaces that can be used. The DSC interface is identified using the MAC address assigned to the DSC port. If not specified, DSCs from workload's host object are used.`,
            required: false,
            type: 'Array<string>'
        },
    }

    public getPropInfo(propName: string): PropInfoItem {
        return WorkloadWorkloadIntfSpec.propInfo[propName];
    }

    public getPropInfoConfig(): { [key:string]:PropInfoItem } {
        return WorkloadWorkloadIntfSpec.propInfo;
    }

    /**
     * Returns whether or not there is an enum property with a default value
    */
    public static hasDefaultValue(prop) {
        return (WorkloadWorkloadIntfSpec.propInfo[prop] != null &&
                        WorkloadWorkloadIntfSpec.propInfo[prop].default != null);
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any, setDefaults:boolean = true) {
        super();
        this['ip-addresses'] = new Array<string>();
        this['dsc-interfaces'] = new Array<string>();
        this._inputValue = values;
        this.setValues(values, setDefaults);
    }

    /**
     * set the values for both the Model and the Form Group. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any, fillDefaults = true): void {
        if (values && values['_ui']) {
            this['_ui'] = values['_ui']
        }
        if (values && values['mac-address'] != null) {
            this['mac-address'] = values['mac-address'];
        } else if (fillDefaults && WorkloadWorkloadIntfSpec.hasDefaultValue('mac-address')) {
            this['mac-address'] = WorkloadWorkloadIntfSpec.propInfo['mac-address'].default;
        } else {
            this['mac-address'] = null
        }
        if (values && values['micro-seg-vlan'] != null) {
            this['micro-seg-vlan'] = values['micro-seg-vlan'];
        } else if (fillDefaults && WorkloadWorkloadIntfSpec.hasDefaultValue('micro-seg-vlan')) {
            this['micro-seg-vlan'] = WorkloadWorkloadIntfSpec.propInfo['micro-seg-vlan'].default;
        } else {
            this['micro-seg-vlan'] = null
        }
        if (values && values['external-vlan'] != null) {
            this['external-vlan'] = values['external-vlan'];
        } else if (fillDefaults && WorkloadWorkloadIntfSpec.hasDefaultValue('external-vlan')) {
            this['external-vlan'] = WorkloadWorkloadIntfSpec.propInfo['external-vlan'].default;
        } else {
            this['external-vlan'] = null
        }
        if (values && values['ip-addresses'] != null) {
            this['ip-addresses'] = values['ip-addresses'];
        } else if (fillDefaults && WorkloadWorkloadIntfSpec.hasDefaultValue('ip-addresses')) {
            this['ip-addresses'] = [ WorkloadWorkloadIntfSpec.propInfo['ip-addresses'].default];
        } else {
            this['ip-addresses'] = [];
        }
        if (values && values['network'] != null) {
            this['network'] = values['network'];
        } else if (fillDefaults && WorkloadWorkloadIntfSpec.hasDefaultValue('network')) {
            this['network'] = WorkloadWorkloadIntfSpec.propInfo['network'].default;
        } else {
            this['network'] = null
        }
        if (values && values['dsc-interfaces'] != null) {
            this['dsc-interfaces'] = values['dsc-interfaces'];
        } else if (fillDefaults && WorkloadWorkloadIntfSpec.hasDefaultValue('dsc-interfaces')) {
            this['dsc-interfaces'] = [ WorkloadWorkloadIntfSpec.propInfo['dsc-interfaces'].default];
        } else {
            this['dsc-interfaces'] = [];
        }
        this.setFormGroupValuesToBeModelValues();
    }


    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'mac-address': CustomFormControl(new FormControl(this['mac-address']), WorkloadWorkloadIntfSpec.propInfo['mac-address']),
                'micro-seg-vlan': CustomFormControl(new FormControl(this['micro-seg-vlan'], [required, minValueValidator(1), maxValueValidator(4095), ]), WorkloadWorkloadIntfSpec.propInfo['micro-seg-vlan']),
                'external-vlan': CustomFormControl(new FormControl(this['external-vlan'], [required, minValueValidator(0), maxValueValidator(4095), ]), WorkloadWorkloadIntfSpec.propInfo['external-vlan']),
                'ip-addresses': CustomFormControl(new FormControl(this['ip-addresses']), WorkloadWorkloadIntfSpec.propInfo['ip-addresses']),
                'network': CustomFormControl(new FormControl(this['network']), WorkloadWorkloadIntfSpec.propInfo['network']),
                'dsc-interfaces': CustomFormControl(new FormControl(this['dsc-interfaces']), WorkloadWorkloadIntfSpec.propInfo['dsc-interfaces']),
            });
        }
        return this._formGroup;
    }

    setModelToBeFormGroupValues() {
        this.setValues(this.$formGroup.value, false);
    }

    setFormGroupValuesToBeModelValues() {
        if (this._formGroup) {
            this._formGroup.controls['mac-address'].setValue(this['mac-address']);
            this._formGroup.controls['micro-seg-vlan'].setValue(this['micro-seg-vlan']);
            this._formGroup.controls['external-vlan'].setValue(this['external-vlan']);
            this._formGroup.controls['ip-addresses'].setValue(this['ip-addresses']);
            this._formGroup.controls['network'].setValue(this['network']);
            this._formGroup.controls['dsc-interfaces'].setValue(this['dsc-interfaces']);
        }
    }
}

