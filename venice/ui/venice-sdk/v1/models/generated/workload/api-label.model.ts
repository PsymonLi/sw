/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, minLengthValidator, maxLengthValidator, required, enumValidator, patternValidator, CustomFormControl, CustomFormGroup } from '../../../utils/validators';
import { BaseModel, PropInfoItem } from '../basemodel/base-model';


export interface IApiLabel {
    'kind'?: string;
    'api-version'?: string;
    'name'?: string;
    'tenant'?: string;
    'namespace'?: string;
    'generation-id'?: string;
    'resource-version'?: string;
    'uuid'?: string;
    'labels'?: object;
    'creation-time'?: Date;
    'mod-time'?: Date;
    'self-link'?: string;
    '_ui'?: any;
}


export class ApiLabel extends BaseModel implements IApiLabel {
    /** Field for holding arbitrary ui state */
    '_ui': any = {};
    'kind': string = null;
    'api-version': string = null;
    /** Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64. */
    'name': string = null;
    /** Must be alpha-numerics. Length of string should be between 1 and 48. */
    'tenant': string = null;
    /** Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64. */
    'namespace': string = null;
    'generation-id': string = null;
    'resource-version': string = null;
    'uuid': string = null;
    'labels': object = null;
    'creation-time': Date = null;
    'mod-time': Date = null;
    'self-link': string = null;
    public static propInfo: { [prop in keyof IApiLabel]: PropInfoItem } = {
        'kind': {
            required: false,
            type: 'string'
        },
        'api-version': {
            required: false,
            type: 'string'
        },
        'name': {
            description:  `Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.`,
            required: false,
            type: 'string'
        },
        'tenant': {
            description:  `Must be alpha-numerics. Length of string should be between 1 and 48.`,
            required: false,
            type: 'string'
        },
        'namespace': {
            description:  `Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.`,
            required: false,
            type: 'string'
        },
        'generation-id': {
            required: false,
            type: 'string'
        },
        'resource-version': {
            required: false,
            type: 'string'
        },
        'uuid': {
            required: false,
            type: 'string'
        },
        'labels': {
            required: false,
            type: 'object'
        },
        'creation-time': {
            required: false,
            type: 'Date'
        },
        'mod-time': {
            required: false,
            type: 'Date'
        },
        'self-link': {
            required: false,
            type: 'string'
        },
    }

    public getPropInfo(propName: string): PropInfoItem {
        return ApiLabel.propInfo[propName];
    }

    public getPropInfoConfig(): { [key:string]:PropInfoItem } {
        return ApiLabel.propInfo;
    }

    /**
     * Returns whether or not there is an enum property with a default value
    */
    public static hasDefaultValue(prop) {
        return (ApiLabel.propInfo[prop] != null &&
                        ApiLabel.propInfo[prop].default != null);
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any, setDefaults:boolean = true) {
        super();
        this._inputValue = values;
        this.setValues(values, setDefaults);
    }

    /**
     * set the values for both the Model and the Form Group. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any, fillDefaults = true): void {
        if (values && values['_ui']) {
            this['_ui'] = values['_ui']
        }
        if (values && values['kind'] != null) {
            this['kind'] = values['kind'];
        } else if (fillDefaults && ApiLabel.hasDefaultValue('kind')) {
            this['kind'] = ApiLabel.propInfo['kind'].default;
        } else {
            this['kind'] = null
        }
        if (values && values['api-version'] != null) {
            this['api-version'] = values['api-version'];
        } else if (fillDefaults && ApiLabel.hasDefaultValue('api-version')) {
            this['api-version'] = ApiLabel.propInfo['api-version'].default;
        } else {
            this['api-version'] = null
        }
        if (values && values['name'] != null) {
            this['name'] = values['name'];
        } else if (fillDefaults && ApiLabel.hasDefaultValue('name')) {
            this['name'] = ApiLabel.propInfo['name'].default;
        } else {
            this['name'] = null
        }
        if (values && values['tenant'] != null) {
            this['tenant'] = values['tenant'];
        } else if (fillDefaults && ApiLabel.hasDefaultValue('tenant')) {
            this['tenant'] = ApiLabel.propInfo['tenant'].default;
        } else {
            this['tenant'] = null
        }
        if (values && values['namespace'] != null) {
            this['namespace'] = values['namespace'];
        } else if (fillDefaults && ApiLabel.hasDefaultValue('namespace')) {
            this['namespace'] = ApiLabel.propInfo['namespace'].default;
        } else {
            this['namespace'] = null
        }
        if (values && values['generation-id'] != null) {
            this['generation-id'] = values['generation-id'];
        } else if (fillDefaults && ApiLabel.hasDefaultValue('generation-id')) {
            this['generation-id'] = ApiLabel.propInfo['generation-id'].default;
        } else {
            this['generation-id'] = null
        }
        if (values && values['resource-version'] != null) {
            this['resource-version'] = values['resource-version'];
        } else if (fillDefaults && ApiLabel.hasDefaultValue('resource-version')) {
            this['resource-version'] = ApiLabel.propInfo['resource-version'].default;
        } else {
            this['resource-version'] = null
        }
        if (values && values['uuid'] != null) {
            this['uuid'] = values['uuid'];
        } else if (fillDefaults && ApiLabel.hasDefaultValue('uuid')) {
            this['uuid'] = ApiLabel.propInfo['uuid'].default;
        } else {
            this['uuid'] = null
        }
        if (values && values['labels'] != null) {
            this['labels'] = values['labels'];
        } else if (fillDefaults && ApiLabel.hasDefaultValue('labels')) {
            this['labels'] = ApiLabel.propInfo['labels'].default;
        } else {
            this['labels'] = null
        }
        if (values && values['creation-time'] != null) {
            this['creation-time'] = values['creation-time'];
        } else if (fillDefaults && ApiLabel.hasDefaultValue('creation-time')) {
            this['creation-time'] = ApiLabel.propInfo['creation-time'].default;
        } else {
            this['creation-time'] = null
        }
        if (values && values['mod-time'] != null) {
            this['mod-time'] = values['mod-time'];
        } else if (fillDefaults && ApiLabel.hasDefaultValue('mod-time')) {
            this['mod-time'] = ApiLabel.propInfo['mod-time'].default;
        } else {
            this['mod-time'] = null
        }
        if (values && values['self-link'] != null) {
            this['self-link'] = values['self-link'];
        } else if (fillDefaults && ApiLabel.hasDefaultValue('self-link')) {
            this['self-link'] = ApiLabel.propInfo['self-link'].default;
        } else {
            this['self-link'] = null
        }
        this.setFormGroupValuesToBeModelValues();
    }


    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'kind': CustomFormControl(new FormControl(this['kind']), ApiLabel.propInfo['kind']),
                'api-version': CustomFormControl(new FormControl(this['api-version']), ApiLabel.propInfo['api-version']),
                'name': CustomFormControl(new FormControl(this['name'], [minLengthValidator(2), maxLengthValidator(64), patternValidator('^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$', 'Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.'), ]), ApiLabel.propInfo['name']),
                'tenant': CustomFormControl(new FormControl(this['tenant'], [minLengthValidator(1), maxLengthValidator(48), patternValidator('^[a-zA-Z0-9]+$', 'Must be alpha-numerics. Length of string should be between 1 and 48.'), ]), ApiLabel.propInfo['tenant']),
                'namespace': CustomFormControl(new FormControl(this['namespace'], [minLengthValidator(2), maxLengthValidator(64), patternValidator('^[a-zA-Z0-9][\\w\\-\\.]*[a-zA-Z0-9]$', 'Must start and end with alpha numeric and can have alphanumeric, -, _, . Length of string should be between 2 and 64.'), ]), ApiLabel.propInfo['namespace']),
                'generation-id': CustomFormControl(new FormControl(this['generation-id']), ApiLabel.propInfo['generation-id']),
                'resource-version': CustomFormControl(new FormControl(this['resource-version']), ApiLabel.propInfo['resource-version']),
                'uuid': CustomFormControl(new FormControl(this['uuid']), ApiLabel.propInfo['uuid']),
                'labels': CustomFormControl(new FormControl(this['labels']), ApiLabel.propInfo['labels']),
                'creation-time': CustomFormControl(new FormControl(this['creation-time']), ApiLabel.propInfo['creation-time']),
                'mod-time': CustomFormControl(new FormControl(this['mod-time']), ApiLabel.propInfo['mod-time']),
                'self-link': CustomFormControl(new FormControl(this['self-link']), ApiLabel.propInfo['self-link']),
            });
        }
        return this._formGroup;
    }

    setModelToBeFormGroupValues() {
        this.setValues(this.$formGroup.value, false);
    }

    setFormGroupValuesToBeModelValues() {
        if (this._formGroup) {
            this._formGroup.controls['kind'].setValue(this['kind']);
            this._formGroup.controls['api-version'].setValue(this['api-version']);
            this._formGroup.controls['name'].setValue(this['name']);
            this._formGroup.controls['tenant'].setValue(this['tenant']);
            this._formGroup.controls['namespace'].setValue(this['namespace']);
            this._formGroup.controls['generation-id'].setValue(this['generation-id']);
            this._formGroup.controls['resource-version'].setValue(this['resource-version']);
            this._formGroup.controls['uuid'].setValue(this['uuid']);
            this._formGroup.controls['labels'].setValue(this['labels']);
            this._formGroup.controls['creation-time'].setValue(this['creation-time']);
            this._formGroup.controls['mod-time'].setValue(this['mod-time']);
            this._formGroup.controls['self-link'].setValue(this['self-link']);
        }
    }
}

