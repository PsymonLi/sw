/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel } from './base-model';

import { ClusterNodeCondition_type } from './enums';
import { ClusterNodeCondition_status } from './enums';

export interface IClusterNodeCondition {
    'type'?: ClusterNodeCondition_type;
    'status'?: ClusterNodeCondition_status;
    'last-transition-time'?: string;
    'reason'?: string;
    'message'?: string;
}


export class ClusterNodeCondition extends BaseModel implements IClusterNodeCondition {
    'type': ClusterNodeCondition_type;
    'status': ClusterNodeCondition_status;
    'last-transition-time': string;
    'reason': string;
    /** A detailed message indicating details about the transition. */
    'message': string;
    public static enumProperties = {
        'type': ClusterNodeCondition_type,
        'status': ClusterNodeCondition_status,
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any): void {
        if (values) {
            this['type'] = values['type'];
            this['status'] = values['status'];
            this['last-transition-time'] = values['last-transition-time'];
            this['reason'] = values['reason'];
            this['message'] = values['message'];
        }
    }

    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'type': new FormControl(this['type'], [enumValidator(ClusterNodeCondition_type), ]),
                'status': new FormControl(this['status'], [enumValidator(ClusterNodeCondition_status), ]),
                'last-transition-time': new FormControl(this['last-transition-time']),
                'reason': new FormControl(this['reason']),
                'message': new FormControl(this['message']),
            });
        }
        return this._formGroup;
    }

    setFormGroupValues() {
        if (this._formGroup) {
            this._formGroup.controls['type'].setValue(this['type']);
            this._formGroup.controls['status'].setValue(this['status']);
            this._formGroup.controls['last-transition-time'].setValue(this['last-transition-time']);
            this._formGroup.controls['reason'].setValue(this['reason']);
            this._formGroup.controls['message'].setValue(this['message']);
        }
    }
}

