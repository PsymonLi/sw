/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel, PropInfoItem } from './base-model';

import { ClusterNetworkInterfaceSpec_admin_status,  } from './enums';

export interface IClusterNetworkInterfaceSpec {
    'admin-status'?: ClusterNetworkInterfaceSpec_admin_status;
    'link-speed'?: string;
}


export class ClusterNetworkInterfaceSpec extends BaseModel implements IClusterNetworkInterfaceSpec {
    'admin-status': ClusterNetworkInterfaceSpec_admin_status = null;
    'link-speed': string = null;
    public static propInfo: { [prop: string]: PropInfoItem } = {
        'admin-status': {
            enum: ClusterNetworkInterfaceSpec_admin_status,
            default: 'NONE',
            type: 'string'
        },
        'link-speed': {
            type: 'string'
        },
    }

    public getPropInfo(propName: string): PropInfoItem {
        return ClusterNetworkInterfaceSpec.propInfo[propName];
    }

    /**
     * Returns whether or not there is an enum property with a default value
    */
    public static hasDefaultValue(prop) {
        return (ClusterNetworkInterfaceSpec.propInfo[prop] != null &&
                        ClusterNetworkInterfaceSpec.propInfo[prop].default != null &&
                        ClusterNetworkInterfaceSpec.propInfo[prop].default != '');
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        this.setValues(values);
    }

    /**
     * set the values for both the Model and the Form Group. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any, fillDefaults = true): void {
        if (values && values['admin-status'] != null) {
            this['admin-status'] = values['admin-status'];
        } else if (fillDefaults && ClusterNetworkInterfaceSpec.hasDefaultValue('admin-status')) {
            this['admin-status'] = <ClusterNetworkInterfaceSpec_admin_status>  ClusterNetworkInterfaceSpec.propInfo['admin-status'].default;
        }
        if (values && values['link-speed'] != null) {
            this['link-speed'] = values['link-speed'];
        } else if (fillDefaults && ClusterNetworkInterfaceSpec.hasDefaultValue('link-speed')) {
            this['link-speed'] = ClusterNetworkInterfaceSpec.propInfo['link-speed'].default;
        }
        this.setFormGroupValuesToBeModelValues();
    }


    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'admin-status': new FormControl(this['admin-status'], [enumValidator(ClusterNetworkInterfaceSpec_admin_status), ]),
                'link-speed': new FormControl(this['link-speed']),
            });
        }
        return this._formGroup;
    }

    setModelToBeFormGroupValues() {
        this.setValues(this.$formGroup.value, false);
    }

    setFormGroupValuesToBeModelValues() {
        if (this._formGroup) {
            this._formGroup.controls['admin-status'].setValue(this['admin-status']);
            this._formGroup.controls['link-speed'].setValue(this['link-speed']);
        }
    }
}

