/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */

// generate enum based on strings instead of numbers
// (see https://blog.rsuter.com/how-to-implement-an-enum-with-string-values-in-typescript/)
export enum ClusterHostStatus_type {
    'UNKNOWN' = "UNKNOWN",
    'BAREMETAL' = "BAREMETAL",
    'HYPERVISOR' = "HYPERVISOR",
}

export enum ClusterNodeCondition_type {
    'LEADER' = "LEADER",
}

export enum ClusterNodeCondition_status {
    'UNKNOWN' = "UNKNOWN",
    'TRUE' = "TRUE",
    'FALSE' = "FALSE",
}

export enum ClusterNodeStatus_phase {
    'UNKNOWN' = "UNKNOWN",
    'PENDING' = "PENDING",
    'JOINED' = "JOINED",
    'FAILED' = "FAILED",
}

export enum ClusterPortCondition_type {
    'PORT_UP' = "PORT_UP",
}

export enum ClusterPortCondition_status {
    'UNKNOWN' = "UNKNOWN",
    'TRUE' = "TRUE",
    'FALSE' = "FALSE",
}

export enum ClusterSmartNICCondition_type {
    'HEALTHY' = "HEALTHY",
    'UNREACHABLE' = "UNREACHABLE",
}

export enum ClusterSmartNICCondition_status {
    'UNKNOWN' = "UNKNOWN",
    'TRUE' = "TRUE",
    'FALSE' = "FALSE",
}

export enum ClusterSmartNICSpec_phase {
    'UNKNOWN' = "UNKNOWN",
    'REGISTERING' = "REGISTERING",
    'REJECTED' = "REJECTED",
    'PENDING' = "PENDING",
    'ADMITTED' = "ADMITTED",
}


export enum ClusterNodeCondition_type_uihint {
    'LEADER' = "Leader",
}

export enum ClusterNodeCondition_status_uihint {
    'FALSE' = "False",
    'TRUE' = "True",
    'UNKNOWN' = "Unknown",
}

export enum ClusterNodeStatus_phase_uihint {
    'FAILED' = "Failed",
    'JOINED' = "Joined",
    'PENDING' = "Pending",
    'UNKNOWN' = "Unknown",
}

export enum ClusterPortCondition_type_uihint {
    'PORT_UP' = "Up",
}

export enum ClusterPortCondition_status_uihint {
    'FALSE' = "False",
    'TRUE' = "True",
    'UNKNOWN' = "Unknown",
}

export enum ClusterSmartNICCondition_type_uihint {
    'HEALTHY' = "Healthy",
    'UNREACHABLE' = "Not Reachable",
}

export enum ClusterSmartNICCondition_status_uihint {
    'FALSE' = "False",
    'TRUE' = "True",
    'UNKNOWN' = "Unknown",
}

export enum ClusterSmartNICSpec_phase_uihint {
    'ADMITTED' = "Admitted",
    'PENDING' = "Pending",
    'REGISTERING' = "Registering",
    'REJECTED' = "Rejected",
    'UNKNOWN' = "Unknown",
}




/**
 * bundle of all enums for databinding to options, radio-buttons etc.
 * usage in component:
 *   import { AllEnums, minValueValidator, maxValueValidator } from '../../models/webapi';
 *
 *   @Component({
 *       ...
 *   })
 *   export class xxxComponent implements OnInit {
 *       allEnums = AllEnums;
 *       ...
 *       ngOnInit() {
 *           this.allEnums = AllEnums.instance;
 *       }
 *   }
*/
export class AllEnums {
    private static _instance: AllEnums = new AllEnums();
    constructor() {
        if (AllEnums._instance) {
            throw new Error("Error: Instantiation failed: Use AllEnums.instance instead of new");
        }
        AllEnums._instance = this;
    }
    static get instance(): AllEnums {
        return AllEnums._instance;
    }

    ClusterHostStatus_type = ClusterHostStatus_type;
    ClusterNodeCondition_type = ClusterNodeCondition_type;
    ClusterNodeCondition_status = ClusterNodeCondition_status;
    ClusterNodeStatus_phase = ClusterNodeStatus_phase;
    ClusterPortCondition_type = ClusterPortCondition_type;
    ClusterPortCondition_status = ClusterPortCondition_status;
    ClusterSmartNICCondition_type = ClusterSmartNICCondition_type;
    ClusterSmartNICCondition_status = ClusterSmartNICCondition_status;
    ClusterSmartNICSpec_phase = ClusterSmartNICSpec_phase;

    ClusterNodeCondition_type_uihint = ClusterNodeCondition_type_uihint;
    ClusterNodeCondition_status_uihint = ClusterNodeCondition_status_uihint;
    ClusterNodeStatus_phase_uihint = ClusterNodeStatus_phase_uihint;
    ClusterPortCondition_type_uihint = ClusterPortCondition_type_uihint;
    ClusterPortCondition_status_uihint = ClusterPortCondition_status_uihint;
    ClusterSmartNICCondition_type_uihint = ClusterSmartNICCondition_type_uihint;
    ClusterSmartNICCondition_status_uihint = ClusterSmartNICCondition_status_uihint;
    ClusterSmartNICSpec_phase_uihint = ClusterSmartNICSpec_phase_uihint;
}
