/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, minLengthValidator, maxLengthValidator, required, enumValidator, patternValidator, CustomFormControl, CustomFormGroup } from '../../../utils/validators';
import { BaseModel, PropInfoItem } from '../basemodel/base-model';


export interface IClusterVersionStatus {
    'build-version'?: string;
    'vcs-commit'?: string;
    'build-date'?: string;
    'rollout-build-version'?: string;
}


export class ClusterVersionStatus extends BaseModel implements IClusterVersionStatus {
    'build-version': string = null;
    'vcs-commit': string = null;
    'build-date': string = null;
    'rollout-build-version': string = null;
    public static propInfo: { [prop in keyof IClusterVersionStatus]: PropInfoItem } = {
        'build-version': {
            required: false,
            type: 'string'
        },
        'vcs-commit': {
            required: false,
            type: 'string'
        },
        'build-date': {
            required: false,
            type: 'string'
        },
        'rollout-build-version': {
            required: false,
            type: 'string'
        },
    }

    public getPropInfo(propName: string): PropInfoItem {
        return ClusterVersionStatus.propInfo[propName];
    }

    public getPropInfoConfig(): { [key:string]:PropInfoItem } {
        return ClusterVersionStatus.propInfo;
    }

    /**
     * Returns whether or not there is an enum property with a default value
    */
    public static hasDefaultValue(prop) {
        return (ClusterVersionStatus.propInfo[prop] != null &&
                        ClusterVersionStatus.propInfo[prop].default != null);
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any, setDefaults:boolean = true) {
        super();
        this._inputValue = values;
        this.setValues(values, setDefaults);
    }

    /**
     * set the values for both the Model and the Form Group. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any, fillDefaults = true): void {
        if (values && values['build-version'] != null) {
            this['build-version'] = values['build-version'];
        } else if (fillDefaults && ClusterVersionStatus.hasDefaultValue('build-version')) {
            this['build-version'] = ClusterVersionStatus.propInfo['build-version'].default;
        } else {
            this['build-version'] = null
        }
        if (values && values['vcs-commit'] != null) {
            this['vcs-commit'] = values['vcs-commit'];
        } else if (fillDefaults && ClusterVersionStatus.hasDefaultValue('vcs-commit')) {
            this['vcs-commit'] = ClusterVersionStatus.propInfo['vcs-commit'].default;
        } else {
            this['vcs-commit'] = null
        }
        if (values && values['build-date'] != null) {
            this['build-date'] = values['build-date'];
        } else if (fillDefaults && ClusterVersionStatus.hasDefaultValue('build-date')) {
            this['build-date'] = ClusterVersionStatus.propInfo['build-date'].default;
        } else {
            this['build-date'] = null
        }
        if (values && values['rollout-build-version'] != null) {
            this['rollout-build-version'] = values['rollout-build-version'];
        } else if (fillDefaults && ClusterVersionStatus.hasDefaultValue('rollout-build-version')) {
            this['rollout-build-version'] = ClusterVersionStatus.propInfo['rollout-build-version'].default;
        } else {
            this['rollout-build-version'] = null
        }
        this.setFormGroupValuesToBeModelValues();
    }


    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'build-version': CustomFormControl(new FormControl(this['build-version']), ClusterVersionStatus.propInfo['build-version']),
                'vcs-commit': CustomFormControl(new FormControl(this['vcs-commit']), ClusterVersionStatus.propInfo['vcs-commit']),
                'build-date': CustomFormControl(new FormControl(this['build-date']), ClusterVersionStatus.propInfo['build-date']),
                'rollout-build-version': CustomFormControl(new FormControl(this['rollout-build-version']), ClusterVersionStatus.propInfo['rollout-build-version']),
            });
        }
        return this._formGroup;
    }

    setModelToBeFormGroupValues() {
        this.setValues(this.$formGroup.value, false);
    }

    setFormGroupValuesToBeModelValues() {
        if (this._formGroup) {
            this._formGroup.controls['build-version'].setValue(this['build-version']);
            this._formGroup.controls['vcs-commit'].setValue(this['vcs-commit']);
            this._formGroup.controls['build-date'].setValue(this['build-date']);
            this._formGroup.controls['rollout-build-version'].setValue(this['rollout-build-version']);
        }
    }
}

