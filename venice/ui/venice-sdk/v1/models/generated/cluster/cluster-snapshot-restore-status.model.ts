/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, minLengthValidator, maxLengthValidator, required, enumValidator, patternValidator, CustomFormControl, CustomFormGroup } from '../../../utils/validators';
import { BaseModel, PropInfoItem } from '../basemodel/base-model';

import { ClusterSnapshotRestoreStatus_status,  } from './enums';

export interface IClusterSnapshotRestoreStatus {
    'status': ClusterSnapshotRestoreStatus_status;
    'start-time'?: Date;
    'end-time'?: Date;
    'backup-snapshot-path'?: string;
}


export class ClusterSnapshotRestoreStatus extends BaseModel implements IClusterSnapshotRestoreStatus {
    'status': ClusterSnapshotRestoreStatus_status = null;
    'start-time': Date = null;
    'end-time': Date = null;
    'backup-snapshot-path': string = null;
    public static propInfo: { [prop in keyof IClusterSnapshotRestoreStatus]: PropInfoItem } = {
        'status': {
            enum: ClusterSnapshotRestoreStatus_status,
            default: 'unknown',
            required: true,
            type: 'string'
        },
        'start-time': {
            required: false,
            type: 'Date'
        },
        'end-time': {
            required: false,
            type: 'Date'
        },
        'backup-snapshot-path': {
            required: false,
            type: 'string'
        },
    }

    public getPropInfo(propName: string): PropInfoItem {
        return ClusterSnapshotRestoreStatus.propInfo[propName];
    }

    public getPropInfoConfig(): { [key:string]:PropInfoItem } {
        return ClusterSnapshotRestoreStatus.propInfo;
    }

    /**
     * Returns whether or not there is an enum property with a default value
    */
    public static hasDefaultValue(prop) {
        return (ClusterSnapshotRestoreStatus.propInfo[prop] != null &&
                        ClusterSnapshotRestoreStatus.propInfo[prop].default != null);
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any, setDefaults:boolean = true) {
        super();
        this._inputValue = values;
        this.setValues(values, setDefaults);
    }

    /**
     * set the values for both the Model and the Form Group. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any, fillDefaults = true): void {
        if (values && values['status'] != null) {
            this['status'] = values['status'];
        } else if (fillDefaults && ClusterSnapshotRestoreStatus.hasDefaultValue('status')) {
            this['status'] = <ClusterSnapshotRestoreStatus_status>  ClusterSnapshotRestoreStatus.propInfo['status'].default;
        } else {
            this['status'] = null
        }
        if (values && values['start-time'] != null) {
            this['start-time'] = values['start-time'];
        } else if (fillDefaults && ClusterSnapshotRestoreStatus.hasDefaultValue('start-time')) {
            this['start-time'] = ClusterSnapshotRestoreStatus.propInfo['start-time'].default;
        } else {
            this['start-time'] = null
        }
        if (values && values['end-time'] != null) {
            this['end-time'] = values['end-time'];
        } else if (fillDefaults && ClusterSnapshotRestoreStatus.hasDefaultValue('end-time')) {
            this['end-time'] = ClusterSnapshotRestoreStatus.propInfo['end-time'].default;
        } else {
            this['end-time'] = null
        }
        if (values && values['backup-snapshot-path'] != null) {
            this['backup-snapshot-path'] = values['backup-snapshot-path'];
        } else if (fillDefaults && ClusterSnapshotRestoreStatus.hasDefaultValue('backup-snapshot-path')) {
            this['backup-snapshot-path'] = ClusterSnapshotRestoreStatus.propInfo['backup-snapshot-path'].default;
        } else {
            this['backup-snapshot-path'] = null
        }
        this.setFormGroupValuesToBeModelValues();
    }


    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'status': CustomFormControl(new FormControl(this['status'], [required, enumValidator(ClusterSnapshotRestoreStatus_status), ]), ClusterSnapshotRestoreStatus.propInfo['status']),
                'start-time': CustomFormControl(new FormControl(this['start-time']), ClusterSnapshotRestoreStatus.propInfo['start-time']),
                'end-time': CustomFormControl(new FormControl(this['end-time']), ClusterSnapshotRestoreStatus.propInfo['end-time']),
                'backup-snapshot-path': CustomFormControl(new FormControl(this['backup-snapshot-path']), ClusterSnapshotRestoreStatus.propInfo['backup-snapshot-path']),
            });
        }
        return this._formGroup;
    }

    setModelToBeFormGroupValues() {
        this.setValues(this.$formGroup.value, false);
    }

    setFormGroupValuesToBeModelValues() {
        if (this._formGroup) {
            this._formGroup.controls['status'].setValue(this['status']);
            this._formGroup.controls['start-time'].setValue(this['start-time']);
            this._formGroup.controls['end-time'].setValue(this['end-time']);
            this._formGroup.controls['backup-snapshot-path'].setValue(this['backup-snapshot-path']);
        }
    }
}

