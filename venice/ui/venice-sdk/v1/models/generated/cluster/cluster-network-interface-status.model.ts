/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel, PropInfoItem } from './base-model';

import { ClusterNetworkInterfaceStatus_type,  } from './enums';
import { ClusterNetworkInterfaceStatus_oper_status,  } from './enums';
import { ClusterNetworkInterfaceHostStatus, IClusterNetworkInterfaceHostStatus } from './cluster-network-interface-host-status.model';
import { ClusterNetworkInterfaceUplinkStatus, IClusterNetworkInterfaceUplinkStatus } from './cluster-network-interface-uplink-status.model';

export interface IClusterNetworkInterfaceStatus {
    'smart-nic'?: string;
    'type'?: ClusterNetworkInterfaceStatus_type;
    'oper-status'?: ClusterNetworkInterfaceStatus_oper_status;
    'primary-mac'?: string;
    'if-host-status'?: IClusterNetworkInterfaceHostStatus;
    'if-uplink-status'?: IClusterNetworkInterfaceUplinkStatus;
}


export class ClusterNetworkInterfaceStatus extends BaseModel implements IClusterNetworkInterfaceStatus {
    'smart-nic': string = null;
    'type': ClusterNetworkInterfaceStatus_type = null;
    'oper-status': ClusterNetworkInterfaceStatus_oper_status = null;
    /** should be a valid MAC address
     */
    'primary-mac': string = null;
    'if-host-status': ClusterNetworkInterfaceHostStatus = null;
    'if-uplink-status': ClusterNetworkInterfaceUplinkStatus = null;
    public static propInfo: { [prop: string]: PropInfoItem } = {
        'smart-nic': {
            type: 'string'
        },
        'type': {
            enum: ClusterNetworkInterfaceStatus_type,
            default: 'NONE',
            type: 'string'
        },
        'oper-status': {
            enum: ClusterNetworkInterfaceStatus_oper_status,
            default: 'NONE',
            type: 'string'
        },
        'primary-mac': {
            description:  'should be a valid MAC address ',
            hint:  'aa:BB:cc:DD:00:00, aabb.ccdd.0000, aa-BB-cc-DD-00-00',
            type: 'string'
        },
        'if-host-status': {
            type: 'object'
        },
        'if-uplink-status': {
            type: 'object'
        },
    }

    public getPropInfo(propName: string): PropInfoItem {
        return ClusterNetworkInterfaceStatus.propInfo[propName];
    }

    /**
     * Returns whether or not there is an enum property with a default value
    */
    public static hasDefaultValue(prop) {
        return (ClusterNetworkInterfaceStatus.propInfo[prop] != null &&
                        ClusterNetworkInterfaceStatus.propInfo[prop].default != null &&
                        ClusterNetworkInterfaceStatus.propInfo[prop].default != '');
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        this['if-host-status'] = new ClusterNetworkInterfaceHostStatus();
        this['if-uplink-status'] = new ClusterNetworkInterfaceUplinkStatus();
        this.setValues(values);
    }

    /**
     * set the values for both the Model and the Form Group. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any, fillDefaults = true): void {
        if (values && values['smart-nic'] != null) {
            this['smart-nic'] = values['smart-nic'];
        } else if (fillDefaults && ClusterNetworkInterfaceStatus.hasDefaultValue('smart-nic')) {
            this['smart-nic'] = ClusterNetworkInterfaceStatus.propInfo['smart-nic'].default;
        }
        if (values && values['type'] != null) {
            this['type'] = values['type'];
        } else if (fillDefaults && ClusterNetworkInterfaceStatus.hasDefaultValue('type')) {
            this['type'] = <ClusterNetworkInterfaceStatus_type>  ClusterNetworkInterfaceStatus.propInfo['type'].default;
        }
        if (values && values['oper-status'] != null) {
            this['oper-status'] = values['oper-status'];
        } else if (fillDefaults && ClusterNetworkInterfaceStatus.hasDefaultValue('oper-status')) {
            this['oper-status'] = <ClusterNetworkInterfaceStatus_oper_status>  ClusterNetworkInterfaceStatus.propInfo['oper-status'].default;
        }
        if (values && values['primary-mac'] != null) {
            this['primary-mac'] = values['primary-mac'];
        } else if (fillDefaults && ClusterNetworkInterfaceStatus.hasDefaultValue('primary-mac')) {
            this['primary-mac'] = ClusterNetworkInterfaceStatus.propInfo['primary-mac'].default;
        }
        if (values) {
            this['if-host-status'].setValues(values['if-host-status']);
        }
        if (values) {
            this['if-uplink-status'].setValues(values['if-uplink-status']);
        }
        this.setFormGroupValuesToBeModelValues();
    }


    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'smart-nic': new FormControl(this['smart-nic']),
                'type': new FormControl(this['type'], [enumValidator(ClusterNetworkInterfaceStatus_type), ]),
                'oper-status': new FormControl(this['oper-status'], [enumValidator(ClusterNetworkInterfaceStatus_oper_status), ]),
                'primary-mac': new FormControl(this['primary-mac']),
                'if-host-status': this['if-host-status'].$formGroup,
                'if-uplink-status': this['if-uplink-status'].$formGroup,
            });
        }
        return this._formGroup;
    }

    setModelToBeFormGroupValues() {
        this.setValues(this.$formGroup.value, false);
    }

    setFormGroupValuesToBeModelValues() {
        if (this._formGroup) {
            this._formGroup.controls['smart-nic'].setValue(this['smart-nic']);
            this._formGroup.controls['type'].setValue(this['type']);
            this._formGroup.controls['oper-status'].setValue(this['oper-status']);
            this._formGroup.controls['primary-mac'].setValue(this['primary-mac']);
            this['if-host-status'].setFormGroupValuesToBeModelValues();
            this['if-uplink-status'].setFormGroupValuesToBeModelValues();
        }
    }
}

