/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel, EnumDef } from './base-model';

import { NetworkTLSServerPolicySpec, INetworkTLSServerPolicySpec } from './network-tls-server-policy-spec.model';
import { NetworkTLSClientPolicySpec, INetworkTLSClientPolicySpec } from './network-tls-client-policy-spec.model';

export interface INetworkServiceSpec {
    'workload-labels'?: Array<string>;
    'virtual-ip'?: string;
    'ports'?: string;
    'lb-policy'?: string;
    'tls-server-policy'?: INetworkTLSServerPolicySpec;
    'tls-client-policy'?: INetworkTLSClientPolicySpec;
}


export class NetworkServiceSpec extends BaseModel implements INetworkServiceSpec {
    'workload-labels': Array<string> = null;
    'virtual-ip': string = null;
    'ports': string = null;
    'lb-policy': string = null;
    'tls-server-policy': NetworkTLSServerPolicySpec = null;
    'tls-client-policy': NetworkTLSClientPolicySpec = null;
    public static enumProperties: { [key: string] : EnumDef } = {
    }

    /**
     * Returns whether or not there is an enum property with a default value
    */
    public static hasDefaultEnumValue(prop) {
        return (NetworkServiceSpec.enumProperties[prop] != null &&
                        NetworkServiceSpec.enumProperties[prop].default != null &&
                        NetworkServiceSpec.enumProperties[prop].default != '');
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        this['workload-labels'] = new Array<string>();
        this['tls-server-policy'] = new NetworkTLSServerPolicySpec();
        this['tls-client-policy'] = new NetworkTLSClientPolicySpec();
        this.setValues(values);
    }

    /**
     * set the values. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any): void {
        if (values) {
            this.fillModelArray<string>(this, 'workload-labels', values['workload-labels']);
        }
        if (values && values['virtual-ip'] != null) {
            this['virtual-ip'] = values['virtual-ip'];
        }
        if (values && values['ports'] != null) {
            this['ports'] = values['ports'];
        }
        if (values && values['lb-policy'] != null) {
            this['lb-policy'] = values['lb-policy'];
        }
        if (values) {
            this['tls-server-policy'].setValues(values['tls-server-policy']);
        }
        if (values) {
            this['tls-client-policy'].setValues(values['tls-client-policy']);
        }
    }




    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'workload-labels': new FormArray([]),
                'virtual-ip': new FormControl(this['virtual-ip']),
                'ports': new FormControl(this['ports']),
                'lb-policy': new FormControl(this['lb-policy']),
                'tls-server-policy': this['tls-server-policy'].$formGroup,
                'tls-client-policy': this['tls-client-policy'].$formGroup,
            });
            // generate FormArray control elements
            this.fillFormArray<string>('workload-labels', this['workload-labels']);
        }
        return this._formGroup;
    }

    setFormGroupValues() {
        if (this._formGroup) {
            this.fillModelArray<string>(this, 'workload-labels', this['workload-labels']);
            this._formGroup.controls['virtual-ip'].setValue(this['virtual-ip']);
            this._formGroup.controls['ports'].setValue(this['ports']);
            this._formGroup.controls['lb-policy'].setValue(this['lb-policy']);
            this['tls-server-policy'].setFormGroupValues();
            this['tls-client-policy'].setFormGroupValues();
        }
    }
}

