/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, minLengthValidator, maxLengthValidator, required, enumValidator, patternValidator, CustomFormControl, CustomFormGroup } from '../../../utils/validators';
import { BaseModel, PropInfoItem } from '../basemodel/base-model';


export interface INetworkVirtualRouterPeeringRoute {
    'ipv4-prefix': string;
    'dest-virtual-router'?: string;
    '_ui'?: any;
}


export class NetworkVirtualRouterPeeringRoute extends BaseModel implements INetworkVirtualRouterPeeringRoute {
    /** Field for holding arbitrary ui state */
    '_ui': any = {};
    /** Should be a valid v4 or v6 CIDR block. */
    'ipv4-prefix': string = null;
    /** Destination VirtualRouter this prefix is reachable on. */
    'dest-virtual-router': string = null;
    public static propInfo: { [prop in keyof INetworkVirtualRouterPeeringRoute]: PropInfoItem } = {
        'ipv4-prefix': {
            description:  `Should be a valid v4 or v6 CIDR block.`,
            hint:  '10.1.1.1/24, ff02::5/32 ',
            required: true,
            type: 'string'
        },
        'dest-virtual-router': {
            description:  `Destination VirtualRouter this prefix is reachable on.`,
            required: false,
            type: 'string'
        },
    }

    public getPropInfo(propName: string): PropInfoItem {
        return NetworkVirtualRouterPeeringRoute.propInfo[propName];
    }

    public getPropInfoConfig(): { [key:string]:PropInfoItem } {
        return NetworkVirtualRouterPeeringRoute.propInfo;
    }

    /**
     * Returns whether or not there is an enum property with a default value
    */
    public static hasDefaultValue(prop) {
        return (NetworkVirtualRouterPeeringRoute.propInfo[prop] != null &&
                        NetworkVirtualRouterPeeringRoute.propInfo[prop].default != null);
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any, setDefaults:boolean = true) {
        super();
        this._inputValue = values;
        this.setValues(values, setDefaults);
    }

    /**
     * set the values for both the Model and the Form Group. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any, fillDefaults = true): void {
        if (values && values['_ui']) {
            this['_ui'] = values['_ui']
        }
        if (values && values['ipv4-prefix'] != null) {
            this['ipv4-prefix'] = values['ipv4-prefix'];
        } else if (fillDefaults && NetworkVirtualRouterPeeringRoute.hasDefaultValue('ipv4-prefix')) {
            this['ipv4-prefix'] = NetworkVirtualRouterPeeringRoute.propInfo['ipv4-prefix'].default;
        } else {
            this['ipv4-prefix'] = null
        }
        if (values && values['dest-virtual-router'] != null) {
            this['dest-virtual-router'] = values['dest-virtual-router'];
        } else if (fillDefaults && NetworkVirtualRouterPeeringRoute.hasDefaultValue('dest-virtual-router')) {
            this['dest-virtual-router'] = NetworkVirtualRouterPeeringRoute.propInfo['dest-virtual-router'].default;
        } else {
            this['dest-virtual-router'] = null
        }
        this.setFormGroupValuesToBeModelValues();
    }


    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'ipv4-prefix': CustomFormControl(new FormControl(this['ipv4-prefix'], [required, ]), NetworkVirtualRouterPeeringRoute.propInfo['ipv4-prefix']),
                'dest-virtual-router': CustomFormControl(new FormControl(this['dest-virtual-router']), NetworkVirtualRouterPeeringRoute.propInfo['dest-virtual-router']),
            });
        }
        return this._formGroup;
    }

    setModelToBeFormGroupValues() {
        this.setValues(this.$formGroup.value, false);
    }

    setFormGroupValuesToBeModelValues() {
        if (this._formGroup) {
            this._formGroup.controls['ipv4-prefix'].setValue(this['ipv4-prefix']);
            this._formGroup.controls['dest-virtual-router'].setValue(this['dest-virtual-router']);
        }
    }
}

