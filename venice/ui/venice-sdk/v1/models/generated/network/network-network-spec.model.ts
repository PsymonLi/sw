/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, minLengthValidator, maxLengthValidator, required, enumValidator, patternValidator } from './validators';
import { BaseModel, PropInfoItem } from './base-model';


export interface INetworkNetworkSpec {
    'type'?: string;
    'ipv4-subnet'?: string;
    'ipv4-gateway'?: string;
    'ipv6-subnet'?: string;
    'ipv6-gateway'?: string;
    'vlan-id'?: number;
    'vxlan-vni'?: number;
}


export class NetworkNetworkSpec extends BaseModel implements INetworkNetworkSpec {
    'type': string = null;
    'ipv4-subnet': string = null;
    'ipv4-gateway': string = null;
    'ipv6-subnet': string = null;
    'ipv6-gateway': string = null;
    'vlan-id': number = null;
    'vxlan-vni': number = null;
    public static propInfo: { [prop: string]: PropInfoItem } = {
        'type': {
            type: 'string'
        },
        'ipv4-subnet': {
            type: 'string'
        },
        'ipv4-gateway': {
            type: 'string'
        },
        'ipv6-subnet': {
            type: 'string'
        },
        'ipv6-gateway': {
            type: 'string'
        },
        'vlan-id': {
            type: 'number'
        },
        'vxlan-vni': {
            type: 'number'
        },
    }

    public getPropInfo(propName: string): PropInfoItem {
        return NetworkNetworkSpec.propInfo[propName];
    }

    public getPropInfoConfig(): { [key:string]:PropInfoItem } {
        return NetworkNetworkSpec.propInfo;
    }

    /**
     * Returns whether or not there is an enum property with a default value
    */
    public static hasDefaultValue(prop) {
        return (NetworkNetworkSpec.propInfo[prop] != null &&
                        NetworkNetworkSpec.propInfo[prop].default != null &&
                        NetworkNetworkSpec.propInfo[prop].default != '');
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any, setDefaults:boolean = true) {
        super();
        this.setValues(values, setDefaults);
    }

    /**
     * set the values for both the Model and the Form Group. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any, fillDefaults = true): void {
        if (values && values['type'] != null) {
            this['type'] = values['type'];
        } else if (fillDefaults && NetworkNetworkSpec.hasDefaultValue('type')) {
            this['type'] = NetworkNetworkSpec.propInfo['type'].default;
        } else {
            this['type'] = null
        }
        if (values && values['ipv4-subnet'] != null) {
            this['ipv4-subnet'] = values['ipv4-subnet'];
        } else if (fillDefaults && NetworkNetworkSpec.hasDefaultValue('ipv4-subnet')) {
            this['ipv4-subnet'] = NetworkNetworkSpec.propInfo['ipv4-subnet'].default;
        } else {
            this['ipv4-subnet'] = null
        }
        if (values && values['ipv4-gateway'] != null) {
            this['ipv4-gateway'] = values['ipv4-gateway'];
        } else if (fillDefaults && NetworkNetworkSpec.hasDefaultValue('ipv4-gateway')) {
            this['ipv4-gateway'] = NetworkNetworkSpec.propInfo['ipv4-gateway'].default;
        } else {
            this['ipv4-gateway'] = null
        }
        if (values && values['ipv6-subnet'] != null) {
            this['ipv6-subnet'] = values['ipv6-subnet'];
        } else if (fillDefaults && NetworkNetworkSpec.hasDefaultValue('ipv6-subnet')) {
            this['ipv6-subnet'] = NetworkNetworkSpec.propInfo['ipv6-subnet'].default;
        } else {
            this['ipv6-subnet'] = null
        }
        if (values && values['ipv6-gateway'] != null) {
            this['ipv6-gateway'] = values['ipv6-gateway'];
        } else if (fillDefaults && NetworkNetworkSpec.hasDefaultValue('ipv6-gateway')) {
            this['ipv6-gateway'] = NetworkNetworkSpec.propInfo['ipv6-gateway'].default;
        } else {
            this['ipv6-gateway'] = null
        }
        if (values && values['vlan-id'] != null) {
            this['vlan-id'] = values['vlan-id'];
        } else if (fillDefaults && NetworkNetworkSpec.hasDefaultValue('vlan-id')) {
            this['vlan-id'] = NetworkNetworkSpec.propInfo['vlan-id'].default;
        } else {
            this['vlan-id'] = null
        }
        if (values && values['vxlan-vni'] != null) {
            this['vxlan-vni'] = values['vxlan-vni'];
        } else if (fillDefaults && NetworkNetworkSpec.hasDefaultValue('vxlan-vni')) {
            this['vxlan-vni'] = NetworkNetworkSpec.propInfo['vxlan-vni'].default;
        } else {
            this['vxlan-vni'] = null
        }
        this.setFormGroupValuesToBeModelValues();
    }


    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'type': new FormControl(this['type']),
                'ipv4-subnet': new FormControl(this['ipv4-subnet']),
                'ipv4-gateway': new FormControl(this['ipv4-gateway']),
                'ipv6-subnet': new FormControl(this['ipv6-subnet']),
                'ipv6-gateway': new FormControl(this['ipv6-gateway']),
                'vlan-id': new FormControl(this['vlan-id']),
                'vxlan-vni': new FormControl(this['vxlan-vni']),
            });
        }
        return this._formGroup;
    }

    setModelToBeFormGroupValues() {
        this.setValues(this.$formGroup.value, false);
    }

    setFormGroupValuesToBeModelValues() {
        if (this._formGroup) {
            this._formGroup.controls['type'].setValue(this['type']);
            this._formGroup.controls['ipv4-subnet'].setValue(this['ipv4-subnet']);
            this._formGroup.controls['ipv4-gateway'].setValue(this['ipv4-gateway']);
            this._formGroup.controls['ipv6-subnet'].setValue(this['ipv6-subnet']);
            this._formGroup.controls['ipv6-gateway'].setValue(this['ipv6-gateway']);
            this._formGroup.controls['vlan-id'].setValue(this['vlan-id']);
            this._formGroup.controls['vxlan-vni'].setValue(this['vxlan-vni']);
        }
    }
}

