/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel } from './base-model';


export interface INetworkNetworkSpec {
    'type'?: string;
    'ipv4-subnet'?: string;
    'ipv4-gateway'?: string;
    'ipv6-subnet'?: string;
    'ipv6-gateway'?: string;
    'vlan-id'?: number;
    'vxlan-vni'?: number;
}


export class NetworkNetworkSpec extends BaseModel implements INetworkNetworkSpec {
    'type': string;
    'ipv4-subnet': string;
    'ipv4-gateway': string;
    'ipv6-subnet': string;
    'ipv6-gateway': string;
    'vlan-id': number;
    'vxlan-vni': number;
    public static enumProperties = {
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any): void {
        if (values) {
            this['type'] = values['type'];
            this['ipv4-subnet'] = values['ipv4-subnet'];
            this['ipv4-gateway'] = values['ipv4-gateway'];
            this['ipv6-subnet'] = values['ipv6-subnet'];
            this['ipv6-gateway'] = values['ipv6-gateway'];
            this['vlan-id'] = values['vlan-id'];
            this['vxlan-vni'] = values['vxlan-vni'];
        }
    }

    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'type': new FormControl(this['type']),
                'ipv4-subnet': new FormControl(this['ipv4-subnet']),
                'ipv4-gateway': new FormControl(this['ipv4-gateway']),
                'ipv6-subnet': new FormControl(this['ipv6-subnet']),
                'ipv6-gateway': new FormControl(this['ipv6-gateway']),
                'vlan-id': new FormControl(this['vlan-id']),
                'vxlan-vni': new FormControl(this['vxlan-vni']),
            });
        }
        return this._formGroup;
    }

    setFormGroupValues() {
        if (this._formGroup) {
            this._formGroup.controls['type'].setValue(this['type']);
            this._formGroup.controls['ipv4-subnet'].setValue(this['ipv4-subnet']);
            this._formGroup.controls['ipv4-gateway'].setValue(this['ipv4-gateway']);
            this._formGroup.controls['ipv6-subnet'].setValue(this['ipv6-subnet']);
            this._formGroup.controls['ipv6-gateway'].setValue(this['ipv6-gateway']);
            this._formGroup.controls['vlan-id'].setValue(this['vlan-id']);
            this._formGroup.controls['vxlan-vni'].setValue(this['vxlan-vni']);
        }
    }
}

