/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel, PropInfoItem } from './base-model';


export interface ISecuritySGPolicyPropagationStatus {
    'generation-id'?: string;
    'updated'?: number;
    'pending'?: number;
    'min-version'?: string;
}


export class SecuritySGPolicyPropagationStatus extends BaseModel implements ISecuritySGPolicyPropagationStatus {
    'generation-id': string = null;
    'updated': number = null;
    /** Number of Naples pending. If this is 0 it can be assumed that everything is up to date. */
    'pending': number = null;
    'min-version': string = null;
    public static propInfo: { [prop: string]: PropInfoItem } = {
        'generation-id': {
            type: 'string'
        },
        'updated': {
            type: 'number'
        },
        'pending': {
            description:  'Number of Naples pending. If this is 0 it can be assumed that everything is up to date.',
            type: 'number'
        },
        'min-version': {
            type: 'string'
        },
    }

    public getPropInfo(propName: string): PropInfoItem {
        return SecuritySGPolicyPropagationStatus.propInfo[propName];
    }

    /**
     * Returns whether or not there is an enum property with a default value
    */
    public static hasDefaultValue(prop) {
        return (SecuritySGPolicyPropagationStatus.propInfo[prop] != null &&
                        SecuritySGPolicyPropagationStatus.propInfo[prop].default != null &&
                        SecuritySGPolicyPropagationStatus.propInfo[prop].default != '');
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        this.setValues(values);
    }

    /**
     * set the values. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any): void {
        if (values && values['generation-id'] != null) {
            this['generation-id'] = values['generation-id'];
        } else if (SecuritySGPolicyPropagationStatus.hasDefaultValue('generation-id')) {
            this['generation-id'] = SecuritySGPolicyPropagationStatus.propInfo['generation-id'].default;
        }
        if (values && values['updated'] != null) {
            this['updated'] = values['updated'];
        } else if (SecuritySGPolicyPropagationStatus.hasDefaultValue('updated')) {
            this['updated'] = SecuritySGPolicyPropagationStatus.propInfo['updated'].default;
        }
        if (values && values['pending'] != null) {
            this['pending'] = values['pending'];
        } else if (SecuritySGPolicyPropagationStatus.hasDefaultValue('pending')) {
            this['pending'] = SecuritySGPolicyPropagationStatus.propInfo['pending'].default;
        }
        if (values && values['min-version'] != null) {
            this['min-version'] = values['min-version'];
        } else if (SecuritySGPolicyPropagationStatus.hasDefaultValue('min-version')) {
            this['min-version'] = SecuritySGPolicyPropagationStatus.propInfo['min-version'].default;
        }
    }




    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'generation-id': new FormControl(this['generation-id']),
                'updated': new FormControl(this['updated']),
                'pending': new FormControl(this['pending']),
                'min-version': new FormControl(this['min-version']),
            });
        }
        return this._formGroup;
    }

    setFormGroupValues() {
        if (this._formGroup) {
            this._formGroup.controls['generation-id'].setValue(this['generation-id']);
            this._formGroup.controls['updated'].setValue(this['updated']);
            this._formGroup.controls['pending'].setValue(this['pending']);
            this._formGroup.controls['min-version'].setValue(this['min-version']);
        }
    }
}

