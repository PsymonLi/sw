/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel, EnumDef } from './base-model';


export interface ISearchPolicySearchRequest {
    'tenant'?: string;
    'sg-policy'?: string;
    'app'?: string;
    'from-ip-address'?: string;
    'to-ip-address'?: string;
    'from-security-group'?: string;
    'to-security-group'?: string;
}


export class SearchPolicySearchRequest extends BaseModel implements ISearchPolicySearchRequest {
    /** Tenant Name, to perform query within a Tenant's scope.
This is an optional field, specified by user. In the backend
this field gets auto-filled & validated by apigw-hook based on
user login context. */
    'tenant': string = null;
    /** SGPolicy name is optional. If provided policy-search will
be limited to the specified SGpolicy object. */
    'sg-policy': string = null;
    'app': string = null;
    'from-ip-address': string = null;
    'to-ip-address': string = null;
    'from-security-group': string = null;
    'to-security-group': string = null;
    public static enumProperties: { [key: string] : EnumDef } = {
    }

    /**
     * Returns whether or not there is an enum property with a default value
    */
    public static hasDefaultEnumValue(prop) {
        return (SearchPolicySearchRequest.enumProperties[prop] != null &&
                        SearchPolicySearchRequest.enumProperties[prop].default != null &&
                        SearchPolicySearchRequest.enumProperties[prop].default != '');
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        this.setValues(values);
    }

    /**
     * set the values. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any): void {
        if (values && values['tenant'] != null) {
            this['tenant'] = values['tenant'];
        }
        if (values && values['sg-policy'] != null) {
            this['sg-policy'] = values['sg-policy'];
        }
        if (values && values['app'] != null) {
            this['app'] = values['app'];
        }
        if (values && values['from-ip-address'] != null) {
            this['from-ip-address'] = values['from-ip-address'];
        }
        if (values && values['to-ip-address'] != null) {
            this['to-ip-address'] = values['to-ip-address'];
        }
        if (values && values['from-security-group'] != null) {
            this['from-security-group'] = values['from-security-group'];
        }
        if (values && values['to-security-group'] != null) {
            this['to-security-group'] = values['to-security-group'];
        }
    }




    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'tenant': new FormControl(this['tenant']),
                'sg-policy': new FormControl(this['sg-policy']),
                'app': new FormControl(this['app']),
                'from-ip-address': new FormControl(this['from-ip-address']),
                'to-ip-address': new FormControl(this['to-ip-address']),
                'from-security-group': new FormControl(this['from-security-group']),
                'to-security-group': new FormControl(this['to-security-group']),
            });
        }
        return this._formGroup;
    }

    setFormGroupValues() {
        if (this._formGroup) {
            this._formGroup.controls['tenant'].setValue(this['tenant']);
            this._formGroup.controls['sg-policy'].setValue(this['sg-policy']);
            this._formGroup.controls['app'].setValue(this['app']);
            this._formGroup.controls['from-ip-address'].setValue(this['from-ip-address']);
            this._formGroup.controls['to-ip-address'].setValue(this['to-ip-address']);
            this._formGroup.controls['from-security-group'].setValue(this['from-security-group']);
            this._formGroup.controls['to-security-group'].setValue(this['to-security-group']);
        }
    }
}

