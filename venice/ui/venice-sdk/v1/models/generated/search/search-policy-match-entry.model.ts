/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel, PropInfoItem } from './base-model';

import { SecuritySGRule, ISecuritySGRule } from './security-sg-rule.model';

export interface ISearchPolicyMatchEntry {
    'rule'?: ISecuritySGRule;
    'index'?: number;
}


export class SearchPolicyMatchEntry extends BaseModel implements ISearchPolicyMatchEntry {
    'rule': SecuritySGRule = null;
    'index': number = null;
    public static propInfo: { [prop: string]: PropInfoItem } = {
        'rule': {
            type: 'object'
        },
        'index': {
            type: 'number'
        },
    }

    public getPropInfo(propName: string): PropInfoItem {
        return SearchPolicyMatchEntry.propInfo[propName];
    }

    /**
     * Returns whether or not there is an enum property with a default value
    */
    public static hasDefaultValue(prop) {
        return (SearchPolicyMatchEntry.propInfo[prop] != null &&
                        SearchPolicyMatchEntry.propInfo[prop].default != null &&
                        SearchPolicyMatchEntry.propInfo[prop].default != '');
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        this['rule'] = new SecuritySGRule();
        this.setValues(values);
    }

    /**
     * set the values for both the Model and the Form Group. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any, fillDefaults = true): void {
        if (values) {
            this['rule'].setValues(values['rule']);
        }
        if (values && values['index'] != null) {
            this['index'] = values['index'];
        } else if (fillDefaults && SearchPolicyMatchEntry.hasDefaultValue('index')) {
            this['index'] = SearchPolicyMatchEntry.propInfo['index'].default;
        }
        this.setFormGroupValuesToBeModelValues();
    }


    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'rule': this['rule'].$formGroup,
                'index': new FormControl(this['index']),
            });
        }
        return this._formGroup;
    }

    setModelToBeFormGroupValues() {
        this.setValues(this.$formGroup.value, false);
    }

    setFormGroupValuesToBeModelValues() {
        if (this._formGroup) {
            this['rule'].setFormGroupValuesToBeModelValues();
            this._formGroup.controls['index'].setValue(this['index']);
        }
    }
}

