/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel, PropInfoItem } from './base-model';

import { Metrics_queryObjectSelector, IMetrics_queryObjectSelector } from './metrics-query-object-selector.model';
import { Metrics_queryTimeRange, IMetrics_queryTimeRange } from './metrics-query-time-range.model';
import { Metrics_queryMetricSpec, IMetrics_queryMetricSpec } from './metrics-query-metric-spec.model';
import { Metrics_queryPaginationSpec, IMetrics_queryPaginationSpec } from './metrics-query-pagination-spec.model';

export interface IMetrics_queryQuerySpec {
    'kind'?: string;
    'api-version'?: string;
    'meta'?: IMetrics_queryObjectSelector;
    'time'?: IMetrics_queryTimeRange;
    'metrics'?: IMetrics_queryMetricSpec;
    'pagination'?: IMetrics_queryPaginationSpec;
}


export class Metrics_queryQuerySpec extends BaseModel implements IMetrics_queryQuerySpec {
    'kind': string = null;
    'api-version': string = null;
    'meta': Metrics_queryObjectSelector = null;
    'time': Metrics_queryTimeRange = null;
    'metrics': Metrics_queryMetricSpec = null;
    'pagination': Metrics_queryPaginationSpec = null;
    public static propInfo: { [prop: string]: PropInfoItem } = {
        'kind': {
            type: 'string'
        },
        'api-version': {
            type: 'string'
        },
        'meta': {
            type: 'object'
        },
        'time': {
            type: 'object'
        },
        'metrics': {
            type: 'object'
        },
        'pagination': {
            type: 'object'
        },
    }

    public getPropInfo(propName: string): PropInfoItem {
        return Metrics_queryQuerySpec.propInfo[propName];
    }

    /**
     * Returns whether or not there is an enum property with a default value
    */
    public static hasDefaultValue(prop) {
        return (Metrics_queryQuerySpec.propInfo[prop] != null &&
                        Metrics_queryQuerySpec.propInfo[prop].default != null &&
                        Metrics_queryQuerySpec.propInfo[prop].default != '');
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        this['meta'] = new Metrics_queryObjectSelector();
        this['time'] = new Metrics_queryTimeRange();
        this['metrics'] = new Metrics_queryMetricSpec();
        this['pagination'] = new Metrics_queryPaginationSpec();
        this.setValues(values);
    }

    /**
     * set the values. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any): void {
        if (values && values['kind'] != null) {
            this['kind'] = values['kind'];
        } else if (Metrics_queryQuerySpec.hasDefaultValue('kind')) {
            this['kind'] = Metrics_queryQuerySpec.propInfo['kind'].default;
        }
        if (values && values['api-version'] != null) {
            this['api-version'] = values['api-version'];
        } else if (Metrics_queryQuerySpec.hasDefaultValue('api-version')) {
            this['api-version'] = Metrics_queryQuerySpec.propInfo['api-version'].default;
        }
        if (values) {
            this['meta'].setValues(values['meta']);
        }
        if (values) {
            this['time'].setValues(values['time']);
        }
        if (values) {
            this['metrics'].setValues(values['metrics']);
        }
        if (values) {
            this['pagination'].setValues(values['pagination']);
        }
    }




    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'kind': new FormControl(this['kind']),
                'api-version': new FormControl(this['api-version']),
                'meta': this['meta'].$formGroup,
                'time': this['time'].$formGroup,
                'metrics': this['metrics'].$formGroup,
                'pagination': this['pagination'].$formGroup,
            });
        }
        return this._formGroup;
    }

    setFormGroupValues() {
        if (this._formGroup) {
            this._formGroup.controls['kind'].setValue(this['kind']);
            this._formGroup.controls['api-version'].setValue(this['api-version']);
            this['meta'].setFormGroupValues();
            this['time'].setFormGroupValues();
            this['metrics'].setFormGroupValues();
            this['pagination'].setFormGroupValues();
        }
    }
}

