/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, minLengthValidator, maxLengthValidator, required, enumValidator, patternValidator } from './validators';
import { BaseModel, PropInfoItem } from './base-model';

import { LabelsSelector, ILabelsSelector } from './labels-selector.model';
import { Metrics_queryQuerySpec_function,  } from './enums';
import { Metrics_queryPaginationSpec, IMetrics_queryPaginationSpec } from './metrics-query-pagination-spec.model';

export interface IMetrics_queryQuerySpec {
    'kind'?: string;
    'api-version'?: string;
    'name': string;
    'selector'?: ILabelsSelector;
    'fields'?: Array<string>;
    'function': Metrics_queryQuerySpec_function;
    'start-time'?: Date;
    'end-time'?: Date;
    'group-by-time'?: string;
    'group-by-field'?: string;
    'pagination'?: IMetrics_queryPaginationSpec;
}


export class Metrics_queryQuerySpec extends BaseModel implements IMetrics_queryQuerySpec {
    'kind': string = null;
    'api-version': string = null;
    /** Name is the name of the API object. */
    'name': string = null;
    'selector': LabelsSelector = null;
    /** must start and end with alpha numeric and can have alphanumeric, -, _, ., : */
    'fields': Array<string> = null;
    'function': Metrics_queryQuerySpec_function = null;
    'start-time': Date = null;
    'end-time': Date = null;
    /** should be a valid time duration
     */
    'group-by-time': string = null;
    /** must start and end with alpha numeric and can have alphanumeric, -, _, ., : */
    'group-by-field': string = null;
    'pagination': Metrics_queryPaginationSpec = null;
    public static propInfo: { [prop: string]: PropInfoItem } = {
        'kind': {
            type: 'string'
        },
        'api-version': {
            type: 'string'
        },
        'name': {
            description:  'Name is the name of the API object.',
            type: 'string'
        },
        'selector': {
            type: 'object'
        },
        'fields': {
            description:  'must start and end with alpha numeric and can have alphanumeric, -, _, ., :',
            type: 'Array<string>'
        },
        'function': {
            enum: Metrics_queryQuerySpec_function,
            default: 'NONE',
            type: 'string'
        },
        'start-time': {
            type: 'Date'
        },
        'end-time': {
            type: 'Date'
        },
        'group-by-time': {
            description:  'should be a valid time duration ',
            hint:  '2h',
            type: 'string'
        },
        'group-by-field': {
            description:  'must start and end with alpha numeric and can have alphanumeric, -, _, ., :',
            type: 'string'
        },
        'pagination': {
            type: 'object'
        },
    }

    public getPropInfo(propName: string): PropInfoItem {
        return Metrics_queryQuerySpec.propInfo[propName];
    }

    public getPropInfoConfig(): { [key:string]:PropInfoItem } {
        return Metrics_queryQuerySpec.propInfo;
    }

    /**
     * Returns whether or not there is an enum property with a default value
    */
    public static hasDefaultValue(prop) {
        return (Metrics_queryQuerySpec.propInfo[prop] != null &&
                        Metrics_queryQuerySpec.propInfo[prop].default != null &&
                        Metrics_queryQuerySpec.propInfo[prop].default != '');
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any, setDefaults:boolean = true) {
        super();
        this['selector'] = new LabelsSelector();
        this['fields'] = new Array<string>();
        this['pagination'] = new Metrics_queryPaginationSpec();
        this.setValues(values, setDefaults);
    }

    /**
     * set the values for both the Model and the Form Group. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any, fillDefaults = true): void {
        if (values && values['kind'] != null) {
            this['kind'] = values['kind'];
        } else if (fillDefaults && Metrics_queryQuerySpec.hasDefaultValue('kind')) {
            this['kind'] = Metrics_queryQuerySpec.propInfo['kind'].default;
        } else {
            this['kind'] = null
        }
        if (values && values['api-version'] != null) {
            this['api-version'] = values['api-version'];
        } else if (fillDefaults && Metrics_queryQuerySpec.hasDefaultValue('api-version')) {
            this['api-version'] = Metrics_queryQuerySpec.propInfo['api-version'].default;
        } else {
            this['api-version'] = null
        }
        if (values && values['name'] != null) {
            this['name'] = values['name'];
        } else if (fillDefaults && Metrics_queryQuerySpec.hasDefaultValue('name')) {
            this['name'] = Metrics_queryQuerySpec.propInfo['name'].default;
        } else {
            this['name'] = null
        }
        if (values) {
            this['selector'].setValues(values['selector'], fillDefaults);
        } else {
            this['selector'].setValues(null, fillDefaults);
        }
        if (values && values['fields'] != null) {
            this['fields'] = values['fields'];
        } else if (fillDefaults && Metrics_queryQuerySpec.hasDefaultValue('fields')) {
            this['fields'] = [ Metrics_queryQuerySpec.propInfo['fields'].default];
        } else {
            this['fields'] = [];
        }
        if (values && values['function'] != null) {
            this['function'] = values['function'];
        } else if (fillDefaults && Metrics_queryQuerySpec.hasDefaultValue('function')) {
            this['function'] = <Metrics_queryQuerySpec_function>  Metrics_queryQuerySpec.propInfo['function'].default;
        } else {
            this['function'] = null
        }
        if (values && values['start-time'] != null) {
            this['start-time'] = values['start-time'];
        } else if (fillDefaults && Metrics_queryQuerySpec.hasDefaultValue('start-time')) {
            this['start-time'] = Metrics_queryQuerySpec.propInfo['start-time'].default;
        } else {
            this['start-time'] = null
        }
        if (values && values['end-time'] != null) {
            this['end-time'] = values['end-time'];
        } else if (fillDefaults && Metrics_queryQuerySpec.hasDefaultValue('end-time')) {
            this['end-time'] = Metrics_queryQuerySpec.propInfo['end-time'].default;
        } else {
            this['end-time'] = null
        }
        if (values && values['group-by-time'] != null) {
            this['group-by-time'] = values['group-by-time'];
        } else if (fillDefaults && Metrics_queryQuerySpec.hasDefaultValue('group-by-time')) {
            this['group-by-time'] = Metrics_queryQuerySpec.propInfo['group-by-time'].default;
        } else {
            this['group-by-time'] = null
        }
        if (values && values['group-by-field'] != null) {
            this['group-by-field'] = values['group-by-field'];
        } else if (fillDefaults && Metrics_queryQuerySpec.hasDefaultValue('group-by-field')) {
            this['group-by-field'] = Metrics_queryQuerySpec.propInfo['group-by-field'].default;
        } else {
            this['group-by-field'] = null
        }
        if (values) {
            this['pagination'].setValues(values['pagination'], fillDefaults);
        } else {
            this['pagination'].setValues(null, fillDefaults);
        }
        this.setFormGroupValuesToBeModelValues();
    }


    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'kind': new FormControl(this['kind']),
                'api-version': new FormControl(this['api-version']),
                'name': new FormControl(this['name'], [required, minLengthValidator(1), maxLengthValidator(100), ]),
                'selector': this['selector'].$formGroup,
                'fields': new FormControl(this['fields']),
                'function': new FormControl(this['function'], [required, enumValidator(Metrics_queryQuerySpec_function), ]),
                'start-time': new FormControl(this['start-time']),
                'end-time': new FormControl(this['end-time']),
                'group-by-time': new FormControl(this['group-by-time']),
                'group-by-field': new FormControl(this['group-by-field'], [patternValidator('^[a-zA-Z0-9][\w\-\.\:]*[a-zA-Z0-9]$', 'must start and end with alpha numeric and can have alphanumeric, -, _, ., :'), ]),
                'pagination': this['pagination'].$formGroup,
            });
        }
        return this._formGroup;
    }

    setModelToBeFormGroupValues() {
        this.setValues(this.$formGroup.value, false);
    }

    setFormGroupValuesToBeModelValues() {
        if (this._formGroup) {
            this._formGroup.controls['kind'].setValue(this['kind']);
            this._formGroup.controls['api-version'].setValue(this['api-version']);
            this._formGroup.controls['name'].setValue(this['name']);
            this['selector'].setFormGroupValuesToBeModelValues();
            this._formGroup.controls['fields'].setValue(this['fields']);
            this._formGroup.controls['function'].setValue(this['function']);
            this._formGroup.controls['start-time'].setValue(this['start-time']);
            this._formGroup.controls['end-time'].setValue(this['end-time']);
            this._formGroup.controls['group-by-time'].setValue(this['group-by-time']);
            this._formGroup.controls['group-by-field'].setValue(this['group-by-field']);
            this['pagination'].setFormGroupValuesToBeModelValues();
        }
    }
}

