/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel, EnumDef } from './base-model';


export interface IMonitoringTimeWindow {
    'start-time'?: Date;
    'stop-time'?: Date;
}


export class MonitoringTimeWindow extends BaseModel implements IMonitoringTimeWindow {
    /** Start/Stop Time - when start time is not specified, it implies start NOW. */
    'start-time': Date;
    'stop-time': Date;
    public static enumProperties: { [key: string] : EnumDef } = {
    }

    /**
     * Returns whether or not there is an enum property with a default value
    */
    public static hasDefaultEnumValue(prop) {
        return (MonitoringTimeWindow.enumProperties[prop] != null &&
                        MonitoringTimeWindow.enumProperties[prop].default != null &&
                        MonitoringTimeWindow.enumProperties[prop].default != '');
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        this.setValues(values);
    }

    /**
     * set the values. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any): void {
        if (values && values['start-time'] != null) {
            this['start-time'] = values['start-time'];
        }
        if (values && values['stop-time'] != null) {
            this['stop-time'] = values['stop-time'];
        }
    }




    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'start-time': new FormControl(this['start-time']),
                'stop-time': new FormControl(this['stop-time']),
            });
        }
        return this._formGroup;
    }

    setFormGroupValues() {
        if (this._formGroup) {
            this._formGroup.controls['start-time'].setValue(this['start-time']);
            this._formGroup.controls['stop-time'].setValue(this['stop-time']);
        }
    }
}

