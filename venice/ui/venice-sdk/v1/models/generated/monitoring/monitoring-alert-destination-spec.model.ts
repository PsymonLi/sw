/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel, EnumDef } from './base-model';

import { MonitoringSNMPTrapServer, IMonitoringSNMPTrapServer } from './monitoring-snmp-trap-server.model';

export interface IMonitoringAlertDestinationSpec {
    'default'?: boolean;
    'email-list'?: Array<string>;
    'snmp-trap-servers'?: Array<IMonitoringSNMPTrapServer>;
}


export class MonitoringAlertDestinationSpec extends BaseModel implements IMonitoringAlertDestinationSpec {
    /** If set, this will be the default notification option for the alert policies unless otherwise
something else is mentioned. */
    'default': boolean;
    'email-list': Array<string>;
    'snmp-trap-servers': Array<MonitoringSNMPTrapServer>;
    public static enumProperties: { [key: string] : EnumDef } = {
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        this['email-list'] = new Array<string>();
        this['snmp-trap-servers'] = new Array<MonitoringSNMPTrapServer>();
        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any): void {
        if (values) {
            this['default'] = values['default'];
            this.fillModelArray<string>(this, 'email-list', values['email-list']);
            this.fillModelArray<MonitoringSNMPTrapServer>(this, 'snmp-trap-servers', values['snmp-trap-servers'], MonitoringSNMPTrapServer);
        }
    }

    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'default': new FormControl(this['default']),
                'email-list': new FormArray([]),
                'snmp-trap-servers': new FormArray([]),
            });
            // generate FormArray control elements
            this.fillFormArray<string>('email-list', this['email-list']);
            // generate FormArray control elements
            this.fillFormArray<MonitoringSNMPTrapServer>('snmp-trap-servers', this['snmp-trap-servers'], MonitoringSNMPTrapServer);
        }
        return this._formGroup;
    }

    setFormGroupValues() {
        if (this._formGroup) {
            this._formGroup.controls['default'].setValue(this['default']);
            this.fillModelArray<string>(this, 'email-list', this['email-list']);
            this.fillModelArray<MonitoringSNMPTrapServer>(this, 'snmp-trap-servers', this['snmp-trap-servers'], MonitoringSNMPTrapServer);
        }
    }
}

