/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, minLengthValidator, maxLengthValidator, required, enumValidator, patternValidator, CustomFormControl, CustomFormGroup } from '../../../utils/validators';
import { BaseModel, PropInfoItem } from '../basemodel/base-model';

import { MonitoringMirrorSessionStatus_oper_state,  MonitoringMirrorSessionStatus_oper_state_uihint  } from './enums';

export interface IMonitoringMirrorSessionStatus {
    'oper-state': MonitoringMirrorSessionStatus_oper_state;
    'started-at'?: Date;
}


export class MonitoringMirrorSessionStatus extends BaseModel implements IMonitoringMirrorSessionStatus {
    'oper-state': MonitoringMirrorSessionStatus_oper_state = null;
    'started-at': Date = null;
    public static propInfo: { [prop in keyof IMonitoringMirrorSessionStatus]: PropInfoItem } = {
        'oper-state': {
            enum: MonitoringMirrorSessionStatus_oper_state_uihint,
            default: 'none',
            required: true,
            type: 'string'
        },
        'started-at': {
            required: false,
            type: 'Date'
        },
    }

    public getPropInfo(propName: string): PropInfoItem {
        return MonitoringMirrorSessionStatus.propInfo[propName];
    }

    public getPropInfoConfig(): { [key:string]:PropInfoItem } {
        return MonitoringMirrorSessionStatus.propInfo;
    }

    /**
     * Returns whether or not there is an enum property with a default value
    */
    public static hasDefaultValue(prop) {
        return (MonitoringMirrorSessionStatus.propInfo[prop] != null &&
                        MonitoringMirrorSessionStatus.propInfo[prop].default != null);
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any, setDefaults:boolean = true) {
        super();
        this.setValues(values, setDefaults);
    }

    /**
     * set the values for both the Model and the Form Group. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any, fillDefaults = true): void {
        if (values && values['oper-state'] != null) {
            this['oper-state'] = values['oper-state'];
        } else if (fillDefaults && MonitoringMirrorSessionStatus.hasDefaultValue('oper-state')) {
            this['oper-state'] = <MonitoringMirrorSessionStatus_oper_state>  MonitoringMirrorSessionStatus.propInfo['oper-state'].default;
        } else {
            this['oper-state'] = null
        }
        if (values && values['started-at'] != null) {
            this['started-at'] = values['started-at'];
        } else if (fillDefaults && MonitoringMirrorSessionStatus.hasDefaultValue('started-at')) {
            this['started-at'] = MonitoringMirrorSessionStatus.propInfo['started-at'].default;
        } else {
            this['started-at'] = null
        }
        this.setFormGroupValuesToBeModelValues();
    }


    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'oper-state': CustomFormControl(new FormControl(this['oper-state'], [required, enumValidator(MonitoringMirrorSessionStatus_oper_state), ]), MonitoringMirrorSessionStatus.propInfo['oper-state']),
                'started-at': CustomFormControl(new FormControl(this['started-at']), MonitoringMirrorSessionStatus.propInfo['started-at']),
            });
        }
        return this._formGroup;
    }

    setModelToBeFormGroupValues() {
        this.setValues(this.$formGroup.value, false);
    }

    setFormGroupValuesToBeModelValues() {
        if (this._formGroup) {
            this._formGroup.controls['oper-state'].setValue(this['oper-state']);
            this._formGroup.controls['started-at'].setValue(this['started-at']);
        }
    }
}

