/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel, EnumDef } from './base-model';


export interface IMonitoringEventSource {
    'component'?: string;
    'node-name'?: string;
}


export class MonitoringEventSource extends BaseModel implements IMonitoringEventSource {
    /** Component from which the event is generated. */
    'component': string;
    /** Name of the venice or workload node which is generating the event. */
    'node-name': string;
    public static enumProperties: { [key: string] : EnumDef } = {
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any): void {
        if (values) {
            this['component'] = values['component'];
            this['node-name'] = values['node-name'];
        }
    }

    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'component': new FormControl(this['component']),
                'node-name': new FormControl(this['node-name']),
            });
        }
        return this._formGroup;
    }

    setFormGroupValues() {
        if (this._formGroup) {
            this._formGroup.controls['component'].setValue(this['component']);
            this._formGroup.controls['node-name'].setValue(this['node-name']);
        }
    }
}

