/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel, PropInfoItem } from './base-model';

import { MonitoringAutoMsgAlertDestinationWatchHelperWatchEvent, IMonitoringAutoMsgAlertDestinationWatchHelperWatchEvent } from './monitoring-auto-msg-alert-destination-watch-helper-watch-event.model';

export interface IMonitoringAutoMsgAlertDestinationWatchHelper {
    'Events'?: Array<IMonitoringAutoMsgAlertDestinationWatchHelperWatchEvent>;
}


export class MonitoringAutoMsgAlertDestinationWatchHelper extends BaseModel implements IMonitoringAutoMsgAlertDestinationWatchHelper {
    'Events': Array<MonitoringAutoMsgAlertDestinationWatchHelperWatchEvent> = null;
    public static propInfo: { [prop: string]: PropInfoItem } = {
        'Events': {
            type: 'object'
        },
    }

    public getPropInfo(propName: string): PropInfoItem {
        return MonitoringAutoMsgAlertDestinationWatchHelper.propInfo[propName];
    }

    /**
     * Returns whether or not there is an enum property with a default value
    */
    public static hasDefaultValue(prop) {
        return (MonitoringAutoMsgAlertDestinationWatchHelper.propInfo[prop] != null &&
                        MonitoringAutoMsgAlertDestinationWatchHelper.propInfo[prop].default != null &&
                        MonitoringAutoMsgAlertDestinationWatchHelper.propInfo[prop].default != '');
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        this['Events'] = new Array<MonitoringAutoMsgAlertDestinationWatchHelperWatchEvent>();
        this.setValues(values);
    }

    /**
     * set the values for both the Model and the Form Group. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any, fillDefaults = true): void {
        if (values) {
            this.fillModelArray<MonitoringAutoMsgAlertDestinationWatchHelperWatchEvent>(this, 'Events', values['Events'], MonitoringAutoMsgAlertDestinationWatchHelperWatchEvent);
        }
        this.setFormGroupValuesToBeModelValues();
    }


    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'Events': new FormArray([]),
            });
            // generate FormArray control elements
            this.fillFormArray<MonitoringAutoMsgAlertDestinationWatchHelperWatchEvent>('Events', this['Events'], MonitoringAutoMsgAlertDestinationWatchHelperWatchEvent);
        }
        return this._formGroup;
    }

    setModelToBeFormGroupValues() {
        this.setValues(this.$formGroup.value, false);
    }

    setFormGroupValuesToBeModelValues() {
        if (this._formGroup) {
            this.fillModelArray<MonitoringAutoMsgAlertDestinationWatchHelperWatchEvent>(this, 'Events', this['Events'], MonitoringAutoMsgAlertDestinationWatchHelperWatchEvent);
        }
    }
}

