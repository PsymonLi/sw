/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel } from './base-model';

import { MonitoringFwlogExport } from './monitoring-fwlog-export.model';

export interface IMonitoringFwlogSpec {
    'retention-time'?: string;
    'filter'?: Array<string>;
    'exports'?: Array<MonitoringFwlogExport>;
}


export class MonitoringFwlogSpec extends BaseModel implements IMonitoringFwlogSpec {
    'retention-time': string;
    'filter': Array<string>;
    'exports': Array<MonitoringFwlogExport>;
    public static enumProperties = {
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        this['filter'] = new Array<string>();
        this['exports'] = new Array<MonitoringFwlogExport>();
        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any): void {
        if (values) {
            this['retention-time'] = values['retention-time'];
            this.fillModelArray<string>(this, 'filter', values['filter']);
            this.fillModelArray<MonitoringFwlogExport>(this, 'exports', values['exports'], MonitoringFwlogExport);
        }
    }

    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'retention-time': new FormControl(this['retention-time']),
                'filter': new FormArray([]),
                'exports': new FormArray([]),
            });
            // generate FormArray control elements
            this.fillFormArray<string>('filter', this['filter']);
            // generate FormArray control elements
            this.fillFormArray<MonitoringFwlogExport>('exports', this['exports'], MonitoringFwlogExport);
        }
        return this._formGroup;
    }

    setFormGroupValues() {
        if (this._formGroup) {
            this._formGroup.controls['retention-time'].setValue(this['retention-time']);
            this.fillModelArray<string>(this, 'filter', this['filter']);
            this.fillModelArray<MonitoringFwlogExport>(this, 'exports', this['exports'], MonitoringFwlogExport);
        }
    }
}

