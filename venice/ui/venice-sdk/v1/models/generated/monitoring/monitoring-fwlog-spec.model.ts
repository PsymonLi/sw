/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel, PropInfoItem } from './base-model';

import { MonitoringFwlogSpec_filter,  MonitoringFwlogSpec_filter_uihint  } from './enums';
import { MonitoringFwlogExport, IMonitoringFwlogExport } from './monitoring-fwlog-export.model';

export interface IMonitoringFwlogSpec {
    'retention-time'?: string;
    'filter'?: Array<MonitoringFwlogSpec_filter>;
    'exports'?: Array<IMonitoringFwlogExport>;
}


export class MonitoringFwlogSpec extends BaseModel implements IMonitoringFwlogSpec {
    'retention-time': string = null;
    'filter': Array<MonitoringFwlogSpec_filter> = null;
    'exports': Array<MonitoringFwlogExport> = null;
    public static propInfo: { [prop: string]: PropInfoItem } = {
        'retention-time': {
            type: 'string'
        },
        'filter': {
            enum: MonitoringFwlogSpec_filter_uihint,
            default: 'FWLOG_ALL',
            type: 'Array<string>'
        },
        'exports': {
            type: 'object'
        },
    }

    public getPropInfo(propName: string): PropInfoItem {
        return MonitoringFwlogSpec.propInfo[propName];
    }

    /**
     * Returns whether or not there is an enum property with a default value
    */
    public static hasDefaultValue(prop) {
        return (MonitoringFwlogSpec.propInfo[prop] != null &&
                        MonitoringFwlogSpec.propInfo[prop].default != null &&
                        MonitoringFwlogSpec.propInfo[prop].default != '');
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        this['filter'] = new Array<MonitoringFwlogSpec_filter>();
        this['exports'] = new Array<MonitoringFwlogExport>();
        this.setValues(values);
    }

    /**
     * set the values. If a value isn't provided and we have a default, we use that.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any): void {
        if (values && values['retention-time'] != null) {
            this['retention-time'] = values['retention-time'];
        } else if (MonitoringFwlogSpec.hasDefaultValue('retention-time')) {
            this['retention-time'] = MonitoringFwlogSpec.propInfo['retention-time'].default;
        }
        if (values) {
            this.fillModelArray<MonitoringFwlogSpec_filter>(this, 'filter', values['filter']);
        }
        if (values) {
            this.fillModelArray<MonitoringFwlogExport>(this, 'exports', values['exports'], MonitoringFwlogExport);
        }
    }




    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'retention-time': new FormControl(this['retention-time']),
                'filter': new FormArray([]),
                'exports': new FormArray([]),
            });
            // generate FormArray control elements
            this.fillFormArray<MonitoringFwlogSpec_filter>('filter', this['filter']);
            // generate FormArray control elements
            this.fillFormArray<MonitoringFwlogExport>('exports', this['exports'], MonitoringFwlogExport);
        }
        return this._formGroup;
    }

    setFormGroupValues() {
        if (this._formGroup) {
            this._formGroup.controls['retention-time'].setValue(this['retention-time']);
            this.fillModelArray<MonitoringFwlogSpec_filter>(this, 'filter', this['filter']);
            this.fillModelArray<MonitoringFwlogExport>(this, 'exports', this['exports'], MonitoringFwlogExport);
        }
    }
}

