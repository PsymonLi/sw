/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { Validators, FormControl, FormGroup, FormArray, ValidatorFn } from '@angular/forms';
import { minValueValidator, maxValueValidator, enumValidator } from './validators';
import { BaseModel } from './base-model';

import { ApiExportConfig } from './api-export-config.model';
import { MonitoringFwlogExport_format } from './enums';
import { ApiSyslogExportConfig } from './api-syslog-export-config.model';

export interface IMonitoringFwlogExport {
    'targets'?: Array<ApiExportConfig>;
    'format'?: MonitoringFwlogExport_format;
    'export-filter'?: Array<string>;
    'syslog-config'?: ApiSyslogExportConfig;
}


export class MonitoringFwlogExport extends BaseModel implements IMonitoringFwlogExport {
    'targets': Array<ApiExportConfig>;
    'format': MonitoringFwlogExport_format;
    'export-filter': Array<string>;
    'syslog-config': ApiSyslogExportConfig;
    public static enumProperties = {
        'format': MonitoringFwlogExport_format,
    }

    /**
     * constructor
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    constructor(values?: any) {
        super();
        this['targets'] = new Array<ApiExportConfig>();
        this['export-filter'] = new Array<string>();
        this['syslog-config'] = new ApiSyslogExportConfig();
        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: any): void {
        if (values) {
            this.fillModelArray<ApiExportConfig>(this, 'targets', values['targets'], ApiExportConfig);
            this['format'] = values['format'];
            this.fillModelArray<string>(this, 'export-filter', values['export-filter']);
            this['syslog-config'].setValues(values['syslog-config']);
        }
    }

    protected getFormGroup(): FormGroup {
        if (!this._formGroup) {
            this._formGroup = new FormGroup({
                'targets': new FormArray([]),
                'format': new FormControl(this['format'], [enumValidator(MonitoringFwlogExport_format), ]),
                'export-filter': new FormArray([]),
                'syslog-config': this['syslog-config'].$formGroup,
            });
            // generate FormArray control elements
            this.fillFormArray<ApiExportConfig>('targets', this['targets'], ApiExportConfig);
            // generate FormArray control elements
            this.fillFormArray<string>('export-filter', this['export-filter']);
        }
        return this._formGroup;
    }

    setFormGroupValues() {
        if (this._formGroup) {
            this.fillModelArray<ApiExportConfig>(this, 'targets', this['targets'], ApiExportConfig);
            this._formGroup.controls['format'].setValue(this['format']);
            this.fillModelArray<string>(this, 'export-filter', this['export-filter']);
            this['syslog-config'].setFormGroupValues();
        }
    }
}

