// Code generated by MockGen. DO NOT EDIT.
// Source: credentials_manager.go

// Package mock_minio is a generated GoMock package.
package mock_minio

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	minio "github.com/pensando/sw/venice/utils/objstore/minio"
)

// MockCredentialsManager is a mock of CredentialsManager interface
type MockCredentialsManager struct {
	ctrl     *gomock.Controller
	recorder *MockCredentialsManagerMockRecorder
}

// MockCredentialsManagerMockRecorder is the mock recorder for MockCredentialsManager
type MockCredentialsManagerMockRecorder struct {
	mock *MockCredentialsManager
}

// NewMockCredentialsManager creates a new mock instance
func NewMockCredentialsManager(ctrl *gomock.Controller) *MockCredentialsManager {
	mock := &MockCredentialsManager{ctrl: ctrl}
	mock.recorder = &MockCredentialsManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCredentialsManager) EXPECT() *MockCredentialsManagerMockRecorder {
	return m.recorder
}

// GetCredentials mocks base method
func (m *MockCredentialsManager) GetCredentials() (*minio.Credentials, error) {
	ret := m.ctrl.Call(m, "GetCredentials")
	ret0, _ := ret[0].(*minio.Credentials)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCredentials indicates an expected call of GetCredentials
func (mr *MockCredentialsManagerMockRecorder) GetCredentials() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCredentials", reflect.TypeOf((*MockCredentialsManager)(nil).GetCredentials))
}

// CreateCredentials mocks base method
func (m *MockCredentialsManager) CreateCredentials() (*minio.Credentials, error) {
	ret := m.ctrl.Call(m, "CreateCredentials")
	ret0, _ := ret[0].(*minio.Credentials)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCredentials indicates an expected call of CreateCredentials
func (mr *MockCredentialsManagerMockRecorder) CreateCredentials() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCredentials", reflect.TypeOf((*MockCredentialsManager)(nil).CreateCredentials))
}
