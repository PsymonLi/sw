package ipfix

import (
	"fmt"
	"testing"

	"github.com/pensando/sw/venice/utils/testutils"
)

func TestCreateTemplateMsg(t *testing.T) {
	tp := []byte{0, 10, 1, 196, 93, 18, 83, 144, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 180, 1, 1, 0, 34, 0, 234, 0, 4,
		0, 8, 0, 4, 0, 12, 0, 4, 0, 4, 0, 1, 0, 7, 0, 2, 0, 11, 0, 2, 130, 1, 0, 3, 0, 0, 202, 174, 130, 2, 0, 1, 0,
		0, 202, 174, 0, 192, 0, 1, 0, 32, 0, 2, 0, 184, 0, 4, 0, 185, 0, 4, 0, 186, 0, 2, 0, 238, 0, 1, 130, 3, 0,
		1, 0, 0, 202, 174, 130, 4, 0, 2, 0, 0, 202, 174, 130, 5, 0, 4, 0, 0, 202, 174, 0, 210, 0, 2, 130, 6, 0, 4, 0,
		0, 202, 174, 0, 148, 0, 4, 0, 14, 0, 2, 133, 1, 0, 2, 0, 0, 202, 174, 0, 86, 0, 8, 0, 85, 0, 8, 0, 2, 0, 4, 0,
		1, 0, 4, 0, 135, 0, 8, 0, 134, 0, 8, 0, 133, 0, 4, 0, 132, 0, 4, 0, 210, 0, 4, 0, 152, 0, 8, 0, 153, 0, 8, 133,
		6, 0, 8, 0, 0, 202, 174, 1, 2, 0, 35, 0, 234, 0, 4, 0, 27, 0, 16, 0, 28, 0, 16, 0, 4, 0, 1, 0, 7, 0, 2, 0, 11,
		0, 2, 0, 210, 0, 1, 130, 1, 0, 3, 0, 0, 202, 174, 130, 2, 0, 1, 0, 0, 202, 174, 0, 192, 0, 1, 0, 32, 0, 2, 0,
		184, 0, 4, 0, 185, 0, 4, 0, 186, 0, 2, 0, 238, 0, 1, 130, 3, 0, 1, 0, 0, 202, 174, 130, 4, 0, 2, 0, 0, 202,
		174, 130, 5, 0, 4, 0, 0, 202, 174, 0, 210, 0, 2, 130, 6, 0, 4, 0, 0, 202, 174, 0, 148, 0, 4, 0, 14, 0, 2,
		133, 1, 0, 2, 0, 0, 202, 174, 0, 86, 0, 8, 0, 85, 0, 8, 0, 2, 0, 4, 0, 1, 0, 4, 0, 135, 0, 8, 0, 134, 0, 8, 0,
		133, 0, 4, 0, 132, 0, 4, 0, 210, 0, 4, 0, 152, 0, 8, 0, 153, 0, 8, 133, 6, 0, 8, 0, 0, 202, 174, 1, 3, 0, 18,
		0, 56, 0, 6, 0, 80, 0, 6, 1, 0, 0, 2, 0, 148, 0, 4, 0, 14, 0, 2, 133, 1, 0, 2, 0, 0, 202, 174, 0, 86, 0, 8,
		0, 85, 0, 8, 0, 2, 0, 4, 0, 1, 0, 4, 0, 135, 0, 8, 0, 134, 0, 8, 0, 133, 0, 4, 0, 132, 0, 4, 0, 210, 0, 4,
		0, 152, 0, 8, 0, 153, 0, 8, 133, 6, 0, 8, 0, 0, 202, 174}

	b, err := CreateTemplateMsg()
	testutils.AssertOk(t, err, "failed to generate template")
	testutils.Assert(t, len(b) == len(tp), "invalid length, got %d expected %d", len(tp), len(b))
	for i := 0; i < len(tp); i++ {
		if i >= 4 && i < 8 { //skip time stamp
			continue
		}
		testutils.Assert(t, tp[i] == tp[i], "didnt match at %v, got %v expected %v", i, tp[i], tp[i])
	}
	fmt.Printf("%x", b[0])
}
