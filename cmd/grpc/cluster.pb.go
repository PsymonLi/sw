// Code generated by protoc-gen-go.
// source: cluster.proto
// DO NOT EDIT!

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	cluster.proto

It has these top-level messages:
	ClusterPreJoinReq
	ClusterPreJoinResp
	QuorumMember
	QuorumConfig
	ClusterJoinReq
	ClusterJoinResp
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Cluster PreJoin request
type ClusterPreJoinReq struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Uuid      string `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	VirtualIp string `protobuf:"bytes,3,opt,name=virtual_ip,json=virtualIp" json:"virtual_ip,omitempty"`
}

func (m *ClusterPreJoinReq) Reset()                    { *m = ClusterPreJoinReq{} }
func (m *ClusterPreJoinReq) String() string            { return proto.CompactTextString(m) }
func (*ClusterPreJoinReq) ProtoMessage()               {}
func (*ClusterPreJoinReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ClusterPreJoinReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClusterPreJoinReq) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ClusterPreJoinReq) GetVirtualIp() string {
	if m != nil {
		return m.VirtualIp
	}
	return ""
}

// Cluster PreJoin response
type ClusterPreJoinResp struct {
	SwVersion string `protobuf:"bytes,1,opt,name=sw_version,json=swVersion" json:"sw_version,omitempty"`
}

func (m *ClusterPreJoinResp) Reset()                    { *m = ClusterPreJoinResp{} }
func (m *ClusterPreJoinResp) String() string            { return proto.CompactTextString(m) }
func (*ClusterPreJoinResp) ProtoMessage()               {}
func (*ClusterPreJoinResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ClusterPreJoinResp) GetSwVersion() string {
	if m != nil {
		return m.SwVersion
	}
	return ""
}

// Quorum member
type QuorumMember struct {
	Id         uint64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name       string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	PeerUrls   []string `protobuf:"bytes,3,rep,name=peer_urls,json=peerUrls" json:"peer_urls,omitempty"`
	ClientUrls []string `protobuf:"bytes,4,rep,name=client_urls,json=clientUrls" json:"client_urls,omitempty"`
}

func (m *QuorumMember) Reset()                    { *m = QuorumMember{} }
func (m *QuorumMember) String() string            { return proto.CompactTextString(m) }
func (*QuorumMember) ProtoMessage()               {}
func (*QuorumMember) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *QuorumMember) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *QuorumMember) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *QuorumMember) GetPeerUrls() []string {
	if m != nil {
		return m.PeerUrls
	}
	return nil
}

func (m *QuorumMember) GetClientUrls() []string {
	if m != nil {
		return m.ClientUrls
	}
	return nil
}

// Quorum configuration
type QuorumConfig struct {
	Id            string          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	QuorumMembers []*QuorumMember `protobuf:"bytes,2,rep,name=quorum_members,json=quorumMembers" json:"quorum_members,omitempty"`
}

func (m *QuorumConfig) Reset()                    { *m = QuorumConfig{} }
func (m *QuorumConfig) String() string            { return proto.CompactTextString(m) }
func (*QuorumConfig) ProtoMessage()               {}
func (*QuorumConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *QuorumConfig) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *QuorumConfig) GetQuorumMembers() []*QuorumMember {
	if m != nil {
		return m.QuorumMembers
	}
	return nil
}

// Cluster Join request
type ClusterJoinReq struct {
	Name         string        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Uuid         string        `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	VirtualIp    string        `protobuf:"bytes,3,opt,name=virtual_ip,json=virtualIp" json:"virtual_ip,omitempty"`
	QuorumConfig *QuorumConfig `protobuf:"bytes,4,opt,name=quorum_config,json=quorumConfig" json:"quorum_config,omitempty"`
}

func (m *ClusterJoinReq) Reset()                    { *m = ClusterJoinReq{} }
func (m *ClusterJoinReq) String() string            { return proto.CompactTextString(m) }
func (*ClusterJoinReq) ProtoMessage()               {}
func (*ClusterJoinReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ClusterJoinReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClusterJoinReq) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ClusterJoinReq) GetVirtualIp() string {
	if m != nil {
		return m.VirtualIp
	}
	return ""
}

func (m *ClusterJoinReq) GetQuorumConfig() *QuorumConfig {
	if m != nil {
		return m.QuorumConfig
	}
	return nil
}

// Cluster Join response
type ClusterJoinResp struct {
}

func (m *ClusterJoinResp) Reset()                    { *m = ClusterJoinResp{} }
func (m *ClusterJoinResp) String() string            { return proto.CompactTextString(m) }
func (*ClusterJoinResp) ProtoMessage()               {}
func (*ClusterJoinResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func init() {
	proto.RegisterType((*ClusterPreJoinReq)(nil), "grpc.ClusterPreJoinReq")
	proto.RegisterType((*ClusterPreJoinResp)(nil), "grpc.ClusterPreJoinResp")
	proto.RegisterType((*QuorumMember)(nil), "grpc.QuorumMember")
	proto.RegisterType((*QuorumConfig)(nil), "grpc.QuorumConfig")
	proto.RegisterType((*ClusterJoinReq)(nil), "grpc.ClusterJoinReq")
	proto.RegisterType((*ClusterJoinResp)(nil), "grpc.ClusterJoinResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for Cluster service

type ClusterClient interface {
	PreJoin(ctx context.Context, in *ClusterPreJoinReq, opts ...grpc1.CallOption) (*ClusterPreJoinResp, error)
	Join(ctx context.Context, in *ClusterJoinReq, opts ...grpc1.CallOption) (*ClusterJoinResp, error)
}

type clusterClient struct {
	cc *grpc1.ClientConn
}

func NewClusterClient(cc *grpc1.ClientConn) ClusterClient {
	return &clusterClient{cc}
}

func (c *clusterClient) PreJoin(ctx context.Context, in *ClusterPreJoinReq, opts ...grpc1.CallOption) (*ClusterPreJoinResp, error) {
	out := new(ClusterPreJoinResp)
	err := grpc1.Invoke(ctx, "/grpc.Cluster/PreJoin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterClient) Join(ctx context.Context, in *ClusterJoinReq, opts ...grpc1.CallOption) (*ClusterJoinResp, error) {
	out := new(ClusterJoinResp)
	err := grpc1.Invoke(ctx, "/grpc.Cluster/Join", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Cluster service

type ClusterServer interface {
	PreJoin(context.Context, *ClusterPreJoinReq) (*ClusterPreJoinResp, error)
	Join(context.Context, *ClusterJoinReq) (*ClusterJoinResp, error)
}

func RegisterClusterServer(s *grpc1.Server, srv ClusterServer) {
	s.RegisterService(&_Cluster_serviceDesc, srv)
}

func _Cluster_PreJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterPreJoinReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServer).PreJoin(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Cluster/PreJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServer).PreJoin(ctx, req.(*ClusterPreJoinReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cluster_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterJoinReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServer).Join(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Cluster/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServer).Join(ctx, req.(*ClusterJoinReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cluster_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "grpc.Cluster",
	HandlerType: (*ClusterServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "PreJoin",
			Handler:    _Cluster_PreJoin_Handler,
		},
		{
			MethodName: "Join",
			Handler:    _Cluster_Join_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "cluster.proto",
}

func init() { proto.RegisterFile("cluster.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 343 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x92, 0x4b, 0x4b, 0x3b, 0x31,
	0x14, 0xc5, 0xff, 0xf3, 0xe0, 0x5f, 0xe7, 0xf6, 0x21, 0x0d, 0x8a, 0x41, 0x11, 0x87, 0xac, 0xba,
	0xea, 0xa2, 0x45, 0xc4, 0x8d, 0x9b, 0xae, 0x14, 0x04, 0x1d, 0x50, 0xd0, 0xcd, 0xd0, 0x4e, 0x63,
	0x09, 0xcc, 0x23, 0x93, 0x4c, 0xda, 0xad, 0x1f, 0xc1, 0x8f, 0x2c, 0x79, 0x54, 0xa6, 0xb5, 0x4b,
	0x77, 0xc9, 0xef, 0xdc, 0x9b, 0x73, 0xe6, 0xce, 0x85, 0x7e, 0x96, 0x2b, 0xd9, 0x50, 0x31, 0xe6,
	0xa2, 0x6a, 0x2a, 0x14, 0xae, 0x04, 0xcf, 0xc8, 0x3b, 0x0c, 0x67, 0x16, 0x3f, 0x09, 0xfa, 0x50,
	0xb1, 0x32, 0xa1, 0x35, 0x42, 0x10, 0x96, 0xf3, 0x82, 0x62, 0x2f, 0xf6, 0x46, 0x51, 0x62, 0xce,
	0x9a, 0x29, 0xc5, 0x96, 0xd8, 0xb7, 0x4c, 0x9f, 0xd1, 0x25, 0xc0, 0x9a, 0x89, 0x46, 0xcd, 0xf3,
	0x94, 0x71, 0x1c, 0x18, 0x25, 0x72, 0xe4, 0x9e, 0x93, 0x29, 0xa0, 0xfd, 0xb7, 0x25, 0xd7, 0x4d,
	0x72, 0x93, 0xae, 0xa9, 0x90, 0xac, 0x2a, 0x9d, 0x45, 0x24, 0x37, 0xaf, 0x16, 0x10, 0x0e, 0xbd,
	0x67, 0x55, 0x09, 0x55, 0x3c, 0xd2, 0x62, 0x41, 0x05, 0x1a, 0x80, 0xcf, 0x96, 0xa6, 0x2c, 0x4c,
	0x7c, 0xb6, 0xfc, 0xc9, 0xe6, 0xb7, 0xb2, 0x5d, 0x40, 0xc4, 0x29, 0x15, 0xa9, 0x12, 0xb9, 0xc4,
	0x41, 0x1c, 0x8c, 0xa2, 0xe4, 0x48, 0x83, 0x17, 0x91, 0x4b, 0x74, 0x05, 0xdd, 0x2c, 0x67, 0xb4,
	0x6c, 0xac, 0x1c, 0x1a, 0x19, 0x2c, 0xd2, 0x05, 0xe4, 0x6d, 0xeb, 0x38, 0xab, 0xca, 0x0f, 0xb6,
	0x6a, 0x39, 0x46, 0xc6, 0xf1, 0x16, 0x06, 0xb5, 0xd1, 0xd3, 0xc2, 0x44, 0x92, 0xd8, 0x8f, 0x83,
	0x51, 0x77, 0x82, 0xc6, 0x7a, 0x82, 0xe3, 0x76, 0xda, 0xa4, 0x5f, 0xb7, 0x6e, 0x92, 0x7c, 0x79,
	0x30, 0x70, 0x23, 0xf8, 0xdb, 0xd9, 0xa2, 0x1b, 0x70, 0x56, 0x69, 0x66, 0x52, 0xe3, 0x30, 0xf6,
	0xf6, 0x33, 0xd9, 0xef, 0x49, 0x7a, 0x75, 0xeb, 0x46, 0x86, 0x70, 0xbc, 0x93, 0x48, 0xf2, 0xc9,
	0xa7, 0x07, 0x1d, 0xc7, 0xd0, 0x1d, 0x74, 0xdc, 0xcf, 0x42, 0x67, 0xf6, 0xad, 0x5f, 0xeb, 0x71,
	0x8e, 0x0f, 0x0b, 0x92, 0x93, 0x7f, 0xe8, 0x1a, 0x42, 0xd3, 0x7c, 0xb2, 0x53, 0xb3, 0xed, 0x3c,
	0x3d, 0x40, 0x75, 0xdb, 0xe2, 0xbf, 0xd9, 0xc9, 0xe9, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa9,
	0x07, 0xa7, 0xb9, 0xa4, 0x02, 0x00, 0x00,
}
