/*
 * Copyright (c) 2018, Pensando Systems Inc.
 */

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <string.h>
#include <stdint.h>
#include <math.h>
#include "logger.h"
#include "nic/asic/capri/design/common/cap_addr_define.h"
#include "nic/asic/capri/model/cap_top/csr_defines/cap_dpp_c_hdr.h"
#include "nic/asic/capri/model/cap_top/csr_defines/cap_dpr_c_hdr.h"
#include "nic/asic/capri/model/cap_top/csr_defines/cap_pics_c_hdr.h"
#include "nic/asic/capri/model/cap_top/csr_defines/cap_wa_c_hdr.h"
#include "nic/asic/capri/model/cap_top/csr_defines/cap_te_c_hdr.h"
#include "nic/asic/capri/model/cap_top/csr_defines/cap_mpu_c_hdr.h"
#include "nic/asic/capri/model/cap_top/csr_defines/cap_hens_c_hdr.h"
#include "nic/asic/capri/model/cap_top/csr_defines/cap_mpns_c_hdr.h"
#include "nic/asic/capri/model/cap_top/csr_defines/cap_pbc_c_hdr.h"
#include "nic/asic/capri/model/cap_top/csr_defines/cap_pbm_c_hdr.h"
#include "nic/asic/capri/model/cap_top/csr_defines/cap_mc_c_hdr.h"

#define DPP0_INT_CREDIT CAP_ADDR_BASE_DPP_DPP_0_OFFSET + CAP_DPP_CSR_INT_CREDIT_INTREG_BYTE_ADDRESS
#define DPP1_INT_CREDIT CAP_ADDR_BASE_DPP_DPP_1_OFFSET + CAP_DPP_CSR_INT_CREDIT_INTREG_BYTE_ADDRESS
#define DPP0_INT_FIFO CAP_ADDR_BASE_DPP_DPP_0_OFFSET + CAP_DPP_CSR_INT_FIFO_INTREG_BYTE_ADDRESS
#define DPP1_INT_FIFO CAP_ADDR_BASE_DPP_DPP_1_OFFSET + CAP_DPP_CSR_INT_FIFO_INTREG_BYTE_ADDRESS
#define DPP0_INT_REG1 CAP_ADDR_BASE_DPP_DPP_0_OFFSET + CAP_DPP_CSR_INT_REG1_INTREG_BYTE_ADDRESS
#define DPP0_INT_REG2 CAP_ADDR_BASE_DPP_DPP_0_OFFSET + CAP_DPP_CSR_INT_REG2_INTREG_BYTE_ADDRESS
#define DPP1_INT_REG1 CAP_ADDR_BASE_DPP_DPP_1_OFFSET + CAP_DPP_CSR_INT_REG1_INTREG_BYTE_ADDRESS
#define DPP1_INT_REG2 CAP_ADDR_BASE_DPP_DPP_1_OFFSET + CAP_DPP_CSR_INT_REG2_INTREG_BYTE_ADDRESS
#define DPP0_INT_SPARE CAP_ADDR_BASE_DPP_DPP_0_OFFSET + CAP_DPP_CSR_INT_SPARE_INTREG_BYTE_ADDRESS
#define DPP1_INT_SPARE CAP_ADDR_BASE_DPP_DPP_1_OFFSET + CAP_DPP_CSR_INT_SPARE_INTREG_BYTE_ADDRESS
#define DPP0_INT_SRAMS_ECC CAP_ADDR_BASE_DPP_DPP_0_OFFSET + CAP_DPP_CSR_INT_SRAMS_ECC_INTREG_BYTE_ADDRESS
#define DPP1_INT_SRAMS_ECC CAP_ADDR_BASE_DPP_DPP_1_OFFSET + CAP_DPP_CSR_INT_SRAMS_ECC_INTREG_BYTE_ADDRESS
#define DPR0_INT_CREDIT CAP_ADDR_BASE_DPR_DPR_0_OFFSET + CAP_DPR_CSR_INT_CREDIT_INTREG_BYTE_ADDRESS
#define DPR1_INT_CREDIT CAP_ADDR_BASE_DPR_DPR_1_OFFSET + CAP_DPR_CSR_INT_CREDIT_INTREG_BYTE_ADDRESS
#define DPR0_INT_FIFO CAP_ADDR_BASE_DPR_DPR_0_OFFSET + CAP_DPR_CSR_INT_FIFO_INTREG_BYTE_ADDRESS
#define DPR1_INT_FIFO CAP_ADDR_BASE_DPR_DPR_1_OFFSET + CAP_DPR_CSR_INT_FIFO_INTREG_BYTE_ADDRESS
#define DPR0_INT_FLOP_FIFO CAP_ADDR_BASE_DPR_DPR_0_OFFSET + CAP_DPR_CSR_INT_FLOP_FIFO_0_INTREG_BYTE_ADDRESS
#define DPR1_INT_FLOP_FIFO CAP_ADDR_BASE_DPR_DPR_1_OFFSET + CAP_DPR_CSR_INT_FLOP_FIFO_1_INTREG_BYTE_ADDRESS
#define DPR0_INT_REG1 CAP_ADDR_BASE_DPR_DPR_0_OFFSET + CAP_DPR_CSR_INT_REG1_INTREG_BYTE_ADDRESS
#define DPR0_INT_REG2 CAP_ADDR_BASE_DPR_DPR_0_OFFSET + CAP_DPR_CSR_INT_REG2_INTREG_BYTE_ADDRESS
#define DPR1_INT_REG1 CAP_ADDR_BASE_DPR_DPR_1_OFFSET + CAP_DPR_CSR_INT_REG1_INTREG_BYTE_ADDRESS
#define DPR1_INT_REG2 CAP_ADDR_BASE_DPR_DPR_1_OFFSET + CAP_DPR_CSR_INT_REG2_INTREG_BYTE_ADDRESS
#define DPR0_INT_SPARE CAP_ADDR_BASE_DPR_DPR_0_OFFSET + CAP_DPR_CSR_INT_SPARE_INTREG_BYTE_ADDRESS
#define DPR1_INT_SPARE CAP_ADDR_BASE_DPR_DPR_1_OFFSET + CAP_DPR_CSR_INT_SPARE_INTREG_BYTE_ADDRESS
#define DPR0_INT_SRAMS_ECC CAP_ADDR_BASE_DPR_DPR_0_OFFSET + CAP_DPR_CSR_INT_SRAMS_ECC_INTREG_BYTE_ADDRESS
#define DPR1_INT_SRAMS_ECC CAP_ADDR_BASE_DPR_DPR_1_OFFSET + CAP_DPR_CSR_INT_SRAMS_ECC_INTREG_BYTE_ADDRESS
#define SSE_PICS_INT_BADADDR CAP_ADDR_BASE_SSE_PICS_OFFSET + CAP_PICS_CSR_INT_BADADDR_INTREG_BYTE_ADDRESS
#define SSE_PICS_INT_BG CAP_ADDR_BASE_SSE_PICS_OFFSET + CAP_PICS_CSR_INT_BG_INTREG_BYTE_ADDRESS
#define SSE_PICS_INT_PICS CAP_ADDR_BASE_SSE_PICS_OFFSET + CAP_PICS_CSR_INT_PICS_INTREG_BYTE_ADDRESS
#define DB_WA_INT_DB CAP_ADDR_BASE_DB_WA_OFFSET + CAP_WA_CSR_INT_DB_INTREG_BYTE_ADDRESS
#define DB_WA_INT_LIF_QSTATE_MAP CAP_ADDR_BASE_DB_WA_OFFSET + CAP_WA_CSR_INT_LIF_QSTATE_MAP_INTREG_BYTE_ADDRESS
#define SGE_TE0_INT_ERR CAP_ADDR_BASE_SGE_TE_0_OFFSET + CAP_TE_CSR_INT_ERR_INTREG_BYTE_ADDRESS
#define SGE_TE1_INT_ERR CAP_ADDR_BASE_SGE_TE_1_OFFSET + CAP_TE_CSR_INT_ERR_INTREG_BYTE_ADDRESS
#define SGE_TE2_INT_ERR CAP_ADDR_BASE_SGE_TE_2_OFFSET + CAP_TE_CSR_INT_ERR_INTREG_BYTE_ADDRESS
#define SGE_TE3_INT_ERR CAP_ADDR_BASE_SGE_TE_3_OFFSET + CAP_TE_CSR_INT_ERR_INTREG_BYTE_ADDRESS
#define SGE_TE4_INT_ERR CAP_ADDR_BASE_SGE_TE_4_OFFSET + CAP_TE_CSR_INT_ERR_INTREG_BYTE_ADDRESS
#define SGE_TE5_INT_ERR CAP_ADDR_BASE_SGE_TE_5_OFFSET + CAP_TE_CSR_INT_ERR_INTREG_BYTE_ADDRESS
#define SGE_TE0_INT_INFO CAP_ADDR_BASE_SGE_TE_0_OFFSET + CAP_TE_CSR_INT_INFO_INTREG_BYTE_ADDRESS
#define SGE_TE1_INT_INFO CAP_ADDR_BASE_SGE_TE_1_OFFSET + CAP_TE_CSR_INT_INFO_INTREG_BYTE_ADDRESS
#define SGE_TE2_INT_INFO CAP_ADDR_BASE_SGE_TE_2_OFFSET + CAP_TE_CSR_INT_INFO_INTREG_BYTE_ADDRESS
#define SGE_TE3_INT_INFO CAP_ADDR_BASE_SGE_TE_3_OFFSET + CAP_TE_CSR_INT_INFO_INTREG_BYTE_ADDRESS
#define SGE_TE4_INT_INFO CAP_ADDR_BASE_SGE_TE_4_OFFSET + CAP_TE_CSR_INT_INFO_INTREG_BYTE_ADDRESS
#define SGE_TE5_INT_INFO CAP_ADDR_BASE_SGE_TE_5_OFFSET + CAP_TE_CSR_INT_INFO_INTREG_BYTE_ADDRESS
#define SGE_MPU0_INT_ERR CAP_ADDR_BASE_SGE_MPU_0_OFFSET + CAP_MPU_CSR_INT_ERR_INTREG_BYTE_ADDRESS
#define SGE_MPU1_INT_ERR CAP_ADDR_BASE_SGE_MPU_1_OFFSET + CAP_MPU_CSR_INT_ERR_INTREG_BYTE_ADDRESS
#define SGE_MPU2_INT_ERR CAP_ADDR_BASE_SGE_MPU_2_OFFSET + CAP_MPU_CSR_INT_ERR_INTREG_BYTE_ADDRESS
#define SGE_MPU3_INT_ERR CAP_ADDR_BASE_SGE_MPU_3_OFFSET + CAP_MPU_CSR_INT_ERR_INTREG_BYTE_ADDRESS
#define SGE_MPU4_INT_ERR CAP_ADDR_BASE_SGE_MPU_4_OFFSET + CAP_MPU_CSR_INT_ERR_INTREG_BYTE_ADDRESS
#define SGE_MPU5_INT_ERR CAP_ADDR_BASE_SGE_MPU_5_OFFSET + CAP_MPU_CSR_INT_ERR_INTREG_BYTE_ADDRESS
#define SGE_MPU0_INT_INFO CAP_ADDR_BASE_SGE_MPU_0_OFFSET + CAP_MPU_CSR_INT_INFO_INTREG_BYTE_ADDRESS
#define SGE_MPU1_INT_INFO CAP_ADDR_BASE_SGE_MPU_1_OFFSET + CAP_MPU_CSR_INT_INFO_INTREG_BYTE_ADDRESS
#define SGE_MPU2_INT_INFO CAP_ADDR_BASE_SGE_MPU_2_OFFSET + CAP_MPU_CSR_INT_INFO_INTREG_BYTE_ADDRESS
#define SGE_MPU3_INT_INFO CAP_ADDR_BASE_SGE_MPU_3_OFFSET + CAP_MPU_CSR_INT_INFO_INTREG_BYTE_ADDRESS
#define SGE_MPU4_INT_INFO CAP_ADDR_BASE_SGE_MPU_4_OFFSET + CAP_MPU_CSR_INT_INFO_INTREG_BYTE_ADDRESS
#define SGE_MPU5_INT_INFO CAP_ADDR_BASE_SGE_MPU_5_OFFSET + CAP_MPU_CSR_INT_INFO_INTREG_BYTE_ADDRESS
#define MD_HENS_INT_AXI_ERR CAP_ADDR_BASE_MD_HENS_OFFSET + CAP_HENS_CSR_INT_AXI_ERR_INTREG_BYTE_ADDRESS
#define MD_HENS_INT_DRBG_CRYPTORAM_ECC CAP_ADDR_BASE_MD_HENS_OFFSET + CAP_HENS_CSR_INT_DRBG_CRYPTORAM_ECC_INTREG_BYTE_ADDRESS
#define MD_HENS_INT_DRBG_INTRAM_ECC CAP_ADDR_BASE_MD_HENS_OFFSET + CAP_HENS_CSR_INT_DRBG_INTRAM_ECC_INTREG_BYTE_ADDRESS
#define MD_HENS_INT_IPCORE CAP_ADDR_BASE_MD_HENS_OFFSET + CAP_HENS_CSR_INT_IPCORE_INTREG_BYTE_ADDRESS
#define MD_HENS_INT_PK_ECC CAP_ADDR_BASE_MD_HENS_OFFSET + CAP_HENS_CSR_INT_PK_ECC_INTREG_BYTE_ADDRESS
#define MP_MPNS_INT_CRYPTO CAP_ADDR_BASE_MP_MPNS_OFFSET + CAP_MPNS_CSR_INT_CRYPTO_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_CREDIT_UNDERFLOW CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_CREDIT_UNDERFLOW_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_DESC_0 CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_ECC_DESC_0_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_DESC_1 CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_ECC_DESC_1_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_FC_0 CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_ECC_FC_0_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_FC_1 CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_ECC_FC_1_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_LL_0 CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_ECC_LL_0_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_LL_1 CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_ECC_LL_1_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_NC CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_ECC_NC_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_PACK CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_ECC_PACK_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_PORT_MON_IN CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_ECC_PORT_MON_IN_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_PORT_MON_OUT CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_ECC_PORT_MON_OUT_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_RC CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_ECC_RC_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_RWR CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_ECC_RWR_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_SCHED CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_ECC_SCHED_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_SIDEBAND CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_ECC_SIDEBAND_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_UC CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_ECC_UC_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_PBUS_VIOLATION_IN CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_PBUS_VIOLATION_IN_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_PBUS_VIOLATION_OUT CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_PBUS_VIOLATION_OUT_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_RPL CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_RPL_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_WRITE_0 CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_WRITE_0_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_WRITE_1 CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_WRITE_1_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_WRITE_2 CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_WRITE_2_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_WRITE_3 CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_WRITE_3_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_WRITE_4 CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_WRITE_4_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_WRITE_5 CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_WRITE_5_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_WRITE_6 CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_WRITE_6_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_WRITE_7 CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_WRITE_7_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_WRITE_8 CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_WRITE_8_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_WRITE_9 CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_WRITE_9_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_WRITE_10 CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_WRITE_10_INTREG_BYTE_ADDRESS
#define PB_PBC_INT_ECC_WRITE_11 CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_INT_WRITE_11_INTREG_BYTE_ADDRESS
#define PB_PBC_HBM_INT_ECC_HBM_HT CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_HBM_INT_ECC_HBM_HT_INTREG_BYTE_ADDRESS
#define PB_PBC_HBM_INT_ECC_HBM_MTU CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_HBM_INT_ECC_HBM_MTU_INTREG_BYTE_ADDRESS
#define PB_PBC_HBM_INT_ECC_HBM_RB CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_HBM_INT_ECC_HBM_RB_INTREG_BYTE_ADDRESS
#define PB_PBC_HBM_INT_ECC_HBM_WB CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_HBM_INT_ECC_HBM_WB_INTREG_BYTE_ADDRESS
#define PB_PBC_HBM_INT_ECC_HBM_AXI_ERR_RSP CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_HBM_INT_HBM_AXI_ERR_RSP_INTREG_BYTE_ADDRESS
#define PB_PBC_HBM_INT_ECC_HBM_DROP CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_HBM_INT_HBM_DROP_INTREG_BYTE_ADDRESS
#define PB_PBC_HBM_INT_ECC_HBM_PBUS_VIOLATION_IN CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_HBM_INT_HBM_PBUS_VIOLATION_IN_INTREG_BYTE_ADDRESS
#define PB_PBC_HBM_INT_ECC_HBM_PBUS_VIOLATION_OUT CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_HBM_INT_HBM_PBUS_VIOLATION_OUT_INTREG_BYTE_ADDRESS
#define PB_PBC_HBM_INT_ECC_HBM_XOFF CAP_ADDR_BASE_PB_PBC_OFFSET + CAP_PBC_CSR_HBM_INT_HBM_XOFF_INTREG_BYTE_ADDRESS
#define PM_PBM_INT_ECC_COL0 CAP_ADDR_BASE_PM_PBM_OFFSET + CAP_PBM_CSR_INT_ECC_COL0_INTREG_BYTE_ADDRESS
#define PM_PBM_INT_ECC_COL1 CAP_ADDR_BASE_PM_PBM_OFFSET + CAP_PBM_CSR_INT_ECC_COL1_INTREG_BYTE_ADDRESS
#define PM_PBM_INT_ECC_COL2 CAP_ADDR_BASE_PM_PBM_OFFSET + CAP_PBM_CSR_INT_ECC_COL2_INTREG_BYTE_ADDRESS
#define PM_PBM_INT_ECC_COL3 CAP_ADDR_BASE_PM_PBM_OFFSET + CAP_PBM_CSR_INT_ECC_COL3_INTREG_BYTE_ADDRESS
#define PM_PBM_INT_ECC_COL4 CAP_ADDR_BASE_PM_PBM_OFFSET + CAP_PBM_CSR_INT_ECC_COL4_INTREG_BYTE_ADDRESS
#define MC0_MCH_INT_MC_INTREG CAP_ADDR_BASE_MC_MC_0_OFFSET + CAP_MC_CSR_MCH_INT_MC_INTREG_BYTE_ADDRESS
#define MC1_MCH_INT_MC_INTREG CAP_ADDR_BASE_MC_MC_1_OFFSET + CAP_MC_CSR_MCH_INT_MC_INTREG_BYTE_ADDRESS
#define MC2_MCH_INT_MC_INTREG CAP_ADDR_BASE_MC_MC_2_OFFSET + CAP_MC_CSR_MCH_INT_MC_INTREG_BYTE_ADDRESS
#define MC3_MCH_INT_MC_INTREG CAP_ADDR_BASE_MC_MC_3_OFFSET + CAP_MC_CSR_MCH_INT_MC_INTREG_BYTE_ADDRESS
#define MC4_MCH_INT_MC_INTREG CAP_ADDR_BASE_MC_MC_4_OFFSET + CAP_MC_CSR_MCH_INT_MC_INTREG_BYTE_ADDRESS
#define MC5_MCH_INT_MC_INTREG CAP_ADDR_BASE_MC_MC_5_OFFSET + CAP_MC_CSR_MCH_INT_MC_INTREG_BYTE_ADDRESS
#define MC6_MCH_INT_MC_INTREG CAP_ADDR_BASE_MC_MC_6_OFFSET + CAP_MC_CSR_MCH_INT_MC_INTREG_BYTE_ADDRESS
#define MC7_MCH_INT_MC_INTREG CAP_ADDR_BASE_MC_MC_7_OFFSET + CAP_MC_CSR_MCH_INT_MC_INTREG_BYTE_ADDRESS

#define SUCCESS 0
#define FAIL 1

#define BIT(n) (1 << (n))
#define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

enum etype {
    ERROR = 0,
    INFO = 1,
    FATAL = 2,
    UNKNOWN = 3,
};

struct interrupts {
    const char *name;
    int count;
};

struct asic_registers {
    uint64_t regaddr;
    const char *name;
    int ninterrupts;
    etype errortype;
    struct interrupts *map;
};

extern int asic_registers_count;
