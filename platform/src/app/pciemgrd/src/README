================================================================
Summary
----------------------------------------------------------------
name                    default     values
----------------------------------------------------------------
# Environment variables set in /sysconfig/config0/profile.d/apps.sh
PCIEMGRD_LOG_LEVEL      debug       debug|info|warn|error
PCIE_REBOOT_ON_HOSTDN   1           0|1
PCIE_ENABLED_PORTS      0x1         <mask>
PCIEPORT_INIT_TRACE     <NULL>      1
PCIEPORT_HOST_CLOCK     1           0|1
PCIEPORT_SERDES_FW_GEN  4           1|2|3|4
PCIE_SERDES_INIT_ALWAYS 0           0|1
PCIE_SERDESFW           <NULL>      0x1094_2347|0x10A9_2347
PCIE_SRIS               0           0|1
PCIE_STRICT_CRS         1           0|1
PCIE_COMPLIANCE         0           0|1
PCIE_AER_COMMON         0           0|1
PCIE_REQ_GEN            0           0|1|2|3|4
PCIE_REQ_WIDTH          0           0|1|2|4|8|16
PCIE_POLL_DEV           0           0|1
PCIE_POLL_PORT          0           0|1
PCIE_POLL_TM            200000      <poll-time-usecs>
PCIE_CAP                gen3x16     gen<Gen>x<Width>
PCIE_REDUCE_RX_CRED     0           0|1
PCIE_CPUMASK            0           <mask>
PCIE_FIFOPRI            50          SCHED_FIFO priority (0=disabled)
PCIE_MLOCKALL           1           0|1
----------------
# script files in /sysconfig/config0/pcie-poweron
pcie-poweron            <none>
pcie-poweron-%d         <none>
----------------
# uboot: setenv <var> <val>; saveenv
pcie_port               0           0-7
pcie_cap_gen            4           1-4
pcie_cap_width          16          1|2|4|8|16
pcie_clock_freq         <core-clk>  833333333|416666666|0
pcie_lanemask           0xffff      <mask>
pcie_host_clock         1           0|1
pcie_sris               0           0|1
pcie_vga_support        0           0|1
pcie_subvendorid        0x1dd8      <subvendorid>
pcie_subdeviceid        0x4001      <subdeviceid>
pcie_verbose            0           0|1
pcie_poll_disable       0           0|1
pcie_poweron_regio      ""          addr1=val1,addr2=val2,...

================================================================
Description
----------------------------------------------------------------
PCIEMGRD_LOG_LEVEL
    Sets pciemgrd log level to control messages logged to /tmp/pciemgrd.log.

PCIE_REBOOT_ON_HOSTDN
    Controls whether the system reboots when the pcie link goes down.

PCIE_ENABLED_PORTS
    Mask to control which pcie ports are initialized.  Set bit position to 1
    to use that port.  For example the default on Naples is 0x1 to init
    port 0.  The default on HAPS is 0x5 to init ports 0 and 2.

PCIEPORT_INIT_TRACE
    Enable register access trace on x86_64 simulator.

PCIEPORT_HOST_CLOCK
    Set pcie refclk to host (or local) clock.

PCIEPORT_SERDES_FW_GEN
    If this is "1" then use internal serdes fw, otherwise download serdes fw.

PCIE_SERDES_INIT_ALWAYS
    If this "1" then always attempt serdes fw downlaod/init on every
    new assertion of PERSTN in PP_INT_PP_INTREG.
    NOTE: Setting this to "1" is an unsupported mode, not recommended by
    by Broadcom, not supported by ASIC team, not recommended by your mother.
    Do not use unless you know what you are doing, and even then do not use.

PCIE_SRIS
    If this is "1" then set
        PP_CFG_PP_PCSD_CONTROL.sris_en_grpX = 0x3
        PP_PORT_C_CFG_C_MAC_K_GEN.sris_mode = 1
    else
        PP_CFG_PP_PCSD_CONTROL.sris_en_grpX = 0x0
        PP_PORT_C_CFG_C_MAC_K_GEN.sris_mode = 0
    endif

PCIE_STRICT_CRS
    If this is "1" (default) then initialize port CRS=1 at linkup,
    otherwise CRS=0 at linkup so host can boot (maybe without virtual devices).

PCIE_COMPLIANCE
    If this is "1" disable AER in upstream port bridge.
        pexconf[5] &= ~(1 << 31); /* [191] AER implemented */

PCIE_AER_COMMON
    Control whether report all downstream errors in upstream port AER CAP.
        PP_PORT_C_CFG_C_PORT_MAC.aer_common_en = $PCIE_AER_COMMON

PCIE_VGA_SUPPORT
    Control whether the upstream port bridge claims support for vga.
    Sets PP_PORT_C_CFG_C_MAC_K_PCICONF.word3 |= (1 << 4)

PCIE_REQ_GEN
    Required PCIe genX speed.  The required speed is checked when the link
    comes up.  If $PCIE_REQ_GEN is non-zero and the current genX speed is
    less than $PCIE_REQ_GEN, then a core interrupt [0xa,0x1] is issued.

PCIE_REQ_WIDTH
    Required PCIe lane width.  Same as $PCIE_REQ_GEN but for lane width.

PCIE_POLL_DEV
    Poll for device events like indirect and notify transactions.
    Poll frequency is $PCIE_POLL_TM.

PCIE_POLL_PORT
    Poll for port events like link up/down, etc.
    Poll frequency is $PCIE_POLL_TM.

PCIE_POLL_TM
    Poll frequency in usecs for polled events.

PCIEDEV_CAP
    Sets the link params for virtual devices,
    Default is to match the params of the first active port.

PCIE_REDUCE_RX_CRED
    If set to 1, selects reduced rx credits
        // Reduced RX FC credits - Need to configure this before LTSSM Enable
        cfg_c_mac_k_rx_cred.word0 = 0x200080;
        cfg_c_mac_k_rx_cred.word1 = 0x100010;

        // Reduced pending initiator RD requests - Can be changed anytime
        cfg_itr_axi_resp_order.rd_id_limit=32

PCIE_CPUMASK
    Cpu mask for pciemgrd thread affinity to cores.
    Set to 0 to disable affinity to cores.

PCIE_FIFOPRI
    pciemgrd sets SCHED_FIFO at this priority.
    Set to 0 to disable SCHED_FIFO.

PCIE_MLOCKALL
    pciemgrd locks all memory regions to respond to pcie transactions quickly.
    Set to 0 to disable mlockall().
----------------
pcie-poweron
pcie-poweron-%d
    If this file exists in /sysconfig/config0/ then it is executed when
    the software detects PERSTN in PP_INT_PP_INTREG.  (Note that when
    uboot initialized the link then Linux software will not initialize
    the link and will not run this script.)

    The script is run after serdes fw download, after mac_k_gen and related
    registers have been updated, but *before* mac is unreset and before
    ltssm_en is set.

    pcie-poweron is a global script run for every port that comes up.
    pcie-poweron-%d is a per-port scripts, e.g. pcie-poweron-0 is a
    scripts for port 0.  If both a per-port script and a global script
    exist then the global script is run first, and the per-port script
    is run second.

    The script must be executable, and if it is a shell script it must begin
    with #!/bin/sh or another script interpreter.  The software waits
    for the script to exit so all commands in the script must complete
    or run in background.  Once the script completes then software continues,
    bringing the mac out of reset and setting ltssm_en, and then starting
    the link state machine.
----------------
# uboot: setenv <var> <val>; saveenv
pcie_cap_gen
    The physical port genX speed.

pcie_cap_width
    The physical port xW width.

pcie_clock_freq
    The value of the core clock frequency, in Hz, used to derive
    pp_port_c_cfg_c_port_mac.tl_clock_freq.  The value stored in tl_clock_freq
    is pcie_clock_freq/1000000.  For example, if pcie_clock_freq=833333333
    then tl_clock_freq=833.  If pcie_clock_freq=0 then tl_clock_freq is
    left unchanged from the hw default (830).

pcie_lanemask
    The lanemask for PCS reset in PP_CFG_PP_PCS_RESET_N.

pcie_host_clock
    See $PCIE_HOST_CLOCK.

pcie_sris
    See $PCIE_SRIS

pcie_vga_support
    See $PCIE_VGA_SUPPORT

pcie_subvendorid
    Sets upstream port bridge subvendor id.

pcie_subdeviceid
    Sets upstream port bridge subdevice id.

pcie_verbose
    If set print the values of all settings when PERSTN is detected
    and link configuration starts.

pcie_poll_disable
    If set disables all uboot pcie configuration.  uboot will leave the
    pcie port hardware in the reset state.

pcie_poweron_regio
    This variable contains a comma-separated sequence of register
    writes (addr=val) or reads (addr).  For example,

        setenv pcie_poweron_regio 0x0701108c=0x4040,0x07011090=0x1,0x07011094

    Would cause this sequence of register accesses:

        pcie_poweron_regio start
        regwr(0x701108c, 0x4040)
        regwr(0x7011090, 0x1)
        regrd(0x7011094) = 0x0
        pcie_poweron_regio end 0

    Warning: if a bad register address is entered uboot might take
    an exception while trying to access the bad address and hang.
    If this happens recover by putting the Naples in a system where the
    pcie port does not get PERSTN before you get a chance to ^C to interrupt
    the uboot boot sequence and correct the bad register address
    by setting a new value for pcie_poweron_regio.

    Like the pcie-power script in Linux, this sequence is run after
    serdes fw download, after mac_k_gen and related registers have
    been updated, but *before* mac is unreset and before ltssm_en is set.

================================================================
pciemgrd options
----------------------------------------------------------------
Usage: pciemgrd [-dFi][-b <first_bus_num>] \
                [-I <inherit-mode>][-p port-spec][-P gen<G>x<W>][-R <reboot>] \
                [-V subvendorid][-D subdeviceid]

    -b <first_bus_num> set first bus used to <first_bus_num>
    -d                 daemon mode
    -F                 no fake bios scan
    -i                 interactive mode
    -I <inherit-mode>  inherit or re-initialize hw/shmem
    -p <port-spec>     add portspec to ports, hostH=portP,genGxW
    -P gen<G>x<W>      spec devices as pcie gen <G>, lane width <W>
    -R <0|1>           reboot_on_hostdn=<0|1>
    -V subvendorid     default subsystem vendor id
    -D subdeviceid     default subsystem device id
