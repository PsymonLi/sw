package(default_visibility = ["//visibility:public"])

licenses(["notice"])  # MIT license

cc_import(
     name = "libnicmgr",
     shared_library = "libnicmgr.so",
)

cc_binary(
        name = "libnicmgr.so",
        srcs = glob(["*.cc"]),
        copts = [ "-g",
                  "-DACCEL_DEV_ON_X86_64",
                  "-Inic/include",
                  "-Inic/gen/proto/hal",
                  "-Iplatform/src/lib/nicmgr/include",
                  "-Iplatform/src/lib/intrutils/include",
                  "-Iplatform/src/lib/misc/include",
                  "-Iplatform/src/lib/cfgspace/include",
                  "-Iplatform/src/lib/pciehost/include",
                  "-Iplatform/src/lib/pciehdevices/include",
                  "-Iplatform/src/lib/pciehw/include",
                  "-Iplatform/src/lib/pcieport/include",
                  "-Iplatform/include/common",
                  "-Iplatform/drivers/linux/eth/ionic",
                  "-Inic/asic/capri/design/common",
                  "-Inic/asic/capri/model/cap_he/readonly",
                  "-Inic/asic/capri/model/cap_top/csr_defines",
                  "-Inic/asic/capri/model/cap_txs",
                  "-Inic/asic/capri/model/cap_top",
                  "-Inic/hal/pd/capri",
                  "-Inic/build/${BUILD_ARCH}/iris",
        ],
        linkopts = [
                "-lpthread",
        ], 
        deps = [
                "//platform/src/lib/nicmgr/include:libnicmgr_hdrs",
                "//platform/src/lib/intrutils/include:libintrutils_hdrs",
                "//platform/src/lib/intrutils/src:libintrutils",
                "//platform/src/lib/misc/include:libmisc_hdrs",
                "//platform/src/lib/misc/src:libmisc",
                "//platform/src/lib/cfgspace/include:libcfgspace_hdrs",
                "//platform/src/lib/cfgspace/src:libcfgspace",
                "//platform/src/lib/pciehost/include:libpciehost_hdrs",
                "//platform/src/lib/pciehost/src:libpciehost",
                "//platform/src/lib/pcietlp/src:libpcietlp",
                "//platform/src/lib/pciehdevices/include:libpciehdevices_hdrs",
                "//platform/src/lib/pciehdevices/src:libpciehdevices",
                "//platform/src/lib/pciehw/include:libpciehw_hdrs",
                "//platform/src/lib/pciehw/src:libpciehw",
                "//platform/src/lib/pcieport/include:libpcieport_hdrs",
                "//platform/src/lib/pcieport/src:libpcieport",
                "//platform/src/lib/pal/src:libpal",
                "//platform/drivers/linux/eth/ionic:liblinuxionic_hdrs",
                "//platform/include/common:platformcommon_hdrs",
                "//nic/include:base_includes",
                "//nic:gen_proto_includes",
                "//nic:gen_common_includes",
                "//nic:platform_asic_hdrs",
                "//nic/hal/pd/p4pd:p4pd_includes",
                "//nic/hal/pd/capri:capri_includes",
                "//nic/hal/plugins/cfg/aclqos:aclqos_includes",
                "//nic/hal/lib:hal_lib_includes",
                "//nic/hal/core:core_includes",
                "//nic/fte:fte_includes",
                "@sdk//:sdk_headers",
                "@sdk//lib/pal:sdkpal",
                "@sdk//lib/indexer:indexer",
                "@sdk//lib/logger:logger",
        ],
        linkshared = True,
)

