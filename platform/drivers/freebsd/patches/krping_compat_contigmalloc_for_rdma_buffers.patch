From c9437c905e940015ad9b6e91ef870c101276dab3 Mon Sep 17 00:00:00 2001
Message-Id: <c9437c905e940015ad9b6e91ef870c101276dab3.1548972344.git.allenbh@pensando.io>
From: Allen Hubbe <allenbh@pensando.io>
Date: Thu, 31 Jan 2019 14:05:08 -0800
Subject: [PATCH] krping_compat: contigmalloc for rdma buffers

---
 sys/contrib/rdma/krping_compat/krping.c | 26 +++++++++++++++++++------
 1 file changed, 20 insertions(+), 6 deletions(-)

diff --git a/sys/contrib/rdma/krping_compat/krping.c b/sys/contrib/rdma/krping_compat/krping.c
index 93c1c80393a5..aeda02562685 100644
--- a/sys/contrib/rdma/krping_compat/krping.c
+++ b/sys/contrib/rdma/krping_compat/krping.c
@@ -65,6 +65,20 @@ MODULE_LICENSE("Dual BSD/GPL");
 MODULE_VERSION(krping, 1);
 MODULE_DEPEND(krping, linuxkpi, 1, 1, 1);
 
+/* XXX linuxkpi kmalloc is not phys contiguous.  use this to alloc bufs. */
+static void *contig_kmalloc(size_t size, gfp_t gfp)
+{
+	return contigmalloc(size, M_KMALLOC, linux_check_m_flags(gfp),
+			    0, ~0ull, PAGE_SIZE, 0);
+}
+
+/* XXX use this to free bufs allocated above. */
+static void contig_kfree(void *ptr, size_t size)
+{
+	if (ptr)
+		contigfree(ptr, size, M_KMALLOC);
+}
+
 static __inline uint64_t
 get_cycles(void)
 {
@@ -605,7 +619,7 @@ static int krping_setup_buffers(struct krping_cb *cb)
 		}
 	}
 
-	cb->rdma_buf = kmalloc(cb->size, GFP_KERNEL);
+	cb->rdma_buf = contig_kmalloc(cb->size, GFP_KERNEL);
 	if (!cb->rdma_buf) {
 		DEBUG_LOG(cb, "rdma_buf malloc failed\n");
 		ret = -ENOMEM;
@@ -675,7 +689,7 @@ static int krping_setup_buffers(struct krping_cb *cb)
 
 	if (!cb->server || cb->wlat || cb->rlat || cb->bw || cb->frtest) {
 
-		cb->start_buf = kmalloc(cb->size, GFP_KERNEL);
+		cb->start_buf = contig_kmalloc(cb->size, GFP_KERNEL);
 		if (!cb->start_buf) {
 			DEBUG_LOG(cb, "start_buf malloc failed\n");
 			ret = -ENOMEM;
@@ -731,9 +745,9 @@ static int krping_setup_buffers(struct krping_cb *cb)
 	if (cb->send_mr && !IS_ERR(cb->send_mr))
 		ib_dereg_mr(cb->send_mr);
 	if (cb->rdma_buf)
-		kfree(cb->rdma_buf);
+		contig_kfree(cb->rdma_buf, cb->size);
 	if (cb->start_buf)
-		kfree(cb->start_buf);
+		contig_kfree(cb->start_buf, cb->size);
 	return ret;
 }
 
@@ -765,12 +779,12 @@ static void krping_free_buffers(struct krping_cb *cb)
 	dma_unmap_single(cb->pd->device->dma_device,
 			 pci_unmap_addr(cb, rdma_mapping),
 			 cb->size, DMA_BIDIRECTIONAL);
-	kfree(cb->rdma_buf);
+	contig_kfree(cb->rdma_buf, cb->size);
 	if (cb->start_buf) {
 		dma_unmap_single(cb->pd->device->dma_device,
 			 pci_unmap_addr(cb, start_mapping),
 			 cb->size, DMA_BIDIRECTIONAL);
-		kfree(cb->start_buf);
+		contig_kfree(cb->start_buf, cb->size);
 	}
 }
 
-- 
2.17.1

