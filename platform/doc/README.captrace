
# WINDOW: HAPS

export LD_LIBRARY_PATH=/nic/conf/sdk:/nic/lib:/platform/bin

#
# --- STEP 1 ---
#

# WINDOW: HAPS

# Create mpu trace configuration file.
# File format is CSV with column order - pipeline,stage,mpu,options...
# pipeline/stage/mpu wildcard is supported.

p4ig,*,*,option ...
p4eg,*,*,option ...
rxdma,*,*,option ...
txdma,*,*,option ...

# Following options are supported -

# 1) Trigger options - select when to generate the trace.
# If none of these are set then trace is always triggered

trace_enable  # when program executes the trace instruction
phv_debug     # when phv debug bit is set
phv_error     # when phv error bit is set
watch_pc      # when a specific pc executes

# 2) Info options - select what you want to capture in the trace
# If none of these are set then trace is not generated

table_key_enable 	# Trace K & D vectors
instr_enable		# Trace instructions

# 3) Trace options

wrap                # Allow trace buffer to wrap. Recommended: true
trace_addr          # !!!IMPORTANT!!! Don't use wildcard with this.
trace_size          # Number of 64 B trace entries per mpu

#
# --- STEP 2 ---
#

# WINDOW: HAPS

# Configure tracing. Trace is enabled by default.
/platform/bin/captrace conf <cfg_file>

#
# --- STEP 3 ---
#

# Run your test!!!

#
# --- STEP 4 ---
#

# WINDOW: HAPS

# Dump trace
/platform/bin/captrace dump captrace.bin

#
# --- STEP 5 ---
#

# Copyout trace & loader db

# WINDOW: HAPS

/mnt/bin/copyout captrace.bin

# From Confprosh

/mnt/bin/copyin $WS_DIR/captrace.bin

# WINDOW: HAPS

/mnt/bin/copyout capri_loader.conf

# From Confprosh

/mnt/bin/copyin $WS_DIR/capri_loader.conf

#
# --- STEP 6 ---
#

# WINDOW: srv14

/home/neel/tools/captrace/captrace.py decode $WS_DIR/captrace.bin

