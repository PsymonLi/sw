#################################################
################### DOCKER ######################
#################################################
PLATFORM_DIR:=$(shell dirname $(dir $(realpath $(lastword $(MAKEFILE_LIST)))))
SW_DIR:=$(shell dirname ${PLATFORM_DIR})
CUR_USER:=$(shell whoami)
CUR_TIME:=$(shell date +%Y-%m-%d_%H.%M.%S)
CONTAINER_NAME:=${CUR_USER}_${CUR_TIME}

# get a shell with the dependencies image loaded, with the host filesystem mounted.
shell: build-runtime-image
	mkdir -p ${SW_DIR}/bazel-cache;
	docker run -it --rm --sysctl net.ipv6.conf.all.disable_ipv6=0 --privileged --name ${CONTAINER_NAME} -v $(SW_DIR):/sw -v $(SW_DIR)/bazel-cache:/root/.cache -w /sw/platform/drivers/linux pensando/linux-src:4.14.0 bash

build: build-runtime-image
	mkdir -p ${SW_DIR}/bazel-cache;
	docker run --rm --sysctl net.ipv6.conf.all.disable_ipv6=0 --privileged --name ${CONTAINER_NAME} -v $(SW_DIR):/sw -v $(SW_DIR)/bazel-cache:/root/.cache -w /sw/platform/drivers/linux pensando/linux-src:4.14.0 bash -c "make KSRC=/usr/src/linux clean && make KSRC=/usr/src/linux"

REGISTRY = registry.test.pensando.io:5000

build-runtime-image: install_box
	if [ "x${NO_PULL}" = "x" ]; then docker pull $(REGISTRY)/pensando/linux-src:4.14.0; fi
	BOX_INCLUDE_ENV="NO_COPY" NO_COPY=1 box -t pensando/linux-src:4.14.0 box.rb

install_box:
	@if [ ! -x /usr/local/bin/box ]; then echo "Installing box, sudo is required"; curl -sSL box-builder.sh | bash; fi

# make a trial dependencies image. pass RELEASE=1 or run `make deps-release` to
# do a release build.
deps: install_box
	cd ${PLATFORM_DIR}/drivers/linux && RELEASE=${RELEASE} BOX_INCLUDE_ENV="RELEASE" box -t '$(REGISTRY)/pensando/linux-src:4.14.0' ${PLATFORM_DIR}/drivers/linux/linux-build-deps.rb

# make a release build of the dependencies image
deps-release:
	RELEASE=1 make deps

