# Test Spec
#
# Unrealistic edge case: not really segmentation
#   - proves tso code can handle single segment
#   - the TXD is both SOT and EOT of TSO
#

selectors:
    root: ref://store/templates/id=SESSION
    src:
        tenant      : filter://overlay=VLAN,type=TENANT,label=CLASSIC
        segment     : filter://any
        endpoint    : filter://remote=False
        interface   : filter://any
    dst:
        tenant      : filter://overlay=VLAN,type=TENANT,label=CLASSIC
        segment     : filter://any
        endpoint    : filter://remote=True
        interface   : filter://any
    flow            : filter://fwtype=L2
    maxflows        : 1

packets:
    - packet:
        id          : BASE_PKT # Base packet
        payloadsize : 1024
        template    : callback://networking/packets/GetPacketTemplateByFlow
        headers     :
            eth:
                src     : ref://testcase/config/src/endpoint/macaddr
                dst     : ref://testcase/config/dst/endpoint/macaddr
            ipv4:
                src     : ref://testcase/config/flow/sip
                dst     : ref://testcase/config/flow/dip
                ttl     : 64
            ipv6:
                src     : ref://testcase/config/flow/sip
                dst     : ref://testcase/config/flow/dip
                hlim    : 64
            udp:
                sport   : ref://testcase/config/flow/sport
                dport   : ref://testcase/config/flow/dport
            tcp:
                sport   : ref://testcase/config/flow/sport
                dport   : ref://testcase/config/flow/dport
                flags   : ack
            icmp:
                code    : ref://testcase/config/flow/icmpcode
                type    : ref://testcase/config/flow/icmptype
                id      : ref://testcase/config/flow/icmpid
            icmpv6:
                code    : ref://testcase/config/flow/icmpcode
                type    : ref://testcase/config/flow/icmptype
                id      : ref://testcase/config/flow/icmpid
            payload:
                data    : callback://eth/callbacks/GetPayload/size=1024

    - packet:
        id          : PKT1 # Base packet
        clone       : ref://testcase/packets/id=BASE_PKT
        encaps      : callback://networking/packets/GetPacketEncaps
        headers     :
            qtag    :
                vlan: ref://testcase/config/src/endpoint/intf/encap_vlan_id
            tcp:
                flags: ack

    # Expect Packets
    - callback: callback://eth/callbacks/InitEthTxTsoPackets/pkt=PKT1,mss=1448

buffers:
    - buffer:
        id      : BUF1 # Input Buffer
        template: ref://factory/templates/id=ETH_BUFFER
        fields  :
            bind: True
            size : ref://testcase/packets/id=PKT1/size
            data : ref://testcase/packets/id=PKT1/rawbytes

descriptors:
    - callback: callback://eth/callbacks/InitEthTxTsoDescriptor/id=DESC1,buf=BUF1,pkt=PKT1,mss=1448,nfrags=0
    - callback: callback://eth/callbacks/InitEthTxTsoDescriptor/id=DESC2,buf=BUF1,pkt=PKT1,mss=1448,nfrags=1
    - callback: callback://eth/callbacks/InitEthTxTsoDescriptor/id=DESC3,buf=BUF1,pkt=PKT1,mss=1448,nfrags=4
    - callback: callback://eth/callbacks/InitEthTxTsoDescriptor/id=DESC4,buf=BUF1,pkt=PKT1,mss=1448,nfrags=5
    - callback: callback://eth/callbacks/InitEthTxTsoDescriptor/id=DESC5,buf=BUF1,pkt=PKT1,mss=1448,nfrags=8
    - callback: callback://eth/callbacks/InitEthTxTsoDescriptor/id=DESC6,buf=BUF1,pkt=PKT1,mss=1448,nfrags=9
    - callback: callback://eth/callbacks/InitEthTxTsoDescriptor/id=DESC7,buf=BUF1,pkt=PKT1,mss=1448,nfrags=12
    - callback: callback://eth/callbacks/InitEthTxTsoDescriptor/id=DESC8,buf=BUF1,pkt=PKT1,mss=1448,nfrags=13
    - callback: callback://eth/callbacks/InitEthTxTsoDescriptor/id=DESC9,buf=BUF1,pkt=PKT1,mss=1448,nfrags=15
    - descriptor:
        id      : EXP_DESC1 # Expected Descriptor
        template: ref://factory/templates/id=DESCR_ETH_TX_CQ
        fields:
            status : 0x0

trigger:
    descriptors:
        - descriptor:
            object  : ref://testcase/descriptors/id=DESC1_1
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX
        - descriptor:
            object  : ref://testcase/descriptors/id=DESC2_1
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX
        - descriptor:
            object  : ref://testcase/descriptors/id=DESC3_1
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX
        - descriptor:
            object  : ref://testcase/descriptors/id=DESC4_1
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX
        - descriptor:
            object  : ref://testcase/descriptors/id=DESC5_1
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX
        - descriptor:
            object  : ref://testcase/descriptors/id=DESC6_1
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX
        - descriptor:
            object  : ref://testcase/descriptors/id=DESC7_1
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX
        - descriptor:
            object  : ref://testcase/descriptors/id=DESC8_1
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX
        - descriptor:
            object  : ref://testcase/descriptors/id=DESC9_1
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX

expect:
    delay   : callback://networking/packets/GetExpectDelay

    descriptors:
        - descriptor:
            object  : ref://testcase/descriptors/id=EXP_DESC1
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX
        - descriptor:
            object  : ref://testcase/descriptors/id=EXP_DESC1
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX
        - descriptor:
            object  : ref://testcase/descriptors/id=EXP_DESC1
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX
        - descriptor:
            object  : ref://testcase/descriptors/id=EXP_DESC1
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX
        - descriptor:
            object  : ref://testcase/descriptors/id=EXP_DESC1
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX
        - descriptor:
            object  : ref://testcase/descriptors/id=EXP_DESC1
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX
        - descriptor:
            object  : ref://testcase/descriptors/id=EXP_DESC1
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX
        - descriptor:
            object  : ref://testcase/descriptors/id=EXP_DESC1
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX
        - descriptor:
            object  : ref://testcase/descriptors/id=EXP_DESC1
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX

    packets:
        - packet:
            object  : ref://testcase/packets/id=EXP_PKT1
            port    : callback://networking/fwmode/GetTxExpectedPorts
        - packet:
            object  : ref://testcase/packets/id=EXP_PKT1
            port    : callback://networking/fwmode/GetTxExpectedPorts
        - packet:
            object  : ref://testcase/packets/id=EXP_PKT1
            port    : callback://networking/fwmode/GetTxExpectedPorts
        - packet:
            object  : ref://testcase/packets/id=EXP_PKT1
            port    : callback://networking/fwmode/GetTxExpectedPorts
        - packet:
            object  : ref://testcase/packets/id=EXP_PKT1
            port    : callback://networking/fwmode/GetTxExpectedPorts
        - packet:
            object  : ref://testcase/packets/id=EXP_PKT1
            port    : callback://networking/fwmode/GetTxExpectedPorts
        - packet:
            object  : ref://testcase/packets/id=EXP_PKT1
            port    : callback://networking/fwmode/GetTxExpectedPorts
        - packet:
            object  : ref://testcase/packets/id=EXP_PKT1
            port    : callback://networking/fwmode/GetTxExpectedPorts
        - packet:
            object  : ref://testcase/packets/id=EXP_PKT1
            port    : callback://networking/fwmode/GetTxExpectedPorts
