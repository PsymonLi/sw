# TCP Proxy RX Inorder Sample TestSpec file.
selectors:
    root: ref://store/templates/id=SESSION
    # Choose the config, that only selects flows matching below packet
    # templates.
    src:
        tenant      : filter://overlay=VLAN,type=TENANT
        segment     : filter://any
        endpoint    : filter://remote=False
        qpair       : filter://any # Local QPair
    dst:
        tenant      : filter://overlay=VLAN,type=TENANT
        segment     : filter://any
        endpoint    : filter://remote=True
        qpair       : filter://any 
    flow        : filter://proto=TCP,label=TCP-PROXY,fwtype=L2
    maxflows    : 1

# Packet section defines the set of input and output packets. Input packets
# will be used in triggers and output packets will be used in expect
packets:
    - packet:
        id          : BASE_PKT
        template    : callback://networking/packets/GetPacketTemplateByFlow
        payloadsize : ref://factory/payloads/id=PAYLOAD_ZERO64/size
        headers     :
            eth:
                src     : ref://testcase/config/src/endpoint/macaddr
                dst     : ref://testcase/config/dst/endpoint/macaddr
            ipv4:
                src     : ref://testcase/config/flow/sip
                dst     : ref://testcase/config/flow/dip
                ttl     : 64
            ipv6:
                src     : ref://testcase/config/flow/sip
                dst     : ref://testcase/config/flow/dip
                hlim    : 64
            tcp:
                sport   : ref://testcase/config/flow/sport
                dport   : ref://testcase/config/flow/dport
                seq     : callback://tcpcb/tcpcb/GetSeqNum
                ack     : callback://tcpcb/tcpcb/GetAckNum
            payload:
                data: ref://factory/payloads/id=PAYLOAD_ZERO64/data 

    - packet:
        id          : PKT1  # Input Packet
        clone       : ref://testcase/packets/id=BASE_PKT
        encaps      : callback://networking/packets/GetPacketEncaps
        headers     :
            qtag:
                vlan: ref://testcase/config/src/endpoint/intf/encap_vlan_id

    - packet:
        id          : PKT2 # Expected Packet
        clone       : ref://testcase/packets/id=BASE_PKT
        encaps      : callback://networking/packets/GetExpectedPacketEncaps
        headers     :
            qtag:
                vlan    : ref://testcase/config/dst/segment/vlan_id
                prio    : ref://testcase/config/flow/txqos/cos
            ipv4:
                tos     : ref://testcase/config/flow/txqos/dscp
            ipv6:
                tc      : ref://testcase/config/flow/txqos/dscp
            tcp:
                seq     : callback://tcpcb/tcpcb/GetPktOutSeqNum
                ack     : callback://tcpcb/tcpcb/GetPktOutAckNum
                window  : 1000
                flags   : ack
                options : callback://tcpcb/tcpcb/GetPktOutTcpOptions
            payload:
                data: ref://factory/payloads/id=PAYLOAD_ZERO64/data 

    - packet:
        id          : PKT2_ACK_OUT # ACK
        template    : callback://networking/packets/GetPacketTemplateByFlow
        encaps      : callback://networking/packets/GetPacketEncaps
        payloadsize : 0
        headers     :
            eth:
                src     : ref://testcase/config/dst/endpoint/macaddr
                dst     : ref://testcase/config/src/endpoint/macaddr
            qtag:
                vlan    : ref://testcase/config/dst/segment/vlan_id
            ipv4:
                src     : ref://testcase/config/flow/dip
                dst     : ref://testcase/config/flow/sip
                ttl     : 64
            ipv6:
                src     : ref://testcase/config/flow/dip
                dst     : ref://testcase/config/flow/sip
                hlim    : 64
            tcp:
                sport   : ref://testcase/config/flow/dport
                dport   : ref://testcase/config/flow/sport
                seq     : callback://tcpcb/tcpcb/GetAckPktSeqNum
                ack     : callback://tcpcb/tcpcb/GetAckPktAckNum
                window  : 1000
                flags   : ack
                options : callback://tcpcb/tcpcb/GetPktAckOutTcpOptions

buffers:
    - buffer:
        id      : BUF1
        template: ref://factory/templates/id=ETH_BUFFER
        fields:
            bind: True
            size: ref://testcase/packets/id=PKT1/size
            data: ref://testcase/packets/id=PKT1/rawbytes

    - buffer:
        id      : BUF2
        template: ref://factory/templates/id=ETH_BUFFER
        fields:
            bind: True
            size: ref://testcase/packets/id=PKT2_ACK_OUT/size
            data: ref://testcase/packets/id=PKT2_ACK_OUT/rawbytes

descriptors:
    - descriptor:
        id      : TX_DESC # TX Descriptor
        template: ref://factory/templates/id=DESCR_ETH_TX
        fields:
            _buf  : ref://testcase/buffers/id=BUF1
            addr  : ref://testcase/buffers/id=BUF1/addr
            len   : ref://testcase/buffers/id=BUF1/size

    - descriptor:
        id      : TX_CMPL_DESC # Expected TX Completion Descriptor
        template: ref://factory/templates/id=DESCR_ETH_TX_CQ
        fields:
            status     : 0x0

    - descriptor:
        id      : RX_DESC # RX Descriptor
        template: ref://factory/templates/id=DESCR_ETH_RX
        fields:
            _buf  : ref://testcase/buffers/id=BUF2
            addr  : ref://testcase/buffers/id=BUF2/addr
            len   : ref://testcase/buffers/id=BUF2/size

    - descriptor:
        id      : RX_CMPL_DESC # Expected RX Completion Descriptor
        template: ref://factory/templates/id=DESCR_ETH_RX_CQ
        fields:
            _buf          : ref://testcase/buffers/id=BUF2
            len                   : ref://testcase/buffers/id=BUF2/size

trigger:
    descriptors:
        - descriptor:
            object  : ref://testcase/descriptors/id=RX_DESC
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=RX

        - descriptor:
            object  : ref://testcase/descriptors/id=TX_DESC
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX

expect:
    packets:
        - packet:
            object  : ref://testcase/packets/id=PKT2
            port    : ref://testcase/config/dst/endpoint/intf/ports

    descriptors:
        - descriptor:
            object  : ref://testcase/descriptors/id=TX_CMPL_DESC
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=TX

        - descriptor:
            object  : ref://testcase/descriptors/id=RX_CMPL_DESC
            ring    : ref://testcase/config/src/endpoint/intf/lif/queue_types/id=RX
