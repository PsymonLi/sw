# Test Spec
selectors:
#    src:
#        tenant      : filter://overlay=VLAN,type=TENANT
#        segment     : filter://any
#        endpoint    : filter://remote=False
#        interface   : filter://any
#    dst:
#        tenant      : filter://overlay=VLAN,type=TENANT
#        segment     : filter://any
#        endpoint    : filter://remote=True
#        interface   : filter://any
#    flow            : filter://fwtype=L2,type=IPV4,dport=4791,proto=UDP,label=RDMA
    rdmasession     :
        lqp         : filter://svc=0
        rqp         : filter://svc=0
#    maxflows    : 1
#    maxrdmasessions     : 1

packets:
    - packet:
        id          : READ_REQ_BASE # Base packet
        payloadsize : 0
        template    : callback://rdma/rdma/PickPktTemplate/v4=ETH_IPV4_UDP_BTH_RETH,v6=ETH_IPV6_UDP_BTH_RETH
        icrc        : True
        headers     :
            # Add all possible headers, the final headers will be selected
            # based on the Flow.
            eth:
                src     : ref://testcase/config/rdmasession/session/initiator/ep/macaddr
                dst     : ref://testcase/config/rdmasession/session/responder/ep/macaddr
            ipv4:
                src     : ref://testcase/config/rdmasession/session/initiator/addr
                dst     : ref://testcase/config/rdmasession/session/responder/addr
                ttl     : 64
            ipv6:
                src     : ref://testcase/config/rdmasession/session/initiator/addr
                dst     : ref://testcase/config/rdmasession/session/responder/addr
                hlim    : 64
            udp:
                sport   : ref://testcase/config/rdmasession/session/iflow/sport
                dport   : ref://testcase/config/rdmasession/session/iflow/dport
            bth:
                opcode  : 12 # RDMA READ Request
                destqp  : ref://testcase/config/rdmasession/rqp/id
                psn     : ref://testcase/pvtdata/sq_pre_qstate/tx_psn
            reth:
                va      : ref://testcase/pvtdata/va
                r_key   : ref://testcase/pvtdata/r_key
                dma_len : ref://testcase/pvtdata/dma_len
            payload:
                data    : None

    - packet:
        id          : READ_REQ
        encaps      : callback://rdma/rdma/GetPacketEncaps
        clone       : ref://testcase/packets/id=READ_REQ_BASE
        headers     :
            # Add all possible headers, the final headers will be selected
            # based on the Flow.
            outereth    :
                src     : ref://testcase/config/rdmasession/rqp/pd/ep/intf/macaddr
                dst     : ref://testcase/config/rdmasession/rqp/pd/ep/intf/rmacaddr
            outeripv4   :
                src     : ref://testcase/config/rdmasession/rqp/pd/ep/intf/ltep
                dst     : ref://testcase/config/rdmasession/rqp/pd/ep/intf/rtep
                tos     : 0
                id      : 0
            outerudp:
                chksum  : 0
            vxlan       :
                vni     : ref://testcase/config/rdmasession/rqp/pd/ep/segment/vxlan_id
            qtag:
                vlan    : callback://rdma/rdma/GetPacketQtag
                                                                   
    - packet:
         id          : READ_RESP_ONLY_PYLD # Receive payload
         payloadsize : 64
         template    : ref://factory/packets/id=PAYLOAD
         headers     :
             payload:
                 data    : pattern-random://0/255/1
    
    - packet:
        id          : READ_RESP_ONLY_BASE # Base packet
        payloadsize : ref://testcase/packets/id=READ_RESP_ONLY_PYLD/size
        template    : callback://rdma/rdma/PickPktTemplate/v4=ETH_IPV4_UDP_BTH_AETH,v6=ETH_IPV6_UDP_BTH_AETH
        icrc        : True
        headers     :
            # Add all possible headers, the final headers will be selected
            # based on the Flow.
            eth:
                src     : ref://testcase/config/rdmasession/session/responder/ep/macaddr
                dst     : ref://testcase/config/rdmasession/session/initiator/ep/macaddr
            ipv4:
                src     : ref://testcase/config/rdmasession/session/responder/addr
                dst     : ref://testcase/config/rdmasession/session/initiator/addr
                ttl     : 64
            ipv6:
                src     : ref://testcase/config/rdmasession/session/responder/addr
                dst     : ref://testcase/config/rdmasession/session/initiator/addr
                hlim    : 64
            udp:
                sport   : ref://testcase/config/rdmasession/session/iflow/sport
                dport   : ref://testcase/config/rdmasession/session/iflow/dport
            bth:
                opcode  : 16
                destqp  : ref://testcase/config/rdmasession/lqp/id
                psn     : ref://testcase/pvtdata/sq_pre_qstate/tx_psn
            aeth:
                syndrome : 14 # TODO - credits
                msn      : callback://rdma/rdma/GetPktMsn/ack_num=0
            payload:
                data    : ref://testcase/packets/id=READ_RESP_ONLY_PYLD/rawbytes

    - packet:
        id          : READ_RESP_ONLY    # Receive packet 
        encaps      : callback://rdma/rdma/GetPacketEncaps
        clone       : ref://testcase/packets/id=READ_RESP_ONLY_BASE
        headers     :
            # Add all possible headers, the final headers will be selected
            # based on the Flow.
            outereth    :
                src     : ref://testcase/config/rdmasession/rqp/pd/ep/intf/rmacaddr
                dst     : ref://testcase/config/rdmasession/rqp/pd/ep/intf/macaddr
            outeripv4   :
                src     : ref://testcase/config/rdmasession/rqp/pd/ep/intf/rtep
                dst     : ref://testcase/config/rdmasession/rqp/pd/ep/intf/ltep
                tos     : 0
                id      : 0
            vxlan       :
                vni     : ref://testcase/config/rdmasession/rqp/pd/ep/segment/vxlan_id
            qtag:
                vlan    : callback://rdma/rdma/GetPacketQtag
                prio    : 0

buffers:
    - buffer:
        id      : HOST_MEM
        template: ref://factory/templates/id=RDMA_BUFFER
        fields:
           slab    : ref://testcase/config/rdmasession/lqp/pd/ep/slabs/id=SLAB0000
           offset  : 0
           segments:
               - size    : ref://testcase/packets/id=READ_RESP_ONLY_PYLD/size
                 data    : None

    - buffer:
        id      : EXP_HOST_MEM
        template: ref://factory/templates/id=RDMA_BUFFER
        fields:
           slab    : None
           offset  : 0
           segments:
               - size    : ref://testcase/packets/id=READ_RESP_ONLY_PYLD/size
                 data    : ref://testcase/packets/id=READ_RESP_ONLY_PYLD/rawbytes

descriptors:
    - descriptor:
        id      : SQ_WQE
        template: ref://factory/templates/id=DESC_RDMA_SQ
        fields:
            op_type : 3  # OP_TYPE_READ
            wrid    : 6
            num_sges: 1

            read    :
                va    : ref://testcase/pvtdata/va
                len   : ref://testcase/pvtdata/dma_len
                r_key : ref://testcase/pvtdata/r_key

            sges:
                - va  : ref://testcase/buffers/id=HOST_MEM/address
                  len : ref://testcase/buffers/id=HOST_MEM/size
                  l_key: ref://testcase/config/rdmasession/lqp/pd/mrs/id=MR-SLAB0000/lkey

    - descriptor:
        id      : EXP_SQ_WQE
        template: ref://factory/templates/id=DESC_RDMA_SQ
        fields:
            buff: ref://testcase/buffers/id=EXP_HOST_MEM
            op_type : 3  # OP_TYPE_READ
            wrid    : 6
            num_sges: 1

            read    :
                va    : ref://testcase/pvtdata/va
                len   : ref://testcase/pvtdata/dma_len
                r_key : ref://testcase/pvtdata/r_key

            sges:

            
session:

    - step: # READ Request Transmit
        trigger:
            descriptors:
                - descriptor:
                    object  : ref://testcase/descriptors/id=SQ_WQE
                    ring    : ref://testcase/config/rdmasession/lqp/sq/rings/id=SQ
            
            doorbell:
                object: ref://testcase/config/rdmasession/lqp/sq/rings/id=SQ/doorbell
                fields:
                    upd : 0x9 # PI from DB data and DB_SCHED_EVAL
        
        expect:
            packets:
                - packet:
                    object  : ref://testcase/packets/id=READ_REQ
                    port    : ref://testcase/config/rdmasession/session/responder/ep/intf/ports

    - step: # READ Response Receive
        trigger:

            # Inject a READ_ONLY Resp packet which skips token-id check in stage 0, completes the work,
            # then checks the token_id against next_to_go_token_id in write_back stage.
            # Program qstate such that this check fails and packet goes to recirc with reason
            # inorder_work_done. This packet should keep looping and eventually upon reaching
            # max_recirc_cnt QP should move to error disable state. 
            packets:
                - packet:
                    object  : ref://testcase/packets/id=READ_RESP_ONLY
                    port    : ref://testcase/config/rdmasession/session/responder/ep/intf/ports

        expect:

            # Packet should be silently dropped with some info logged in stats.
            # QP should move to error disable state. 
            # For now, no feedback gets generated to responder side and there by no flush error for rq.
            # Similarly no error cqe is posted and hence driver wouldn't be aware that this
            # problem has happened.
            # We may have to change this behavior later. 


