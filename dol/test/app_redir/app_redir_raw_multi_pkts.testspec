# TCP Proxy RX Inorder Sample TestSpec file.
selectors:
    # Update: Vikasd
    # Choose the config, that only selects flows matching below packet
    # templates.
    src:
        tenant      : filter://overlay=VLAN,type=TENANT
        segment     : filter://any
        endpoint    : filter://remote=True
        qpair       : filter://any # Local QPair
    dst:
        tenant      : filter://overlay=VLAN,type=TENANT
        segment     : filter://any
        endpoint    : filter://remote=True
        qpair       : filter://any 
    flow        : filter://proto=TCP,label=RAW-REDIR-MULTI,fwtype=L2,direction=IFLOW
    maxflows    : 1

# Packet section defines the set of input and output packets. Input packets
# will be used in triggers and output packets will be used in expect
packets:
    - packet:
        id          : PKT1
        template    : callback://networking/packets/GetPacketTemplateByFlow
        payloadsize : ref://factory/payloads/id=PAYLOAD_ZERO64/size
        encaps      : callback://networking/packets/GetPacketEncaps
        headers     :
            eth:
                src     : ref://testcase/config/src/endpoint/macaddr
                dst     : ref://testcase/config/dst/endpoint/macaddr
            qtag:
                vlan    : ref://testcase/config/src/segment/vlan_id
            ipv4:
                src     : ref://testcase/config/flow/sip
                dst     : ref://testcase/config/flow/dip
                ttl     : 64
            tcp:
                sport   : ref://testcase/config/flow/sport
                dport   : ref://testcase/config/flow/dport
                seq     : 0x1abababa
                ack     : 0x1fefefef
            payload:
                data: ref://factory/payloads/id=PAYLOAD_ZERO64/data 

    - packet:
        id          : PKT2
        clone       : ref://testcase/packets/id=PKT1
        payloadsize : ref://factory/payloads/id=PAYLOAD_FF64/size
        headers     :
            tcp:
                seq     : 0x2abababa
                ack     : 0x2fefefef
            payload:
                data: ref://factory/payloads/id=PAYLOAD_FF64/data 

    - packet:
        id          : PKT3
        clone       : ref://testcase/packets/id=PKT1
        payloadsize : ref://factory/payloads/id=PAYLOAD_ZERO64/size
        headers     :
            tcp:
                seq     : 0x3abababa
                ack     : 0x3fefefef
            payload:
                data: ref://factory/payloads/id=PAYLOAD_ZERO64/data 

session:
    - step:
        trigger:
             packets:
                 - packet:
                     object  : ref://testcase/packets/id=PKT1
                     port    : ref://testcase/config/src/endpoint/intf/ports
        expect:
             packets:
                 - packet:
                     object  : ref://testcase/packets/id=PKT1
                     port    : ref://testcase/config/dst/endpoint/intf/ports

                 # First packet is a flow miss, so also expect a packet on the FTE (CPU) port.
                 # Note that FTE will install flows in both directions so subsequent packets
                 # are all expected to be flow hits.
                 - packet:
                     object  : ref://testcase/packets/id=PKT1
                     port    : 128

    - step:
        trigger:
             packets:
                 # Flow hit expects packet on port. Even though the packet is also
                 # redirected to CPU, it is thru a different LIF and does not
                 # translate to port 128 so we don't expect anything on that.
                 - packet:
                     object  : ref://testcase/packets/id=PKT2
                     port    : ref://testcase/config/src/endpoint/intf/ports
        expect:
             delay  : 1
             packets:
                 - packet:
                     object  : ref://testcase/packets/id=PKT2
                     port    : ref://testcase/config/dst/endpoint/intf/ports

    - step:
        trigger:
             packets:
                 - packet:
                     object  : ref://testcase/packets/id=PKT3
                     port    : ref://testcase/config/src/endpoint/intf/ports
        expect:
             packets:
                 - packet:
                     object  : ref://testcase/packets/id=PKT3
                     port    : ref://testcase/config/dst/endpoint/intf/ports

