# Feature Test Modules List
feature:
    id          : eth
    sub         : tx
    package     : test.eth
    module      : eth
    enable      : True
    ignore      : False

modules:
    - module:
        name    : L2UC_IP
        spec    : tx.testspec
        iterate:
            # Untagged Flows
            - flow    : filter://type=IPV4,proto=UDP,label=NETWORKING
              segment : filter://native=False
            - flow    : filter://type=IPV4,proto=TCP,label=NETWORKING
              segment : filter://native=False
            - flow    : filter://type=IPV6,proto=TCP,label=NETWORKING
              segment : filter://native=False
            - flow    : filter://type=IPV6,proto=UDP,label=NETWORKING
              segment : filter://native=False
            - flow    : filter://type=IPV4,proto=ICMP,label=NETWORKING
              segment : filter://native=False
            - flow    : filter://type=IPV6,proto=ICMPV6,label=NETWORKING
              segment : filter://native=False
            # Tagged Flows
            - flow    : filter://type=IPV4,proto=UDP,label=NETWORKING
              segment : filter://native=True
            - flow    : filter://type=IPV4,proto=TCP,label=NETWORKING
              segment : filter://native=True
            - flow    : filter://type=IPV4,proto=ICMP,label=NETWORKING
              segment : filter://native=True
            - flow    : filter://type=IPV6,proto=UDP,label=NETWORKING
              segment : filter://native=True
            - flow    : filter://type=IPV6,proto=TCP,label=NETWORKING
              segment : filter://native=True
            - flow    : filter://type=IPV6,proto=ICMPV6,label=NETWORKING
              segment : filter://native=True

    - module:
        name    : L3UC
        spec    : tx_l3.testspec
        latency : true
        iterate:
            # Untagged Flows
            - flow  : filter://type=IPV4,proto=UDP,label=NETWORKING
              srcseg: filter://native=False
            - flow  : filter://type=IPV4,proto=TCP,label=NETWORKING
              srcseg: filter://native=False
            - flow  : filter://type=IPV6,proto=TCP,label=NETWORKING
              srcseg: filter://native=False
            - flow  : filter://type=IPV6,proto=UDP,label=NETWORKING
              srcseg: filter://native=False
            - flow  : filter://type=IPV4,proto=ICMP,label=NETWORKING
              srcseg: filter://native=False
            - flow  : filter://type=IPV6,proto=ICMPV6,label=NETWORKING
              srcseg: filter://native=False
            # Tagged Flows
            - flow  : filter://type=IPV4,proto=UDP,label=NETWORKING
              srcseg: filter://native=True
            - flow  : filter://type=IPV4,proto=TCP,label=NETWORKING
              srcseg: filter://native=True
            - flow  : filter://type=IPV4,proto=ICMP,label=NETWORKING
              srcseg: filter://native=True
            - flow  : filter://type=IPV6,proto=UDP,label=NETWORKING
              srcseg: filter://native=True
            - flow  : filter://type=IPV6,proto=TCP,label=NETWORKING
              srcseg: filter://native=True
            - flow  : filter://type=IPV6,proto=ICMPV6,label=NETWORKING
              srcseg: filter://native=True

    - module:
        name    : L2UC_NONIP
        spec    : tx_nonip.testspec
        iterate:
            # Tagged Flows
            - segment: filter://native=False
              flow   : filter://label=NETWORKING
            # Untagged Flows
            - segment: filter://native=True
              flow   : filter://label=NETWORKING

    - module:
        name    : ARP_RARP
        spec    : tx_arp.testspec
        iterate :
            # Priority Tag Cases
            - type      : ARP_REQ_UC
              segment   : filter://native=False
            - type      : ARP_RESP
              segment   : filter://native=False
            - type      : RARP_REQ_UC
              segment   : filter://native=False
            - type      : RARP_RESP
              segment   : filter://native=False
            # Untagged Cases
            - type      : ARP_REQ_UC
              segment   : filter://native=True
            - type      : ARP_RESP
              segment   : filter://native=True
            - type      : RARP_REQ_UC
              segment   : filter://native=True
            - type      : RARP_RESP
              segment   : filter://native=True

    - module:
        name    : L2UC_IP_GFT_DROP
        spec    : tx.testspec
        iterate:
            # Tagged Flows
            - flow    : filter://type=IPV4,proto=UDP,label=GFT_DROP
              segment : filter://native=False
            - flow    : filter://type=IPV4,proto=TCP,label=GFT_DROP
              segment : filter://native=False
            - flow    : filter://type=IPV6,proto=TCP,label=GFT_DROP
              segment : filter://native=False
            - flow    : filter://type=IPV6,proto=UDP,label=GFT_DROP
              segment : filter://native=False
            - flow    : filter://type=IPV4,proto=ICMP,label=GFT_DROP
              segment : filter://native=False
            - flow    : filter://type=IPV6,proto=ICMPV6,label=GFT_DROP
              segment : filter://native=False
            # Untagged Flows
            - flow    : filter://type=IPV4,proto=UDP,label=GFT_DROP
              segment : filter://native=True
            - flow    : filter://type=IPV4,proto=TCP,label=GFT_DROP
              segment : filter://native=True
            - flow    : filter://type=IPV4,proto=ICMP,label=GFT_DROP
              segment : filter://native=True
            - flow    : filter://type=IPV6,proto=UDP,label=GFT_DROP
              segment : filter://native=True
            - flow    : filter://type=IPV6,proto=TCP,label=GFT_DROP
              segment : filter://native=True
            - flow    : filter://type=IPV6,proto=ICMPV6,label=GFT_DROP
              segment : filter://native=False

    - module:
        name    : L2UC_NONIP_GFT_DROP
        spec    : tx_nonip.testspec
        iterate:
            # Tagged Flows
            - segment: filter://native=False
              flow   : filter://label=GFT_DROP
            # Untagged Flows
            - segment: filter://native=True
              flow   : filter://label=GFT_DROP

    - module:
        name    : L3UC_GFT_DROP
        spec    : tx_l3.testspec
        iterate:
            # Untagged Flows
            - flow  : filter://type=IPV4,proto=UDP,label=GFT_DROP
              srcseg: filter://native=False
            - flow  : filter://type=IPV4,proto=TCP,label=GFT_DROP
              srcseg: filter://native=False
            - flow  : filter://type=IPV6,proto=TCP,label=GFT_DROP
              srcseg: filter://native=False
            - flow  : filter://type=IPV6,proto=UDP,label=GFT_DROP
              srcseg: filter://native=False
            - flow  : filter://type=IPV4,proto=ICMP,label=GFT_DROP
              srcseg: filter://native=False
            - flow  : filter://type=IPV6,proto=ICMPV6,label=GFT_DROP
              srcseg: filter://native=False
            # Tagged Flows
            - flow  : filter://type=IPV4,proto=UDP,label=GFT_DROP
              srcseg: filter://native=True
            - flow  : filter://type=IPV4,proto=TCP,label=GFT_DROP
              srcseg: filter://native=True
            - flow  : filter://type=IPV4,proto=ICMP,label=GFT_DROP
              srcseg: filter://native=True
            - flow  : filter://type=IPV6,proto=UDP,label=GFT_DROP
              srcseg: filter://native=True
            - flow  : filter://type=IPV6,proto=TCP,label=GFT_DROP
              srcseg: filter://native=True
            - flow  : filter://type=IPV6,proto=ICMPV6,label=GFT_DROP
              srcseg: filter://native=True

    - module:
        name    : VXLAN_IPV4
        spec    : tx_vxlan.testspec
        iterate:
            - flow: filter://type=IPV4,proto=UDP,label=NETWORKING
            - flow: filter://type=IPV4,proto=TCP,label=NETWORKING
            - flow: filter://type=IPV4,proto=ICMP,label=NETWORKING

    - module:
        name    : VXLAN_IPV6
        spec    : tx_vxlan.testspec
        iterate:
            - flow: filter://type=IPV6,proto=UDP,label=NETWORKING
            - flow: filter://type=IPV6,proto=TCP,label=NETWORKING
            - flow: filter://type=IPV6,proto=ICMPV6,label=NETWORKING

    - module:
        name    : VXLAN_ARP_RARP
        spec    : tx_vxlan_arp.testspec
        iterate :
            - type: ARP_REQ_UC
            - type: ARP_RESP
            - type: RARP_REQ_UC
            - type: RARP_RESP

    - module:
        name    : VXLAN_NONIP
        spec    : tx_vxlan_nonip.testspec
        iterate :
            - segment: filter://native=False
              flow   : filter://label=NETWORKING

    - module:
        name    : VXLAN_L3UC_IPV4
        spec    : tx_vxlan_l3.testspec
        iterate:
            - flow: filter://type=IPV4,proto=UDP,label=NETWORKING
            - flow: filter://type=IPV4,proto=TCP,label=NETWORKING
            - flow: filter://type=IPV4,proto=ICMP,label=NETWORKING

    - module:
        name    : VXLAN_L3UC_IPV6
        spec    : tx_vxlan_l3.testspec
        iterate:
            - flow: filter://type=IPV6,proto=UDP,label=NETWORKING
            - flow: filter://type=IPV6,proto=TCP,label=NETWORKING
            - flow: filter://type=IPV6,proto=ICMPV6,label=NETWORKING

    - module:
        name    : VXLAN_L3UC_IPV4_GFT_DROP
        spec    : tx_vxlan_l3.testspec
        iterate:
            - flow: filter://type=IPV4,proto=UDP,label=GFT_DROP
            - flow: filter://type=IPV4,proto=TCP,label=GFT_DROP
            - flow: filter://type=IPV4,proto=ICMP,label=GFT_DROP

    - module:
        name    : VXLAN_L3UC_IPV6_GFT_DROP
        spec    : tx_vxlan_l3.testspec
        iterate:
            - flow: filter://type=IPV6,proto=UDP,label=GFT_DROP
            - flow: filter://type=IPV6,proto=TCP,label=GFT_DROP
            - flow: filter://type=IPV6,proto=ICMPV6,label=GFT_DROP
