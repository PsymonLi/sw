# Feature Test Modules List
#
feature:
    id          : proxy
    sub         : proxy
    package     : test.tcp_tls_proxy
    module      : None
    enable      : True
    rtl         : False
    ignore      : False
    runorder    : 10

modules:
    - module:
        name    : IN_ORDER_PKT_NOT_TO_SERQ_V4
        spec    : one_pkt.testspec
        module  : in_order
        rtl     : True
        args    :
            maxflows : 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : IN_ORDER_PKT_NOT_TO_SERQ_V4_ACK
        spec    : one_pkt_ack.testspec
        module  : in_order
        rtl     : True
        args    :
            maxflows : 1
            send_ack_flow1 : 1
            timestamp : 0xf00df00d
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : IN_ORDER_PKT_NOT_TO_SERQ_V4_DEL_ACK_TIMER
        spec    : one_pkt_ack.testspec
        module  : in_order
        args    :
            maxflows : 1
            send_ack_flow1 : 1
            test_timer : 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : IN_ORDER_FLOWS_NOT_TO_SERQ_V4
        spec    : one_pkt.testspec
        module  : in_order
        rtl     : True
        args    :
            maxflows: 2
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : IN_ORDER_PKT_NOT_TO_SERQ_V6
        spec    : one_pkt.testspec
        module  : in_order
        rtl     : True
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV6

    - module:
        name    : IN_ORDER_FLOWS_NOT_TO_SERQ_V6
        spec    : one_pkt.testspec
        module  : in_order
        rtl     : True
        args    :
            maxflows: 2
        iterate :
            - flow: filter://type=IPV6

    - module:
        name    : IN_ORDER_PKT_NOT_TO_SERQ_VXLAN
        spec    : one_pkt_vxlan.testspec
        module  : in_order
        rtl     : True
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : IN_ORDER_FLOWS_NOT_TO_SERQ_VXLAN
        spec    : one_pkt_vxlan.testspec
        module  : in_order
        rtl     : True
        args    :
            maxflows: 2
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_SERQ_V4
        spec    : one_pkt.testspec
        module  : pkt_to_serq
        rtl     : True
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4


    - module:
        name    : OOO_PKT_TO_SERQ_V4
        spec    : ooo_pkt.testspec
        module  : pkt_to_serq
        ignore  : True
        rtl     : True
        args    :
            maxflows: 1
            ooo_seq_delta: 1000
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : OOO_PKT_IN_ORDER_PKT_TO_SERQ_V4
        spec    : ooo_pkt_in_order_pkt.testspec
        module  : pkt_to_serq_ooo_in_order
        ignore  : True
        rtl     : True
        args    :
            maxflows: 1
            ooo_seq_delta: 1000
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : OOO_PKT_TO_SERQ_V4_DUPACK
        spec    : ooo_pkt_ack.testspec
        module  : pkt_to_serq
        rtl     : True
        args    :
            maxflows: 1
            ooo_seq_delta: 1000
            send_ack_flow1 : 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : DUP_PKT_TO_SERQ_V4_DUPACK
        spec    : ooo_pkt_ack.testspec
        module  : pkt_to_serq
        rtl     : True
        args    :
            maxflows: 1
            ooo_seq_delta: -1000
            send_ack_flow1 : 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : FLOWS_TO_SERQ_V4
        spec    : one_pkt.testspec
        module  : pkt_to_serq
        rtl     : True
        args    :
            maxflows: 2
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_SERQ_V6
        spec    : one_pkt.testspec
        module  : pkt_to_serq
        rtl     : True
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV6

    - module:
        name    : MULTIPLE_PKTS_TO_SERQ
        spec    : multiple_pkts_to_serq.testspec
        module  : pkt_to_serq
        rtl     : True
        args    :
            maxflows : 1
            num_pkts : 2
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_SERQ_ATOMIC_STATS
        spec    : one_pkt.testspec
        module  : pkt_to_serq
        rtl     : True
        args    :
            maxflows: 2
            atomic_stats : 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : MULTIPLE_PKTS_TO_SERQ_ATOMIC_STATS
        spec    : multiple_pkts_to_serq.testspec
        module  : pkt_to_serq
        rtl     : True
        args    :
            maxflows: 1
            atomic_stats : 1
            num_pkts : 2
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BRQ
        package : test.tcp_tls_proxy
        module  : pkt_to_brq
        spec    : one_pkt.testspec
        rtl     : True
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : FLOWS_TO_BRQ
        package : test.tcp_tls_proxy
        module  : pkt_to_brq
        rtl     : True
        spec    : one_pkt.testspec
        args    :
            maxflows: 2
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : UL_TO_HOST_AES256_GCM_ENCRYPT
        spec    : uplink_to_host_brq.testspec
        module  : pkt_to_bsq_encrypt
        rtl     : True
        enable  : False
        args :
              cipher_suite: GCM
              maxflows: 1
              key_size : 32
              same_flow : 1
        iterate :
            - flow: filter://type=IPV4,direction=IFLOW

    - module:
        name    : PKT_TO_BSQ_AES128_GCM_ENCRYPT_MULTI_PACKET
        package : test.tcp_tls_proxy
        module  : pkt_to_bsq_encrypt
        rtl     : True
        ignore  : True
        spec    : multi_pkt.testspec
        args    :
            cipher_suite: GCM
            maxflows: 1
            key_size : 16
            num_pkts : 10
            snd_cwnd : 10
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BSQ_AES128_GCM_ENCRYPT
        package : test.tcp_tls_proxy
        module  : pkt_to_bsq_encrypt
        rtl     : True
        spec    : one_pkt.testspec
        perf    : True
        args    :
            cipher_suite: GCM
            maxflows: 1
            same_flow : 1
            key_size : 16
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BSQ_AES128_GCM_DECRYPT
        package : test.tcp_tls_proxy
        module  : pkt_to_bsq_decrypt
        spec    : one_tls_aes128_gcm_record_pkt.testspec
        args    :
            cipher_suite: GCM
            maxflows: 1
            key_size : 16
        iterate  :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BSQ_AES128_GCM_DECRYPT_REASM
        package : test.tcp_tls_proxy
        module  : pkt_to_bsq_decrypt
        spec    : one_tls_aes128_gcm_record_pkt.testspec
        rtl     : True
        enable  : False
        args    :
            cipher_suite: GCM
            maxflows: 1
            key_size : 16
            reassemble : True
        iterate  :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BSQ_AES128_GCM_DECRYPT_MULTI_SEGMENT_REASM
        package : test.tcp_tls_proxy
        module  : pkt_to_bsq_decrypt
        rtl     : False
        spec    : one_tls_aes128_gcm_record_pkt_multi_segment.testspec
        enable  : False
        args    :
            cipher_suite: GCM
            maxflows: 1
            key_size : 16
            reassemble : True
        iterate  :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BSQ_AES256_GCM_ENCRYPT
        package : test.tcp_tls_proxy
        module  : pkt_to_bsq_encrypt
        spec    : one_pkt.testspec
        rtl     : True
        args    :
            cipher_suite: GCM
            maxflows: 1
            same_flow : 1
            key_size : 32
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BSQ_AES256_GCM_DECRYPT
        package : test.tcp_tls_proxy
        module  : pkt_to_bsq_decrypt
        spec    : one_tls_aes256_gcm_record_pkt.testspec
        rtl     : True
        args    :
            cipher_suite: GCM
            maxflows: 1
            key_size : 32
        iterate  :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BSQ_AES256_GCM_ENCRYPT_USE_RANDOM_IV
        package : test.tcp_tls_proxy
        module  : pkt_to_bsq_encrypt
        rtl     : True
        spec    : one_pkt.testspec
        args    :
            cipher_suite: GCM
            maxflows: 1
            same_flow : 1
            key_size : 32
            use_random_iv : 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BSQ_AES256_CCM_ENCRYPT_USE_RANDOM_IV
        enable  : True
        package : test.tcp_tls_proxy
        module  : pkt_to_bsq_encrypt
        rtl     : True
        spec    : one_pkt.testspec
        args    :
            cipher_suite: CCM
            maxflows: 1
            same_flow : 1
            key_size : 32
            use_random_iv : 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BSQ_AES256_CCM_ENCRYPT
        enable  : True
        package : test.tcp_tls_proxy
        module  : pkt_to_bsq_encrypt
        spec    : one_pkt.testspec
        rtl     : True
        args    :
            cipher_suite: CCM
            maxflows: 1
            same_flow : 1
            key_size : 32
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BSQ_AES256_CCM_DECRYPT
        enable  : True
        package : test.tcp_tls_proxy
        module  : pkt_to_bsq_decrypt
        spec    : one_tls_aes256_ccm_record_pkt.testspec
        rtl     : True
        args    :
            cipher_suite: CCM
            maxflows: 1
            key_size : 32
        iterate  :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BSQ_AES256_CBC_HMAC_SHA256_ENCRYPT
        enable  : False
        package : test.tcp_tls_proxy
        module  : pkt_to_bsq_encrypt
        spec    : one_pkt.testspec
        args    :
            cipher_suite: CBC
            maxflows: 1
            same_flow : 1
            key_size : 32
            hmac_key_size : 32
            use_random_iv : 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BSQ_AES256_CBC_HMAC_SHA256_DECRYPT
        enable  : False
        package : test.tcp_tls_proxy
        module  : pkt_to_bsq_decrypt
        spec    : one_pkt.testspec
        args    :
            cipher_suite: CBC
            maxflows: 1
            same_flow : 1
            key_size : 32
            hmac_key_size : 32
            use_random_iv : 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_SAME_FLOW
        spec    : uplink_to_uplink.testspec
        module  : pkt_to_p4
        args    :
            bypass_barco : 1
            maxflows : 1
            same_flow : 1
        iterate :
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              segment   : filter://native=False

    - module:
        name    : UL_TO_UL_BYPASS_BARCO
        spec    : uplink_to_uplink.testspec
        module  : pkt_to_p4
        rtl     : True
        args    :
            bypass_barco : 1
            maxflows : 1
        iterate :
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=IFLOW
              segment   : filter://native=False
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=RFLOW
              segment   : filter://native=False
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=IFLOW
              segment   : filter://native=True
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=RFLOW
              segment   : filter://native=True
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              srcseg    : filter://fabencap=VXLAN
              dstseg    : filter://fabencap=VXLAN

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_SERQ_FULL
        spec    : uplink_to_uplink_serq_full.testspec
        module  : pkt_to_p4
        args    :
            maxflows: 1
            serq_full : True
        iterate :
            - flow: filter://type=IPV4


    - module:
        name    : UL_TO_UL_BYPASS_BARCO_MULTI_PACKET
        spec    : uplink_to_uplink_multi.testspec
        module  : pkt_to_p4
        rtl     : True
        args    :
            bypass_barco : 1
            maxflows : 1
            num_pkts : 10
            snd_cwnd : 10

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_SEND_ACK
        spec    : uplink_to_uplink_ack.testspec
        module  : pkt_to_p4
        args    :
            bypass_barco : 1
            maxflows : 1
            send_ack_flow1 : 1
        iterate :
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              segment   : filter://native=False
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              segment   : filter://native=True

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_DEL_ACK_TIMER
        spec    : uplink_to_uplink_ack.testspec
        module  : pkt_to_p4
        args    :
            bypass_barco : 1
            send_ack_flow1 : 1
            test_timer : 1

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_CANCEL_DEL_ACK_TIMER
        spec    : uplink_to_uplink_cancel_ack.testspec
        module  : pkt_to_p4
        args    :
            bypass_barco : 1
            send_ack_flow1 : 1
            test_timer : 1

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_CLEAN_RETX_COMPLETE
        spec    : uplink_to_uplink_clean_retx_complete.testspec
        module  : pkt_to_p4
        args    :
            num_pkts : 2
            bypass_barco : 1
            maxflows : 1
            test_retx : complete
            pkt_alloc : 2
            pkt_free : 2

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_CLEAN_RETX_COMPLETE_ONE_SHOT
        spec    : uplink_to_uplink_clean_retx_complete_one_shot.testspec
        module  : pkt_to_p4
        args    :
            num_pkts : 2
            bypass_barco : 1
            maxflows : 1
            test_retx : complete
            pkt_alloc : 2
            pkt_free : 2

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_CLEAN_RETX_PARTIAL
        spec    : uplink_to_uplink_clean_retx_partial.testspec
        module  : pkt_to_p4
        args    :
            num_pkts : 2
            bypass_barco : 1
            maxflows : 1
            test_retx : partial
            pkt_alloc : 2
            pkt_free : 1

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_CLEAN_RETX_PARTIAL_SEND_ACK
        spec    : uplink_to_uplink_clean_retx_partial_send_ack.testspec
        module  : pkt_to_p4
        args    :
            num_pkts : 2
            bypass_barco : 1
            maxflows : 1
            test_retx : partial
            send_ack_flow2 : 1
            pkt_alloc : 3
            pkt_free : 1

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_CONG_AVOID
        spec    : uplink_to_uplink_clean_retx_partial.testspec
        module  : pkt_to_p4
        rtl     : False 
        args    :
            num_pkts : 2
            bypass_barco : 1
            maxflows : 1
            test_cong_avoid : 1

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_RETX_TIMER
        spec    : uplink_to_uplink_retx.testspec
        module  : pkt_to_p4
        args    :
            num_pkts : 1
            bypass_barco : 1
            maxflows : 1
            test_retx_timer : 1
            num_retx_pkts : 1

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_RETX_TIMER_2RETRIES
        spec    : uplink_to_uplink_retx_2retries.testspec
        module  : pkt_to_p4
        args    :
            num_pkts : 1
            bypass_barco : 1
            maxflows : 1
            test_retx_timer : 1
            num_retx_pkts : 2

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_RETX_TIMER_3RETRIES
        spec    : uplink_to_uplink_retx_3retries.testspec
        module  : pkt_to_p4
        args    :
            num_pkts : 1
            bypass_barco : 1
            maxflows : 1
            test_retx_timer : 1
            num_retx_pkts : 3

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_RETX_TIMER_2PKTS
        spec    : uplink_to_uplink_retx_2pkts.testspec
        module  : pkt_to_p4
        args    :
            num_pkts : 2
            bypass_barco : 1
            maxflows : 1
            test_retx_timer : 1
            num_retx_pkts : 1

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_RETX_TIMER_2PKTS_1ACK
        spec    : uplink_to_uplink_retx_2pkts_1ack.testspec
        module  : pkt_to_p4
        args    :
            num_pkts : 2
            num_ack_pkts : 1
            bypass_barco : 1
            maxflows : 1
            test_retx_timer : 1
            num_retx_pkts : 1

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_CANCEL_RETX_TIMER
        spec    : uplink_to_uplink_cancel_retx.testspec
        module  : pkt_to_p4
        args    :
            num_pkts : 1
            num_ack_pkts : 1
            bypass_barco : 1
            maxflows : 1
            test_retx_timer : 1

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_CANCEL_RETX_TIMER_AND_RTO_BACKOFF
        spec    : uplink_to_uplink_cancel_retx.testspec
        module  : pkt_to_p4
        args    :
            num_pkts : 1
            num_ack_pkts : 1
            bypass_barco : 1
            maxflows : 1
            test_retx_timer : 1
            rto_backoff : 3

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_2PKTS_CANCEL_RETX_TIMER
        spec    : uplink_to_uplink_2pkts_cancel_retx.testspec
        module  : pkt_to_p4
        args    :
            num_pkts : 2
            num_ack_pkts : 1
            bypass_barco : 1
            maxflows : 1
            test_retx_timer : 1

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_RETX_TIMER_FULL
        spec    : uplink_to_uplink_retx.testspec
        module  : pkt_to_p4
        args    :
            bypass_barco : 1
            maxflows : 1
            test_retx_timer_full : 1
            num_retx_pkts : 1

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_NMDR_FULL
        spec    : uplink_to_uplink_sem_full.testspec
        module  : pkt_to_p4
        args    :
            sem_full : nmdr
            bypass_barco : 1

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_FIN
        spec    : uplink_to_uplink_fin.testspec
        module  : pkt_to_p4
        rtl     : True
        args    :
            bypass_barco : 1
            fin : 1
            send_ack_flow1 : 1

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_FIN_ACK
        spec    : uplink_to_uplink_fin_ack.testspec
        module  : pkt_to_p4
        rtl     : True
        args    :
            bypass_barco : 1
            fin : 1
            fin_ack : 1
            send_ack_flow1 : 1

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_FIN_ACK_FIN
        spec    : uplink_to_uplink_fin_ack_fin.testspec
        module  : pkt_to_p4
        rtl     : True
        args    :
            bypass_barco : 1
            fin : 1
            fin_ack : 1
            send_ack_flow1 : 1
            send_ack_flow2 : 1
            final_fin : 1

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_TBLSETADDR
        spec    : uplink_to_uplink.testspec
        module  : pkt_to_p4
        args    :
            bypass_barco : 1
            test_mpu_tblsetaddr : 1

    - module:
        name    : UL_TO_HOST_BYPASS_BARCO_SAME_FLOW
        spec    : uplink_to_host.testspec
        module  : pkt_to_p4
        rtl     : True
        args :
              bypass_barco : 1
              maxflows : 1
              same_flow : 1
        iterate :
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              segment   : filter://native=False

    - module:
        name    : UL_TO_HOST_BYPASS_BARCO
        spec    : uplink_to_host.testspec
        module  : pkt_to_p4
        rtl     : True
        args :
              bypass_barco : 1
              maxflows : 1
        iterate :
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=IFLOW
              segment   : filter://native=False
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=RFLOW
              segment   : filter://native=False
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=IFLOW
              segment   : filter://native=True
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=RFLOW
              segment   : filter://native=True

    - module:
        name    : UL_TO_HOST_BYPASS_BARCO_SEND_ACK
        spec    : uplink_to_host_ack.testspec
        module  : pkt_to_p4
        rtl     : True
        args    :
            bypass_barco : 1
            maxflows : 1
            send_ack_flow1 : 1
        iterate :
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              segment   : filter://native=False
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              segment   : filter://native=True

    - module:
        name    : UL_TO_HOST_BYPASS_BARCO_MULTI_PACKET
        spec    : uplink_to_host_multi.testspec
        module  : pkt_to_p4
        rtl     : False
        args    :
            bypass_barco : 1
            maxflows : 1
            num_pkts : 10
            snd_cwnd : 10

    - module:
        name    : HOST_TO_UL_BYPASS_BARCO_SAME_FLOW
        spec    : host_to_uplink.testspec
        module  : pkt_to_p4
        rtl     : True
        args :
              bypass_barco : 1
              maxflows : 1
              same_flow : 1
        iterate :
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              segment   : filter://native=False

    - module:
        name    : HOST_TO_UL_BYPASS_BARCO
        spec    : host_to_uplink.testspec
        module  : pkt_to_p4
        rtl     : True
        args :
              bypass_barco : 1
              maxflows : 1
        iterate :
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=IFLOW
              segment   : filter://native=False
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=RFLOW
              segment   : filter://native=False
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=IFLOW
              segment   : filter://native=True
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=RFLOW
              segment   : filter://native=True

    - module:
        name    : HOST_TO_UL_BYPASS_BARCO_SEND_ACK
        spec    : host_to_uplink_ack.testspec
        module  : pkt_to_p4
        rtl     : True
        args    :
            bypass_barco : 1
            maxflows : 1
            send_ack_flow1 : 1
        iterate :
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              segment   : filter://native=False
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              segment   : filter://native=True

    - module:
        name    : HOST_TO_UL_BYPASS_BARCO_MULTI_PACKET
        spec    : host_to_uplink_multi.testspec
        module  : pkt_to_p4
        rtl     : False
        args    :
            bypass_barco : 1
            maxflows : 1
            num_pkts : 10
            snd_cwnd : 10

    - module:
        name    : PKT_TO_SESQ
        package : test.tcp_tls_proxy
        module  : pkt_to_sesq
        rtl     : True
        spec    : one_pkt.testspec
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : CRYPTO_API_HMAC_SHA1_GENERATE
        enable  : True
        package : test.tcp_tls_proxy
        module  : crypto_apis
        spec    : no_pkt.testspec
        args    :
            api:    CRYPTO_API_HMAC_SHA1_GENERATE
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : CRYPTO_API_HMAC_SHA1_VERIFY
        enable  : True
        package : test.tcp_tls_proxy
        module  : crypto_apis
        spec    : no_pkt.testspec
        args    :
            api:    CRYPTO_API_HMAC_SHA1_VERIFY
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : CRYPTO_API_HMAC_SHA224_GENERATE
        enable  : True
        package : test.tcp_tls_proxy
        module  : crypto_apis
        spec    : no_pkt.testspec
        args    :
            api:    CRYPTO_API_HMAC_SHA224_GENERATE
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : CRYPTO_API_HMAC_SHA224_VERIFY
        enable  : True
        package : test.tcp_tls_proxy
        module  : crypto_apis
        spec    : no_pkt.testspec
        args    :
            api:    CRYPTO_API_HMAC_SHA224_VERIFY
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : CRYPTO_API_HMAC_SHA256_GENERATE
        enable  : True
        package : test.tcp_tls_proxy
        module  : crypto_apis
        spec    : no_pkt.testspec
        args    :
            api:    CRYPTO_API_HMAC_SHA256_GENERATE
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : CRYPTO_API_HMAC_SHA256_VERIFY
        enable  : True
        package : test.tcp_tls_proxy
        module  : crypto_apis
        spec    : no_pkt.testspec
        args    :
            api:    CRYPTO_API_HMAC_SHA256_VERIFY
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : CRYPTO_API_HMAC_SHA384_GENERATE
        enable  : True
        package : test.tcp_tls_proxy
        module  : crypto_apis
        spec    : no_pkt.testspec
        args    :
            api:    CRYPTO_API_HMAC_SHA384_GENERATE
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : CRYPTO_API_HMAC_SHA384_VERIFY
        enable  : True
        package : test.tcp_tls_proxy
        module  : crypto_apis
        spec    : no_pkt.testspec
        args    :
            api:    CRYPTO_API_HMAC_SHA384_VERIFY
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : CRYPTO_API_HMAC_SHA512_GENERATE
        enable  : True
        package : test.tcp_tls_proxy
        module  : crypto_apis
        spec    : no_pkt.testspec
        args    :
            api:    CRYPTO_API_HMAC_SHA512_GENERATE
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : CRYPTO_API_HMAC_SHA512_VERIFY
        enable  : True
        package : test.tcp_tls_proxy
        module  : crypto_apis
        spec    : no_pkt.testspec
        args    :
            api:    CRYPTO_API_HMAC_SHA512_VERIFY
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : TCP_PKT_TO_L7Q_IDS_V4
        spec    : one_pkt.testspec
        module  : tcp_pkt_to_l7q_ids
        rtl     : True 
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : TCP_PKT_TO_L7Q_IDS_V6
        spec    : one_pkt.testspec
        module  : tcp_pkt_to_l7q_ids
        rtl     : True
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV6
    
    - module:
        name    : TCP_FLOWS_TO_L7Q_IDS_V4
        spec    : one_pkt.testspec
        module  : tcp_pkt_to_l7q_ids
        rtl     : True
        args    :
            maxflows: 2
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : TCP_PKT_TO_L7Q_IPS_V4
        spec    : one_pkt.testspec
        module  : tcp_pkt_to_l7q_ips
        rtl     : True
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : TCP_PKT_TO_L7Q_IPS_V6 
        spec    : one_pkt.testspec
        module  : tcp_pkt_to_l7q_ips
        rtl     : True
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV6

    - module:
        name    : TCP_FLOWS_TO_L7Q_IPS_V4
        spec    : one_pkt.testspec
        module  : tcp_pkt_to_l7q_ips
        rtl     : True
        args    :
            maxflows: 2
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : TLS_AES128_GCM_DECRYPT_L7Q_IDS_V4
        package : test.tcp_tls_proxy
        module  : tls_pkt_to_l7q_ids
        spec    : one_tls_aes128_gcm_record_pkt.testspec
        args    :
            cipher_suite: GCM
            maxflows: 1
            key_size : 16
        iterate  :
            - flow: filter://type=IPV4
    - module:
        name    : TLS_AES128_GCM_DECRYPT_L7Q_IPS_V4
        package : test.tcp_tls_proxy
        module  : tls_pkt_to_l7q_ips
        spec    : one_tls_aes128_gcm_record_pkt.testspec
        args    :
            cipher_suite: GCM
            maxflows: 1
            key_size : 16
        iterate  :
            - flow: filter://type=IPV4

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_FAST_RETX
        spec    : uplink_to_uplink_fast_retx.testspec
        module  : pkt_to_p4
        rtl     : True
        args    :
            bypass_barco : 1
            maxflows : 1
            num_retx_pkts : 1


