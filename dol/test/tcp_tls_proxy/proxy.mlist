# Feature Test Modules List
#
feature:
    id          : proxy
    sub         : proxy
    package     : test.tcp_tls_proxy
    module      : None
    enable      : True
    ignore      : False

modules:
    - module:
        name    : IN_ORDER_PKT_NOT_TO_SERQ_V4
        spec    : one_pkt.testspec
        module  : in_order
        args    :
            maxflows : 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : IN_ORDER_PKT_NOT_TO_SERQ_V4_ACK
        spec    : one_pkt_ack.testspec
        module  : in_order
        args    :
            maxflows : 1
            send_ack : 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : IN_ORDER_PKT_NOT_TO_SERQ_V4_DEL_ACK_TIMER
        spec    : one_pkt_ack.testspec
        module  : in_order
        enable  : False
        args    :
            maxflows : 1
            send_ack : 1
            test_timer : 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : IN_ORDER_FLOWS_NOT_TO_SERQ_V4
        spec    : one_pkt.testspec
        module  : in_order
        args    :
            maxflows: 2
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : IN_ORDER_PKT_NOT_TO_SERQ_V6
        spec    : one_pkt.testspec
        module  : in_order
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV6

    - module:
        name    : IN_ORDER_FLOWS_NOT_TO_SERQ_V6
        spec    : one_pkt.testspec
        module  : in_order
        args    :
            maxflows: 2
        iterate :
            - flow: filter://type=IPV6

    - module:
        name    : IN_ORDER_PKT_NOT_TO_SERQ_VXLAN
        spec    : one_pkt_vxlan.testspec
        module  : in_order
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : IN_ORDER_FLOWS_NOT_TO_SERQ_VXLAN
        spec    : one_pkt_vxlan.testspec
        module  : in_order
        args    :
            maxflows: 2
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_SERQ_V4
        spec    : one_pkt.testspec 
        module  : pkt_to_serq
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : FLOWS_TO_SERQ_V4
        spec    : one_pkt.testspec
        module  : pkt_to_serq
        args    :
            maxflows: 2
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_SERQ_V6
        spec    : one_pkt.testspec
        module  : pkt_to_serq
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV6

    - module:
        name    : MULTIPLE_PKTS_TO_SERQ
        spec    : multiple_pkts_to_serq.testspec
        module  : pkt_to_serq
        args    :
            maxflows : 1
            num_pkts : 2
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_SERQ_ATOMIC_STATS
        spec    : one_pkt.testspec
        module  : pkt_to_serq
        args    :
            maxflows: 2
            atomic_stats : 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BRQ
        package : test.tcp_tls_proxy
        module  : pkt_to_brq
        spec    : one_pkt.testspec
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : FLOWS_TO_BRQ
        package : test.tcp_tls_proxy
        module  : pkt_to_brq
        spec    : one_pkt.testspec
        args    :
            maxflows: 2
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BSQ_AES128_GCM_ENCRYPT
        package : test.tcp_tls_proxy
        module  : pkt_to_bsq_encrypt
        spec    : one_pkt.testspec
        args    :
            maxflows: 1
            same_flow : 1
            key_size : 16
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BSQ_AES128_GCM_DECRYPT
        package : test.tcp_tls_proxy
        module  : pkt_to_bsq_decrypt
        spec    : one_tls_aes128_gcm_record_pkt.testspec
        args    :
            maxflows: 1
            key_size : 16
        iterate  :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BSQ_AES256_GCM_ENCRYPT
        package : test.tcp_tls_proxy
        module  : pkt_to_bsq_encrypt
        spec    : one_pkt.testspec
        args    :
            maxflows: 1
            same_flow : 1
            key_size : 32
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BSQ_AES256_GCM_DECRYPT
        package : test.tcp_tls_proxy
        module  : pkt_to_bsq_decrypt
        spec    : one_tls_aes256_gcm_record_pkt.testspec
        args    :
            maxflows: 1
            key_size : 32
        iterate  :
            - flow: filter://type=IPV4

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_SAME_FLOW
        spec    : uplink_to_uplink.testspec
        module  : pkt_to_p4
        args    :
            bypass_barco : 1
            maxflows : 1
            same_flow : 1
        iterate :
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              segment   : filter://native=False

    - module:
        name    : UL_TO_UL_BYPASS_BARCO
        spec    : uplink_to_uplink.testspec
        module  : pkt_to_p4
        args    :
            bypass_barco : 1
            maxflows : 1
        iterate :
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=IFLOW
              segment   : filter://native=False
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=RFLOW
              segment   : filter://native=False
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=IFLOW
              segment   : filter://native=True
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=RFLOW
              segment   : filter://native=True
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              srcseg    : filter://fabencap=VXLAN
              dstseg    : filter://fabencap=VXLAN

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_SEND_ACK
        spec    : uplink_to_uplink_ack.testspec
        module  : pkt_to_p4
        args    :
            bypass_barco : 1
            maxflows : 1
            send_ack : 1
        iterate :
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              segment   : filter://native=False
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              segment   : filter://native=True

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_DEL_ACK_TIMER
        spec    : uplink_to_uplink_ack.testspec
        module  : pkt_to_p4
        enable  : False
        args    :
            bypass_barco : 1
            send_ack : 1
            test_timer : 1

    - module:
        name    : UL_TO_UL_BYPASS_BARCO_CANCEL_DEL_ACK_TIMER
        spec    : uplink_to_uplink_cancel_ack.testspec
        module  : pkt_to_p4
        enable  : False
        args    :
            bypass_barco : 1
            send_ack : 1
            test_timer : 1

    - module:
        name    : UL_TO_HOST_BYPASS_BARCO_SAME_FLOW
        spec    : uplink_to_host.testspec
        module  : pkt_to_p4
        args :
              bypass_barco : 1
              maxflows : 1
              same_flow : 1
        iterate :
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              segment   : filter://native=False

    - module:
        name    : UL_TO_HOST_BYPASS_BARCO
        spec    : uplink_to_host.testspec
        module  : pkt_to_p4
        args :
              bypass_barco : 1
              maxflows : 1
        iterate :
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=IFLOW
              segment   : filter://native=False
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=RFLOW
              segment   : filter://native=False
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=IFLOW
              segment   : filter://native=True
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=RFLOW
              segment   : filter://native=True

    - module:
        name    : UL_TO_HOST_BYPASS_BARCO_SEND_ACK
        spec    : uplink_to_host_ack.testspec
        module  : pkt_to_p4
        args    :
            bypass_barco : 1
            maxflows : 1
            send_ack : 1
        iterate :
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              segment   : filter://native=False
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              segment   : filter://native=True

    - module:
        name    : HOST_TO_UL_BYPASS_BARCO_SAME_FLOW
        spec    : host_to_uplink.testspec
        module  : pkt_to_p4
        args :
              bypass_barco : 1
              maxflows : 1
              same_flow : 1
        iterate :
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              segment   : filter://native=False

    - module:
        name    : HOST_TO_UL_BYPASS_BARCO
        spec    : host_to_uplink.testspec
        module  : pkt_to_p4
        args :
              bypass_barco : 1
              maxflows : 1
        iterate :
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=IFLOW
              segment   : filter://native=False
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=RFLOW
              segment   : filter://native=False
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=IFLOW
              segment   : filter://native=True
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2,direction=RFLOW
              segment   : filter://native=True

    - module:
        name    : HOST_TO_UL_BYPASS_BARCO_SEND_ACK
        spec    : host_to_uplink_ack.testspec
        module  : pkt_to_p4
        args    :
            bypass_barco : 1
            maxflows : 1
            send_ack : 1
        iterate :
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              segment   : filter://native=False
            - flow      : filter://type=IPV4,proto=TCP,label=TCP-PROXY,fwtype=L2
              segment   : filter://native=True

    - module:
        name    : PKT_TO_SESQ
        package : test.tcp_tls_proxy
        module  : pkt_to_sesq
        spec    : one_pkt.testspec
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4
    - module:
        name    : TLS_HANDSHAKE_RX
        package : test.tcp_tls_proxy
        module  : tls_handshake_rx
        spec    : tls_handshake.testspec
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4


    - module:
        name    : PKT_TO_ARQ
        package : test.tcp_tls_proxy
        module  : pkt_to_arq
        spec    : pkt_to_arq.testspec
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_ARQ_TO_UPLINK
        package : test.tcp_tls_proxy
        module  : pkt_to_arq_to_uplink
        spec    : pkt_to_arq_to_uplink.testspec
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : SYN_ACK_TO_ARQ
        package : test.tcp_tls_proxy
        module  : syn_ack_to_arq
        spec    : one_pkt.testspec
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4


    - module:
        name    : TLS_HANDSHAKE_TX
        package : test.tcp_tls_proxy
        module  : tls_handshake_tx
        spec    : tls_handshake.testspec
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : ACK_SYN_ACK_TX
        enable  : False
        package : test.tcp_tls_proxy
        module  : ack_syn_ack_tx
        spec    : ack_syn_ack_tx.testspec
        args    :
            maxflows    : 1
            send_ack    : 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_LKL_V4
        enable  : False
        package : test.tcp_tls_proxy
        module  : pkt_to_lkl
        spec    : pkt_to_lkl.testspec
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4
