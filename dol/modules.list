# This file contains the list of DOL test modules.
modules:
    - module:
        name    : L2UC
        enable  : True
        package : test.networking
        module  : networking
        spec    : l2uc.testspec
        iterate :
            - flow    : filter://type=IPV4,proto=UDP,label=NETWORKING
              segment : filter://native=False
            - flow    : filter://type=IPV4,proto=UDP,label=NETWORKING
              segment : filter://native=True
            - flow    : filter://type=IPV4,proto=TCP,label=NETWORKING
              segment : filter://native=False
            - flow    : filter://type=IPV4,proto=TCP,label=NETWORKING
              segment : filter://native=True
            - flow    : filter://type=IPV4,proto=ICMP,label=NETWORKING
              segment : filter://native=False
            - flow    : filter://type=IPV4,proto=ICMP,label=NETWORKING
              segment : filter://native=True
            - flow    : filter://type=IPV6,proto=UDP,label=NETWORKING
              segment : filter://native=False
            - flow    : filter://type=IPV6,proto=UDP,label=NETWORKING
              segment : filter://native=True
            - flow    : filter://type=IPV6,proto=TCP,label=NETWORKING
              segment : filter://native=False
            - flow    : filter://type=IPV6,proto=TCP,label=NETWORKING
              segment : filter://native=True

    - module:
        name    : L2UC_GFT_DROP
        enable  : True
        package : test.networking
        module  : networking
        spec    : l2uc.testspec
        ignore  : True
        args    :
            maxflows: 1
        iterate :
            - flow    : filter://type=IPV4,proto=UDP,label=GFT_DROP
              segment : filter://native=False
            - flow    : filter://type=IPV4,proto=UDP,label=GFT_DROP
              segment : filter://native=True
            - flow    : filter://type=IPV4,proto=TCP,label=GFT_DROP
              segment : filter://native=False
            - flow    : filter://type=IPV4,proto=TCP,label=GFT_DROP
              segment : filter://native=True
            - flow    : filter://type=IPV4,proto=ICMP,label=GFT_DROP
              segment : filter://native=False
            - flow    : filter://type=IPV4,proto=ICMP,label=GFT_DROP
              segment : filter://native=True
            - flow    : filter://type=IPV6,proto=UDP,label=GFT_DROP
              segment : filter://native=False
            - flow    : filter://type=IPV6,proto=UDP,label=GFT_DROP
              segment : filter://native=True
            - flow    : filter://type=IPV6,proto=TCP,label=GFT_DROP
              segment : filter://native=False
            - flow    : filter://type=IPV6,proto=TCP,label=GFT_DROP
              segment : filter://native=True

    - module:
        name    : L2UC_NONIP
        enable  : True
        package : test.networking
        module  : networking
        spec    : l2uc_nonip.testspec
        ignore  : False
        iterate :
            - segment: filter://native=False
              flow   : filter://label=NETWORKING
            - segment: filter://native=True
              flow   : filter://label=NETWORKING

    - module:
        name    : L2UC_NONIP_GFT_DROP
        enable  : True
        package : test.networking
        module  : networking
        spec    : l2uc_nonip.testspec
        ignore  : True
        iterate :
            - segment: filter://native=False
              flow   : filter://label=GFT_DROP
            - segment: filter://native=True
              flow   : filter://label=GFT_DROP

    - module:
        name    : L2UC_QTAG_ARP_RARP
        enable  : True
        package : test.networking
        module  : networking
        spec    : arp.testspec
        ignore  : False
        args    :
            segment: filter://native=False
        iterate :
            - type      : ARP_REQ_UC
              segment   : filter://native=False
            - type      : ARP_RESP
              segment   : filter://native=False
            - type      : RARP_REQ_UC
              segment   : filter://native=False
            - type      : RARP_RESP
              segment   : filter://native=False

    - module:
        name    : L2UC_QTAG_ARP_RARP_GFT_DROP
        enable  : True
        package : test.networking
        module  : networking
        spec    : arp.testspec
        ignore  : True
        args    :
            segment: filter://native=False
        iterate :
            - type      : ARP_REQ_UC
              segment   : filter://native=False
              flow      : filter://label=GFT_DROP
            - type      : ARP_RESP
              segment   : filter://native=False
              flow      : filter://label=GFT_DROP
            - type      : RARP_REQ_UC
              segment   : filter://native=False
              flow      : filter://label=GFT_DROP
            - type      : RARP_RESP
              segment   : filter://native=False
              flow      : filter://label=GFT_DROP

    - module:
        name    : L2UC_UNTAG_ARP_RARP
        enable  : True
        package : test.networking
        module  : networking
        spec    : arp.testspec
        ignore  : False
        iterate :
            - type      : ARP_REQ_UC
              segment   : filter://native=True
            - type      : ARP_RESP
              segment   : filter://native=True
            - type      : RARP_REQ_UC
              segment   : filter://native=True
            - type      : RARP_RESP
              segment   : filter://native=True

    - module:
        name    : L2UC_VXLAN_ARP_RARP
        enable  : True
        package : test.networking
        module  : networking
        spec    : arp_vxlan.testspec
        ignore  : False
        args    :
            segment: filter://native=False
        iterate :
            - type      : ARP_REQ_UC
            - type      : ARP_RESP
            - type      : RARP_REQ_UC
            - type      : RARP_RESP

    - module:
        name    : L2UC_VXLAN_V6
        enable  : True
        package : test.networking
        module  : networking
        spec    : l2uc_vxlan.testspec
        ignore  : True
        iterate :
            - flow    : filter://type=IPV6,proto=UDP,label=NETWORKING
            - flow    : filter://type=IPV6,proto=TCP,label=NETWORKING

    - module:
        name    : L2UC_VXLAN_V4
        enable  : True
        package : test.networking
        module  : networking
        spec    : l2uc_vxlan.testspec
        ignore  : True
        iterate :
            - flow    : filter://type=IPV4,proto=UDP,label=NETWORKING
            - flow    : filter://type=IPV4,proto=TCP,label=NETWORKING
            - flow    : filter://type=IPV4,proto=ICMP,label=NETWORKING

    - module:
        name    : L3UC_VXLAN_V4
        enable  : True
        package : test.networking
        module  : networking
        spec    : l3uc_vxlan.testspec
        ignore  : True
        iterate :
            - flow: filter://type=IPV4,proto=UDP,label=NETWORKING
            - flow: filter://type=IPV4,proto=TCP,label=NETWORKING
            - flow: filter://type=IPV4,proto=ICMP,label=NETWORKING

    - module:
        name    : L3UC_VXLAN_V6
        enable  : True
        package : test.networking
        module  : networking
        spec    : l3uc_vxlan.testspec
        ignore  : True
        iterate :
            - flow: filter://type=IPV6,proto=UDP,label=NETWORKING
            - flow: filter://type=IPV6,proto=TCP,label=NETWORKING

    - module:
        name    : L3UC
        enable  : True
        package : test.networking
        module  : networking
        spec    : l3uc.testspec
        ignore  : False
        iterate :
            - flow: filter://type=IPV4,proto=UDP,label=NETWORKING
              srcseg: filter://native=False
            - flow: filter://type=IPV6,proto=UDP,label=NETWORKING
              srcseg: filter://native=False
            - flow: filter://type=IPV4,proto=TCP,label=NETWORKING
              srcseg: filter://native=False
            - flow: filter://type=IPV6,proto=TCP,label=NETWORKING
              srcseg: filter://native=False
            - flow: filter://type=IPV4,proto=ICMP,label=NETWORKING
              srcseg: filter://native=False
            - flow: filter://type=IPV4,proto=UDP,label=NETWORKING
              srcseg: filter://native=True
            - flow: filter://type=IPV6,proto=UDP,label=NETWORKING
              srcseg: filter://native=True
            - flow: filter://type=IPV4,proto=TCP,label=NETWORKING
              srcseg: filter://native=True
            - flow: filter://type=IPV6,proto=TCP,label=NETWORKING
              srcseg: filter://native=True
            - flow: filter://type=IPV4,proto=ICMP,label=NETWORKING
              srcseg: filter://native=True

    - module:
        name    : RECIRC_L2UC
        enable  : True
        package : test.networking
        module  : networking
        spec    : l2uc.testspec
        ignore  : False
        args    :
            maxflows : 1
        iterate:
            - flow    : filter://type=IPV4,proto=UDP,label=FLOW-COLLISION
              segment : filter://native=False
            - flow    : filter://type=IPV4,proto=UDP,label=FLOW-COLLISION
              segment : filter://native=True
            - flow    : filter://type=IPV4,proto=TCP,label=FLOW-COLLISION
              segment : filter://native=False
            - flow    : filter://type=IPV4,proto=TCP,label=FLOW-COLLISION
              segment : filter://native=True
            - flow    : filter://type=IPV4,proto=ICMP,label=FLOW-COLLISION
              segment : filter://native=False
            - flow    : filter://type=IPV4,proto=ICMP,label=FLOW-COLLISION
              segment : filter://native=True
            - flow    : filter://type=IPV6,proto=UDP,label=FLOW-COLLISION
              segment : filter://native=False
            - flow    : filter://type=IPV6,proto=UDP,label=FLOW-COLLISION
              segment : filter://native=True
            - flow    : filter://type=IPV6,proto=TCP,label=FLOW-COLLISION
              segment : filter://native=False
            - flow    : filter://type=IPV6,proto=TCP,label=FLOW-COLLISION
              segment : filter://native=True

    - module:
        name    : RECIRC_L2UC_NONIP
        enable  : True
        package : test.networking
        module  : networking
        spec    : l2uc_nonip.testspec
        ignore  : True
        args    :
            maxflows : 1
        iterate:
            - segment  : filter://native=False
              flow     : filter://label=FLOW-COLLISION
            - segment  : filter://native=True
              flow     : filter://label=FLOW-COLLISION

    - module:
        name    : RECIRC_L3UC
        enable  : True
        package : test.networking
        module  : networking
        spec    : l3uc.testspec
        ignore  : False
        args    :
            maxflows : 1
        iterate:
            - flow     : filter://fwtype=L3,type=IPV4,proto=UDP,label=FLOW-COLLISION,action=ALLOW
            - flow     : filter://fwtype=L3,type=IPV6,proto=UDP,label=FLOW-COLLISION,action=ALLOW

    - module:
        name    : PKT_TO_SERQ_V4
        enable  : True
        package : test.tcp-tls-proxy
        module  : tcp_proxy
        spec    : tcp_proxy.testspec
        ignore  : False
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_SERQ_V6
        enable  : True
        package : test.tcp-tls-proxy
        module  : tcp_proxy
        spec    : tcp_proxy.testspec
        ignore  : False
        iterate :
            - flow: filter://type=IPV6

    - module:
        name    : MULTIPLE_PKTS_TO_SERQ
        enable  : True
        package : test.tcp-tls-proxy
        module  : multiple_pkts_to_serq
        spec    : multiple_pkts_to_serq.testspec
        ignore  : False
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BRQ
        enable  : True
        package : test.tcp-tls-proxy
        module  : pkt_to_brq
        spec    : tcp_proxy.testspec
        ignore  : False
        args    :
            flow: filter://type=IPV4,proto=TCP

    - module:
        name    : PKT_TO_BSQ
        enable  : False
        package : test.tcp-tls-proxy
        module  : pkt_to_bsq
        spec    : tcp_proxy.testspec
        ignore  : True
        args    :
            flow: filter://type=IPV4,proto=TCP

    - module:
        name    : RDMA_BTH_BASIC
        enable  : True
        package : test.rdma
        module  : rdma
        spec    : firstpacket.testspec
        ignore  : True

    - module:
        name    : NORMALIZATION_IP
        enable  : True
        package : test.normalization
        module  : normalization
        spec    : normalization.testspec
        ignore  : False
        args    :
            flow: filter://type=IPV4
        iterate :
            - SEC_PROF_IP_RSVD_FLAGS_ACTION_ALLOW
            - SEC_PROF_IP_RSVD_FLAGS_ACTION_DROP
            - SEC_PROF_IP_RSVD_FLAGS_ACTION_EDIT
            - SEC_PROF_IP_DF_ACTION_ALLOW
            - SEC_PROF_IP_DF_ACTION_DROP
            - SEC_PROF_IP_DF_ACTION_EDIT

    - module:
        name    : NORMALIZATION_IP_IGNORE
        enable  : True
        package : test.normalization
        module  : normalization
        spec    : normalization.testspec
        ignore  : True
        args    :
            flow: filter://type=IPV4
        iterate :
            - SEC_PROF_IP_OPTIONS_ACTION_ALLOW
            - SEC_PROF_IP_OPTIONS_ACTION_DROP
            - SEC_PROF_IP_OPTIONS_ACTION_EDIT
            - SEC_PROF_IP_INVALID_LEN_ACTION_ALLOW
            - SEC_PROF_IP_INVALID_LEN_ACTION_DROP
            - SEC_PROF_IP_INVALID_LEN_ACTION_EDIT

    - module:
        name    : NORMALIZATION_ICMP
        enable  : True
        package : test.normalization
        module  : normalization
        spec    : normalization.testspec
        ignore  : True
        args    :
            flow: filter://type=IPV4,proto=ICMP
        iterate :
            - SEC_PROF_ICMP_INVALID_CODE_ACTION_ALLOW
            - SEC_PROF_ICMP_INVALID_CODE_ACTION_DROP
            - SEC_PROF_ICMP_INVALID_CODE_ACTION_EDIT
            - SEC_PROF_ICMP_DEPRECATED_MSGS_DROP_ENABLE
            - SEC_PROF_ICMP_DEPRECATED_MSGS_DROP_DISABLE
            - SEC_PROF_ICMP_REDIRECT_MSG_DROP_ENABLE
            - SEC_PROF_ICMP_REDIRECT_MSG_DROP_DISABLE

    - module:
        name    : NORMALIZATION_TCP_STATELESS
        enable  : True
        package : test.normalization
        module  : normalization
        spec    : normalization.testspec
        ignore  : True
        args    :
            flow: filter://type=IPV4,proto=TCP
        iterate :
            - SEC_PROF_TCP_RSVD_FLAGS_ACTION_ALLOW
            - SEC_PROF_TCP_RSVD_FLAGS_ACTION_DROP
            - SEC_PROF_TCP_RSVD_FLAGS_ACTION_EDIT
            - SEC_PROF_TCP_UNEXPECTED_MSS_ACTION_ALLOW
            - SEC_PROF_TCP_UNEXPECTED_MSS_ACTION_DROP
            - SEC_PROF_TCP_UNEXPECTED_MSS_ACTION_EDIT
            - SEC_PROF_TCP_UNEXPECTED_WIN_SCALE_ACTION_ALLOW
            - SEC_PROF_TCP_UNEXPECTED_WIN_SCALE_ACTION_DROP
            - SEC_PROF_TCP_UNEXPECTED_WIN_SCALE_ACTION_EDIT
            - SEC_PROF_TCP_URG_FLAG_NOT_SET_ACTION_ALLOW
            - SEC_PROF_TCP_URG_FLAG_NOT_SET_ACTION_DROP
            - SEC_PROF_TCP_URG_FLAG_NOT_SET_ACTION_EDIT
            - SEC_PROF_TCP_URG_PAYLOAD_MISSING_ACTION_ALLOW
            - SEC_PROF_TCP_URG_PAYLOAD_MISSING_ACTION_DROP
            - SEC_PROF_TCP_URG_PAYLOAD_MISSING_ACTION_EDIT
            - SEC_PROF_TCP_URG_PTR_NOT_SET_ACTION_ALLOW
            - SEC_PROF_TCP_URG_PTR_NOT_SET_ACTION_DROP
            - SEC_PROF_TCP_URG_PTR_NOT_SET_ACTION_EDIT
            - SEC_PROF_TCP_RST_WITH_DATA_ACTION_ALLOW
            - SEC_PROF_TCP_RST_WITH_DATA_ACTION_DROP
            - SEC_PROF_TCP_RST_WITH_DATA_ACTION_EDIT
            - SEC_PROF_TCP_INVALID_FLAGS_DROP_ENABLE
            - SEC_PROF_TCP_INVALID_FLAGS_DROP_DISABLE
            - SEC_PROF_TCP_FLAGS_NONSYN_NOACK_DROP_ENABLE
            - SEC_PROF_TCP_FLAGS_NONSYN_NOACK_DROP_DISABLE
            - SEC_PROF_TCP_UNEXPECTED_ECHO_TS_ACTION_ALLOW
            - SEC_PROF_TCP_UNEXPECTED_ECHO_TS_ACTION_DROP
            - SEC_PROF_TCP_UNEXPECTED_ECHO_TS_ACTION_EDIT

    - module:
        name    : NORMALIZATION_TCP_STATEFUL
        enable  : True
        package : test.normalization
        module  : normalization
        spec    : normalization.testspec
        ignore  : True
        args    :
            flow: filter://type=IPV4,proto=TCP
        iterate :
            - SEC_PROF_TCP_NON_SYN_FIRST_PKT_DROP_ENABLE
            - SEC_PROF_TCP_NON_SYN_FIRST_PKT_DROP_DISABLE
            - SEC_PROF_TCP_SYNCOOKIE_EN_ENABLE
            - SEC_PROF_TCP_SYNCOOKIE_EN_DISABLE
            - SEC_PROF_TCP_SPLIT_HANDSHAKE_DETECT_EN_ENABLE
            - SEC_PROF_TCP_SPLIT_HANDSHAKE_DETECT_EN_DISABLE
            - SEC_PROF_TCP_SPLIT_HANDSHAKE_DROP_ENABLE
            - SEC_PROF_TCP_SPLIT_HANDSHAKE_DROP_DISABLE
            - SEC_PROF_TCP_DATA_LEN_GT_MSS_ACTION_ALLOW
            - SEC_PROF_TCP_DATA_LEN_GT_MSS_ACTION_DROP
            - SEC_PROF_TCP_DATA_LEN_GT_MSS_ACTION_EDIT
            - SEC_PROF_TCP_DATA_LEN_GT_WIN_SIZE_ACTION_ALLOW
            - SEC_PROF_TCP_DATA_LEN_GT_WIN_SIZE_ACTION_DROP
            - SEC_PROF_TCP_DATA_LEN_GT_WIN_SIZE_ACTION_EDIT
            - SEC_PROF_TCP_UNEXPECTED_TS_OPTION_ACTION_ALLOW
            - SEC_PROF_TCP_UNEXPECTED_TS_OPTION_ACTION_DROP
            - SEC_PROF_TCP_UNEXPECTED_TS_OPTION_ACTION_EDIT
            - SEC_PROF_TCP_TS_NOT_PRESENT_DROP_ENABLE
            - SEC_PROF_TCP_TS_NOT_PRESENT_DROP_DISABLE

    - module:
        name    : ACL_NONIP_DROP
        enable  : True
        package : test.acl
        module  : acl
        spec    : acl_nonip_drop.testspec
        args    : 
            maxflows: 1
        iterate:
            - id    : ACL_SMAC_DMAC_ETYPE_ACTION_DROP
#            - id    : ACL_VLAN_ACTION_DROP
#            - id    : ACL_VNID_ACTION_DROP
#            - id    : ACL_VRF_ACTION_DROP
#            - id    : ACL_DIF_ACTION_DROP
#            - id    : ACL_SIF_ACTION_DROP

    - module:
        name    : ACL_IP_DROP
        enable  : True
        package : test.acl
        module  : acl
        spec    : acl_ip_drop.testspec
        args    : 
            maxflows: 1
        iterate:
            - id    : ACL_IPV4_SIP_DIP_ACTION_DROP
              flow  : filter://type=IPV4
            - id    : ACL_IPV4_DIP_TCP_DPORT_ACTION_DROP
              flow  : filter://type=IPV4,proto=TCP
            - id    : ACL_IPV4_DIP_UDP_DPORT_ACTION_DROP
              flow  : filter://type=IPV4,proto=UDP
            - id    : ACL_IPV4_DIP_PREFIX_ACTION_DROP
              flow  : filter://type=IPV4
            - id    : ACL_IPV4_PROTO_ACTION_DROP
              flow  : filter://type=IPV4
#            - id    : ACL_IPV4_OPTIONS_ACTION_DROP
#              flow  : filter://type=IPV4
            - id    : ACL_IPV6_SIP_DIP_ACTION_DROP
              flow  : filter://type=IPV6
            - id    : ACL_IPV6_DIP_TCP_DPORT_ACTION_DROP
              flow  : filter://type=IPV6,proto=TCP
            - id    : ACL_IPV6_DIP_UDP_DPORT_ACTION_DROP
              flow  : filter://type=IPV6,proto=UDP
            - id    : ACL_IPV6_DIP_PREFIX_ACTION_DROP
              flow  : filter://type=IPV6
            - id    : ACL_IPV6_PROTO_ACTION_DROP
              flow  : filter://type=IPV6
#            - id    : ACL_IPV6_OPTIONS_ACTION_DROP
#              flow  : filter://type=IPV6
            - id    : ACL_TCP_SPORT_ACTION_DROP
              flow  : filter://type=IPV4,proto=TCP
            - id    : ACL_TCP_DPORT_ACTION_DROP
              flow  : filter://type=IPV4,proto=TCP
#            - id    : ACL_TCP_OPTIONS_ACTION_DROP
#              flow  : filter://type=IPV4,proto=TCP
            - id    : ACL_UDP_SPORT_ACTION_DROP
              flow  : filter://type=IPV4,proto=UDP
            - id    : ACL_UDP_DPORT_ACTION_DROP
              flow  : filter://type=IPV4,proto=UDP
            - id    : ACL_TCP_SPORT_ACTION_DROP
              flow  : filter://type=IPV6,proto=TCP
            - id    : ACL_TCP_DPORT_ACTION_DROP
              flow  : filter://type=IPV6,proto=TCP
#            - id    : ACL_TCP_OPTIONS_ACTION_DROP
#              flow  : filter://type=IPV6,proto=TCP
            - id    : ACL_UDP_SPORT_ACTION_DROP
              flow  : filter://type=IPV6,proto=UDP
            - id    : ACL_UDP_DPORT_ACTION_DROP
              flow  : filter://type=IPV6,proto=UDP
#            - id    : ACL_ICMP_ACTION_DROP
#              flow  : filter://type=IPV4,proto=ICMP
#            - id    : ACL_ICMPV6_ACTION_DROP
#              flow  : filter://type=IPV6,proto=ICMPV6
#            - id    : ACL_VLAN_ACTION_DROP
#              flow  : filter://type=IPV4
#            - id    : ACL_VNID_ACTION_DROP
#              flow  : filter://type=IPV4
#            - id    : ACL_VRF_ACTION_DROP
#              flow  : filter://type=IPV4
#            - id    : ACL_DIF_ACTION_DROP
#              flow  : filter://type=IPV4
#            - id    : ACL_SIF_ACTION_DROP
#              flow  : filter://type=IPV4
#            - id    : ACL_VLAN_ACTION_DROP
#              flow  : filter://type=IPV6
#            - id    : ACL_VNID_ACTION_DROP
#              flow  : filter://type=IPV6
#            - id    : ACL_VRF_ACTION_DROP
#              flow  : filter://type=IPV6
#            - id    : ACL_DIF_ACTION_DROP
#              flow  : filter://type=IPV6
#            - id    : ACL_SIF_ACTION_DROP
#              flow  : filter://type=IPV6

    - module:
        name    : SFW_IN_SEQUENCE
        enable  : True
        package : test.firewall
        module  : sfw_in_sequence
        spec    : sfw_in_sequence.testspec
        ignore  : false

    - module:
        name    : ETH_TX
        enable  : False
        package : test.eth
        module  : eth
        spec    : tx.testspec
        ignore  : True

    - module:
        name    : TELEMETRY_FP
        enable  : True
        package : test.telemetry
        module  : telemetry
        spec    : firstpacket.testspec
        ignore  : True

    - module:
        name    : L4LB
        enable  : True
        package : test.l4lb
        module  : l4lb
        spec    : l4lb.testspec
        ignore  : True

