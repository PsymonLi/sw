# This file contains the list of DOL test modules.
modules:
    - module:
        name    : IN_ORDER_PKT_NOT_TO_SERQ_V4
        enable  : True
        package : test.tcp_tls_proxy
        module  : in_order
        spec    : one_pkt.testspec
        ignore  : False
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : IN_ORDER_FLOWS_NOT_TO_SERQ_V4
        enable  : True
        package : test.tcp_tls_proxy
        module  : in_order
        spec    : one_pkt.testspec
        ignore  : False
        args    :
            maxflows: 2
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : IN_ORDER_PKT_NOT_TO_SERQ_V6
        enable  : True
        package : test.tcp_tls_proxy
        module  : in_order
        spec    : one_pkt.testspec
        ignore  : False
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV6

    - module:
        name    : IN_ORDER_FLOWS_NOT_TO_SERQ_V6
        enable  : True
        package : test.tcp_tls_proxy
        module  : in_order
        spec    : one_pkt.testspec
        ignore  : False
        args    :
            maxflows: 2
        iterate :
            - flow: filter://type=IPV6

    - module:
        name    : IN_ORDER_PKT_NOT_TO_SERQ_VXLAN
        enable  : True
        package : test.tcp_tls_proxy
        module  : in_order
        spec    : one_pkt_vxlan.testspec
        ignore  : False
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : IN_ORDER_FLOWS_NOT_TO_SERQ_VXLAN
        enable  : True
        package : test.tcp_tls_proxy
        module  : in_order
        spec    : one_pkt_vxlan.testspec
        ignore  : False
        args    :
            maxflows: 2
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_SERQ_V4
        enable  : True
        package : test.tcp_tls_proxy
        module  : pkt_to_serq
        spec    : one_pkt.testspec 
        ignore  : False
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : FLOWS_TO_SERQ_V4
        enable  : True
        package : test.tcp_tls_proxy
        module  : pkt_to_serq
        spec    : one_pkt.testspec
        ignore  : False
        args    :
            maxflows: 2
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_SERQ_V6
        enable  : True
        package : test.tcp_tls_proxy
        module  : pkt_to_serq
        spec    : one_pkt.testspec
        ignore  : False
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV6

    - module:
        name    : MULTIPLE_PKTS_TO_SERQ
        enable  : True
        package : test.tcp_tls_proxy
        module  : multiple_pkts_to_serq
        spec    : multiple_pkts_to_serq.testspec
        ignore  : False
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_SERQ_ATOMIC_STATS
        enable  : True
        package : test.tcp_tls_proxy
        module  : pkt_to_serq
        spec    : one_pkt.testspec
        ignore  : False
        args    :
            maxflows: 2
            atomic_stats : 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BRQ
        enable  : True
        package : test.tcp_tls_proxy
        module  : pkt_to_brq
        spec    : one_pkt.testspec
        ignore  : False
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : FLOWS_TO_BRQ
        enable  : True
        package : test.tcp_tls_proxy
        module  : pkt_to_brq
        spec    : one_pkt.testspec
        ignore  : False
        args    :
            maxflows: 2
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BSQ_ENCRYPT
        enable  : True
        package : test.tcp_tls_proxy
        module  : pkt_to_bsq_encrypt
        spec    : one_pkt.testspec
        ignore  : False
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_BSQ_DECRYPT
        enable  : False
        package : test.tcp_tls_proxy
        module  : pkt_to_bsq_decrypt
        spec    : one_tls_aes128_gcm_record_pkt.testspec
        ignore  : True
        args    :
            maxflows: 1
        iterate  :
            - flow: filter://type=IPV4

    - module:
        name    : PROXY_UPLINK_TO_UPLINK_BYPASS_BARCO
        enable  : True
        package : test.tcp_tls_proxy
        module  : pkt_tcp_tx_to_p4_bypass_barco
        spec    : uplink_to_uplink.testspec
        ignore  : False
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PROXY_UPLINK_TO_HOST_BYPASS_BARCO
        enable  : True
        package : test.tcp_tls_proxy
        module  : pkt_tcp_tx_to_p4_bypass_barco
        spec    : uplink_to_host.testspec
        ignore  : False
        args    :
            flow: filter://type=IPV4,proto=TCP

    - module:
        name    : PROXY_HOST_TO_UPLINK_BYPASS_BARCO
        enable  : True
        package : test.tcp_tls_proxy
        module  : pkt_tcp_tx_to_p4_bypass_barco
        spec    : host_to_uplink.testspec
        ignore  : False
        args    :
            flow: filter://type=IPV4,proto=TCP
    - module:
        name    : PKT_TO_SESQ
        enable  : True
        package : test.tcp_tls_proxy
        module  : pkt_to_sesq
        spec    : one_pkt.testspec
        ignore  : False
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_ARQ
        enable  : True
        package : test.tcp_tls_proxy
        module  : pkt_to_arq
        spec    : pkt_to_arq.testspec
        ignore  : False
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_ARQ_TO_UPLINK
        enable  : True
        package : test.tcp_tls_proxy
        module  : pkt_to_arq_to_uplink
        spec    : pkt_to_arq_to_uplink.testspec
        ignore  : False
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : SYN_ACK_TO_ARQ
        enable  : True
        package : test.tcp_tls_proxy
        module  : syn_ack_to_arq
        spec    : one_pkt.testspec
        ignore  : False
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_HFLOW_TO_NFLOW_PROXY_BYPASS_BARCO
        enable  : True
        package : test.tcp_tls_proxy
        module  : pkt_hflow_to_nflow_proxy_bypass_barco
        spec    : pkt_hflow_to_nflow_proxy_bypass_barco.testspec
        ignore  : False
        args    :
            maxflows: 1
        iterate :
            - flow: filter://type=IPV4

    - module:
        name    : PKT_TO_IPSECCBQ
        enable  : False
        package : test.ipsec-proxy
        module  : pkt_to_ipseccbq
        spec    : pkt_to_ipseccbq.testspec
        ignore  : True
        iterate :
            - flow: filter://type=IPV4,proto=TCP

    - module:
        name    : RDMA_TX_SEND_ONLY
        enable  : True
        package : test.rdma
        module  : req_tx_send_only
        spec    : req_tx_send_only.testspec
        ignore  : False
 
    - module:
        name    : RDMA_TX_SEND_ONLY_2SGES
        enable  : True
        package : test.rdma
        module  : req_tx_send_only_2sges
        spec    : req_tx_send_only_2sges.testspec
        ignore  : False
 
    - module:
        name    : RDMA_TX_SEND_FIRST_LAST
        enable  : True
        package : test.rdma
        module  : req_tx_send_first_last
        spec    : req_tx_send_first_last.testspec
        ignore  : False
 
    - module:
        name    : RDMA_TX_SEND_FIRST_LAST_2SGES
        enable  : True
        package : test.rdma
        module  : req_tx_send_first_last_2sges
        spec    : req_tx_send_first_last_2sges.testspec
        ignore  : False
 
    - module:
        name    : RDMA_TX_SEND_ONLY_IMM
        enable  : True
        package : test.rdma
        module  : req_tx_send_only_imm
        spec    : req_tx_send_only_imm.testspec
        ignore  : False

    - module:
       name    : RDMA_TX_SEND_ONLY_INV
       enable  : True
       package : test.rdma
       module  : req_tx_send_only_inv
       spec    : req_tx_send_only_inv.testspec
       ignore  : False

    - module:
       name    : RDMA_TX_SEND_FIRST_LAST_INV
       enable  : True
       package : test.rdma
       module  : req_tx_send_first_last_inv
       spec    : req_tx_send_first_last_inv.testspec
       ignore  : False

    - module:
       name    : RDMA_TX_SEND_FIRST_MID_LAST_INV
       enable  : True
       package : test.rdma
       module  : req_tx_send_first_mid_last_inv
       spec    : req_tx_send_first_mid_last_inv.testspec
       ignore  : False

    - module:
        name    : RDMA_TX_WRITE_ONLY
        enable  : True
        package : test.rdma
        module  : req_tx_write_only
        spec    : req_tx_write_only.testspec
        ignore  : False
 
    - module:
        name    : RDMA_TX_WRITE_ONLY_IMM
        enable  : True
        package : test.rdma
        module  : req_tx_write_only_imm
        spec    : req_tx_write_only_imm.testspec
 
    - module:
        name    : RDMA_TX_WRITE_FIRST_LAST
        enable  : True
        package : test.rdma
        module  : req_tx_write_first_last
        spec    : req_tx_write_first_last.testspec
        ignore  : False

    - module:
        name    : RDMA_TX_WRITE_FIRST_MID_LAST
        enable  : True
        package : test.rdma
        module  : req_tx_write_first_mid_last
        spec    : req_tx_write_first_mid_last.testspec
        ignore  : False
  
    - module:
        name    : RDMA_TX_WRITE_FIRST_LAST_IMM
        enable  : True
        package : test.rdma
        module  : req_tx_write_first_last_imm
        spec    : req_tx_write_first_last_imm.testspec
        ignore  : False

    - module:
        name    : RDMA_TX_WRITE_FIRST_MID_LAST_IMM
        enable  : True
        package : test.rdma
        module  : req_tx_write_first_mid_last_imm
        spec    : req_tx_write_first_mid_last_imm.testspec
        ignore  : False

    - module:
        name    : RDMA_TX_SEND_FIRST_MID_LAST
        enable  : True
        package : test.rdma
        module  : req_tx_send_first_mid_last
        spec    : req_tx_send_first_mid_last.testspec
        ignore  : False
 
    - module:
        name    : RDMA_TX_SEND_FIRST_MID_LAST_2SGES
        enable  : True
        package : test.rdma
        module  : req_tx_send_first_mid_last_2sges
        spec    : req_tx_send_first_mid_last_2sges.testspec
        ignore  : False
  
    - module:
        name    : RDMA_TX_SEND_FIRST_LAST_IMM
        enable  : True
        package : test.rdma
        module  : req_tx_send_first_last_imm
        spec    : req_tx_send_first_last_imm.testspec
        ignore  : False

    - module:
        name    : RDMA_TX_SEND_FIRST_MID_LAST_IMM
        enable  : True
        package : test.rdma
        module  : req_tx_send_first_mid_last_imm
        spec    : req_tx_send_first_mid_last_imm.testspec
        ignore  : False

    - module:
        name    : RDMA_TX_READ
        enable  : True
        package : test.rdma
        module  : req_tx_read
        spec    : req_tx_read.testspec
        ignore  : True

    - module:
        name    : RDMA_RX_SEND_ONLY
        enable  : True
        package : test.rdma
        module  : resp_rx_send_only
        spec    : resp_rx_send_only.testspec
        ignore  : False
 
    - module:
        name    : RDMA_RX_SEND_ONLY_2SGES
        enable  : True
        package : test.rdma
        module  : resp_rx_send_only_2sges
        spec    : resp_rx_send_only_2sges.testspec
        ignore  : False
 
    - module:
        name    : RDMA_RX_SEND_FIRST_LAST
        enable  : True
        package : test.rdma
        module  : resp_rx_send_first_last
        spec    : resp_rx_send_first_last.testspec
        ignore  : False

    - module:
        name    : RDMA_RX_SEND_FIRST_LAST_2SGES
        enable  : True
        package : test.rdma
        module  : resp_rx_send_first_last_2sges
        spec    : resp_rx_send_first_last_2sges.testspec
        ignore  : False

    - module:
        name    : RDMA_RX_SEND_FIRST_MID_LAST
        enable  : True
        package : test.rdma
        module  : resp_rx_send_first_mid_last
        spec    : resp_rx_send_first_mid_last.testspec
        ignore  : False

    - module:
        name    : RDMA_RX_SEND_FIRST_MID_LAST_2SGES
        enable  : True
        package : test.rdma
        module  : resp_rx_send_first_mid_last_2sges
        spec    : resp_rx_send_first_mid_last_2sges.testspec
        ignore  : False

    # TODO: Enable this test after Model bug is fixed for handling instrinsic drop
    #- module:
    #    name    : RDMA_RX_SEND_FIRST_LAST_PMTU_ERR
    #    enable  : True
    #    package : test.rdma
    #    module  : resp_rx_send_first_last_pmtu_err
    #    spec    : resp_rx_send_first_last_pmtu_err.testspec
    #    ignore  : False
 
    - module:
        name    : RDMA_RX_READ_ONLY
        enable  : True
        package : test.rdma
        module  : resp_rx_read_only
        spec    : resp_rx_read_only.testspec
        ignore  : False
 
    - module:
        name    : NVME
        enable  : True
        package : test.storage
        module  : nvme
        spec    : nvme.testspec
        ignore  : False
        iterate :
            - TESTCASE1
            - TESTCASE2
