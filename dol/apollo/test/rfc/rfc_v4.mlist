# Feature RFC IPV4 Modules List
feature:
    id          : rfc
    sub         : ipv4
    package     : test.rfc
    module      : rfc
    enable      : True
    ignore      : False

modules:
    - module:
        name    : IPV4_EGRESS_ALLOW_TCP
        spec    : rfc_egress.testspec
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=allow_tcp

    # testcases for policies with stateless rules only
    - module:
        name    : IPV4_EGRESS_DISJOINT_PFX
        spec    : rfc_egress.testspec
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateless,OverlapType=disjoint_pfx

    - module:
        name    : IPV4_EGRESS_DISJOINT
        spec    : rfc_egress.testspec
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateless,OverlapType=none

    - module:
        name    : IPV4_EGRESS_OVERLAP_PFX
        spec    : rfc_egress.testspec
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateless,OverlapType=pfx

    - module:
        name    : IPV4_EGRESS_OVERLAP_FULL_PFX
        spec    : rfc_egress.testspec
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateless,OverlapType=full_pfx

    - module:
        name    : IPV4_EGRESS_OVERLAP_PFX_FIRST
        spec    : rfc_egress.testspec
        args    :
            - prefix : first
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateless,OverlapType=pfx

    - module:
        name    : IPV4_EGRESS_OVERLAP_PFX_LAST
        spec    : rfc_egress.testspec
        args    :
            - prefix : last
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateless,OverlapType=pfx

    - module:
        name    : IPV4_EGRESS_ADJACENT_PFX_FIRST
        spec    : rfc_egress.testspec
        args    :
            - prefix : first
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateless,OverlapType=adjacent_pfx

    - module:
        name    : IPV4_EGRESS_ADJACENT_PFX_LAST
        spec    : rfc_egress.testspec
        args    :
            - prefix : last
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateless,OverlapType=adjacent_pfx

    - module:
        name    : IPV4_EGRESS_ADJACENT_DEFAULT_PFX_FIRST
        spec    : rfc_egress.testspec
        args    :
            - prefix : first
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateless,OverlapType=adjacent_pfx_with_default

    - module:
        name    : IPV4_EGRESS_ADJACENT_DEFAULT_PFX_LAST
        spec    : rfc_egress.testspec
        args    :
            - prefix : last
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateless,OverlapType=adjacent_pfx_with_default

    - module:
        name    : IPV4_EGRESS_CORNER_SPORT_FIRST
        spec    : rfc_egress.testspec
        args    :
            - sport : first
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateless,OverlapType=none

    - module:
        name    : IPV4_EGRESS_CORNER_SPORT_LAST
        spec    : rfc_egress.testspec
        args    :
            - sport : last
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateless,OverlapType=none

    - module:
        name    : IPV4_EGRESS_CORNER_DPORT_FIRST
        spec    : rfc_egress.testspec
        args    :
            - dport : first
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateless,OverlapType=none

    - module:
        name    : IPV4_EGRESS_SPORT_OVERLAP
        spec    : rfc_egress.testspec
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateless,OverlapType=sport

    - module:
        name    : IPV4_EGRESS_SPORT_OVERLAP_FULL
        spec    : rfc_egress.testspec
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateless,OverlapType=sport_full

    - module:
        name    : IPV4_EGRESS_DPORT_OVERLAP
        spec    : rfc_egress.testspec
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateless,OverlapType=dport

    - module:
        name    : IPV4_EGRESS_DPORT_OVERLAP_FULL
        spec    : rfc_egress.testspec
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateless,OverlapType=dport_full

    - module:
        name    : IPV4_INGRESS_ALLOW_TCP
        spec    : rfc_ingress.testspec
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=allow_tcp

    - module:
        name    : IPV4_INGRESS_DISJOINT_PFX
        spec    : rfc_ingress.testspec
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateless,OverlapType=disjoint_pfx

    - module:
        name    : IPV4_INGRESS_DISJOINT
        spec    : rfc_ingress.testspec
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateless,OverlapType=none

    # testcases for policies with stateful rules only
    - module:
        name    : IPV4_EGRESS_STATEFUL_DISJOINT_PFX
        spec    : rfc_egress.testspec
        enable  : False
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=none

    - module:
        name    : IPV4_EGRESS_STATEFUL_DISJOINT
        spec    : rfc_egress.testspec
        enable  : False
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=none

    - module:
        name    : IPV4_EGRESS_STATEFUL_OVERLAP_PFX
        spec    : rfc_egress.testspec
        enable  : False
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=pfx

    - module:
        name    : IPV4_EGRESS_STATEFUL_OVERLAP_FULL_PFX
        spec    : rfc_egress.testspec
        enable  : False
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=full_pfx

    - module:
        name    : IPV4_EGRESS_STATEFUL_OVERLAP_PFX_FIRST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - prefix : first
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=pfx

    - module:
        name    : IPV4_EGRESS_STATEFUL_OVERLAP_PFX_LAST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - prefix : last
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=pfx

    - module:
        name    : IPV4_EGRESS_STATEFUL_ADJACENT_PFX_FIRST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - prefix : first
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=adjacent_pfx

    - module:
        name    : IPV4_EGRESS_STATEFUL_ADJACENT_PFX_LAST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - prefix : last
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=adjacent_pfx

    - module:
        name    : IPV4_EGRESS_STATEFUL_ADJACENT_DEFAULT_PFX_FIRST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - prefix : first
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=adjacent_pfx_with_default

    - module:
        name    : IPV4_EGRESS_STATEFUL_ADJACENT_DEFAULT_PFX_LAST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - prefix : last
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=adjacent_pfx_with_default

    - module:
        name    : IPV4_EGRESS_STATEFUL_CORNER_SPORT_FIRST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - sport : first
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=none

    - module:
        name    : IPV4_EGRESS_STATEFUL_CORNER_SPORT_LAST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - sport : last
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=none

    - module:
        name    : IPV4_EGRESS_STATEFUL_CORNER_DPORT_FIRST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - dport : first
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=none

    - module:
        name    : IPV4_EGRESS_STATEFUL_CORNER_DPORT_LAST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - dport : last
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=none

    - module:
        name    : IPV4_EGRESS_STATEFUL_SPORT_OVERLAP
        spec    : rfc_egress.testspec
        enable  : False
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=sport

    - module:
        name    : IPV4_EGRESS_STATEFUL_SPORT_OVERLAP_FULL
        spec    : rfc_egress.testspec
        enable  : False
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=sport_full

    - module:
        name    : IPV4_EGRESS_STATEFUL_DPORT_OVERLAP
        spec    : rfc_egress.testspec
        enable  : False
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=dport

    - module:
        name    : IPV4_EGRESS_STATEFUL_DPORT_OVERLAP_FULL
        spec    : rfc_egress.testspec
        enable  : False
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=dport_full

    - module:
        name    : IPV4_INGRESS_STATEFUL_DISJOINT_PFX
        spec    : rfc_ingress.testspec
        enable  : False
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=disjoint_pfx

    - module:
        name    : IPV4_INGRESS_STATEFUL_DISJOINT
        spec    : rfc_ingress.testspec
        enable  : False
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=stateful,OverlapType=none

    # testcases for policies with both stateful and stateless rules
    - module:
        name    : IPV4_EGRESS_BOTH_DISJOINT_PFX
        spec    : rfc_egress.testspec
        enable  : False
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=both,OverlapType=disjoint_pfx

    - module:
        name    : IPV4_EGRESS_BOTH_DISJOINT
        spec    : rfc_egress.testspec
        enable  : False
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=both,OverlapType=none

    - module:
        name    : IPV4_EGRESS_BOTH_OVERLAP_PFX
        spec    : rfc_egress.testspec
        enable  : False
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=both,OverlapType=pfx

    - module:
        name    : IPV4_EGRESS_BOTH_OVERLAP_FULL_PFX
        spec    : rfc_egress.testspec
        enable  : False
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=both,OverlapType=full_pfx

    - module:
        name    : IPV4_EGRESS_BOTH_OVERLAP_PFX_FIRST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - prefix : first
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=both,OverlapType=pfx

    - module:
        name    : IPV4_EGRESS_BOTH_OVERLAP_PFX_LAST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - prefix : last
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=both,OverlapType=pfx

    - module:
        name    : IPV4_EGRESS_BOTH_ADJACENT_PFX_FIRST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - prefix : first
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=both,OverlapType=adjacent_pfx

    - module:
        name    : IPV4_EGRESS_BOTH_ADJACENT_PFX_LAST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - prefix : last
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=both,OverlapType=adjacent_pfx

    - module:
        name    : IPV4_EGRESS_BOTH_ADJACENT_DEFAULT_PFX_FIRST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - prefix : first
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=both,OverlapType=adjacent_pfx_with_default

    - module:
        name    : IPV4_EGRESS_BOTH_ADJACENT_DEFAULT_PFX_LAST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - prefix : last
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=both,OverlapType=adjacent_pfx_with_default

    - module:
        name    : IPV4_EGRESS_BOTH_CORNER_SPORT_FIRST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - sport : first
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=both,OverlapType=none

    - module:
        name    : IPV4_EGRESS_BOTH_CORNER_SPORT_LAST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - sport : last
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=both,OverlapType=none

    - module:
        name    : IPV4_EGRESS_BOTH_CORNER_DPORT_FIRST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - dport : first
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=both,OverlapType=none

    - module:
        name    : IPV4_EGRESS_BOTH_CORNER_DPORT_LAST
        spec    : rfc_egress.testspec
        enable  : False
        args    :
            - dport : last
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=both,OverlapType=none

    - module:
        name    : IPV4_EGRESS_BOTH_SPORT_OVERLAP
        spec    : rfc_egress.testspec
        enable  : False
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=both,OverlapType=sport

    - module:
        name    : IPV4_EGRESS_BOTH_SPORT_OVERLAP_FULL
        spec    : rfc_egress.testspec
        enable  : False
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=both,OverlapType=sport_full

    - module:
        name    : IPV4_EGRESS_BOTH_DPORT_OVERLAP
        spec    : rfc_egress.testspec
        enable  : False
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=both,OverlapType=dport

    - module:
        name    : IPV4_EGRESS_BOTH_DPORT_OVERLAP_FULL
        spec    : rfc_egress.testspec
        enable  : False
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=both,OverlapType=dport_full

    - module:
        name    : IPV4_INGRESS_BOTH_DISJOINT
        spec    : rfc_ingress.testspec
        enable  : False
        iterate :
            - policy : filter://AddrFamily=IPV4,PolicyType=both,OverlapType=none
