// {C} Copyright 2017 Pensando Systems Inc. All rights reserved.

package loginfra

import (
	"flag"
	"fmt"
	"os"
	"testing"
	"time"

	elastic "github.com/olivere/elastic"
	"golang.org/x/net/context"

	. "github.com/pensando/sw/venice/utils/testutils"
)

var (
	defaultElasticURL = "http://192.168.30.10:9200"
	veniceLogIndex    = fmt.Sprintf("venice.logs.%d.%02d.%02d",
		time.Now().Local().Year(),
		time.Now().Local().Month(),
		time.Now().Local().Day())
	elasticURL = flag.String("elasticurl", defaultElasticURL, "Elastic search URL")
)

// Setup elastic client
func setup() (*elastic.Client, error) {
	client, err := elastic.NewClient(elastic.SetURL(*elasticURL))
	return client, err
}

// Close elastic client
func teardown(client *elastic.Client) {
	if client != nil {
		client.Stop()
		client = nil
	}
}

// Test whether elastic service is UP and running
func TestElasticEndpoint(t *testing.T) {

	client, err := setup()
	defer teardown(client)

	Assert(t, client != nil && err == nil, "Elastic service is not up, client: %+v, err: %+v", client, err)
}

// Test whether <venice-logs.YYYY.MM.DD> index is created
func TestElasticIndex(t *testing.T) {

	client, err := setup()
	defer teardown(client)

	Assert(t, client != nil, "Elastic client not intialized, err: %v", err)
	t.Logf("Venice logs index: %s", veniceLogIndex)
	exists, err := client.IndexExists(veniceLogIndex).Do(context.Background())
	Assert(t, err == nil && exists == true, "Failed to locate venice-logs index: %s err: %+v exists: %+v", veniceLogIndex, err, exists)
}

// Test whether venice component logs are present in Elastic
func TestElasticLogs(t *testing.T) {

	client, err := setup()
	defer teardown(client)

	Assert(t, client != nil, "Elastic client not intialized, err: %v", err)

	termQuery := elastic.NewTermQuery("fields.category", "venice")
	res, err := client.Search().
		Index(veniceLogIndex).
		Query(termQuery).
		Do(context.Background())

	var totalHits int64
	if res == nil {
		totalHits = 0
	} else {
		totalHits = res.TotalHits()
	}

	t.Logf("Query result: %+v err: %+v totalhits: %+v", res, err, totalHits)
	Assert(t, err == nil, "Failed to execute venice log query", err)
	Assert(t, err == nil && totalHits != 0, "No venice logs found, err: %+v", err)
}

// TestMain is the entry point for log infra tests
//
// NOTE:
// 1. The pre-requisite for this test is to run "make cluster"
//    so that the elastic and venice services are up and running.
// 2. The logs generated by venice services are exported by
//    filebeat to elastic and indexed into "venice.log.YYYY.MM.DD"
//
// TODO: Add more test to validate logs per service and log per node
//
func TestMain(m *testing.M) {
	if os.Getenv("LOG_INTEG_TEST") == "" {
		os.Exit(0)
	}

	flag.Parse()
	os.Exit(m.Run())
}
